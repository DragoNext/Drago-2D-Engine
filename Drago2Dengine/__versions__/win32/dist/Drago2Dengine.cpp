/* Generated by Cython 3.0a5 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "language": "c++",
        "name": "Drago2Dengine.__versions__.win32.dist.Drago2Dengine",
        "sources": [
            "Drago2Dengine.py"
        ]
    },
    "module_name": "Drago2Dengine.__versions__.win32.dist.Drago2Dengine"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#define CYTHON_ABI "3_0a5"
#define CYTHON_HEX_VERSION 0x030000A5
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP487_INIT_SUBCLASS
  #define CYTHON_PEP487_INIT_SUBCLASS 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(CYTHON_LIMITED_API)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030800B2
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#elif PY_VERSION_HEX >= 0x030800A4
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS(n)
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((n) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET)
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  (n)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#elif CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static inline void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #if defined(_PyType_Name)
    #define __Pyx_PyType_Name(tp)     (_PyType_Name((PyTypeObject *)tp))
  #else
    #define __Pyx_PyType_Name(tp)     (((PyTypeObject *)tp)->tp_name)
  #endif
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
#else
  #define __Pyx_PyType_Name(tp)       (((PyTypeObject *)tp)->tp_name)
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__Drago2Dengine____versions____win32__dist__Drago2Dengine
#define __PYX_HAVE_API__Drago2Dengine____versions____win32__dist__Drago2Dengine
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "Drago2Dengine.py",
};
/* #### Code section: utility_code_proto_before_types ### */
/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_defaults;
typedef struct __pyx_defaults __pyx_defaults;
struct __pyx_defaults1;
typedef struct __pyx_defaults1 __pyx_defaults1;
struct __pyx_defaults2;
typedef struct __pyx_defaults2 __pyx_defaults2;
struct __pyx_defaults3;
typedef struct __pyx_defaults3 __pyx_defaults3;
struct __pyx_defaults4;
typedef struct __pyx_defaults4 __pyx_defaults4;
struct __pyx_defaults5;
typedef struct __pyx_defaults5 __pyx_defaults5;
struct __pyx_defaults6;
typedef struct __pyx_defaults6 __pyx_defaults6;
struct __pyx_defaults7;
typedef struct __pyx_defaults7 __pyx_defaults7;
struct __pyx_defaults8;
typedef struct __pyx_defaults8 __pyx_defaults8;
struct __pyx_defaults9;
typedef struct __pyx_defaults9 __pyx_defaults9;
struct __pyx_defaults10;
typedef struct __pyx_defaults10 __pyx_defaults10;
struct __pyx_defaults11;
typedef struct __pyx_defaults11 __pyx_defaults11;
struct __pyx_defaults12;
typedef struct __pyx_defaults12 __pyx_defaults12;
struct __pyx_defaults13;
typedef struct __pyx_defaults13 __pyx_defaults13;
struct __pyx_defaults {
  PyObject *__pyx_arg_n;
  PyObject *__pyx_arg_txs;
};
struct __pyx_defaults1 {
  PyObject *__pyx_arg_cords;
};
struct __pyx_defaults2 {
  PyObject *__pyx_arg_cords;
};
struct __pyx_defaults3 {
  PyObject *__pyx_arg_cords;
};
struct __pyx_defaults4 {
  PyObject *__pyx_arg_cords;
  PyObject *__pyx_arg_font_letters;
};
struct __pyx_defaults5 {
  PyObject *__pyx_arg_cords;
  PyObject *__pyx_arg_textn;
};
struct __pyx_defaults6 {
  PyObject *__pyx_arg_cnf;
};
struct __pyx_defaults7 {
  PyObject *__pyx_arg_cnf;
};
struct __pyx_defaults8 {
  PyObject *__pyx_arg_RAW_DATA;
};
struct __pyx_defaults9 {
  PyObject *__pyx_arg_n;
  PyObject *__pyx_arg_txs;
};
struct __pyx_defaults10 {
  PyObject *__pyx_arg_BOX_START;
  PyObject *__pyx_arg_BOX_SIZE;
  PyObject *__pyx_arg_COLOR;
};
struct __pyx_defaults11 {
  PyObject *__pyx_arg_newtpos;
};
struct __pyx_defaults12 {
  PyObject *__pyx_arg_newcolor;
};
struct __pyx_defaults13 {
  PyObject *__pyx_arg_newpos;
};
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) (&args[nargs])
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, nargs, NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_MultiplyCObj(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceMultiply(op1, op2) : PyNumber_Multiply(op1, op2))
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractCObj(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* py_abs.proto */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *num);
#define __Pyx_PyNumber_Absolute(x)\
    ((likely(PyLong_CheckExact(x))) ?\
         (likely(Py_SIZE(x) >= 0) ? (Py_INCREF(x), (x)) : __Pyx_PyLong_AbsNeg(x)) :\
         PyNumber_Absolute(x))
#else
#define __Pyx_PyNumber_Absolute(x)  PyNumber_Absolute(x)
#endif

/* pyobject_as_double.proto */
static double __Pyx__PyObject_AsDouble(PyObject* obj);
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj)\
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) :\
 likely(PyInt_CheckExact(obj)) ?\
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj)\
((likely(PyFloat_CheckExact(obj))) ?\
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_MultiplyObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceMultiply(op1, op2) : PyNumber_Multiply(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddCObj(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_RemainderObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceRemainder(op1, op2) : PyNumber_Remainder(op1, op2))
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_FloorDivideObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_FloorDivideObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceFloorDivide(op1, op2) : PyNumber_FloorDivide(op1, op2))
#endif

/* UnicodeAsUCS4.proto */
static CYTHON_INLINE Py_UCS4 __Pyx_PyUnicode_AsPy_UCS4(PyObject*);

/* object_ord.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyObject_Ord(c)\
    (likely(PyUnicode_Check(c)) ? (long)__Pyx_PyUnicode_AsPy_UCS4(c) : __Pyx__PyObject_Ord(c))
#else
#define __Pyx_PyObject_Ord(c) __Pyx__PyObject_Ord(c)
#endif
static long __Pyx__PyObject_Ord(PyObject* c);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#if CYTHON_COMPILING_IN_LIMITED_API
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, CYTHON_UNUSED PyObject *typ) {
    if (!self) {
        Py_INCREF(func);
        return func;
    }
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, Py_ssize_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
#if !CYTHON_COMPILING_IN_LIMITED_API
static PyTypeObject *__pyx_CyFunctionType = 0;
#endif
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func.vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_Occurred(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CStringEquals.proto */
static CYTHON_INLINE int __Pyx_StrEq(const char *, const char *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str);
#else
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);
#endif

/* #### Code section: module_declarations ### */

/* Module declarations from "Drago2Dengine.__versions__.win32.dist.Drago2Dengine" */
#if !CYTHON_COMPILING_IN_LIMITED_API
#endif
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "Drago2Dengine.__versions__.win32.dist.Drago2Dengine"
extern int __pyx_module_is_main_Drago2Dengine____versions____win32__dist__Drago2Dengine;
int __pyx_module_is_main_Drago2Dengine____versions____win32__dist__Drago2Dengine = 0;

/* Implementation of "Drago2Dengine.__versions__.win32.dist.Drago2Dengine" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_round;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_hex;
static PyObject *__pyx_builtin_AssertionError;
static PyObject *__pyx_builtin_chr;
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_id;
/* #### Code section: string_decls ### */
static const char __pyx_k_Z[] = "Z";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_h[] = "h";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_l[] = "l";
static const char __pyx_k_m[] = "m";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_w[] = "_w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_B1[] = "B1";
static const char __pyx_k_B2[] = "B2";
static const char __pyx_k_B3[] = "B3";
static const char __pyx_k_BP[] = "BP";
static const char __pyx_k_BR[] = "BR";
static const char __pyx_k_GL[] = "GL";
static const char __pyx_k_MN[] = "MN";
static const char __pyx_k_Ok[] = "Ok";
static const char __pyx_k__8[] = "/";
static const char __pyx_k__9[] = "";
static const char __pyx_k_bg[] = "bg";
static const char __pyx_k_c1[] = "_c1";
static const char __pyx_k_c2[] = "_c2";
static const char __pyx_k_c3[] = "c3";
static const char __pyx_k_c4[] = "c4";
static const char __pyx_k_cb[] = "cb";
static const char __pyx_k_cf[] = "cf";
static const char __pyx_k_ct[] = "ct";
static const char __pyx_k_dx[] = "dx";
static const char __pyx_k_dy[] = "dy";
static const char __pyx_k_ev[] = "ev";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_il[] = "il";
static const char __pyx_k_kw[] = "kw";
static const char __pyx_k_ls[] = "ls";
static const char __pyx_k_nd[] = "nd";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_nr[] = "nr";
static const char __pyx_k_nx[] = "nx";
static const char __pyx_k_ny[] = "ny";
static const char __pyx_k_oj[] = "oj";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_ou[] = "ou";
static const char __pyx_k_p1[] = "p1";
static const char __pyx_k_p2[] = "p2";
static const char __pyx_k_sx[] = "sx";
static const char __pyx_k_sy[] = "sy";
static const char __pyx_k_t1[] = "t1";
static const char __pyx_k_t2[] = "t2";
static const char __pyx_k_t3[] = "t3";
static const char __pyx_k_t4[] = "t4";
static const char __pyx_k_th[] = "th";
static const char __pyx_k_tk[] = "tk";
static const char __pyx_k_to[] = "to_";
static const char __pyx_k_tu[] = "tu";
static const char __pyx_k_x1[] = "x1";
static const char __pyx_k_x2[] = "x2";
static const char __pyx_k_xr[] = "xr";
static const char __pyx_k_y1[] = "y1";
static const char __pyx_k_y2[] = "y2";
static const char __pyx_k_yr[] = "yr";
static const char __pyx_k_GLU[] = "GLU";
static const char __pyx_k_GLX[] = "GLX";
static const char __pyx_k_HDC[] = "HDC";
static const char __pyx_k_Map[] = "<Map>";
static const char __pyx_k_PIL[] = "PIL";
static const char __pyx_k_RGB[] = "RGB";
static const char __pyx_k_TAB[] = "TAB";
static const char __pyx_k_TXC[] = "TXC";
static const char __pyx_k_VBO[] = "VBO";
static const char __pyx_k_X11[] = "X11";
static const char __pyx_k__10[] = "\t";
static const char __pyx_k__13[] = "\n";
static const char __pyx_k__80[] = "*";
static const char __pyx_k_all[] = "__all__";
static const char __pyx_k_att[] = "att";
static const char __pyx_k_b_2[] = "[b]";
static const char __pyx_k_chr[] = "chr";
static const char __pyx_k_cnf[] = "cnf";
static const char __pyx_k_crd[] = "crd";
static const char __pyx_k_dat[] = "dat";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_evt[] = "evt";
static const char __pyx_k_far[] = "far";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_hex[] = "hex";
static const char __pyx_k_idx[] = "idx";
static const char __pyx_k_lfe[] = "lfe";
static const char __pyx_k_lfg[] = "lfg";
static const char __pyx_k_lfm[] = "lfm";
static const char __pyx_k_msk[] = "msk";
static const char __pyx_k_new[] = "new";
static const char __pyx_k_obj[] = "obj";
static const char __pyx_k_pas[] = "_pas";
static const char __pyx_k_pfd[] = "pfd";
static const char __pyx_k_pop[] = "pop";
static const char __pyx_k_rnd[] = "rnd";
static const char __pyx_k_run[] = "run";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_tr1[] = "tr1";
static const char __pyx_k_tr2[] = "tr2";
static const char __pyx_k_tua[] = "tua";
static const char __pyx_k_txn[] = "txn";
static const char __pyx_k_txs[] = "txs";
static const char __pyx_k_vbo[] = "vbo";
static const char __pyx_k_vis[] = "vis";
static const char __pyx_k_vns[] = "vns";
static const char __pyx_k_w_2[] = "w";
static const char __pyx_k_wid[] = "_wid";
static const char __pyx_k_win[] = "win";
static const char __pyx_k_wtf[] = "wtf";
static const char __pyx_k_BOOL[] = "BOOL";
static const char __pyx_k_Done[] = "Done";
static const char __pyx_k_Face[] = "Face";
static const char __pyx_k_GLUT[] = "GLUT";
static const char __pyx_k_PATH[] = "PATH";
static const char __pyx_k__207[] = ";";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_base[] = "base";
static const char __pyx_k_best[] = "best";
static const char __pyx_k_bind[] = "bind";
static const char __pyx_k_c1_2[] = "c1";
static const char __pyx_k_c2_2[] = "c2";
static const char __pyx_k_call[] = "call";
static const char __pyx_k_cdll[] = "cdll";
static const char __pyx_k_cfgs[] = "cfgs";
static const char __pyx_k_crop[] = "crop";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_dist[] = "dist";
static const char __pyx_k_docs[] = "__docs__";
static const char __pyx_k_draw[] = "draw";
static const char __pyx_k_exts[] = "exts";
static const char __pyx_k_face[] = "face";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_flat[] = "flat";
static const char __pyx_k_font[] = "font";
static const char __pyx_k_fovy[] = "fovy";
static const char __pyx_k_from[] = "from_";
static const char __pyx_k_func[] = "func";
static const char __pyx_k_help[] = "help";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_list[] = "list";
static const char __pyx_k_load[] = "load";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mask[] = "mask";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_mmap[] = "mmap";
static const char __pyx_k_mode[] = "mode";
static const char __pyx_k_move[] = "move";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_ncfg[] = "ncfg";
static const char __pyx_k_near[] = "near";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_pick[] = "pick";
static const char __pyx_k_quad[] = "quad";
static const char __pyx_k_rise[] = "rise";
static const char __pyx_k_rows[] = "rows";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_sqrt[] = "sqrt";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_util[] = "util";
static const char __pyx_k_vbos[] = "vbos";
static const char __pyx_k_wait[] = "wait";
static const char __pyx_k_COLOR[] = "COLOR";
static const char __pyx_k_Cords[] = "Cords";
static const char __pyx_k_Frame[] = "Frame";
static const char __pyx_k_GLint[] = "GLint";
static const char __pyx_k_GetDC[] = "GetDC";
static const char __pyx_k_Hover[] = "Hover";
static const char __pyx_k_Image[] = "Image";
static const char __pyx_k_OnKey[] = "OnKey";
static const char __pyx_k_a_val[] = "a_val";
static const char __pyx_k_after[] = "after";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_b_val[] = "b_val";
static const char __pyx_k_bands[] = "bands";
static const char __pyx_k_c_int[] = "c_int";
static const char __pyx_k_check[] = "check";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_color[] = "color";
static const char __pyx_k_cords[] = "cords";
static const char __pyx_k_delay[] = "delay";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_dummy[] = "dummy";
static const char __pyx_k_event[] = "event";
static const char __pyx_k_extns[] = "extns";
static const char __pyx_k_fbatt[] = "fbatt";
static const char __pyx_k_g_val[] = "g_val";
static const char __pyx_k_glEnd[] = "glEnd";
static const char __pyx_k_glyph[] = "glyph";
static const char __pyx_k_ideal[] = "ideal";
static const char __pyx_k_image[] = "image";
static const char __pyx_k_imgnp[] = "imgnp";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_linux[] = "linux";
static const char __pyx_k_m_new[] = "m_new";
static const char __pyx_k_major[] = "major";
static const char __pyx_k_minor[] = "minor";
static const char __pyx_k_named[] = "named";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_obj_c[] = "obj_c";
static const char __pyx_k_paste[] = "paste";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_queue[] = "queue";
static const char __pyx_k_r_val[] = "r_val";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_realy[] = "realy";
static const char __pyx_k_reset[] = "reset";
static const char __pyx_k_round[] = "round";
static const char __pyx_k_scale[] = "scale";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_sizex[] = "sizex";
static const char __pyx_k_sizey[] = "sizey";
static const char __pyx_k_sleep[] = "sleep";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_texid[] = "texid";
static const char __pyx_k_textn[] = "textn";
static const char __pyx_k_textr[] = "textr";
static const char __pyx_k_title[] = "title";
static const char __pyx_k_tkMap[] = "tkMap";
static const char __pyx_k_tlist[] = "tlist";
static const char __pyx_k_tquad[] = "tquad";
static const char __pyx_k_txtid[] = "txtid";
static const char __pyx_k_ubyte[] = "ubyte";
static const char __pyx_k_uint8[] = "uint8";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_width[] = "width";
static const char __pyx_k_win32[] = "win32";
static const char __pyx_k_winfo[] = "winfo";
static const char __pyx_k_xspin[] = "xspin";
static const char __pyx_k_yspin[] = "yspin";
static const char __pyx_k_zeros[] = "zeros";
static const char __pyx_k_Before[] = "Before >";
static const char __pyx_k_Create[] = "Create >";
static const char __pyx_k_D2Draw[] = "D2Draw";
static const char __pyx_k_Dialog[] = "Dialog";
static const char __pyx_k_Expose[] = "<Expose>";
static const char __pyx_k_GL_RGB[] = "GL_RGB";
static const char __pyx_k_Motion[] = "Motion";
static const char __pyx_k_OBJECT[] = "OBJECT";
static const char __pyx_k_OpenGL[] = "OpenGL";
static const char __pyx_k_Opengl[] = "Opengl";
static const char __pyx_k_SHADER[] = "SHADER";
static const char __pyx_k_WinDLL[] = "WinDLL";
static const char __pyx_k_access[] = "access";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_b_back[] = "b_back";
static const char __pyx_k_bitmap[] = "bitmap";
static const char __pyx_k_buffer[] = "buffer";
static const char __pyx_k_c_bool[] = "c_bool";
static const char __pyx_k_centre[] = "centre";
static const char __pyx_k_cfloat[] = "cfloat";
static const char __pyx_k_config[] = "config";
static const char __pyx_k_cords1[] = "cords1";
static const char __pyx_k_cords2[] = "cords2";
static const char __pyx_k_cords3[] = "cords3";
static const char __pyx_k_cords4[] = "cords4";
static const char __pyx_k_ctypes[] = "ctypes";
static const char __pyx_k_curpos[] = "curpos";
static const char __pyx_k_cvroot[] = "cvroot";
static const char __pyx_k_dialog[] = "dialog";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_extend[] = "extend";
static const char __pyx_k_g_back[] = "g_back";
static const char __pyx_k_getint[] = "getint";
static const char __pyx_k_height[] = "height";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_initgl[] = "initgl";
static const char __pyx_k_insert[] = "insert";
static const char __pyx_k_letter[] = "letter";
static const char __pyx_k_master[] = "master";
static const char __pyx_k_mode_2[] = "_mode";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_newpos[] = "newpos";
static const char __pyx_k_object[] = "object";
static const char __pyx_k_pixels[] = "pixels";
static const char __pyx_k_points[] = "points";
static const char __pyx_k_pyvips[] = "pyvips";
static const char __pyx_k_r_back[] = "r_back";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_redraw[] = "redraw";
static const char __pyx_k_render[] = "render";
static const char __pyx_k_repeat[] = "repeat";
static const char __pyx_k_resize[] = "_resize";
static const char __pyx_k_rotate[] = "rotate";
static const char __pyx_k_scalex[] = "scalex";
static const char __pyx_k_scaley[] = "scaley";
static const char __pyx_k_screen[] = "screen";
static const char __pyx_k_self_2[] = "self_";
static const char __pyx_k_shrink[] = "shrink";
static const char __pyx_k_size_x[] = "size_x";
static const char __pyx_k_size_y[] = "size_y";
static const char __pyx_k_sizeof[] = "sizeof";
static const char __pyx_k_switch[] = "switch";
static const char __pyx_k_textid[] = "textid";
static const char __pyx_k_thread[] = "_thread";
static const char __pyx_k_unload[] = "unload";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_user32[] = "user32";
static const char __pyx_k_visual[] = "visual";
static const char __pyx_k_x11lib[] = "_x11lib";
static const char __pyx_k_x_root[] = "x_root";
static const char __pyx_k_xmouse[] = "xmouse";
static const char __pyx_k_y_root[] = "y_root";
static const char __pyx_k_ymouse[] = "ymouse";
static const char __pyx_k_Display[] = "Display";
static const char __pyx_k_EventOn[] = "EventOn";
static const char __pyx_k_GL_LESS[] = "GL_LESS";
static const char __pyx_k_GL_RGBA[] = "GL_RGBA";
static const char __pyx_k_GL_TRUE[] = "GL_TRUE";
static const char __pyx_k_MouseLC[] = "MouseLC";
static const char __pyx_k_MouseMC[] = "MouseMC";
static const char __pyx_k_MouseRC[] = "MouseRC";
static const char __pyx_k_NEWLINE[] = "NEWLINE";
static const char __pyx_k_Offests[] = "Offests";
static const char __pyx_k_POINTER[] = "POINTER";
static const char __pyx_k_Tkinter[] = "Tkinter";
static const char __pyx_k_VBO_OBJ[] = "VBO_OBJ";
static const char __pyx_k_animate[] = "animate";
static const char __pyx_k_buffer1[] = "buffer1";
static const char __pyx_k_c_float[] = "c_float";
static const char __pyx_k_compile[] = "compile";
static const char __pyx_k_cords_2[] = "cords_";
static const char __pyx_k_default[] = "default";
static const char __pyx_k_display[] = "_display";
static const char __pyx_k_dp_data[] = "dp_data";
static const char __pyx_k_dwFlags[] = "dwFlags";
static const char __pyx_k_environ[] = "environ";
static const char __pyx_k_ev_list[] = "ev_list";
static const char __pyx_k_ev_type[] = "ev_type";
static const char __pyx_k_get_pos[] = "get_pos";
static const char __pyx_k_getdata[] = "getdata";
static const char __pyx_k_getsize[] = "getsize";
static const char __pyx_k_glBegin[] = "glBegin";
static const char __pyx_k_mem_img[] = "mem_img";
static const char __pyx_k_move_up[] = "move_up";
static const char __pyx_k_newsize[] = "newsize";
static const char __pyx_k_newtpos[] = "newtpos";
static const char __pyx_k_orgsize[] = "orgsize";
static const char __pyx_k_overlay[] = "overlay";
static const char __pyx_k_pointer[] = "pointer";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_prequad[] = "prequad";
static const char __pyx_k_pretext[] = "pretext";
static const char __pyx_k_reshape[] = "reshape";
static const char __pyx_k_restype[] = "restype";
static const char __pyx_k_screenx[] = "screenx";
static const char __pyx_k_screeny[] = "screeny";
static const char __pyx_k_shaders[] = "shaders";
static const char __pyx_k_spacing[] = "spacing";
static const char __pyx_k_strings[] = "strings";
static const char __pyx_k_texsize[] = "texsize";
static const char __pyx_k_texture[] = "texture";
static const char __pyx_k_tkPrint[] = "tkPrint";
static const char __pyx_k_tkScale[] = "tkScale";
static const char __pyx_k_tkinter[] = "tkinter";
static const char __pyx_k_updates[] = "updates";
static const char __pyx_k_xcenter[] = "xcenter";
static const char __pyx_k_ycenter[] = "ycenter";
static const char __pyx_k_zcenter[] = "zcenter";
static const char __pyx_k_BOX_SIZE[] = "BOX_SIZE";
static const char __pyx_k_Button_1[] = "Button-1";
static const char __pyx_k_Button_2[] = "Button-2";
static const char __pyx_k_Button_3[] = "Button-3";
static const char __pyx_k_Colormap[] = "Colormap";
static const char __pyx_k_EventOff[] = "EventOff";
static const char __pyx_k_GLX_RGBA[] = "GLX_RGBA";
static const char __pyx_k_GL_ALPHA[] = "GL_ALPHA";
static const char __pyx_k_GL_FALSE[] = "GL_FALSE";
static const char __pyx_k_GL_FLOAT[] = "GL_FLOAT";
static const char __pyx_k_GL_QUADS[] = "GL_QUADS";
static const char __pyx_k_KeyPress[] = "KeyPress";
static const char __pyx_k_Motion_2[] = "<Motion>";
static const char __pyx_k_NOENABLE[] = "NOENABLE";
static const char __pyx_k_RAW_DATA[] = "RAW_DATA";
static const char __pyx_k_TXTARRAY[] = "TXTARRAY";
static const char __pyx_k_abcdefgh[] = "abcdefgh";
static const char __pyx_k_activate[] = "activate";
static const char __pyx_k_argtypes[] = "argtypes";
static const char __pyx_k_ascender[] = "ascender";
static const char __pyx_k_autospin[] = "autospin";
static const char __pyx_k_bufferid[] = "bufferid";
static const char __pyx_k_c_char_p[] = "c_char_p";
static const char __pyx_k_c_void_p[] = "c_void_p";
static const char __pyx_k_contents[] = "contents";
static const char __pyx_k_data_tr1[] = "data_tr1";
static const char __pyx_k_data_tr2[] = "data_tr2";
static const char __pyx_k_data_txn[] = "data_txn";
static const char __pyx_k_distance[] = "distance";
static const char __pyx_k_edit_pos[] = "edit_pos";
static const char __pyx_k_fgshader[] = "fgshader";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_freecalc[] = "freecalc";
static const char __pyx_k_freetype[] = "freetype";
static const char __pyx_k_glEnable[] = "glEnable";
static const char __pyx_k_launchev[] = "launchev";
static const char __pyx_k_newcolor[] = "newcolor";
static const char __pyx_k_platform[] = "platform";
static const char __pyx_k_pointerx[] = "pointerx";
static const char __pyx_k_pointery[] = "pointery";
static const char __pyx_k_previoev[] = "previoev";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_realdata[] = "realdata";
static const char __pyx_k_resize_2[] = "resize";
static const char __pyx_k_rgba2rgb[] = "rgba2rgb";
static const char __pyx_k_sav_vert[] = "sav_vert";
static const char __pyx_k_set_mode[] = "set_mode";
static const char __pyx_k_set_name[] = "__set_name__";
static const char __pyx_k_textured[] = "textured";
static const char __pyx_k_textures[] = "textures";
static const char __pyx_k_tkExpose[] = "tkExpose";
static const char __pyx_k_tkRedraw[] = "tkRedraw";
static const char __pyx_k_tkResize[] = "tkResize";
static const char __pyx_k_tkRotate[] = "tkRotate";
static const char __pyx_k_usecords[] = "usecords";
static const char __pyx_k_user32_2[] = "_user32";
static const char __pyx_k_v3distsq[] = "v3distsq";
static const char __pyx_k_vb_count[] = "vb_count";
static const char __pyx_k_vertices[] = "vertices";
static const char __pyx_k_vipshome[] = "vipshome";
static const char __pyx_k_visualid[] = "visualid";
static const char __pyx_k_vxshader[] = "vxshader";
static const char __pyx_k_winfo_id[] = "winfo_id";
static const char __pyx_k_B1_Motion[] = "<B1-Motion>";
static const char __pyx_k_B2_Motion[] = "<B2-Motion>";
static const char __pyx_k_B3_Motion[] = "<B3-Motion>";
static const char __pyx_k_BOX_START[] = "BOX_START";
static const char __pyx_k_CFUNCTYPE[] = "CFUNCTYPE";
static const char __pyx_k_Configure[] = "<Configure>";
static const char __pyx_k_D2DEvents[] = "D2DEvents";
static const char __pyx_k_D2DRENDER[] = "D2DRENDER";
static const char __pyx_k_DRAW_MODE[] = "DRAW_MODE";
static const char __pyx_k_EventType[] = "EventType";
static const char __pyx_k_GL_LIGHT0[] = "GL_LIGHT0";
static const char __pyx_k_GL_LINEAR[] = "GL_LINEAR";
static const char __pyx_k_GL_POINTS[] = "GL_POINTS";
static const char __pyx_k_GL_REPEAT[] = "GL_REPEAT";
static const char __pyx_k_GL_VENDOR[] = "GL_VENDOR  :";
static const char __pyx_k_Is_Direct[] = "Is Direct?: ";
static const char __pyx_k_LeftClick[] = "LeftClick";
static const char __pyx_k_OpenGL_GL[] = "OpenGL.GL";
static const char __pyx_k_RawOpengl[] = "RawOpengl";
static const char __pyx_k_Screen_is[] = "Screen is ";
static const char __pyx_k_TEXTUREID[] = "TEXTUREID";
static const char __pyx_k_add_event[] = "add_event";
static const char __pyx_k_bresenham[] = "bresenham";
static const char __pyx_k_data_type[] = "data_type";
static const char __pyx_k_descender[] = "descender";
static const char __pyx_k_draw_line[] = "draw_line";
static const char __pyx_k_draw_quad[] = "draw_quad";
static const char __pyx_k_draw_text[] = "draw_text";
static const char __pyx_k_edit_tpos[] = "edit_tpos";
static const char __pyx_k_events_B1[] = "events_B1";
static const char __pyx_k_events_B2[] = "events_B2";
static const char __pyx_k_events_B3[] = "events_B3";
static const char __pyx_k_events_BP[] = "events_BP";
static const char __pyx_k_events_BR[] = "events_BR";
static const char __pyx_k_events_MN[] = "events_MN";
static const char __pyx_k_get_color[] = "get_color";
static const char __pyx_k_get_texid[] = "get_texid";
static const char __pyx_k_glColor3f[] = "glColor3f";
static const char __pyx_k_glColor4f[] = "glColor4f";
static const char __pyx_k_glDisable[] = "glDisable";
static const char __pyx_k_glLightfv[] = "glLightfv";
static const char __pyx_k_gluLookAt[] = "gluLookAt";
static const char __pyx_k_load_char[] = "load_char";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_move_down[] = "move_down";
static const char __pyx_k_naiveline[] = "naiveline";
static const char __pyx_k_pix_rat_x[] = "pix_rat_x";
static const char __pyx_k_pix_rat_y[] = "pix_rat_y";
static const char __pyx_k_questhead[] = "questhead";
static const char __pyx_k_spacing_y[] = "spacing_y";
static const char __pyx_k_texcords1[] = "texcords1";
static const char __pyx_k_texcords2[] = "texcords2";
static const char __pyx_k_texcords3[] = "texcords3";
static const char __pyx_k_texcords4[] = "texcords4";
static const char __pyx_k_texture_2[] = "texture_";
static const char __pyx_k_Button_1_2[] = "<Button-1>";
static const char __pyx_k_Button_2_2[] = "<Button-2>";
static const char __pyx_k_Button_3_2[] = "<Button-3>";
static const char __pyx_k_EventDelay[] = "EventDelay";
static const char __pyx_k_GL_NEAREST[] = "GL_NEAREST";
static const char __pyx_k_GL_VERSION[] = "GL_VERSION :";
static const char __pyx_k_Imagenumpy[] = "Imagenumpy";
static const char __pyx_k_KeyPress_2[] = "<KeyPress>";
static const char __pyx_k_MouseHover[] = "MouseHover";
static const char __pyx_k_OpenGL_WGL[] = "OpenGL.WGL";
static const char __pyx_k_RENDER_VBO[] = "RENDER_VBO";
static const char __pyx_k_RightClick[] = "RightClick";
static const char __pyx_k_VBO___init[] = "VBO.__init__";
static const char __pyx_k_add_buffer[] = "add_buffer";
static const char __pyx_k_background[] = "background";
static const char __pyx_k_bitmap_top[] = "bitmap_top";
static const char __pyx_k_cColorBits[] = "cColorBits";
static const char __pyx_k_cDepthBits[] = "cDepthBits";
static const char __pyx_k_delete_obj[] = "delete_obj";
static const char __pyx_k_draw_lines[] = "draw_lines";
static const char __pyx_k_draw_point[] = "draw_point";
static const char __pyx_k_edit_color[] = "edit_color";
static const char __pyx_k_event_type[] = "event_type";
static const char __pyx_k_extensions[] = "extensions";
static const char __pyx_k_frombuffer[] = "frombuffer";
static const char __pyx_k_get_buffer[] = "get_buffer";
static const char __pyx_k_get_shader[] = "get_shader";
static const char __pyx_k_glVertex2f[] = "glVertex2f";
static const char __pyx_k_glViewport[] = "glViewport";
static const char __pyx_k_gluProject[] = "gluProject";
static const char __pyx_k_iLayerType[] = "iLayerType";
static const char __pyx_k_iPixelType[] = "iPixelType";
static const char __pyx_k_load_scene[] = "_load_scene";
static const char __pyx_k_real_index[] = "real_index";
static const char __pyx_k_real_value[] = "real_value";
static const char __pyx_k_screen_res[] = "screen_res";
static const char __pyx_k_sequential[] = "sequential";
static const char __pyx_k_startswith[] = "startswith";
static const char __pyx_k_tkAutoSpin[] = "tkAutoSpin";
static const char __pyx_k_vert_lists[] = "vert_lists";
static const char __pyx_k_win_height[] = "win_height";
static const char __pyx_k_DRAWMODELOC[] = "DRAWMODELOC";
static const char __pyx_k_DragoObject[] = "DragoObject";
static const char __pyx_k_GL_LIGHTING[] = "GL_LIGHTING";
static const char __pyx_k_GL_POSITION[] = "GL_POSITION";
static const char __pyx_k_GL_RENDERER[] = "GL_RENDERER:";
static const char __pyx_k_GL_VENDOR_2[] = "GL_VENDOR";
static const char __pyx_k_LoadLibrary[] = "LoadLibrary";
static const char __pyx_k_MiddleClick[] = "MiddleClick";
static const char __pyx_k_New_Texture[] = "New_Texture";
static const char __pyx_k_OpenGLFrame[] = "OpenGLFrame";
static const char __pyx_k_Opengl_help[] = "Opengl.help";
static const char __pyx_k_Spacing_add[] = "Spacing_add";
static const char __pyx_k_StartRotate[] = "StartRotate";
static const char __pyx_k_SwapBuffers[] = "SwapBuffers";
static const char __pyx_k_Viewer_help[] = "Viewer help";
static const char __pyx_k_basicshader[] = "basicshader";
static const char __pyx_k_bind_buffer[] = "bind_buffer";
static const char __pyx_k_bitmap_left[] = "bitmap_left";
static const char __pyx_k_buffmanager[] = "buffmanager";
static const char __pyx_k_checklclick[] = "checklclick";
static const char __pyx_k_checkmclick[] = "checkmclick";
static const char __pyx_k_checkmotion[] = "checkmotion";
static const char __pyx_k_checkrclick[] = "checkrclick";
static const char __pyx_k_create_font[] = "create_font";
static const char __pyx_k_create_quad[] = "create_quad";
static const char __pyx_k_data_length[] = "data_length";
static const char __pyx_k_do_AutoSpin[] = "do_AutoSpin";
static const char __pyx_k_draw_points[] = "draw_points";
static const char __pyx_k_edit_letter[] = "edit_letter";
static const char __pyx_k_font_config[] = "font_config";
static const char __pyx_k_glDepthFunc[] = "glDepthFunc";
static const char __pyx_k_glGetString[] = "glGetString";
static const char __pyx_k_glXIsDirect[] = "glXIsDirect";
static const char __pyx_k_initialised[] = "initialised";
static const char __pyx_k_launch_func[] = "launch_func";
static const char __pyx_k_pixelformat[] = "pixelformat";
static const char __pyx_k_pretextquad[] = "pretextquad";
static const char __pyx_k_queue_check[] = "queue_check";
static const char __pyx_k_render_quad[] = "render_quad";
static const char __pyx_k_render_text[] = "render_text";
static const char __pyx_k_tkTranslate[] = "tkTranslate";
static const char __pyx_k_update_list[] = "update_list";
static const char __pyx_k_use_texture[] = "use_texture";
static const char __pyx_k_winfo_width[] = "winfo_width";
static const char __pyx_k_D2Dprerender[] = "D2Dprerender";
static const char __pyx_k_GLX_RED_SIZE[] = "GLX_RED_SIZE";
static const char __pyx_k_GLX_RGBA_BIT[] = "GLX_RGBA_BIT";
static const char __pyx_k_GL_MODELVIEW[] = "GL_MODELVIEW";
static const char __pyx_k_GL_VERSION_2[] = "GL_VERSION";
static const char __pyx_k_Opengl_reset[] = "Opengl.reset";
static const char __pyx_k_Texture_unit[] = "Texture_unit";
static const char __pyx_k_XOpenDisplay[] = "XOpenDisplay";
static const char __pyx_k_add_boldnext[] = "add_boldnext";
static const char __pyx_k_after_cancel[] = "after_cancel";
static const char __pyx_k_cfloat_array[] = "cfloat_array";
static const char __pyx_k_change_color[] = "change_color";
static const char __pyx_k_clear_events[] = "clear_events";
static const char __pyx_k_create_event[] = "create_event";
static const char __pyx_k_edit_texture[] = "edit_texture";
static const char __pyx_k_eventmanager[] = "eventmanager";
static const char __pyx_k_find_library[] = "find_library";
static const char __pyx_k_font_letters[] = "font_letters";
static const char __pyx_k_font_texture[] = "font_texture";
static const char __pyx_k_get_vertices[] = "get_vertices";
static const char __pyx_k_glBindBuffer[] = "glBindBuffer";
static const char __pyx_k_glBufferData[] = "glBufferData";
static const char __pyx_k_glDrawArrays[] = "glDrawArrays";
static const char __pyx_k_glGenBuffers[] = "glGenBuffers";
static const char __pyx_k_glGetDoublev[] = "glGetDoublev";
static const char __pyx_k_glMatrixMode[] = "glMatrixMode";
static const char __pyx_k_glTexCoord2f[] = "glTexCoord2f";
static const char __pyx_k_glTexImage2D[] = "glTexImage2D";
static const char __pyx_k_glUniform1iv[] = "glUniform1iv";
static const char __pyx_k_glUseProgram[] = "glUseProgram";
static const char __pyx_k_gluUnProject[] = "gluUnProject";
static const char __pyx_k_hover_events[] = "hover_events";
static const char __pyx_k_load_texture[] = "load_texture";
static const char __pyx_k_object_count[] = "object_count";
static const char __pyx_k_object_moved[] = "object_moved";
static const char __pyx_k_printContext[] = "printContext";
static const char __pyx_k_set_eyepoint[] = "set_eyepoint";
static const char __pyx_k_spacing_addx[] = "spacing_addx";
static const char __pyx_k_spacing_addy[] = "spacing_addy";
static const char __pyx_k_texture_data[] = "texture_data";
static const char __pyx_k_tkHandlePick[] = "tkHandlePick";
static const char __pyx_k_version_info[] = "version_info";
static const char __pyx_k_winfo_height[] = "winfo_height";
static const char __pyx_k_winfo_screen[] = "winfo_screen";
static const char __pyx_k_D2Draw___init[] = "D2Draw.__init__";
static const char __pyx_k_D2Draw_resize[] = "D2Draw.resize";
static const char __pyx_k_GLX_BLUE_SIZE[] = "GLX_BLUE_SIZE";
static const char __pyx_k_GLX_RGBA_TYPE[] = "GLX_RGBA_TYPE";
static const char __pyx_k_GL_DEPTH_TEST[] = "GL_DEPTH_TEST";
static const char __pyx_k_GL_EXTENSIONS[] = "GL_EXTENSIONS";
static const char __pyx_k_GL_PROJECTION[] = "GL_PROJECTION";
static const char __pyx_k_GL_RENDERER_2[] = "GL_RENDERER";
static const char __pyx_k_GL_TEXTURE_2D[] = "GL_TEXTURE_2D";
static const char __pyx_k_Opengl___init[] = "Opengl.__init__";
static const char __pyx_k_Opengl_initgl[] = "Opengl.initgl";
static const char __pyx_k_Opengl_redraw[] = "Opengl.redraw";
static const char __pyx_k_PFD_TYPE_RGBA[] = "PFD_TYPE_RGBA";
static const char __pyx_k_PRERENDER_VBO[] = "PRERENDER_VBO";
static const char __pyx_k_SHADER___init[] = "SHADER.__init__";
static const char __pyx_k_VERTEX_SHADER[] = "VERTEX_SHADER";
static const char __pyx_k_add_animation[] = "add_animation";
static const char __pyx_k_checkkeypress[] = "checkkeypress";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_compileShader[] = "compileShader";
static const char __pyx_k_create_letter[] = "create_letter";
static const char __pyx_k_del_animation[] = "del_animation";
static const char __pyx_k_glBindTexture[] = "glBindTexture";
static const char __pyx_k_glGenTextures[] = "glGenTextures";
static const char __pyx_k_glGetIntegerv[] = "glGetIntegerv";
static const char __pyx_k_glPixelStorei[] = "glPixelStorei";
static const char __pyx_k_glRotateScene[] = "glRotateScene";
static const char __pyx_k_init_subclass[] = "__init_subclass__";
static const char __pyx_k_is_serialized[] = "_is_serialized";
static const char __pyx_k_lclick_events[] = "lclick_events";
static const char __pyx_k_mclick_events[] = "mclick_events";
static const char __pyx_k_new_from_file[] = "new_from_file";
static const char __pyx_k_object_counts[] = "object_counts";
static const char __pyx_k_rclick_events[] = "rclick_events";
static const char __pyx_k_render_letter[] = "render_letter";
static const char __pyx_k_serialization[] = "serialization";
static const char __pyx_k_set_char_size[] = "set_char_size";
static const char __pyx_k_shaderprogram[] = "shaderprogram";
static const char __pyx_k_texture_slots[] = "texture_slots";
static const char __pyx_k_tkMakeCurrent[] = "tkMakeCurrent";
static const char __pyx_k_tkRecordMouse[] = "tkRecordMouse";
static const char __pyx_k_tkSwapBuffers[] = "tkSwapBuffers";
static const char __pyx_k_total_updates[] = "total_updates";
static const char __pyx_k_AssertionError[] = "AssertionError";
static const char __pyx_k_D2DEvents__pas[] = "D2DEvents._pas";
static const char __pyx_k_D2Draw__resize[] = "D2Draw._resize";
static const char __pyx_k_Extension_list[] = "Extension list:";
static const char __pyx_k_FT_LOAD_RENDER[] = "FT_LOAD_RENDER";
static const char __pyx_k_GLX_DEPTH_SIZE[] = "GLX_DEPTH_SIZE";
static const char __pyx_k_GLX_GREEN_SIZE[] = "GLX_GREEN_SIZE";
static const char __pyx_k_GLX_WINDOW_BIT[] = "GLX_WINDOW_BIT";
static const char __pyx_k_GL_MATRIX_MODE[] = "GL_MATRIX_MODE";
static const char __pyx_k_Opengl_tkPrint[] = "Opengl.tkPrint";
static const char __pyx_k_Opengl_tkScale[] = "Opengl.tkScale";
static const char __pyx_k_PFD_MAIN_PLANE[] = "PFD_MAIN_PLANE";
static const char __pyx_k_SetPixelFormat[] = "SetPixelFormat";
static const char __pyx_k_Shift_Button_1[] = "<Shift-Button-1>";
static const char __pyx_k_VBO_OBJ___init[] = "VBO_OBJ.__init__";
static const char __pyx_k_XDefaultScreen[] = "XDefaultScreen";
static const char __pyx_k_basic_lighting[] = "basic_lighting";
static const char __pyx_k_compileProgram[] = "compileProgram";
static const char __pyx_k_cords_to_ratio[] = "_cords_to_ratio";
static const char __pyx_k_glLoadIdentity[] = "glLoadIdentity";
static const char __pyx_k_glXMakeCurrent[] = "glXMakeCurrent";
static const char __pyx_k_glXSwapBuffers[] = "glXSwapBuffers";
static const char __pyx_k_gluPerspective[] = "gluPerspective";
static const char __pyx_k_is_fixed_width[] = "is_fixed_width";
static const char __pyx_k_light_position[] = "light_position";
static const char __pyx_k_object_indexes[] = "object_indexes";
static const char __pyx_k_prerender_quad[] = "prerender_quad";
static const char __pyx_k_prerender_text[] = "prerender_text";
static const char __pyx_k_prerenderedobj[] = "prerenderedobj";
static const char __pyx_k_serialized_obj[] = "serialized_obj";
static const char __pyx_k_set_background[] = "set_background";
static const char __pyx_k_wglMakeCurrent[] = "wglMakeCurrent";
static const char __pyx_k_winfo_ismapped[] = "winfo_ismapped";
static const char __pyx_k_winfo_visualid[] = "winfo_visualid";
static const char __pyx_k_ButtonRelease_2[] = "<ButtonRelease-2>";
static const char __pyx_k_D2DEvents_check[] = "D2DEvents.check";
static const char __pyx_k_FRAGMENT_SHADER[] = "FRAGMENT_SHADER";
static const char __pyx_k_GLX_RENDER_TYPE[] = "GLX_RENDER_TYPE";
static const char __pyx_k_GLX_version_d_d[] = "GLX version: %d.%d";
static const char __pyx_k_GL_ARRAY_BUFFER[] = "GL_ARRAY_BUFFER";
static const char __pyx_k_GL_DYNAMIC_DRAW[] = "GL_DYNAMIC_DRAW";
static const char __pyx_k_GL_VERTEX_ARRAY[] = "GL_VERTEX_ARRAY";
static const char __pyx_k_OpenGL_raw__GLX[] = "OpenGL.raw._GLX";
static const char __pyx_k_Opengl_activate[] = "Opengl.activate";
static const char __pyx_k_Opengl_freecalc[] = "Opengl.freecalc";
static const char __pyx_k_Opengl_tkExpose[] = "Opengl.tkExpose";
static const char __pyx_k_Opengl_tkRedraw[] = "Opengl.tkRedraw";
static const char __pyx_k_Opengl_tkRotate[] = "Opengl.tkRotate";
static const char __pyx_k_baseOpenGLFrame[] = "baseOpenGLFrame";
static const char __pyx_k_ctypes_wintypes[] = "ctypes.wintypes";
static const char __pyx_k_freecalc_update[] = "freecalc_update";
static const char __pyx_k_glBufferSubData[] = "glBufferSubData";
static const char __pyx_k_glTexParameterf[] = "glTexParameterf";
static const char __pyx_k_glTexParameteri[] = "glTexParameteri";
static const char __pyx_k_glTexSubImage2D[] = "glTexSubImage2D";
static const char __pyx_k_glXChooseVisual[] = "glXChooseVisual";
static const char __pyx_k_glXQueryVersion[] = "glXQueryVersion";
static const char __pyx_k_keypress_events[] = "keypress_events";
static const char __pyx_k_load_texture_dp[] = "load_texture_dp";
static const char __pyx_k_set_centerpoint[] = "set_centerpoint";
static const char __pyx_k_slope_error_new[] = "slope_error_new";
static const char __pyx_k_tkCreateContext[] = "tkCreateContext";
static const char __pyx_k_write_to_memory[] = "write_to_memory";
static const char __pyx_k_D2DEvents___init[] = "D2DEvents.__init__";
static const char __pyx_k_D2DRENDER_render[] = "D2DRENDER.render";
static const char __pyx_k_D2Draw_draw_line[] = "D2Draw.draw_line";
static const char __pyx_k_D2Draw_draw_quad[] = "D2Draw.draw_quad";
static const char __pyx_k_D2Draw_draw_text[] = "D2Draw.draw_text";
static const char __pyx_k_Drago2Dengine_py[] = "Drago2Dengine.py";
static const char __pyx_k_DragoObject_draw[] = "DragoObject.draw";
static const char __pyx_k_DragoObject_move[] = "DragoObject.move";
static const char __pyx_k_GLX_DOUBLEBUFFER[] = "GLX_DOUBLEBUFFER";
static const char __pyx_k_GLX_X_RENDERABLE[] = "GLX_X_RENDERABLE";
static const char __pyx_k_GL_MAJOR_VERSION[] = " GL_MAJOR_VERSION:";
static const char __pyx_k_GL_MINOR_VERSION[] = " GL_MINOR_VERSION:";
static const char __pyx_k_GL_UNSIGNED_BYTE[] = "GL_UNSIGNED_BYTE";
static const char __pyx_k_GL_VERTEX_SHADER[] = "GL_VERTEX_SHADER";
static const char __pyx_k_PFD_DOUBLEBUFFER[] = "PFD_DOUBLEBUFFER";
static const char __pyx_k_RawOpengl___init[] = "RawOpengl.__init__";
static const char __pyx_k_autospin_allowed[] = "autospin_allowed";
static const char __pyx_k_free_calc_update[] = "free_calc_update";
static const char __pyx_k_glTranslateScene[] = "glTranslateScene";
static const char __pyx_k_glXCreateContext[] = "glXCreateContext";
static const char __pyx_k_load_texture_sub[] = "load_texture_sub";
static const char __pyx_k_serialize_to_obj[] = "serialize_to_obj";
static const char __pyx_k_start_new_thread[] = "start_new_thread";
static const char __pyx_k_update_animation[] = "update_animation";
static const char __pyx_k_update_idletasks[] = "update_idletasks";
static const char __pyx_k_wglCreateContext[] = "wglCreateContext";
static const char __pyx_k_ChoosePixelFormat[] = "ChoosePixelFormat";
static const char __pyx_k_D2Draw_draw_lines[] = "D2Draw.draw_lines";
static const char __pyx_k_D2Draw_draw_point[] = "D2Draw.draw_point";
static const char __pyx_k_DragoObject_clear[] = "DragoObject.clear";
static const char __pyx_k_DragoObject_queue[] = "DragoObject.queue";
static const char __pyx_k_GLX_DRAWABLE_TYPE[] = "GLX_DRAWABLE_TYPE";
static const char __pyx_k_GL_TEXTURE_WRAP_S[] = "GL_TEXTURE_WRAP_S";
static const char __pyx_k_GL_TEXTURE_WRAP_T[] = "GL_TEXTURE_WRAP_T";
static const char __pyx_k_OpenGL_GL_shaders[] = "OpenGL.GL.shaders";
static const char __pyx_k_Opengl_tkAutoSpin[] = "Opengl.tkAutoSpin";
static const char __pyx_k_RENDER_VBO___init[] = "RENDER_VBO.__init__";
static const char __pyx_k_add_textureupdate[] = "add_textureupdate";
static const char __pyx_k_draw_quad_texture[] = "draw_quad_texture";
static const char __pyx_k_get_objectindexes[] = "get_objectindexes";
static const char __pyx_k_glBindTextureUnit[] = "glBindTextureUnit";
static const char __pyx_k_glXChooseFBConfig[] = "glXChooseFBConfig";
static const char __pyx_k_D2Draw_draw_points[] = "D2Draw.draw_points";
static const char __pyx_k_D_vips_dev_8_9_bin[] = "D:/vips-dev-8.9/bin";
static const char __pyx_k_DragoObject___docs[] = "DragoObject.__docs__";
static const char __pyx_k_DragoObject___init[] = "DragoObject.__init__";
static const char __pyx_k_DragoObject_switch[] = "DragoObject.switch";
static const char __pyx_k_DragoObject_update[] = "DragoObject.update";
static const char __pyx_k_GL_FRAGMENT_SHADER[] = "GL_FRAGMENT_SHADER";
static const char __pyx_k_GL_MAJOR_VERSION_2[] = "GL_MAJOR_VERSION";
static const char __pyx_k_GL_MINOR_VERSION_2[] = "GL_MINOR_VERSION";
static const char __pyx_k_Opengl_StartRotate[] = "Opengl.StartRotate";
static const char __pyx_k_Opengl_do_AutoSpin[] = "Opengl.do_AutoSpin";
static const char __pyx_k_Opengl_tkTranslate[] = "Opengl.tkTranslate";
static const char __pyx_k_PFD_DRAW_TO_WINDOW[] = "PFD_DRAW_TO_WINDOW";
static const char __pyx_k_PFD_SUPPORT_OPENGL[] = "PFD_SUPPORT_OPENGL";
static const char __pyx_k_RawOpengl_tkRedraw[] = "RawOpengl.tkRedraw";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_usingVIPSandShrink[] = "usingVIPSandShrink";
static const char __pyx_k_D2DEvents_add_event[] = "D2DEvents.add_event";
static const char __pyx_k_D2Dprerender___init[] = "D2Dprerender.__init__";
static const char __pyx_k_DragoObject_compile[] = "DragoObject.compile";
static const char __pyx_k_DragoObject_get_pos[] = "DragoObject.get_pos";
static const char __pyx_k_DragoObject_move_up[] = "DragoObject.move_up";
static const char __pyx_k_GL_UNPACK_ALIGNMENT[] = "GL_UNPACK_ALIGNMENT";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_Number_of_FBconfigs[] = "Number of FBconfigs";
static const char __pyx_k_OpenGLFrame__window[] = "_OpenGLFrame__window";
static const char __pyx_k_Opengl_set_eyepoint[] = "Opengl.set_eyepoint";
static const char __pyx_k_Opengl_tkHandlePick[] = "Opengl.tkHandlePick";
static const char __pyx_k_check_all_b1_events[] = "check_all_b1_events";
static const char __pyx_k_glEnableClientState[] = "glEnableClientState";
static const char __pyx_k_glXCreateNewContext[] = "glXCreateNewContext";
static const char __pyx_k_launch_function_beg[] = "launch_function_beg";
static const char __pyx_k_launch_function_end[] = "launch_function_end";
static const char __pyx_k_launch_function_mid[] = "launch_function_mid";
static const char __pyx_k_load_texture_repeat[] = "load_texture_repeat";
static const char __pyx_k_render_texture_quad[] = "render_texture_quad";
static const char __pyx_k_D2Draw_add_animation[] = "D2Draw.add_animation";
static const char __pyx_k_D2Draw_del_animation[] = "D2Draw.del_animation";
static const char __pyx_k_DragoObject_edit_pos[] = "DragoObject.edit_pos";
static const char __pyx_k_DragoObject_set_mode[] = "DragoObject.set_mode";
static const char __pyx_k_Number_of_extensions[] = "Number of extensions:";
static const char __pyx_k_OpenGLFrame__context[] = "_OpenGLFrame__context";
static const char __pyx_k_Opengl_tkRecordMouse[] = "Opengl.tkRecordMouse";
static const char __pyx_k_PRERENDER_VBO___init[] = "PRERENDER_VBO.__init__";
static const char __pyx_k_baseOpenGLFrame_wait[] = "baseOpenGLFrame.wait";
static const char __pyx_k_check_event_button_1[] = "check_event_button_1";
static const char __pyx_k_glGetUniformLocation[] = "glGetUniformLocation";
static const char __pyx_k_tex_arrayn_translate[] = "_tex_arrayn_translate";
static const char __pyx_k_D2DEvents_checklclick[] = "D2DEvents.checklclick";
static const char __pyx_k_D2DEvents_checkmclick[] = "D2DEvents.checkmclick";
static const char __pyx_k_D2DEvents_checkmotion[] = "D2DEvents.checkmotion";
static const char __pyx_k_D2DEvents_checkrclick[] = "D2DEvents.checkrclick";
static const char __pyx_k_D2DRENDER_render_quad[] = "D2DRENDER.render_quad";
static const char __pyx_k_D2DRENDER_render_text[] = "D2DRENDER.render_text";
static const char __pyx_k_DragoObject_draw_text[] = "DragoObject.draw_text";
static const char __pyx_k_DragoObject_edit_tpos[] = "DragoObject.edit_tpos";
static const char __pyx_k_DragoObject_get_color[] = "DragoObject.get_color";
static const char __pyx_k_DragoObject_get_texid[] = "DragoObject.get_texid";
static const char __pyx_k_DragoObject_move_down[] = "DragoObject.move_down";
static const char __pyx_k_GL_TEXTURE_MAG_FILTER[] = "GL_TEXTURE_MAG_FILTER";
static const char __pyx_k_GL_TEXTURE_MIN_FILTER[] = "GL_TEXTURE_MIN_FILTER";
static const char __pyx_k_OpenGL_raw_GLX__types[] = "OpenGL.raw.GLX._types";
static const char __pyx_k_Opengl_basic_lighting[] = "Opengl.basic_lighting";
static const char __pyx_k_Opengl_set_background[] = "Opengl.set_background";
static const char __pyx_k_PIXELFORMATDESCRIPTOR[] = "PIXELFORMATDESCRIPTOR";
static const char __pyx_k_baseOpenGLFrame_tkMap[] = "baseOpenGLFrame.tkMap";
static const char __pyx_k_glVertexAttribPointer[] = "glVertexAttribPointer";
static const char __pyx_k_glXMakeContextCurrent[] = "glXMakeContextCurrent";
static const char __pyx_k_prerender_texturequad[] = "prerender_texturequad";
static const char __pyx_k_D2DEvents_clear_events[] = "D2DEvents.clear_events";
static const char __pyx_k_D2Draw__cords_to_ratio[] = "D2Draw._cords_to_ratio";
static const char __pyx_k_DragoObject_add_buffer[] = "DragoObject.add_buffer";
static const char __pyx_k_DragoObject_delete_obj[] = "DragoObject.delete_obj";
static const char __pyx_k_DragoObject_edit_color[] = "DragoObject.edit_color";
static const char __pyx_k_DragoObject_get_buffer[] = "DragoObject.get_buffer";
static const char __pyx_k_DragoObject_get_shader[] = "DragoObject.get_shader";
static const char __pyx_k_FT_LOAD_FORCE_AUTOHINT[] = "FT_LOAD_FORCE_AUTOHINT";
static const char __pyx_k_Opengl_set_centerpoint[] = "Opengl.set_centerpoint";
static const char __pyx_k_TEXTURE_DISPLAY_METHOD[] = "TEXTURE_DISPLAY_METHOD";
static const char __pyx_k_baseOpenGLFrame___init[] = "baseOpenGLFrame.__init__";
static const char __pyx_k_baseOpenGLFrame_initgl[] = "baseOpenGLFrame.initgl";
static const char __pyx_k_baseOpenGLFrame_redraw[] = "baseOpenGLFrame.redraw";
static const char __pyx_k_texture_cords_to_ratio[] = "_texture_cords_to_ratio";
static const char __pyx_k_D2DEvents_checkkeypress[] = "D2DEvents.checkkeypress";
static const char __pyx_k_D2DRENDER_render_letter[] = "D2DRENDER.render_letter";
static const char __pyx_k_D2Draw_update_animation[] = "D2Draw.update_animation";
static const char __pyx_k_DragoObject__load_scene[] = "DragoObject._load_scene";
static const char __pyx_k_DragoObject_bind_buffer[] = "DragoObject.bind_buffer";
static const char __pyx_k_DragoObject_create_quad[] = "DragoObject.create_quad";
static const char __pyx_k_DragoObject_edit_letter[] = "DragoObject.edit_letter";
static const char __pyx_k_DragoObject_queue_check[] = "DragoObject.queue_check";
static const char __pyx_k_DragoObject_use_texture[] = "DragoObject.use_texture";
static const char __pyx_k_GL_CONTEXT_PROFILE_MASK[] = "GL_CONTEXT_PROFILE_MASK";
static const char __pyx_k_check_all_bpress_events[] = "check_all_bpress_events";
static const char __pyx_k_draw_quad_texture_array[] = "draw_quad_texture_array";
static const char __pyx_k_D2Dprerender_create_font[] = "D2Dprerender.create_font";
static const char __pyx_k_D2Draw_draw_quad_texture[] = "D2Draw.draw_quad_texture";
static const char __pyx_k_DragoObject_edit_texture[] = "DragoObject.edit_texture";
static const char __pyx_k_DragoObject_get_vertices[] = "DragoObject.get_vertices";
static const char __pyx_k_Old_context_errors_arose[] = "Old context errors arose";
static const char __pyx_k_baseOpenGLFrame__display[] = "baseOpenGLFrame._display";
static const char __pyx_k_baseOpenGLFrame_freecalc[] = "baseOpenGLFrame.freecalc";
static const char __pyx_k_baseOpenGLFrame_tkExpose[] = "baseOpenGLFrame.tkExpose";
static const char __pyx_k_baseOpenGLFrame_tkResize[] = "baseOpenGLFrame.tkResize";
static const char __pyx_k_check_all_brelase_events[] = "check_all_brelase_events";
static const char __pyx_k_glXGetVisualFromFBConfig[] = "glXGetVisualFromFBConfig";
static const char __pyx_k_glXQueryExtensionsString[] = "glXQueryExtensionsString";
static const char __pyx_k_DragoObject_create_letter[] = "DragoObject.create_letter";
static const char __pyx_k_OpenGLFrame_tkMakeCurrent[] = "OpenGLFrame.tkMakeCurrent";
static const char __pyx_k_OpenGLFrame_tkSwapBuffers[] = "OpenGLFrame.tkSwapBuffers";
static const char __pyx_k_glEnableVertexAttribArray[] = "glEnableVertexAttribArray";
static const char __pyx_k_load_texture_locals_image[] = "load_texture.<locals>.image";
static const char __pyx_k_DragoObject__is_serialized[] = "DragoObject._is_serialized";
static const char __pyx_k_pure_pil_alpha_to_color_v2[] = "pure_pil_alpha_to_color_v2";
static const char __pyx_k_Common_code_for_windows_x11[] = " Common code for windows/x11 ";
static const char __pyx_k_D2Dprerender_prerender_quad[] = "D2Dprerender.prerender_quad";
static const char __pyx_k_D2Dprerender_prerender_text[] = "D2Dprerender.prerender_text";
static const char __pyx_k_Done_making_a_first_context[] = "Done making a first context";
static const char __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT[] = " GL_CONTEXT_CORE_PROFILE_BIT :";
static const char __pyx_k_GL_SHADING_LANGUAGE_VERSION[] = " GL_SHADING_LANGUAGE_VERSION :";
static const char __pyx_k_OpenGLFrame_tkCreateContext[] = "OpenGLFrame.tkCreateContext";
static const char __pyx_k_D2Draw__tex_arrayn_translate[] = "D2Draw._tex_arrayn_translate";
static const char __pyx_k_DragoObject_serialize_to_obj[] = "DragoObject.serialize_to_obj";
static const char __pyx_k_baseOpenGLFrame_create_event[] = "baseOpenGLFrame.create_event";
static const char __pyx_k_baseOpenGLFrame_printContext[] = "baseOpenGLFrame.printContext";
static const char __pyx_k_serialization_current_object[] = "serialization_current_object";
static const char __pyx_k_D2DRENDER_render_texture_quad[] = "D2DRENDER.render_texture_quad";
static const char __pyx_k_DragoObject_add_textureupdate[] = "DragoObject.add_textureupdate";
static const char __pyx_k_DragoObject_get_objectindexes[] = "DragoObject.get_objectindexes";
static const char __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT_2[] = "GL_CONTEXT_CORE_PROFILE_BIT";
static const char __pyx_k_GL_SHADING_LANGUAGE_VERSION_2[] = "GL_SHADING_LANGUAGE_VERSION";
static const char __pyx_k_baseOpenGLFrame_tkMakeCurrent[] = "baseOpenGLFrame.tkMakeCurrent";
static const char __pyx_k_baseOpenGLFrame_tkSwapBuffers[] = "baseOpenGLFrame.tkSwapBuffers";
static const char __pyx_k_oh_dear_visual_does_not_match[] = "oh dear - visual does not match";
static const char __pyx_k_D2Draw__texture_cords_to_ratio[] = "D2Draw._texture_cords_to_ratio";
static const char __pyx_k_D2Draw_draw_quad_texture_array[] = "D2Draw.draw_quad_texture_array";
static const char __pyx_k_Tkinter_bindings_for_an_Opengl[] = "\n    Tkinter bindings for an Opengl widget.\n    Mike Hartshorn\n    Department of Chemistry\n    University of York, UK\n    http://www.yorvic.york.ac.uk/~mjh/\n    ";
static const char __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFIL[] = " GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :";
static const char __pyx_k_Got_a_matching_visual_index_d_d[] = "Got a matching visual: index %d %d xid %s";
static const char __pyx_k_Uniform_Layout_Matrix_manipulat[] = "\n        Uniform/Layout/Matrix manipulation\n\n        1. Create object\n        2. Draw Object\n        3. Move/Transform/Morph object\n        ";
static const char __pyx_k_baseOpenGLFrame_tkCreateContext[] = "baseOpenGLFrame.tkCreateContext";
static const char __pyx_k_version_330_core_layout_locatio[] = "\n#version 330 core \nlayout(location = 0) in vec4 position;\nlayout(location = 1) in vec4 color;\nlayout(location = 2) in float TXTID;\nlayout(location = 3) in vec2 TXTC; \nout vec4 v_Color;\nout int in_TXTID; \nout vec2 in_TXTC; \nuniform int DRAW_MODE; \nvoid main() {\n    in_TXTC = TXTC;\n    in_TXTID = int(TXTID);\n    v_Color = color;\n    gl_Position = gl_ModelViewProjectionMatrix*position  ;\n    \n}\n        \n        ";
static const char __pyx_k_Button_1_Translate_Button_2_Rota[] = "Button-1: Translate\nButton-2: Rotate\nButton-3: Zoom\nReset: Resets transformation to identity\n";
static const char __pyx_k_D2Dprerender_prerender_texturequ[] = "D2Dprerender.prerender_texturequad";
static const char __pyx_k_Do_something_to_create_this_obje[] = "Do something to create this object";
static const char __pyx_k_Drago2Dengine___versions___win32[] = "Drago2Dengine.__versions__.win32.dist.Drago2Dengine";
static const char __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFILE[] = "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT";
static const char __pyx_k_Widget_without_any_sophisticated[] = "Widget without any sophisticated bindings    by Tom Schwaller";
static const char __pyx_k_baseOpenGLFrame_check_all_b1_eve[] = "baseOpenGLFrame.check_all_b1_events";
static const char __pyx_k_baseOpenGLFrame_check_all_bpress[] = "baseOpenGLFrame.check_all_bpress_events";
static const char __pyx_k_baseOpenGLFrame_check_all_brelas[] = "baseOpenGLFrame.check_all_brelase_events";
static const char __pyx_k_baseOpenGLFrame_check_event_butt[] = "baseOpenGLFrame.check_event_button_1";
static const char __pyx_k_baseOpenGLFrame_free_calc_update[] = "baseOpenGLFrame.free_calc_update";
static const char __pyx_k_load_texture_locals_image___init[] = "load_texture.<locals>.image.__init__";
static const char __pyx_k_version_330_core_layout_locatio_2[] = "\n#version 330 core\nlayout(location = 0) out vec4 out_color;\nin vec4 v_Color;\nin flat int in_TXTID; \nin vec2 in_TXTC;   \nuniform int DRAW_MODE; \nuniform sampler2D TXTARRAY[160];       \n   \nvoid main() {\n    if(DRAW_MODE == 0){\n        if(in_TXTID != 0) {\n            for(int i = 0; i <= 160; i++){\n                if(in_TXTID == i){out_color = texture(TXTARRAY[int(in_TXTID)], in_TXTC);break;}}\n            \n            \n            \n                out_color.r+= v_Color[0];\n                out_color.g+= v_Color[1];\n                out_color.b+= v_Color[2];\n                out_color.a+= v_Color[3];\n                \n            }\n        else {\n            out_color = v_Color;\n            }\n    }\n    \n    else if(DRAW_MODE == 1){\n        if(in_TXTID != 0) {\n            out_color = vec4(in_TXTC, 0 ,  1);\n            }\n        else {\n            out_color = v_Color;\n            }\n        }\n        \n        \n        \n}";
#if !CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__pyx_n_s_AssertionError;
static PyObject *__pyx_n_s_B1;
static PyObject *__pyx_kp_s_B1_Motion;
static PyObject *__pyx_n_s_B2;
static PyObject *__pyx_kp_s_B2_Motion;
static PyObject *__pyx_n_s_B3;
static PyObject *__pyx_kp_s_B3_Motion;
static PyObject *__pyx_n_s_BOOL;
static PyObject *__pyx_n_s_BOX_SIZE;
static PyObject *__pyx_n_s_BOX_START;
static PyObject *__pyx_n_s_BP;
static PyObject *__pyx_n_s_BR;
static PyObject *__pyx_kp_s_Before;
static PyObject *__pyx_kp_s_ButtonRelease_2;
static PyObject *__pyx_kp_s_Button_1;
static PyObject *__pyx_kp_s_Button_1_2;
static PyObject *__pyx_kp_s_Button_1_Translate_Button_2_Rota;
static PyObject *__pyx_kp_s_Button_2;
static PyObject *__pyx_kp_s_Button_2_2;
static PyObject *__pyx_kp_s_Button_3;
static PyObject *__pyx_kp_s_Button_3_2;
static PyObject *__pyx_n_s_CFUNCTYPE;
static PyObject *__pyx_n_s_COLOR;
static PyObject *__pyx_n_s_ChoosePixelFormat;
static PyObject *__pyx_n_s_Colormap;
static PyObject *__pyx_kp_s_Common_code_for_windows_x11;
static PyObject *__pyx_kp_s_Configure;
static PyObject *__pyx_n_s_Cords;
static PyObject *__pyx_kp_s_Create;
static PyObject *__pyx_n_s_D2DEvents;
static PyObject *__pyx_n_s_D2DEvents___init;
static PyObject *__pyx_n_s_D2DEvents__pas;
static PyObject *__pyx_n_s_D2DEvents_add_event;
static PyObject *__pyx_n_s_D2DEvents_check;
static PyObject *__pyx_n_s_D2DEvents_checkkeypress;
static PyObject *__pyx_n_s_D2DEvents_checklclick;
static PyObject *__pyx_n_s_D2DEvents_checkmclick;
static PyObject *__pyx_n_s_D2DEvents_checkmotion;
static PyObject *__pyx_n_s_D2DEvents_checkrclick;
static PyObject *__pyx_n_s_D2DEvents_clear_events;
static PyObject *__pyx_n_s_D2DRENDER;
static PyObject *__pyx_n_s_D2DRENDER_render;
static PyObject *__pyx_n_s_D2DRENDER_render_letter;
static PyObject *__pyx_n_s_D2DRENDER_render_quad;
static PyObject *__pyx_n_s_D2DRENDER_render_text;
static PyObject *__pyx_n_s_D2DRENDER_render_texture_quad;
static PyObject *__pyx_n_s_D2Dprerender;
static PyObject *__pyx_n_s_D2Dprerender___init;
static PyObject *__pyx_n_s_D2Dprerender_create_font;
static PyObject *__pyx_n_s_D2Dprerender_prerender_quad;
static PyObject *__pyx_n_s_D2Dprerender_prerender_text;
static PyObject *__pyx_n_s_D2Dprerender_prerender_texturequ;
static PyObject *__pyx_n_s_D2Draw;
static PyObject *__pyx_n_s_D2Draw___init;
static PyObject *__pyx_n_s_D2Draw__cords_to_ratio;
static PyObject *__pyx_n_s_D2Draw__resize;
static PyObject *__pyx_n_s_D2Draw__tex_arrayn_translate;
static PyObject *__pyx_n_s_D2Draw__texture_cords_to_ratio;
static PyObject *__pyx_n_s_D2Draw_add_animation;
static PyObject *__pyx_n_s_D2Draw_del_animation;
static PyObject *__pyx_n_s_D2Draw_draw_line;
static PyObject *__pyx_n_s_D2Draw_draw_lines;
static PyObject *__pyx_n_s_D2Draw_draw_point;
static PyObject *__pyx_n_s_D2Draw_draw_points;
static PyObject *__pyx_n_s_D2Draw_draw_quad;
static PyObject *__pyx_n_s_D2Draw_draw_quad_texture;
static PyObject *__pyx_n_s_D2Draw_draw_quad_texture_array;
static PyObject *__pyx_n_s_D2Draw_draw_text;
static PyObject *__pyx_n_s_D2Draw_resize;
static PyObject *__pyx_n_s_D2Draw_update_animation;
static PyObject *__pyx_n_s_DRAWMODELOC;
static PyObject *__pyx_n_s_DRAW_MODE;
static PyObject *__pyx_kp_s_D_vips_dev_8_9_bin;
static PyObject *__pyx_n_s_Dialog;
static PyObject *__pyx_n_s_Display;
static PyObject *__pyx_kp_s_Do_something_to_create_this_obje;
static PyObject *__pyx_n_s_Done;
static PyObject *__pyx_kp_s_Done_making_a_first_context;
static PyObject *__pyx_n_s_Drago2Dengine___versions___win32;
static PyObject *__pyx_kp_s_Drago2Dengine_py;
static PyObject *__pyx_n_s_DragoObject;
static PyObject *__pyx_n_s_DragoObject___docs;
static PyObject *__pyx_n_s_DragoObject___init;
static PyObject *__pyx_n_s_DragoObject__is_serialized;
static PyObject *__pyx_n_s_DragoObject__load_scene;
static PyObject *__pyx_n_s_DragoObject_add_buffer;
static PyObject *__pyx_n_s_DragoObject_add_textureupdate;
static PyObject *__pyx_n_s_DragoObject_bind_buffer;
static PyObject *__pyx_n_s_DragoObject_clear;
static PyObject *__pyx_n_s_DragoObject_compile;
static PyObject *__pyx_n_s_DragoObject_create_letter;
static PyObject *__pyx_n_s_DragoObject_create_quad;
static PyObject *__pyx_n_s_DragoObject_delete_obj;
static PyObject *__pyx_n_s_DragoObject_draw;
static PyObject *__pyx_n_s_DragoObject_draw_text;
static PyObject *__pyx_n_s_DragoObject_edit_color;
static PyObject *__pyx_n_s_DragoObject_edit_letter;
static PyObject *__pyx_n_s_DragoObject_edit_pos;
static PyObject *__pyx_n_s_DragoObject_edit_texture;
static PyObject *__pyx_n_s_DragoObject_edit_tpos;
static PyObject *__pyx_n_s_DragoObject_get_buffer;
static PyObject *__pyx_n_s_DragoObject_get_color;
static PyObject *__pyx_n_s_DragoObject_get_objectindexes;
static PyObject *__pyx_n_s_DragoObject_get_pos;
static PyObject *__pyx_n_s_DragoObject_get_shader;
static PyObject *__pyx_n_s_DragoObject_get_texid;
static PyObject *__pyx_n_s_DragoObject_get_vertices;
static PyObject *__pyx_n_s_DragoObject_move;
static PyObject *__pyx_n_s_DragoObject_move_down;
static PyObject *__pyx_n_s_DragoObject_move_up;
static PyObject *__pyx_n_s_DragoObject_queue;
static PyObject *__pyx_n_s_DragoObject_queue_check;
static PyObject *__pyx_n_s_DragoObject_serialize_to_obj;
static PyObject *__pyx_n_s_DragoObject_set_mode;
static PyObject *__pyx_n_s_DragoObject_switch;
static PyObject *__pyx_n_s_DragoObject_update;
static PyObject *__pyx_n_s_DragoObject_use_texture;
static PyObject *__pyx_n_s_EventDelay;
static PyObject *__pyx_n_s_EventOff;
static PyObject *__pyx_n_s_EventOn;
static PyObject *__pyx_n_s_EventType;
static PyObject *__pyx_kp_s_Expose;
static PyObject *__pyx_kp_s_Extension_list;
static PyObject *__pyx_n_s_FRAGMENT_SHADER;
static PyObject *__pyx_n_s_FT_LOAD_FORCE_AUTOHINT;
static PyObject *__pyx_n_s_FT_LOAD_RENDER;
static PyObject *__pyx_n_s_Face;
static PyObject *__pyx_n_s_Frame;
static PyObject *__pyx_n_s_GL;
static PyObject *__pyx_n_s_GLU;
static PyObject *__pyx_n_s_GLUT;
static PyObject *__pyx_n_s_GLX;
static PyObject *__pyx_n_s_GLX_BLUE_SIZE;
static PyObject *__pyx_n_s_GLX_DEPTH_SIZE;
static PyObject *__pyx_n_s_GLX_DOUBLEBUFFER;
static PyObject *__pyx_n_s_GLX_DRAWABLE_TYPE;
static PyObject *__pyx_n_s_GLX_GREEN_SIZE;
static PyObject *__pyx_n_s_GLX_RED_SIZE;
static PyObject *__pyx_n_s_GLX_RENDER_TYPE;
static PyObject *__pyx_n_s_GLX_RGBA;
static PyObject *__pyx_n_s_GLX_RGBA_BIT;
static PyObject *__pyx_n_s_GLX_RGBA_TYPE;
static PyObject *__pyx_n_s_GLX_WINDOW_BIT;
static PyObject *__pyx_n_s_GLX_X_RENDERABLE;
static PyObject *__pyx_kp_s_GLX_version_d_d;
static PyObject *__pyx_n_s_GL_ALPHA;
static PyObject *__pyx_n_s_GL_ARRAY_BUFFER;
static PyObject *__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL;
static PyObject *__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE;
static PyObject *__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT;
static PyObject *__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2;
static PyObject *__pyx_n_s_GL_CONTEXT_PROFILE_MASK;
static PyObject *__pyx_n_s_GL_DEPTH_TEST;
static PyObject *__pyx_n_s_GL_DYNAMIC_DRAW;
static PyObject *__pyx_n_s_GL_EXTENSIONS;
static PyObject *__pyx_n_s_GL_FALSE;
static PyObject *__pyx_n_s_GL_FLOAT;
static PyObject *__pyx_n_s_GL_FRAGMENT_SHADER;
static PyObject *__pyx_n_s_GL_LESS;
static PyObject *__pyx_n_s_GL_LIGHT0;
static PyObject *__pyx_n_s_GL_LIGHTING;
static PyObject *__pyx_n_s_GL_LINEAR;
static PyObject *__pyx_kp_s_GL_MAJOR_VERSION;
static PyObject *__pyx_n_s_GL_MAJOR_VERSION_2;
static PyObject *__pyx_n_s_GL_MATRIX_MODE;
static PyObject *__pyx_kp_s_GL_MINOR_VERSION;
static PyObject *__pyx_n_s_GL_MINOR_VERSION_2;
static PyObject *__pyx_n_s_GL_MODELVIEW;
static PyObject *__pyx_n_s_GL_NEAREST;
static PyObject *__pyx_n_s_GL_POINTS;
static PyObject *__pyx_n_s_GL_POSITION;
static PyObject *__pyx_n_s_GL_PROJECTION;
static PyObject *__pyx_n_s_GL_QUADS;
static PyObject *__pyx_kp_s_GL_RENDERER;
static PyObject *__pyx_n_s_GL_RENDERER_2;
static PyObject *__pyx_n_s_GL_REPEAT;
static PyObject *__pyx_n_s_GL_RGB;
static PyObject *__pyx_n_s_GL_RGBA;
static PyObject *__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION;
static PyObject *__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2;
static PyObject *__pyx_n_s_GL_TEXTURE_2D;
static PyObject *__pyx_n_s_GL_TEXTURE_MAG_FILTER;
static PyObject *__pyx_n_s_GL_TEXTURE_MIN_FILTER;
static PyObject *__pyx_n_s_GL_TEXTURE_WRAP_S;
static PyObject *__pyx_n_s_GL_TEXTURE_WRAP_T;
static PyObject *__pyx_n_s_GL_TRUE;
static PyObject *__pyx_n_s_GL_UNPACK_ALIGNMENT;
static PyObject *__pyx_n_s_GL_UNSIGNED_BYTE;
static PyObject *__pyx_kp_s_GL_VENDOR;
static PyObject *__pyx_n_s_GL_VENDOR_2;
static PyObject *__pyx_kp_s_GL_VERSION;
static PyObject *__pyx_n_s_GL_VERSION_2;
static PyObject *__pyx_n_s_GL_VERTEX_ARRAY;
static PyObject *__pyx_n_s_GL_VERTEX_SHADER;
static PyObject *__pyx_n_s_GLint;
static PyObject *__pyx_n_s_GetDC;
static PyObject *__pyx_kp_s_Got_a_matching_visual_index_d_d;
static PyObject *__pyx_n_s_HDC;
static PyObject *__pyx_n_s_Hover;
static PyObject *__pyx_n_s_Image;
static PyObject *__pyx_n_s_Imagenumpy;
static PyObject *__pyx_kp_s_Is_Direct;
static PyObject *__pyx_n_s_KeyPress;
static PyObject *__pyx_kp_s_KeyPress_2;
static PyObject *__pyx_n_s_LeftClick;
static PyObject *__pyx_n_s_LoadLibrary;
static PyObject *__pyx_n_s_MN;
static PyObject *__pyx_kp_s_Map;
static PyObject *__pyx_n_s_MiddleClick;
static PyObject *__pyx_n_s_Motion;
static PyObject *__pyx_kp_s_Motion_2;
static PyObject *__pyx_n_s_MouseHover;
static PyObject *__pyx_n_s_MouseLC;
static PyObject *__pyx_n_s_MouseMC;
static PyObject *__pyx_n_s_MouseRC;
static PyObject *__pyx_n_s_NEWLINE;
static PyObject *__pyx_n_s_NOENABLE;
static PyObject *__pyx_n_s_New_Texture;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_kp_s_Number_of_FBconfigs;
static PyObject *__pyx_kp_s_Number_of_extensions;
static PyObject *__pyx_n_s_OBJECT;
static PyObject *__pyx_n_s_Offests;
static PyObject *__pyx_n_s_Ok;
static PyObject *__pyx_kp_s_Old_context_errors_arose;
static PyObject *__pyx_n_s_OnKey;
static PyObject *__pyx_n_s_OpenGL;
static PyObject *__pyx_n_s_OpenGLFrame;
static PyObject *__pyx_n_s_OpenGLFrame__context;
static PyObject *__pyx_n_s_OpenGLFrame__window;
static PyObject *__pyx_n_s_OpenGLFrame_tkCreateContext;
static PyObject *__pyx_n_s_OpenGLFrame_tkMakeCurrent;
static PyObject *__pyx_n_s_OpenGLFrame_tkSwapBuffers;
static PyObject *__pyx_n_s_OpenGL_GL;
static PyObject *__pyx_n_s_OpenGL_GL_shaders;
static PyObject *__pyx_n_s_OpenGL_WGL;
static PyObject *__pyx_n_s_OpenGL_raw_GLX__types;
static PyObject *__pyx_n_s_OpenGL_raw__GLX;
static PyObject *__pyx_n_s_Opengl;
static PyObject *__pyx_n_s_Opengl_StartRotate;
static PyObject *__pyx_n_s_Opengl___init;
static PyObject *__pyx_n_s_Opengl_activate;
static PyObject *__pyx_n_s_Opengl_basic_lighting;
static PyObject *__pyx_n_s_Opengl_do_AutoSpin;
static PyObject *__pyx_n_s_Opengl_freecalc;
static PyObject *__pyx_n_s_Opengl_help;
static PyObject *__pyx_n_s_Opengl_initgl;
static PyObject *__pyx_n_s_Opengl_redraw;
static PyObject *__pyx_n_s_Opengl_reset;
static PyObject *__pyx_n_s_Opengl_set_background;
static PyObject *__pyx_n_s_Opengl_set_centerpoint;
static PyObject *__pyx_n_s_Opengl_set_eyepoint;
static PyObject *__pyx_n_s_Opengl_tkAutoSpin;
static PyObject *__pyx_n_s_Opengl_tkExpose;
static PyObject *__pyx_n_s_Opengl_tkHandlePick;
static PyObject *__pyx_n_s_Opengl_tkPrint;
static PyObject *__pyx_n_s_Opengl_tkRecordMouse;
static PyObject *__pyx_n_s_Opengl_tkRedraw;
static PyObject *__pyx_n_s_Opengl_tkRotate;
static PyObject *__pyx_n_s_Opengl_tkScale;
static PyObject *__pyx_n_s_Opengl_tkTranslate;
static PyObject *__pyx_n_s_PATH;
static PyObject *__pyx_n_s_PFD_DOUBLEBUFFER;
static PyObject *__pyx_n_s_PFD_DRAW_TO_WINDOW;
static PyObject *__pyx_n_s_PFD_MAIN_PLANE;
static PyObject *__pyx_n_s_PFD_SUPPORT_OPENGL;
static PyObject *__pyx_n_s_PFD_TYPE_RGBA;
static PyObject *__pyx_n_s_PIL;
static PyObject *__pyx_n_s_PIXELFORMATDESCRIPTOR;
static PyObject *__pyx_n_s_POINTER;
static PyObject *__pyx_n_s_PRERENDER_VBO;
static PyObject *__pyx_n_s_PRERENDER_VBO___init;
static PyObject *__pyx_n_s_RAW_DATA;
static PyObject *__pyx_n_s_RENDER_VBO;
static PyObject *__pyx_n_s_RENDER_VBO___init;
static PyObject *__pyx_n_s_RGB;
static PyObject *__pyx_n_s_RawOpengl;
static PyObject *__pyx_n_s_RawOpengl___init;
static PyObject *__pyx_n_s_RawOpengl_tkRedraw;
static PyObject *__pyx_n_s_RightClick;
static PyObject *__pyx_n_s_SHADER;
static PyObject *__pyx_n_s_SHADER___init;
static PyObject *__pyx_kp_s_Screen_is;
static PyObject *__pyx_n_s_SetPixelFormat;
static PyObject *__pyx_kp_s_Shift_Button_1;
static PyObject *__pyx_n_s_Spacing_add;
static PyObject *__pyx_n_s_StartRotate;
static PyObject *__pyx_n_s_SwapBuffers;
static PyObject *__pyx_n_s_TAB;
static PyObject *__pyx_n_s_TEXTUREID;
static PyObject *__pyx_n_s_TEXTURE_DISPLAY_METHOD;
static PyObject *__pyx_n_s_TXC;
static PyObject *__pyx_n_s_TXTARRAY;
static PyObject *__pyx_n_s_Texture_unit;
static PyObject *__pyx_n_s_Tkinter;
static PyObject *__pyx_kp_s_Tkinter_bindings_for_an_Opengl;
static PyObject *__pyx_kp_s_Uniform_Layout_Matrix_manipulat;
static PyObject *__pyx_n_s_VBO;
static PyObject *__pyx_n_s_VBO_OBJ;
static PyObject *__pyx_n_s_VBO_OBJ___init;
static PyObject *__pyx_n_s_VBO___init;
static PyObject *__pyx_n_s_VERTEX_SHADER;
static PyObject *__pyx_kp_s_Viewer_help;
static PyObject *__pyx_kp_s_Widget_without_any_sophisticated;
static PyObject *__pyx_n_s_WinDLL;
static PyObject *__pyx_n_s_X11;
static PyObject *__pyx_n_s_XDefaultScreen;
static PyObject *__pyx_n_s_XOpenDisplay;
static PyObject *__pyx_n_s_Z;
static PyObject *__pyx_kp_s__10;
static PyObject *__pyx_kp_s__13;
static PyObject *__pyx_kp_s__207;
static PyObject *__pyx_kp_s__8;
static PyObject *__pyx_n_s__80;
static PyObject *__pyx_kp_s__9;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_a_val;
static PyObject *__pyx_n_s_abcdefgh;
static PyObject *__pyx_n_s_access;
static PyObject *__pyx_n_s_activate;
static PyObject *__pyx_n_s_add_animation;
static PyObject *__pyx_n_s_add_boldnext;
static PyObject *__pyx_n_s_add_buffer;
static PyObject *__pyx_n_s_add_event;
static PyObject *__pyx_n_s_add_textureupdate;
static PyObject *__pyx_n_s_after;
static PyObject *__pyx_n_s_after_cancel;
static PyObject *__pyx_n_s_all;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_animate;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_argtypes;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_ascender;
static PyObject *__pyx_n_s_att;
static PyObject *__pyx_n_s_autospin;
static PyObject *__pyx_n_s_autospin_allowed;
static PyObject *__pyx_n_s_b;
static PyObject *__pyx_kp_s_b_2;
static PyObject *__pyx_n_s_b_back;
static PyObject *__pyx_n_s_b_val;
static PyObject *__pyx_n_s_background;
static PyObject *__pyx_n_s_bands;
static PyObject *__pyx_n_s_base;
static PyObject *__pyx_n_s_baseOpenGLFrame;
static PyObject *__pyx_n_s_baseOpenGLFrame___init;
static PyObject *__pyx_n_s_baseOpenGLFrame__display;
static PyObject *__pyx_n_s_baseOpenGLFrame_check_all_b1_eve;
static PyObject *__pyx_n_s_baseOpenGLFrame_check_all_bpress;
static PyObject *__pyx_n_s_baseOpenGLFrame_check_all_brelas;
static PyObject *__pyx_n_s_baseOpenGLFrame_check_event_butt;
static PyObject *__pyx_n_s_baseOpenGLFrame_create_event;
static PyObject *__pyx_n_s_baseOpenGLFrame_free_calc_update;
static PyObject *__pyx_n_s_baseOpenGLFrame_freecalc;
static PyObject *__pyx_n_s_baseOpenGLFrame_initgl;
static PyObject *__pyx_n_s_baseOpenGLFrame_printContext;
static PyObject *__pyx_n_s_baseOpenGLFrame_redraw;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkCreateContext;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkExpose;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkMakeCurrent;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkMap;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkResize;
static PyObject *__pyx_n_s_baseOpenGLFrame_tkSwapBuffers;
static PyObject *__pyx_n_s_baseOpenGLFrame_wait;
static PyObject *__pyx_n_s_basic_lighting;
static PyObject *__pyx_n_s_basicshader;
static PyObject *__pyx_n_s_best;
static PyObject *__pyx_n_s_bg;
static PyObject *__pyx_n_s_bind;
static PyObject *__pyx_n_s_bind_buffer;
static PyObject *__pyx_n_s_bitmap;
static PyObject *__pyx_n_s_bitmap_left;
static PyObject *__pyx_n_s_bitmap_top;
static PyObject *__pyx_n_s_bresenham;
static PyObject *__pyx_n_s_buffer;
static PyObject *__pyx_n_s_buffer1;
static PyObject *__pyx_n_s_bufferid;
static PyObject *__pyx_n_s_buffmanager;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_s_c1;
static PyObject *__pyx_n_s_c1_2;
static PyObject *__pyx_n_s_c2;
static PyObject *__pyx_n_s_c2_2;
static PyObject *__pyx_n_s_c3;
static PyObject *__pyx_n_s_c4;
static PyObject *__pyx_n_s_cColorBits;
static PyObject *__pyx_n_s_cDepthBits;
static PyObject *__pyx_n_s_c_bool;
static PyObject *__pyx_n_s_c_char_p;
static PyObject *__pyx_n_s_c_float;
static PyObject *__pyx_n_s_c_int;
static PyObject *__pyx_n_s_c_void_p;
static PyObject *__pyx_n_s_call;
static PyObject *__pyx_n_s_cb;
static PyObject *__pyx_n_s_cdll;
static PyObject *__pyx_n_s_centre;
static PyObject *__pyx_n_s_cf;
static PyObject *__pyx_n_s_cfgs;
static PyObject *__pyx_n_s_cfloat;
static PyObject *__pyx_n_s_cfloat_array;
static PyObject *__pyx_n_s_change_color;
static PyObject *__pyx_n_s_check;
static PyObject *__pyx_n_s_check_all_b1_events;
static PyObject *__pyx_n_s_check_all_bpress_events;
static PyObject *__pyx_n_s_check_all_brelase_events;
static PyObject *__pyx_n_s_check_event_button_1;
static PyObject *__pyx_n_s_checkkeypress;
static PyObject *__pyx_n_s_checklclick;
static PyObject *__pyx_n_s_checkmclick;
static PyObject *__pyx_n_s_checkmotion;
static PyObject *__pyx_n_s_checkrclick;
static PyObject *__pyx_n_s_chr;
static PyObject *__pyx_n_s_class_getitem;
static PyObject *__pyx_n_s_clear;
static PyObject *__pyx_n_s_clear_events;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_cnf;
static PyObject *__pyx_n_s_color;
static PyObject *__pyx_n_s_compile;
static PyObject *__pyx_n_s_compileProgram;
static PyObject *__pyx_n_s_compileShader;
static PyObject *__pyx_n_s_config;
static PyObject *__pyx_n_s_contents;
static PyObject *__pyx_n_s_cords;
static PyObject *__pyx_n_s_cords1;
static PyObject *__pyx_n_s_cords2;
static PyObject *__pyx_n_s_cords3;
static PyObject *__pyx_n_s_cords4;
static PyObject *__pyx_n_s_cords_2;
static PyObject *__pyx_n_s_cords_to_ratio;
static PyObject *__pyx_n_s_crd;
static PyObject *__pyx_n_s_create_event;
static PyObject *__pyx_n_s_create_font;
static PyObject *__pyx_n_s_create_letter;
static PyObject *__pyx_n_s_create_quad;
static PyObject *__pyx_n_s_crop;
static PyObject *__pyx_n_s_ct;
static PyObject *__pyx_n_s_ctypes;
static PyObject *__pyx_n_s_ctypes_wintypes;
static PyObject *__pyx_n_s_curpos;
static PyObject *__pyx_n_s_cvroot;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_dat;
static PyObject *__pyx_n_s_data;
static PyObject *__pyx_n_s_data_length;
static PyObject *__pyx_n_s_data_tr1;
static PyObject *__pyx_n_s_data_tr2;
static PyObject *__pyx_n_s_data_txn;
static PyObject *__pyx_n_s_data_type;
static PyObject *__pyx_n_s_default;
static PyObject *__pyx_n_s_del_animation;
static PyObject *__pyx_n_s_delay;
static PyObject *__pyx_n_s_delete_obj;
static PyObject *__pyx_n_s_descender;
static PyObject *__pyx_n_s_dialog;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_display;
static PyObject *__pyx_n_s_dist;
static PyObject *__pyx_n_s_distance;
static PyObject *__pyx_n_s_do_AutoSpin;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_docs;
static PyObject *__pyx_n_s_dp_data;
static PyObject *__pyx_n_s_draw;
static PyObject *__pyx_n_s_draw_line;
static PyObject *__pyx_n_s_draw_lines;
static PyObject *__pyx_n_s_draw_point;
static PyObject *__pyx_n_s_draw_points;
static PyObject *__pyx_n_s_draw_quad;
static PyObject *__pyx_n_s_draw_quad_texture;
static PyObject *__pyx_n_s_draw_quad_texture_array;
static PyObject *__pyx_n_s_draw_text;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_dummy;
static PyObject *__pyx_n_s_dwFlags;
static PyObject *__pyx_n_s_dx;
static PyObject *__pyx_n_s_dy;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_edit_color;
static PyObject *__pyx_n_s_edit_letter;
static PyObject *__pyx_n_s_edit_pos;
static PyObject *__pyx_n_s_edit_texture;
static PyObject *__pyx_n_s_edit_tpos;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_environ;
static PyObject *__pyx_n_s_ev;
static PyObject *__pyx_n_s_ev_list;
static PyObject *__pyx_n_s_ev_type;
static PyObject *__pyx_n_s_event;
static PyObject *__pyx_n_s_event_type;
static PyObject *__pyx_n_s_eventmanager;
static PyObject *__pyx_n_s_events_B1;
static PyObject *__pyx_n_s_events_B2;
static PyObject *__pyx_n_s_events_B3;
static PyObject *__pyx_n_s_events_BP;
static PyObject *__pyx_n_s_events_BR;
static PyObject *__pyx_n_s_events_MN;
static PyObject *__pyx_n_s_evt;
static PyObject *__pyx_n_s_extend;
static PyObject *__pyx_n_s_extensions;
static PyObject *__pyx_n_s_extns;
static PyObject *__pyx_n_s_exts;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_s_face;
static PyObject *__pyx_n_s_far;
static PyObject *__pyx_n_s_fbatt;
static PyObject *__pyx_n_s_fgshader;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_filename;
static PyObject *__pyx_n_s_find_library;
static PyObject *__pyx_n_s_flat;
static PyObject *__pyx_n_s_font;
static PyObject *__pyx_n_s_font_config;
static PyObject *__pyx_n_s_font_letters;
static PyObject *__pyx_n_s_font_texture;
static PyObject *__pyx_n_s_fovy;
static PyObject *__pyx_n_s_free_calc_update;
static PyObject *__pyx_n_s_freecalc;
static PyObject *__pyx_n_s_freecalc_update;
static PyObject *__pyx_n_s_freetype;
static PyObject *__pyx_n_s_from;
static PyObject *__pyx_n_s_frombuffer;
static PyObject *__pyx_n_s_func;
static PyObject *__pyx_n_s_g;
static PyObject *__pyx_n_s_g_back;
static PyObject *__pyx_n_s_g_val;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_get_buffer;
static PyObject *__pyx_n_s_get_color;
static PyObject *__pyx_n_s_get_objectindexes;
static PyObject *__pyx_n_s_get_pos;
static PyObject *__pyx_n_s_get_shader;
static PyObject *__pyx_n_s_get_texid;
static PyObject *__pyx_n_s_get_vertices;
static PyObject *__pyx_n_s_getdata;
static PyObject *__pyx_n_s_getint;
static PyObject *__pyx_n_s_getsize;
static PyObject *__pyx_n_s_glBegin;
static PyObject *__pyx_n_s_glBindBuffer;
static PyObject *__pyx_n_s_glBindTexture;
static PyObject *__pyx_n_s_glBindTextureUnit;
static PyObject *__pyx_n_s_glBufferData;
static PyObject *__pyx_n_s_glBufferSubData;
static PyObject *__pyx_n_s_glColor3f;
static PyObject *__pyx_n_s_glColor4f;
static PyObject *__pyx_n_s_glDepthFunc;
static PyObject *__pyx_n_s_glDisable;
static PyObject *__pyx_n_s_glDrawArrays;
static PyObject *__pyx_n_s_glEnable;
static PyObject *__pyx_n_s_glEnableClientState;
static PyObject *__pyx_n_s_glEnableVertexAttribArray;
static PyObject *__pyx_n_s_glEnd;
static PyObject *__pyx_n_s_glGenBuffers;
static PyObject *__pyx_n_s_glGenTextures;
static PyObject *__pyx_n_s_glGetDoublev;
static PyObject *__pyx_n_s_glGetIntegerv;
static PyObject *__pyx_n_s_glGetString;
static PyObject *__pyx_n_s_glGetUniformLocation;
static PyObject *__pyx_n_s_glLightfv;
static PyObject *__pyx_n_s_glLoadIdentity;
static PyObject *__pyx_n_s_glMatrixMode;
static PyObject *__pyx_n_s_glPixelStorei;
static PyObject *__pyx_n_s_glRotateScene;
static PyObject *__pyx_n_s_glTexCoord2f;
static PyObject *__pyx_n_s_glTexImage2D;
static PyObject *__pyx_n_s_glTexParameterf;
static PyObject *__pyx_n_s_glTexParameteri;
static PyObject *__pyx_n_s_glTexSubImage2D;
static PyObject *__pyx_n_s_glTranslateScene;
static PyObject *__pyx_n_s_glUniform1iv;
static PyObject *__pyx_n_s_glUseProgram;
static PyObject *__pyx_n_s_glVertex2f;
static PyObject *__pyx_n_s_glVertexAttribPointer;
static PyObject *__pyx_n_s_glViewport;
static PyObject *__pyx_n_s_glXChooseFBConfig;
static PyObject *__pyx_n_s_glXChooseVisual;
static PyObject *__pyx_n_s_glXCreateContext;
static PyObject *__pyx_n_s_glXCreateNewContext;
static PyObject *__pyx_n_s_glXGetVisualFromFBConfig;
static PyObject *__pyx_n_s_glXIsDirect;
static PyObject *__pyx_n_s_glXMakeContextCurrent;
static PyObject *__pyx_n_s_glXMakeCurrent;
static PyObject *__pyx_n_s_glXQueryExtensionsString;
static PyObject *__pyx_n_s_glXQueryVersion;
static PyObject *__pyx_n_s_glXSwapBuffers;
static PyObject *__pyx_n_s_gluLookAt;
static PyObject *__pyx_n_s_gluPerspective;
static PyObject *__pyx_n_s_gluProject;
static PyObject *__pyx_n_s_gluUnProject;
static PyObject *__pyx_n_s_glyph;
static PyObject *__pyx_n_s_h;
static PyObject *__pyx_n_s_height;
static PyObject *__pyx_n_s_help;
static PyObject *__pyx_n_s_hex;
static PyObject *__pyx_n_s_hover_events;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_iLayerType;
static PyObject *__pyx_n_s_iPixelType;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_ideal;
static PyObject *__pyx_n_s_idx;
static PyObject *__pyx_n_s_il;
static PyObject *__pyx_n_s_image;
static PyObject *__pyx_n_s_imgnp;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_init_subclass;
static PyObject *__pyx_n_s_initgl;
static PyObject *__pyx_n_s_initialised;
static PyObject *__pyx_n_s_insert;
static PyObject *__pyx_n_s_is_fixed_width;
static PyObject *__pyx_n_s_is_serialized;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_keypress_events;
static PyObject *__pyx_n_s_kw;
static PyObject *__pyx_n_s_l;
static PyObject *__pyx_n_s_launch_func;
static PyObject *__pyx_n_s_launch_function_beg;
static PyObject *__pyx_n_s_launch_function_end;
static PyObject *__pyx_n_s_launch_function_mid;
static PyObject *__pyx_n_s_launchev;
static PyObject *__pyx_n_s_lclick_events;
static PyObject *__pyx_n_s_letter;
static PyObject *__pyx_n_s_lfe;
static PyObject *__pyx_n_s_lfg;
static PyObject *__pyx_n_s_lfm;
static PyObject *__pyx_n_s_light_position;
static PyObject *__pyx_n_s_linux;
static PyObject *__pyx_n_s_list;
static PyObject *__pyx_n_s_load;
static PyObject *__pyx_n_s_load_char;
static PyObject *__pyx_n_s_load_scene;
static PyObject *__pyx_n_s_load_texture;
static PyObject *__pyx_n_s_load_texture_dp;
static PyObject *__pyx_n_s_load_texture_locals_image;
static PyObject *__pyx_n_s_load_texture_locals_image___init;
static PyObject *__pyx_n_s_load_texture_repeat;
static PyObject *__pyx_n_s_load_texture_sub;
static PyObject *__pyx_n_s_ls;
static PyObject *__pyx_n_s_m;
static PyObject *__pyx_n_s_m_new;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_major;
static PyObject *__pyx_n_s_mask;
static PyObject *__pyx_n_s_master;
static PyObject *__pyx_n_s_math;
static PyObject *__pyx_n_s_mclick_events;
static PyObject *__pyx_n_s_mem_img;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_minor;
static PyObject *__pyx_n_s_mmap;
static PyObject *__pyx_n_s_mode;
static PyObject *__pyx_n_s_mode_2;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_move;
static PyObject *__pyx_n_s_move_down;
static PyObject *__pyx_n_s_move_up;
static PyObject *__pyx_n_s_msk;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_s_naiveline;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_named;
static PyObject *__pyx_n_s_ncfg;
static PyObject *__pyx_n_s_nd;
static PyObject *__pyx_n_s_near;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_new_from_file;
static PyObject *__pyx_n_s_newcolor;
static PyObject *__pyx_n_s_newpos;
static PyObject *__pyx_n_s_newsize;
static PyObject *__pyx_n_s_newtpos;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_nr;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_nx;
static PyObject *__pyx_n_s_ny;
static PyObject *__pyx_n_s_obj;
static PyObject *__pyx_n_s_obj_c;
static PyObject *__pyx_n_s_object;
static PyObject *__pyx_n_s_object_count;
static PyObject *__pyx_n_s_object_counts;
static PyObject *__pyx_n_s_object_indexes;
static PyObject *__pyx_n_s_object_moved;
static PyObject *__pyx_kp_s_oh_dear_visual_does_not_match;
static PyObject *__pyx_n_s_oj;
static PyObject *__pyx_n_s_open;
static PyObject *__pyx_n_s_orgsize;
static PyObject *__pyx_n_s_os;
static PyObject *__pyx_n_s_ou;
static PyObject *__pyx_n_s_overlay;
static PyObject *__pyx_n_s_p1;
static PyObject *__pyx_n_s_p2;
static PyObject *__pyx_n_s_pas;
static PyObject *__pyx_n_s_paste;
static PyObject *__pyx_n_s_pfd;
static PyObject *__pyx_n_s_pick;
static PyObject *__pyx_n_s_pix_rat_x;
static PyObject *__pyx_n_s_pix_rat_y;
static PyObject *__pyx_n_s_pixelformat;
static PyObject *__pyx_n_s_pixels;
static PyObject *__pyx_n_s_platform;
static PyObject *__pyx_n_s_pointer;
static PyObject *__pyx_n_s_pointerx;
static PyObject *__pyx_n_s_pointery;
static PyObject *__pyx_n_s_points;
static PyObject *__pyx_n_s_pop;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_prequad;
static PyObject *__pyx_n_s_prerender_quad;
static PyObject *__pyx_n_s_prerender_text;
static PyObject *__pyx_n_s_prerender_texturequad;
static PyObject *__pyx_n_s_prerenderedobj;
static PyObject *__pyx_n_s_pretext;
static PyObject *__pyx_n_s_pretextquad;
static PyObject *__pyx_n_s_previoev;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_printContext;
static PyObject *__pyx_n_s_pure_pil_alpha_to_color_v2;
static PyObject *__pyx_n_s_pyvips;
static PyObject *__pyx_n_s_quad;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_questhead;
static PyObject *__pyx_n_s_queue;
static PyObject *__pyx_n_s_queue_check;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_r_back;
static PyObject *__pyx_n_s_r_val;
static PyObject *__pyx_n_s_random;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rclick_events;
static PyObject *__pyx_n_s_real_index;
static PyObject *__pyx_n_s_real_value;
static PyObject *__pyx_n_s_realdata;
static PyObject *__pyx_n_s_realy;
static PyObject *__pyx_n_s_redraw;
static PyObject *__pyx_n_s_render;
static PyObject *__pyx_n_s_render_letter;
static PyObject *__pyx_n_s_render_quad;
static PyObject *__pyx_n_s_render_text;
static PyObject *__pyx_n_s_render_texture_quad;
static PyObject *__pyx_n_s_repeat;
static PyObject *__pyx_n_s_reset;
static PyObject *__pyx_n_s_reshape;
static PyObject *__pyx_n_s_resize;
static PyObject *__pyx_n_s_resize_2;
static PyObject *__pyx_n_s_restype;
static PyObject *__pyx_n_s_rgba2rgb;
static PyObject *__pyx_n_s_rise;
static PyObject *__pyx_n_s_rnd;
static PyObject *__pyx_n_s_rotate;
static PyObject *__pyx_n_s_round;
static PyObject *__pyx_n_s_rows;
static PyObject *__pyx_n_s_run;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_sav_vert;
static PyObject *__pyx_n_s_scale;
static PyObject *__pyx_n_s_scalex;
static PyObject *__pyx_n_s_scaley;
static PyObject *__pyx_n_s_screen;
static PyObject *__pyx_n_s_screen_res;
static PyObject *__pyx_n_s_screenx;
static PyObject *__pyx_n_s_screeny;
static PyObject *__pyx_n_s_self;
static PyObject *__pyx_n_s_self_2;
static PyObject *__pyx_n_s_sequential;
static PyObject *__pyx_n_s_serialization;
static PyObject *__pyx_n_s_serialization_current_object;
static PyObject *__pyx_n_s_serialize_to_obj;
static PyObject *__pyx_n_s_serialized_obj;
static PyObject *__pyx_n_s_set_background;
static PyObject *__pyx_n_s_set_centerpoint;
static PyObject *__pyx_n_s_set_char_size;
static PyObject *__pyx_n_s_set_eyepoint;
static PyObject *__pyx_n_s_set_mode;
static PyObject *__pyx_n_s_set_name;
static PyObject *__pyx_n_s_shaderprogram;
static PyObject *__pyx_n_s_shaders;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_shrink;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_size_x;
static PyObject *__pyx_n_s_size_y;
static PyObject *__pyx_n_s_sizeof;
static PyObject *__pyx_n_s_sizex;
static PyObject *__pyx_n_s_sizey;
static PyObject *__pyx_n_s_sleep;
static PyObject *__pyx_n_s_slope_error_new;
static PyObject *__pyx_n_s_spacing;
static PyObject *__pyx_n_s_spacing_addx;
static PyObject *__pyx_n_s_spacing_addy;
static PyObject *__pyx_n_s_spacing_y;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_sqrt;
static PyObject *__pyx_n_s_start_new_thread;
static PyObject *__pyx_n_s_startswith;
static PyObject *__pyx_n_s_state;
static PyObject *__pyx_n_s_strings;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_switch;
static PyObject *__pyx_n_s_sx;
static PyObject *__pyx_n_s_sy;
static PyObject *__pyx_n_s_sys;
static PyObject *__pyx_n_s_t;
static PyObject *__pyx_n_s_t1;
static PyObject *__pyx_n_s_t2;
static PyObject *__pyx_n_s_t3;
static PyObject *__pyx_n_s_t4;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tex_arrayn_translate;
static PyObject *__pyx_n_s_texcords1;
static PyObject *__pyx_n_s_texcords2;
static PyObject *__pyx_n_s_texcords3;
static PyObject *__pyx_n_s_texcords4;
static PyObject *__pyx_n_s_texid;
static PyObject *__pyx_n_s_texsize;
static PyObject *__pyx_n_s_text;
static PyObject *__pyx_n_s_textid;
static PyObject *__pyx_n_s_textn;
static PyObject *__pyx_n_s_textr;
static PyObject *__pyx_n_s_texture;
static PyObject *__pyx_n_s_texture_2;
static PyObject *__pyx_n_s_texture_cords_to_ratio;
static PyObject *__pyx_n_s_texture_data;
static PyObject *__pyx_n_s_texture_slots;
static PyObject *__pyx_n_s_textured;
static PyObject *__pyx_n_s_textures;
static PyObject *__pyx_n_s_th;
static PyObject *__pyx_n_s_thread;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_n_s_title;
static PyObject *__pyx_n_s_tk;
static PyObject *__pyx_n_s_tkAutoSpin;
static PyObject *__pyx_n_s_tkCreateContext;
static PyObject *__pyx_n_s_tkExpose;
static PyObject *__pyx_n_s_tkHandlePick;
static PyObject *__pyx_n_s_tkMakeCurrent;
static PyObject *__pyx_n_s_tkMap;
static PyObject *__pyx_n_s_tkPrint;
static PyObject *__pyx_n_s_tkRecordMouse;
static PyObject *__pyx_n_s_tkRedraw;
static PyObject *__pyx_n_s_tkResize;
static PyObject *__pyx_n_s_tkRotate;
static PyObject *__pyx_n_s_tkScale;
static PyObject *__pyx_n_s_tkSwapBuffers;
static PyObject *__pyx_n_s_tkTranslate;
static PyObject *__pyx_n_s_tkinter;
static PyObject *__pyx_n_s_tlist;
static PyObject *__pyx_n_s_to;
static PyObject *__pyx_n_s_total_updates;
static PyObject *__pyx_n_s_tquad;
static PyObject *__pyx_n_s_tr1;
static PyObject *__pyx_n_s_tr2;
static PyObject *__pyx_n_s_tu;
static PyObject *__pyx_n_s_tua;
static PyObject *__pyx_n_s_txn;
static PyObject *__pyx_n_s_txs;
static PyObject *__pyx_n_s_txtid;
static PyObject *__pyx_n_s_ubyte;
static PyObject *__pyx_n_s_uint8;
static PyObject *__pyx_n_s_unload;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_update_animation;
static PyObject *__pyx_n_s_update_idletasks;
static PyObject *__pyx_n_s_update_list;
static PyObject *__pyx_n_s_updates;
static PyObject *__pyx_n_s_use_texture;
static PyObject *__pyx_n_s_usecords;
static PyObject *__pyx_n_s_user32;
static PyObject *__pyx_n_s_user32_2;
static PyObject *__pyx_n_s_usingVIPSandShrink;
static PyObject *__pyx_kp_s_utf_8;
static PyObject *__pyx_n_s_util;
static PyObject *__pyx_n_s_v3distsq;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_vb_count;
static PyObject *__pyx_n_s_vbo;
static PyObject *__pyx_n_s_vbos;
static PyObject *__pyx_kp_s_version_330_core_layout_locatio;
static PyObject *__pyx_kp_s_version_330_core_layout_locatio_2;
static PyObject *__pyx_n_s_version_info;
static PyObject *__pyx_n_s_vert_lists;
static PyObject *__pyx_n_s_vertices;
static PyObject *__pyx_n_s_vipshome;
static PyObject *__pyx_n_s_vis;
static PyObject *__pyx_n_s_visual;
static PyObject *__pyx_n_s_visualid;
static PyObject *__pyx_n_s_vns;
static PyObject *__pyx_n_s_vxshader;
static PyObject *__pyx_n_s_w;
static PyObject *__pyx_n_s_w_2;
static PyObject *__pyx_n_s_wait;
static PyObject *__pyx_n_s_wglCreateContext;
static PyObject *__pyx_n_s_wglMakeCurrent;
static PyObject *__pyx_n_s_wid;
static PyObject *__pyx_n_s_width;
static PyObject *__pyx_n_s_win;
static PyObject *__pyx_n_s_win32;
static PyObject *__pyx_n_s_win_height;
static PyObject *__pyx_n_s_winfo;
static PyObject *__pyx_n_s_winfo_height;
static PyObject *__pyx_n_s_winfo_id;
static PyObject *__pyx_n_s_winfo_ismapped;
static PyObject *__pyx_n_s_winfo_screen;
static PyObject *__pyx_n_s_winfo_visualid;
static PyObject *__pyx_n_s_winfo_width;
static PyObject *__pyx_n_s_write_to_memory;
static PyObject *__pyx_n_s_wtf;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_x1;
static PyObject *__pyx_n_s_x11lib;
static PyObject *__pyx_n_s_x2;
static PyObject *__pyx_n_s_x_root;
static PyObject *__pyx_n_s_xcenter;
static PyObject *__pyx_n_s_xmouse;
static PyObject *__pyx_n_s_xr;
static PyObject *__pyx_n_s_xspin;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_y1;
static PyObject *__pyx_n_s_y2;
static PyObject *__pyx_n_s_y_root;
static PyObject *__pyx_n_s_ycenter;
static PyObject *__pyx_n_s_ymouse;
static PyObject *__pyx_n_s_yr;
static PyObject *__pyx_n_s_yspin;
static PyObject *__pyx_n_s_z;
static PyObject *__pyx_n_s_zcenter;
static PyObject *__pyx_n_s_zeros;
#endif
/* #### Code section: decls ### */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_naiveline(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x1, PyObject *__pyx_v_y1, PyObject *__pyx_v_x2, PyObject *__pyx_v_y2); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_2bresenham(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x1, PyObject *__pyx_v_y1, PyObject *__pyx_v_x2, PyObject *__pyx_v_y2); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_screen_res); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_2_resize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_4resize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_newsize, PyObject *__pyx_v_orgsize); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_6_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_8_texture_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_size); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_36__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_10_tex_arrayn_translate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_s, PyObject *__pyx_v_txs); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_38__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_12draw_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, CYTHON_UNUSED PyObject *__pyx_v_rotate, PyObject *__pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_40__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_14draw_quad_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_textr, PyObject *__pyx_v_NOENABLE); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_16draw_point(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_18draw_points(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_42__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_20draw_line(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_22draw_lines(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_44__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_24draw_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_font_texture, PyObject *__pyx_v_font_letters, PyObject *__pyx_v_text, PyObject *__pyx_v_config, CYTHON_UNUSED PyObject *__pyx_v_font_config); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_46__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_26draw_quad_texture_array(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_textr, PyObject *__pyx_v_textn); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_28add_animation(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_30update_animation(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_32del_animation(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_4change_color(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_object, CYTHON_UNUSED PyObject *__pyx_v_from_, CYTHON_UNUSED PyObject *__pyx_v_to_); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cvroot); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_2clear_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_4checkkeypress(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_6checkmclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_8checklclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_10checkrclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_12checkmotion(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_14add_event(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_EventType, PyObject *__pyx_v_Cords, PyObject *__pyx_v_EventOn, PyObject *__pyx_v_EventOff, PyObject *__pyx_v_EventDelay); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_16check(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev, CYTHON_UNUSED PyObject *__pyx_v_lfg, CYTHON_UNUSED PyObject *__pyx_v_lfm, CYTHON_UNUSED PyObject *__pyx_v_lfe); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_18_pas(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_check_all_b1_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_2check_all_brelase_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_4check_all_bpress_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_6create_event(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_launch_func, PyObject *__pyx_v_event_type); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_8check_event_button_1(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_event, PyObject *__pyx_v_c, PyObject *__pyx_v_func); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_10__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_12tkMap(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_evt); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_14printContext(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_extns); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_16tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_18tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_20tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_22tkExpose(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_evt); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_24tkResize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_evt); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_26_display(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_28initgl(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_30freecalc(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_32redraw(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_34wait(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_t); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_36free_calc_update(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_2tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_4tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_6tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_8tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_10tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6v3distsq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_48__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_master, PyObject *__pyx_v_cnf, PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_2tkRedraw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_50__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_master, PyObject *__pyx_v_cnf, PyObject *__pyx_v_kw); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_2help(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_4activate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_6basic_lighting(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_8initgl(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_10set_background(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_r, PyObject *__pyx_v_g, PyObject *__pyx_v_b); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_12set_centerpoint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_14set_eyepoint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_distance); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_16reset(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_18tkHandlePick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_20tkRecordMouse(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_22StartRotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_24tkScale(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_26do_AutoSpin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_28tkAutoSpin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_30tkRotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_32tkTranslate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_34tkRedraw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_36freecalc(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_named); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_38redraw(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_named); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_40tkExpose(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_42tkPrint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_file); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_screen_res); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_2prerender_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_4prerender_texturequad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_texture); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_6create_font(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_size, CYTHON_UNUSED PyObject *__pyx_v_base, PyObject *__pyx_v_texid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_8prerender_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_text, PyObject *__pyx_v_font_letters, PyObject *__pyx_v_spacing_addx, PyObject *__pyx_v_spacing_addy, PyObject *__pyx_v_color, PyObject *__pyx_v_font_texture); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_render(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_prerenderedobj); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_2render_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_D2Draw, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_letter, PyObject *__pyx_v_font, PyObject *__pyx_v_texid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_4render_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pretext); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_6render_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_prequad); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_8render_texture_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pretextquad, PyObject *__pyx_v_texsize, PyObject *__pyx_v_usecords); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_8load_texture_dp(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dp_data, PyObject *__pyx_v_n, PyObject *__pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10load_texture_repeat(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_texture_, PyObject *__pyx_v_n); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12usingVIPSandShrink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_14pure_pil_alpha_to_color_v2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_image, PyObject *__pyx_v_color); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_16rgba2rgb(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_18create_font(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_size, CYTHON_UNUSED PyObject *__pyx_v_base, PyObject *__pyx_v_texid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_20load_texture_sub(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_Texture_unit, PyObject *__pyx_v_New_Texture, CYTHON_UNUSED PyObject *__pyx_v_Offests, PyObject *__pyx_v_size, PyObject *__pyx_v_buffmanager); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_52__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_22load_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_texture_, PyObject *__pyx_v_nr, CYTHON_UNUSED PyObject *__pyx_v_repeat, PyObject *__pyx_v_RAW_DATA); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_24getsize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_26cfloat(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_28cfloat_array(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_list); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ___init__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_shaderprogram); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_OBJECT); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_54__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_30_tex_arrayn_translate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n, PyObject *__pyx_v_s, PyObject *__pyx_v_txs); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_32_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_screenx, PyObject *__pyx_v_screeny); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_34_texture_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_size); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_get_shader(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_2__docs__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_4serialize_to_obj(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_unload, CYTHON_UNUSED PyObject *__pyx_v_eventmanager); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_6_load_scene(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_serialized_obj, CYTHON_UNUSED PyObject *__pyx_v_overlay); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_8_is_serialized(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_56__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_10create_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_BOX_START, PyObject *__pyx_v_BOX_SIZE, PyObject *__pyx_v_COLOR, PyObject *__pyx_v_TEXTUREID); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_12get_objectindexes(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_14move(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, CYTHON_UNUSED PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_16use_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_txtid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_18create_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_font, PyObject *__pyx_v_letter, PyObject *__pyx_v_color, PyObject *__pyx_v_texid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_20draw_text(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_22move_up(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_24move_down(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_26get_vertices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_28add_textureupdate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_Texture_unit, PyObject *__pyx_v_Imagenumpy, PyObject *__pyx_v_width, PyObject *__pyx_v_height, PyObject *__pyx_v_texture_data, PyObject *__pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_30update(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_32clear(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_34get_pos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_36get_color(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_38get_texid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_40edit_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_font, PyObject *__pyx_v_letter); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_58__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_42edit_tpos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newtpos); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_60__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_44edit_color(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newcolor); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_46delete_obj(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_62__defaults__(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_48edit_pos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newpos, PyObject *__pyx_v_size, PyObject *__pyx_v_letter); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_50edit_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_txtid); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_52get_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_54bind_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_56switch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_vbo); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_58add_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_60compile(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_62queue_check(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_64queue(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_66__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_screenx, PyObject *__pyx_v_screeny); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_68set_mode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_mode); /* proto */
static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_70draw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_1_;
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_0_1;
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_0_01;
static PyObject *__pyx_float_10_0;
static PyObject *__pyx_float_30_0;
static PyObject *__pyx_float_0_001;
static PyObject *__pyx_float_1000_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_9;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_12;
static PyObject *__pyx_int_13;
static PyObject *__pyx_int_14;
static PyObject *__pyx_int_15;
static PyObject *__pyx_int_16;
static PyObject *__pyx_int_17;
static PyObject *__pyx_int_18;
static PyObject *__pyx_int_19;
static PyObject *__pyx_int_20;
static PyObject *__pyx_int_21;
static PyObject *__pyx_int_23;
static PyObject *__pyx_int_24;
static PyObject *__pyx_int_25;
static PyObject *__pyx_int_26;
static PyObject *__pyx_int_27;
static PyObject *__pyx_int_28;
static PyObject *__pyx_int_29;
static PyObject *__pyx_int_30;
static PyObject *__pyx_int_31;
static PyObject *__pyx_int_32;
static PyObject *__pyx_int_33;
static PyObject *__pyx_int_34;
static PyObject *__pyx_int_35;
static PyObject *__pyx_int_36;
static PyObject *__pyx_int_37;
static PyObject *__pyx_int_38;
static PyObject *__pyx_int_39;
static PyObject *__pyx_int_40;
static PyObject *__pyx_int_64;
static PyObject *__pyx_int_255;
static PyObject *__pyx_int_256;
static PyObject *__pyx_int_1000;
static PyObject *__pyx_int_1080;
static PyObject *__pyx_int_1920;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_neg_10;
#endif
#if !CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_slice__18;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__73;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__85;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_tuple__98;
static PyObject *__pyx_tuple__100;
static PyObject *__pyx_tuple__102;
static PyObject *__pyx_tuple__104;
static PyObject *__pyx_tuple__106;
static PyObject *__pyx_tuple__108;
static PyObject *__pyx_tuple__110;
static PyObject *__pyx_tuple__112;
static PyObject *__pyx_tuple__114;
static PyObject *__pyx_tuple__116;
static PyObject *__pyx_tuple__118;
static PyObject *__pyx_tuple__120;
static PyObject *__pyx_tuple__121;
static PyObject *__pyx_tuple__122;
static PyObject *__pyx_tuple__124;
static PyObject *__pyx_tuple__126;
static PyObject *__pyx_tuple__128;
static PyObject *__pyx_tuple__129;
static PyObject *__pyx_tuple__130;
static PyObject *__pyx_tuple__132;
static PyObject *__pyx_tuple__134;
static PyObject *__pyx_tuple__136;
static PyObject *__pyx_tuple__138;
static PyObject *__pyx_tuple__140;
static PyObject *__pyx_tuple__142;
static PyObject *__pyx_tuple__144;
static PyObject *__pyx_tuple__146;
static PyObject *__pyx_tuple__148;
static PyObject *__pyx_tuple__150;
static PyObject *__pyx_tuple__152;
static PyObject *__pyx_tuple__154;
static PyObject *__pyx_tuple__156;
static PyObject *__pyx_tuple__158;
static PyObject *__pyx_tuple__160;
static PyObject *__pyx_tuple__162;
static PyObject *__pyx_tuple__164;
static PyObject *__pyx_tuple__166;
static PyObject *__pyx_tuple__168;
static PyObject *__pyx_tuple__170;
static PyObject *__pyx_tuple__172;
static PyObject *__pyx_tuple__174;
static PyObject *__pyx_tuple__176;
static PyObject *__pyx_tuple__178;
static PyObject *__pyx_tuple__180;
static PyObject *__pyx_tuple__182;
static PyObject *__pyx_tuple__184;
static PyObject *__pyx_tuple__186;
static PyObject *__pyx_tuple__188;
static PyObject *__pyx_tuple__190;
static PyObject *__pyx_tuple__192;
static PyObject *__pyx_tuple__194;
static PyObject *__pyx_tuple__196;
static PyObject *__pyx_tuple__198;
static PyObject *__pyx_tuple__200;
static PyObject *__pyx_tuple__202;
static PyObject *__pyx_tuple__204;
static PyObject *__pyx_tuple__206;
static PyObject *__pyx_tuple__208;
static PyObject *__pyx_tuple__210;
static PyObject *__pyx_tuple__211;
static PyObject *__pyx_tuple__213;
static PyObject *__pyx_tuple__214;
static PyObject *__pyx_tuple__216;
static PyObject *__pyx_tuple__218;
static PyObject *__pyx_tuple__219;
static PyObject *__pyx_tuple__221;
static PyObject *__pyx_tuple__223;
static PyObject *__pyx_tuple__225;
static PyObject *__pyx_tuple__226;
static PyObject *__pyx_tuple__228;
static PyObject *__pyx_tuple__229;
static PyObject *__pyx_tuple__231;
static PyObject *__pyx_tuple__233;
static PyObject *__pyx_tuple__235;
static PyObject *__pyx_tuple__236;
static PyObject *__pyx_tuple__239;
static PyObject *__pyx_tuple__241;
static PyObject *__pyx_tuple__242;
static PyObject *__pyx_tuple__244;
static PyObject *__pyx_tuple__246;
static PyObject *__pyx_tuple__248;
static PyObject *__pyx_tuple__250;
static PyObject *__pyx_tuple__252;
static PyObject *__pyx_tuple__254;
static PyObject *__pyx_tuple__256;
static PyObject *__pyx_tuple__258;
static PyObject *__pyx_tuple__259;
static PyObject *__pyx_tuple__261;
static PyObject *__pyx_tuple__262;
static PyObject *__pyx_tuple__264;
static PyObject *__pyx_tuple__266;
static PyObject *__pyx_tuple__268;
static PyObject *__pyx_tuple__270;
static PyObject *__pyx_tuple__272;
static PyObject *__pyx_tuple__274;
static PyObject *__pyx_tuple__276;
static PyObject *__pyx_tuple__278;
static PyObject *__pyx_tuple__280;
static PyObject *__pyx_tuple__282;
static PyObject *__pyx_tuple__284;
static PyObject *__pyx_tuple__286;
static PyObject *__pyx_tuple__288;
static PyObject *__pyx_tuple__290;
static PyObject *__pyx_tuple__292;
static PyObject *__pyx_tuple__294;
static PyObject *__pyx_tuple__296;
static PyObject *__pyx_tuple__298;
static PyObject *__pyx_tuple__300;
static PyObject *__pyx_tuple__302;
static PyObject *__pyx_tuple__304;
static PyObject *__pyx_tuple__306;
static PyObject *__pyx_tuple__307;
static PyObject *__pyx_tuple__309;
static PyObject *__pyx_tuple__311;
static PyObject *__pyx_tuple__313;
static PyObject *__pyx_tuple__315;
static PyObject *__pyx_tuple__319;
static PyObject *__pyx_tuple__321;
static PyObject *__pyx_tuple__323;
static PyObject *__pyx_codeobj__22;
static PyObject *__pyx_codeobj__24;
static PyObject *__pyx_codeobj__26;
static PyObject *__pyx_codeobj__28;
static PyObject *__pyx_codeobj__30;
static PyObject *__pyx_codeobj__32;
static PyObject *__pyx_codeobj__34;
static PyObject *__pyx_codeobj__36;
static PyObject *__pyx_codeobj__38;
static PyObject *__pyx_codeobj__40;
static PyObject *__pyx_codeobj__42;
static PyObject *__pyx_codeobj__44;
static PyObject *__pyx_codeobj__46;
static PyObject *__pyx_codeobj__48;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__54;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__56;
static PyObject *__pyx_codeobj__58;
static PyObject *__pyx_codeobj__60;
static PyObject *__pyx_codeobj__62;
static PyObject *__pyx_codeobj__64;
static PyObject *__pyx_codeobj__66;
static PyObject *__pyx_codeobj__68;
static PyObject *__pyx_codeobj__70;
static PyObject *__pyx_codeobj__72;
static PyObject *__pyx_codeobj__74;
static PyObject *__pyx_codeobj__77;
static PyObject *__pyx_codeobj__79;
static PyObject *__pyx_codeobj__82;
static PyObject *__pyx_codeobj__84;
static PyObject *__pyx_codeobj__86;
static PyObject *__pyx_codeobj__88;
static PyObject *__pyx_codeobj__90;
static PyObject *__pyx_codeobj__92;
static PyObject *__pyx_codeobj__94;
static PyObject *__pyx_codeobj__96;
static PyObject *__pyx_codeobj__99;
static PyObject *__pyx_codeobj__101;
static PyObject *__pyx_codeobj__103;
static PyObject *__pyx_codeobj__105;
static PyObject *__pyx_codeobj__107;
static PyObject *__pyx_codeobj__109;
static PyObject *__pyx_codeobj__111;
static PyObject *__pyx_codeobj__113;
static PyObject *__pyx_codeobj__115;
static PyObject *__pyx_codeobj__117;
static PyObject *__pyx_codeobj__119;
static PyObject *__pyx_codeobj__123;
static PyObject *__pyx_codeobj__125;
static PyObject *__pyx_codeobj__127;
static PyObject *__pyx_codeobj__131;
static PyObject *__pyx_codeobj__133;
static PyObject *__pyx_codeobj__135;
static PyObject *__pyx_codeobj__137;
static PyObject *__pyx_codeobj__139;
static PyObject *__pyx_codeobj__141;
static PyObject *__pyx_codeobj__143;
static PyObject *__pyx_codeobj__145;
static PyObject *__pyx_codeobj__147;
static PyObject *__pyx_codeobj__149;
static PyObject *__pyx_codeobj__151;
static PyObject *__pyx_codeobj__153;
static PyObject *__pyx_codeobj__155;
static PyObject *__pyx_codeobj__157;
static PyObject *__pyx_codeobj__159;
static PyObject *__pyx_codeobj__161;
static PyObject *__pyx_codeobj__163;
static PyObject *__pyx_codeobj__165;
static PyObject *__pyx_codeobj__167;
static PyObject *__pyx_codeobj__169;
static PyObject *__pyx_codeobj__171;
static PyObject *__pyx_codeobj__173;
static PyObject *__pyx_codeobj__175;
static PyObject *__pyx_codeobj__177;
static PyObject *__pyx_codeobj__179;
static PyObject *__pyx_codeobj__181;
static PyObject *__pyx_codeobj__183;
static PyObject *__pyx_codeobj__185;
static PyObject *__pyx_codeobj__187;
static PyObject *__pyx_codeobj__189;
static PyObject *__pyx_codeobj__191;
static PyObject *__pyx_codeobj__193;
static PyObject *__pyx_codeobj__195;
static PyObject *__pyx_codeobj__197;
static PyObject *__pyx_codeobj__199;
static PyObject *__pyx_codeobj__201;
static PyObject *__pyx_codeobj__203;
static PyObject *__pyx_codeobj__205;
static PyObject *__pyx_codeobj__209;
static PyObject *__pyx_codeobj__212;
static PyObject *__pyx_codeobj__215;
static PyObject *__pyx_codeobj__217;
static PyObject *__pyx_codeobj__220;
static PyObject *__pyx_codeobj__222;
static PyObject *__pyx_codeobj__224;
static PyObject *__pyx_codeobj__227;
static PyObject *__pyx_codeobj__230;
static PyObject *__pyx_codeobj__232;
static PyObject *__pyx_codeobj__234;
static PyObject *__pyx_codeobj__237;
static PyObject *__pyx_codeobj__238;
static PyObject *__pyx_codeobj__240;
static PyObject *__pyx_codeobj__243;
static PyObject *__pyx_codeobj__245;
static PyObject *__pyx_codeobj__247;
static PyObject *__pyx_codeobj__249;
static PyObject *__pyx_codeobj__251;
static PyObject *__pyx_codeobj__253;
static PyObject *__pyx_codeobj__255;
static PyObject *__pyx_codeobj__257;
static PyObject *__pyx_codeobj__260;
static PyObject *__pyx_codeobj__263;
static PyObject *__pyx_codeobj__265;
static PyObject *__pyx_codeobj__267;
static PyObject *__pyx_codeobj__269;
static PyObject *__pyx_codeobj__271;
static PyObject *__pyx_codeobj__273;
static PyObject *__pyx_codeobj__275;
static PyObject *__pyx_codeobj__277;
static PyObject *__pyx_codeobj__279;
static PyObject *__pyx_codeobj__281;
static PyObject *__pyx_codeobj__283;
static PyObject *__pyx_codeobj__285;
static PyObject *__pyx_codeobj__287;
static PyObject *__pyx_codeobj__289;
static PyObject *__pyx_codeobj__291;
static PyObject *__pyx_codeobj__293;
static PyObject *__pyx_codeobj__295;
static PyObject *__pyx_codeobj__297;
static PyObject *__pyx_codeobj__299;
static PyObject *__pyx_codeobj__301;
static PyObject *__pyx_codeobj__303;
static PyObject *__pyx_codeobj__305;
static PyObject *__pyx_codeobj__308;
static PyObject *__pyx_codeobj__310;
static PyObject *__pyx_codeobj__312;
static PyObject *__pyx_codeobj__314;
static PyObject *__pyx_codeobj__316;
static PyObject *__pyx_codeobj__317;
static PyObject *__pyx_codeobj__318;
static PyObject *__pyx_codeobj__320;
static PyObject *__pyx_codeobj__322;
static PyObject *__pyx_codeobj__324;
#endif
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  PyObject *__pyx_n_s_AssertionError;
  PyObject *__pyx_n_s_B1;
  PyObject *__pyx_kp_s_B1_Motion;
  PyObject *__pyx_n_s_B2;
  PyObject *__pyx_kp_s_B2_Motion;
  PyObject *__pyx_n_s_B3;
  PyObject *__pyx_kp_s_B3_Motion;
  PyObject *__pyx_n_s_BOOL;
  PyObject *__pyx_n_s_BOX_SIZE;
  PyObject *__pyx_n_s_BOX_START;
  PyObject *__pyx_n_s_BP;
  PyObject *__pyx_n_s_BR;
  PyObject *__pyx_kp_s_Before;
  PyObject *__pyx_kp_s_ButtonRelease_2;
  PyObject *__pyx_kp_s_Button_1;
  PyObject *__pyx_kp_s_Button_1_2;
  PyObject *__pyx_kp_s_Button_1_Translate_Button_2_Rota;
  PyObject *__pyx_kp_s_Button_2;
  PyObject *__pyx_kp_s_Button_2_2;
  PyObject *__pyx_kp_s_Button_3;
  PyObject *__pyx_kp_s_Button_3_2;
  PyObject *__pyx_n_s_CFUNCTYPE;
  PyObject *__pyx_n_s_COLOR;
  PyObject *__pyx_n_s_ChoosePixelFormat;
  PyObject *__pyx_n_s_Colormap;
  PyObject *__pyx_kp_s_Common_code_for_windows_x11;
  PyObject *__pyx_kp_s_Configure;
  PyObject *__pyx_n_s_Cords;
  PyObject *__pyx_kp_s_Create;
  PyObject *__pyx_n_s_D2DEvents;
  PyObject *__pyx_n_s_D2DEvents___init;
  PyObject *__pyx_n_s_D2DEvents__pas;
  PyObject *__pyx_n_s_D2DEvents_add_event;
  PyObject *__pyx_n_s_D2DEvents_check;
  PyObject *__pyx_n_s_D2DEvents_checkkeypress;
  PyObject *__pyx_n_s_D2DEvents_checklclick;
  PyObject *__pyx_n_s_D2DEvents_checkmclick;
  PyObject *__pyx_n_s_D2DEvents_checkmotion;
  PyObject *__pyx_n_s_D2DEvents_checkrclick;
  PyObject *__pyx_n_s_D2DEvents_clear_events;
  PyObject *__pyx_n_s_D2DRENDER;
  PyObject *__pyx_n_s_D2DRENDER_render;
  PyObject *__pyx_n_s_D2DRENDER_render_letter;
  PyObject *__pyx_n_s_D2DRENDER_render_quad;
  PyObject *__pyx_n_s_D2DRENDER_render_text;
  PyObject *__pyx_n_s_D2DRENDER_render_texture_quad;
  PyObject *__pyx_n_s_D2Dprerender;
  PyObject *__pyx_n_s_D2Dprerender___init;
  PyObject *__pyx_n_s_D2Dprerender_create_font;
  PyObject *__pyx_n_s_D2Dprerender_prerender_quad;
  PyObject *__pyx_n_s_D2Dprerender_prerender_text;
  PyObject *__pyx_n_s_D2Dprerender_prerender_texturequ;
  PyObject *__pyx_n_s_D2Draw;
  PyObject *__pyx_n_s_D2Draw___init;
  PyObject *__pyx_n_s_D2Draw__cords_to_ratio;
  PyObject *__pyx_n_s_D2Draw__resize;
  PyObject *__pyx_n_s_D2Draw__tex_arrayn_translate;
  PyObject *__pyx_n_s_D2Draw__texture_cords_to_ratio;
  PyObject *__pyx_n_s_D2Draw_add_animation;
  PyObject *__pyx_n_s_D2Draw_del_animation;
  PyObject *__pyx_n_s_D2Draw_draw_line;
  PyObject *__pyx_n_s_D2Draw_draw_lines;
  PyObject *__pyx_n_s_D2Draw_draw_point;
  PyObject *__pyx_n_s_D2Draw_draw_points;
  PyObject *__pyx_n_s_D2Draw_draw_quad;
  PyObject *__pyx_n_s_D2Draw_draw_quad_texture;
  PyObject *__pyx_n_s_D2Draw_draw_quad_texture_array;
  PyObject *__pyx_n_s_D2Draw_draw_text;
  PyObject *__pyx_n_s_D2Draw_resize;
  PyObject *__pyx_n_s_D2Draw_update_animation;
  PyObject *__pyx_n_s_DRAWMODELOC;
  PyObject *__pyx_n_s_DRAW_MODE;
  PyObject *__pyx_kp_s_D_vips_dev_8_9_bin;
  PyObject *__pyx_n_s_Dialog;
  PyObject *__pyx_n_s_Display;
  PyObject *__pyx_kp_s_Do_something_to_create_this_obje;
  PyObject *__pyx_n_s_Done;
  PyObject *__pyx_kp_s_Done_making_a_first_context;
  PyObject *__pyx_n_s_Drago2Dengine___versions___win32;
  PyObject *__pyx_kp_s_Drago2Dengine_py;
  PyObject *__pyx_n_s_DragoObject;
  PyObject *__pyx_n_s_DragoObject___docs;
  PyObject *__pyx_n_s_DragoObject___init;
  PyObject *__pyx_n_s_DragoObject__is_serialized;
  PyObject *__pyx_n_s_DragoObject__load_scene;
  PyObject *__pyx_n_s_DragoObject_add_buffer;
  PyObject *__pyx_n_s_DragoObject_add_textureupdate;
  PyObject *__pyx_n_s_DragoObject_bind_buffer;
  PyObject *__pyx_n_s_DragoObject_clear;
  PyObject *__pyx_n_s_DragoObject_compile;
  PyObject *__pyx_n_s_DragoObject_create_letter;
  PyObject *__pyx_n_s_DragoObject_create_quad;
  PyObject *__pyx_n_s_DragoObject_delete_obj;
  PyObject *__pyx_n_s_DragoObject_draw;
  PyObject *__pyx_n_s_DragoObject_draw_text;
  PyObject *__pyx_n_s_DragoObject_edit_color;
  PyObject *__pyx_n_s_DragoObject_edit_letter;
  PyObject *__pyx_n_s_DragoObject_edit_pos;
  PyObject *__pyx_n_s_DragoObject_edit_texture;
  PyObject *__pyx_n_s_DragoObject_edit_tpos;
  PyObject *__pyx_n_s_DragoObject_get_buffer;
  PyObject *__pyx_n_s_DragoObject_get_color;
  PyObject *__pyx_n_s_DragoObject_get_objectindexes;
  PyObject *__pyx_n_s_DragoObject_get_pos;
  PyObject *__pyx_n_s_DragoObject_get_shader;
  PyObject *__pyx_n_s_DragoObject_get_texid;
  PyObject *__pyx_n_s_DragoObject_get_vertices;
  PyObject *__pyx_n_s_DragoObject_move;
  PyObject *__pyx_n_s_DragoObject_move_down;
  PyObject *__pyx_n_s_DragoObject_move_up;
  PyObject *__pyx_n_s_DragoObject_queue;
  PyObject *__pyx_n_s_DragoObject_queue_check;
  PyObject *__pyx_n_s_DragoObject_serialize_to_obj;
  PyObject *__pyx_n_s_DragoObject_set_mode;
  PyObject *__pyx_n_s_DragoObject_switch;
  PyObject *__pyx_n_s_DragoObject_update;
  PyObject *__pyx_n_s_DragoObject_use_texture;
  PyObject *__pyx_n_s_EventDelay;
  PyObject *__pyx_n_s_EventOff;
  PyObject *__pyx_n_s_EventOn;
  PyObject *__pyx_n_s_EventType;
  PyObject *__pyx_kp_s_Expose;
  PyObject *__pyx_kp_s_Extension_list;
  PyObject *__pyx_n_s_FRAGMENT_SHADER;
  PyObject *__pyx_n_s_FT_LOAD_FORCE_AUTOHINT;
  PyObject *__pyx_n_s_FT_LOAD_RENDER;
  PyObject *__pyx_n_s_Face;
  PyObject *__pyx_n_s_Frame;
  PyObject *__pyx_n_s_GL;
  PyObject *__pyx_n_s_GLU;
  PyObject *__pyx_n_s_GLUT;
  PyObject *__pyx_n_s_GLX;
  PyObject *__pyx_n_s_GLX_BLUE_SIZE;
  PyObject *__pyx_n_s_GLX_DEPTH_SIZE;
  PyObject *__pyx_n_s_GLX_DOUBLEBUFFER;
  PyObject *__pyx_n_s_GLX_DRAWABLE_TYPE;
  PyObject *__pyx_n_s_GLX_GREEN_SIZE;
  PyObject *__pyx_n_s_GLX_RED_SIZE;
  PyObject *__pyx_n_s_GLX_RENDER_TYPE;
  PyObject *__pyx_n_s_GLX_RGBA;
  PyObject *__pyx_n_s_GLX_RGBA_BIT;
  PyObject *__pyx_n_s_GLX_RGBA_TYPE;
  PyObject *__pyx_n_s_GLX_WINDOW_BIT;
  PyObject *__pyx_n_s_GLX_X_RENDERABLE;
  PyObject *__pyx_kp_s_GLX_version_d_d;
  PyObject *__pyx_n_s_GL_ALPHA;
  PyObject *__pyx_n_s_GL_ARRAY_BUFFER;
  PyObject *__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL;
  PyObject *__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE;
  PyObject *__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT;
  PyObject *__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2;
  PyObject *__pyx_n_s_GL_CONTEXT_PROFILE_MASK;
  PyObject *__pyx_n_s_GL_DEPTH_TEST;
  PyObject *__pyx_n_s_GL_DYNAMIC_DRAW;
  PyObject *__pyx_n_s_GL_EXTENSIONS;
  PyObject *__pyx_n_s_GL_FALSE;
  PyObject *__pyx_n_s_GL_FLOAT;
  PyObject *__pyx_n_s_GL_FRAGMENT_SHADER;
  PyObject *__pyx_n_s_GL_LESS;
  PyObject *__pyx_n_s_GL_LIGHT0;
  PyObject *__pyx_n_s_GL_LIGHTING;
  PyObject *__pyx_n_s_GL_LINEAR;
  PyObject *__pyx_kp_s_GL_MAJOR_VERSION;
  PyObject *__pyx_n_s_GL_MAJOR_VERSION_2;
  PyObject *__pyx_n_s_GL_MATRIX_MODE;
  PyObject *__pyx_kp_s_GL_MINOR_VERSION;
  PyObject *__pyx_n_s_GL_MINOR_VERSION_2;
  PyObject *__pyx_n_s_GL_MODELVIEW;
  PyObject *__pyx_n_s_GL_NEAREST;
  PyObject *__pyx_n_s_GL_POINTS;
  PyObject *__pyx_n_s_GL_POSITION;
  PyObject *__pyx_n_s_GL_PROJECTION;
  PyObject *__pyx_n_s_GL_QUADS;
  PyObject *__pyx_kp_s_GL_RENDERER;
  PyObject *__pyx_n_s_GL_RENDERER_2;
  PyObject *__pyx_n_s_GL_REPEAT;
  PyObject *__pyx_n_s_GL_RGB;
  PyObject *__pyx_n_s_GL_RGBA;
  PyObject *__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION;
  PyObject *__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2;
  PyObject *__pyx_n_s_GL_TEXTURE_2D;
  PyObject *__pyx_n_s_GL_TEXTURE_MAG_FILTER;
  PyObject *__pyx_n_s_GL_TEXTURE_MIN_FILTER;
  PyObject *__pyx_n_s_GL_TEXTURE_WRAP_S;
  PyObject *__pyx_n_s_GL_TEXTURE_WRAP_T;
  PyObject *__pyx_n_s_GL_TRUE;
  PyObject *__pyx_n_s_GL_UNPACK_ALIGNMENT;
  PyObject *__pyx_n_s_GL_UNSIGNED_BYTE;
  PyObject *__pyx_kp_s_GL_VENDOR;
  PyObject *__pyx_n_s_GL_VENDOR_2;
  PyObject *__pyx_kp_s_GL_VERSION;
  PyObject *__pyx_n_s_GL_VERSION_2;
  PyObject *__pyx_n_s_GL_VERTEX_ARRAY;
  PyObject *__pyx_n_s_GL_VERTEX_SHADER;
  PyObject *__pyx_n_s_GLint;
  PyObject *__pyx_n_s_GetDC;
  PyObject *__pyx_kp_s_Got_a_matching_visual_index_d_d;
  PyObject *__pyx_n_s_HDC;
  PyObject *__pyx_n_s_Hover;
  PyObject *__pyx_n_s_Image;
  PyObject *__pyx_n_s_Imagenumpy;
  PyObject *__pyx_kp_s_Is_Direct;
  PyObject *__pyx_n_s_KeyPress;
  PyObject *__pyx_kp_s_KeyPress_2;
  PyObject *__pyx_n_s_LeftClick;
  PyObject *__pyx_n_s_LoadLibrary;
  PyObject *__pyx_n_s_MN;
  PyObject *__pyx_kp_s_Map;
  PyObject *__pyx_n_s_MiddleClick;
  PyObject *__pyx_n_s_Motion;
  PyObject *__pyx_kp_s_Motion_2;
  PyObject *__pyx_n_s_MouseHover;
  PyObject *__pyx_n_s_MouseLC;
  PyObject *__pyx_n_s_MouseMC;
  PyObject *__pyx_n_s_MouseRC;
  PyObject *__pyx_n_s_NEWLINE;
  PyObject *__pyx_n_s_NOENABLE;
  PyObject *__pyx_n_s_New_Texture;
  PyObject *__pyx_n_s_NotImplementedError;
  PyObject *__pyx_kp_s_Number_of_FBconfigs;
  PyObject *__pyx_kp_s_Number_of_extensions;
  PyObject *__pyx_n_s_OBJECT;
  PyObject *__pyx_n_s_Offests;
  PyObject *__pyx_n_s_Ok;
  PyObject *__pyx_kp_s_Old_context_errors_arose;
  PyObject *__pyx_n_s_OnKey;
  PyObject *__pyx_n_s_OpenGL;
  PyObject *__pyx_n_s_OpenGLFrame;
  PyObject *__pyx_n_s_OpenGLFrame__context;
  PyObject *__pyx_n_s_OpenGLFrame__window;
  PyObject *__pyx_n_s_OpenGLFrame_tkCreateContext;
  PyObject *__pyx_n_s_OpenGLFrame_tkMakeCurrent;
  PyObject *__pyx_n_s_OpenGLFrame_tkSwapBuffers;
  PyObject *__pyx_n_s_OpenGL_GL;
  PyObject *__pyx_n_s_OpenGL_GL_shaders;
  PyObject *__pyx_n_s_OpenGL_WGL;
  PyObject *__pyx_n_s_OpenGL_raw_GLX__types;
  PyObject *__pyx_n_s_OpenGL_raw__GLX;
  PyObject *__pyx_n_s_Opengl;
  PyObject *__pyx_n_s_Opengl_StartRotate;
  PyObject *__pyx_n_s_Opengl___init;
  PyObject *__pyx_n_s_Opengl_activate;
  PyObject *__pyx_n_s_Opengl_basic_lighting;
  PyObject *__pyx_n_s_Opengl_do_AutoSpin;
  PyObject *__pyx_n_s_Opengl_freecalc;
  PyObject *__pyx_n_s_Opengl_help;
  PyObject *__pyx_n_s_Opengl_initgl;
  PyObject *__pyx_n_s_Opengl_redraw;
  PyObject *__pyx_n_s_Opengl_reset;
  PyObject *__pyx_n_s_Opengl_set_background;
  PyObject *__pyx_n_s_Opengl_set_centerpoint;
  PyObject *__pyx_n_s_Opengl_set_eyepoint;
  PyObject *__pyx_n_s_Opengl_tkAutoSpin;
  PyObject *__pyx_n_s_Opengl_tkExpose;
  PyObject *__pyx_n_s_Opengl_tkHandlePick;
  PyObject *__pyx_n_s_Opengl_tkPrint;
  PyObject *__pyx_n_s_Opengl_tkRecordMouse;
  PyObject *__pyx_n_s_Opengl_tkRedraw;
  PyObject *__pyx_n_s_Opengl_tkRotate;
  PyObject *__pyx_n_s_Opengl_tkScale;
  PyObject *__pyx_n_s_Opengl_tkTranslate;
  PyObject *__pyx_n_s_PATH;
  PyObject *__pyx_n_s_PFD_DOUBLEBUFFER;
  PyObject *__pyx_n_s_PFD_DRAW_TO_WINDOW;
  PyObject *__pyx_n_s_PFD_MAIN_PLANE;
  PyObject *__pyx_n_s_PFD_SUPPORT_OPENGL;
  PyObject *__pyx_n_s_PFD_TYPE_RGBA;
  PyObject *__pyx_n_s_PIL;
  PyObject *__pyx_n_s_PIXELFORMATDESCRIPTOR;
  PyObject *__pyx_n_s_POINTER;
  PyObject *__pyx_n_s_PRERENDER_VBO;
  PyObject *__pyx_n_s_PRERENDER_VBO___init;
  PyObject *__pyx_n_s_RAW_DATA;
  PyObject *__pyx_n_s_RENDER_VBO;
  PyObject *__pyx_n_s_RENDER_VBO___init;
  PyObject *__pyx_n_s_RGB;
  PyObject *__pyx_n_s_RawOpengl;
  PyObject *__pyx_n_s_RawOpengl___init;
  PyObject *__pyx_n_s_RawOpengl_tkRedraw;
  PyObject *__pyx_n_s_RightClick;
  PyObject *__pyx_n_s_SHADER;
  PyObject *__pyx_n_s_SHADER___init;
  PyObject *__pyx_kp_s_Screen_is;
  PyObject *__pyx_n_s_SetPixelFormat;
  PyObject *__pyx_kp_s_Shift_Button_1;
  PyObject *__pyx_n_s_Spacing_add;
  PyObject *__pyx_n_s_StartRotate;
  PyObject *__pyx_n_s_SwapBuffers;
  PyObject *__pyx_n_s_TAB;
  PyObject *__pyx_n_s_TEXTUREID;
  PyObject *__pyx_n_s_TEXTURE_DISPLAY_METHOD;
  PyObject *__pyx_n_s_TXC;
  PyObject *__pyx_n_s_TXTARRAY;
  PyObject *__pyx_n_s_Texture_unit;
  PyObject *__pyx_n_s_Tkinter;
  PyObject *__pyx_kp_s_Tkinter_bindings_for_an_Opengl;
  PyObject *__pyx_kp_s_Uniform_Layout_Matrix_manipulat;
  PyObject *__pyx_n_s_VBO;
  PyObject *__pyx_n_s_VBO_OBJ;
  PyObject *__pyx_n_s_VBO_OBJ___init;
  PyObject *__pyx_n_s_VBO___init;
  PyObject *__pyx_n_s_VERTEX_SHADER;
  PyObject *__pyx_kp_s_Viewer_help;
  PyObject *__pyx_kp_s_Widget_without_any_sophisticated;
  PyObject *__pyx_n_s_WinDLL;
  PyObject *__pyx_n_s_X11;
  PyObject *__pyx_n_s_XDefaultScreen;
  PyObject *__pyx_n_s_XOpenDisplay;
  PyObject *__pyx_n_s_Z;
  PyObject *__pyx_kp_s__10;
  PyObject *__pyx_kp_s__13;
  PyObject *__pyx_kp_s__207;
  PyObject *__pyx_kp_s__8;
  PyObject *__pyx_n_s__80;
  PyObject *__pyx_kp_s__9;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_n_s_a_val;
  PyObject *__pyx_n_s_abcdefgh;
  PyObject *__pyx_n_s_access;
  PyObject *__pyx_n_s_activate;
  PyObject *__pyx_n_s_add_animation;
  PyObject *__pyx_n_s_add_boldnext;
  PyObject *__pyx_n_s_add_buffer;
  PyObject *__pyx_n_s_add_event;
  PyObject *__pyx_n_s_add_textureupdate;
  PyObject *__pyx_n_s_after;
  PyObject *__pyx_n_s_after_cancel;
  PyObject *__pyx_n_s_all;
  PyObject *__pyx_n_s_alpha;
  PyObject *__pyx_n_s_animate;
  PyObject *__pyx_n_s_append;
  PyObject *__pyx_n_s_args;
  PyObject *__pyx_n_s_argtypes;
  PyObject *__pyx_n_s_array;
  PyObject *__pyx_n_s_ascender;
  PyObject *__pyx_n_s_att;
  PyObject *__pyx_n_s_autospin;
  PyObject *__pyx_n_s_autospin_allowed;
  PyObject *__pyx_n_s_b;
  PyObject *__pyx_kp_s_b_2;
  PyObject *__pyx_n_s_b_back;
  PyObject *__pyx_n_s_b_val;
  PyObject *__pyx_n_s_background;
  PyObject *__pyx_n_s_bands;
  PyObject *__pyx_n_s_base;
  PyObject *__pyx_n_s_baseOpenGLFrame;
  PyObject *__pyx_n_s_baseOpenGLFrame___init;
  PyObject *__pyx_n_s_baseOpenGLFrame__display;
  PyObject *__pyx_n_s_baseOpenGLFrame_check_all_b1_eve;
  PyObject *__pyx_n_s_baseOpenGLFrame_check_all_bpress;
  PyObject *__pyx_n_s_baseOpenGLFrame_check_all_brelas;
  PyObject *__pyx_n_s_baseOpenGLFrame_check_event_butt;
  PyObject *__pyx_n_s_baseOpenGLFrame_create_event;
  PyObject *__pyx_n_s_baseOpenGLFrame_free_calc_update;
  PyObject *__pyx_n_s_baseOpenGLFrame_freecalc;
  PyObject *__pyx_n_s_baseOpenGLFrame_initgl;
  PyObject *__pyx_n_s_baseOpenGLFrame_printContext;
  PyObject *__pyx_n_s_baseOpenGLFrame_redraw;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkCreateContext;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkExpose;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkMakeCurrent;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkMap;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkResize;
  PyObject *__pyx_n_s_baseOpenGLFrame_tkSwapBuffers;
  PyObject *__pyx_n_s_baseOpenGLFrame_wait;
  PyObject *__pyx_n_s_basic_lighting;
  PyObject *__pyx_n_s_basicshader;
  PyObject *__pyx_n_s_best;
  PyObject *__pyx_n_s_bg;
  PyObject *__pyx_n_s_bind;
  PyObject *__pyx_n_s_bind_buffer;
  PyObject *__pyx_n_s_bitmap;
  PyObject *__pyx_n_s_bitmap_left;
  PyObject *__pyx_n_s_bitmap_top;
  PyObject *__pyx_n_s_bresenham;
  PyObject *__pyx_n_s_buffer;
  PyObject *__pyx_n_s_buffer1;
  PyObject *__pyx_n_s_bufferid;
  PyObject *__pyx_n_s_buffmanager;
  PyObject *__pyx_n_s_c;
  PyObject *__pyx_n_s_c1;
  PyObject *__pyx_n_s_c1_2;
  PyObject *__pyx_n_s_c2;
  PyObject *__pyx_n_s_c2_2;
  PyObject *__pyx_n_s_c3;
  PyObject *__pyx_n_s_c4;
  PyObject *__pyx_n_s_cColorBits;
  PyObject *__pyx_n_s_cDepthBits;
  PyObject *__pyx_n_s_c_bool;
  PyObject *__pyx_n_s_c_char_p;
  PyObject *__pyx_n_s_c_float;
  PyObject *__pyx_n_s_c_int;
  PyObject *__pyx_n_s_c_void_p;
  PyObject *__pyx_n_s_call;
  PyObject *__pyx_n_s_cb;
  PyObject *__pyx_n_s_cdll;
  PyObject *__pyx_n_s_centre;
  PyObject *__pyx_n_s_cf;
  PyObject *__pyx_n_s_cfgs;
  PyObject *__pyx_n_s_cfloat;
  PyObject *__pyx_n_s_cfloat_array;
  PyObject *__pyx_n_s_change_color;
  PyObject *__pyx_n_s_check;
  PyObject *__pyx_n_s_check_all_b1_events;
  PyObject *__pyx_n_s_check_all_bpress_events;
  PyObject *__pyx_n_s_check_all_brelase_events;
  PyObject *__pyx_n_s_check_event_button_1;
  PyObject *__pyx_n_s_checkkeypress;
  PyObject *__pyx_n_s_checklclick;
  PyObject *__pyx_n_s_checkmclick;
  PyObject *__pyx_n_s_checkmotion;
  PyObject *__pyx_n_s_checkrclick;
  PyObject *__pyx_n_s_chr;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_clear;
  PyObject *__pyx_n_s_clear_events;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_cnf;
  PyObject *__pyx_n_s_color;
  PyObject *__pyx_n_s_compile;
  PyObject *__pyx_n_s_compileProgram;
  PyObject *__pyx_n_s_compileShader;
  PyObject *__pyx_n_s_config;
  PyObject *__pyx_n_s_contents;
  PyObject *__pyx_n_s_cords;
  PyObject *__pyx_n_s_cords1;
  PyObject *__pyx_n_s_cords2;
  PyObject *__pyx_n_s_cords3;
  PyObject *__pyx_n_s_cords4;
  PyObject *__pyx_n_s_cords_2;
  PyObject *__pyx_n_s_cords_to_ratio;
  PyObject *__pyx_n_s_crd;
  PyObject *__pyx_n_s_create_event;
  PyObject *__pyx_n_s_create_font;
  PyObject *__pyx_n_s_create_letter;
  PyObject *__pyx_n_s_create_quad;
  PyObject *__pyx_n_s_crop;
  PyObject *__pyx_n_s_ct;
  PyObject *__pyx_n_s_ctypes;
  PyObject *__pyx_n_s_ctypes_wintypes;
  PyObject *__pyx_n_s_curpos;
  PyObject *__pyx_n_s_cvroot;
  PyObject *__pyx_n_s_d;
  PyObject *__pyx_n_s_dat;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_n_s_data_length;
  PyObject *__pyx_n_s_data_tr1;
  PyObject *__pyx_n_s_data_tr2;
  PyObject *__pyx_n_s_data_txn;
  PyObject *__pyx_n_s_data_type;
  PyObject *__pyx_n_s_default;
  PyObject *__pyx_n_s_del_animation;
  PyObject *__pyx_n_s_delay;
  PyObject *__pyx_n_s_delete_obj;
  PyObject *__pyx_n_s_descender;
  PyObject *__pyx_n_s_dialog;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_n_s_display;
  PyObject *__pyx_n_s_dist;
  PyObject *__pyx_n_s_distance;
  PyObject *__pyx_n_s_do_AutoSpin;
  PyObject *__pyx_n_s_doc;
  PyObject *__pyx_n_s_docs;
  PyObject *__pyx_n_s_dp_data;
  PyObject *__pyx_n_s_draw;
  PyObject *__pyx_n_s_draw_line;
  PyObject *__pyx_n_s_draw_lines;
  PyObject *__pyx_n_s_draw_point;
  PyObject *__pyx_n_s_draw_points;
  PyObject *__pyx_n_s_draw_quad;
  PyObject *__pyx_n_s_draw_quad_texture;
  PyObject *__pyx_n_s_draw_quad_texture_array;
  PyObject *__pyx_n_s_draw_text;
  PyObject *__pyx_n_s_dtype;
  PyObject *__pyx_n_s_dummy;
  PyObject *__pyx_n_s_dwFlags;
  PyObject *__pyx_n_s_dx;
  PyObject *__pyx_n_s_dy;
  PyObject *__pyx_n_s_e;
  PyObject *__pyx_n_s_edit_color;
  PyObject *__pyx_n_s_edit_letter;
  PyObject *__pyx_n_s_edit_pos;
  PyObject *__pyx_n_s_edit_texture;
  PyObject *__pyx_n_s_edit_tpos;
  PyObject *__pyx_n_s_encode;
  PyObject *__pyx_n_s_end;
  PyObject *__pyx_n_s_environ;
  PyObject *__pyx_n_s_ev;
  PyObject *__pyx_n_s_ev_list;
  PyObject *__pyx_n_s_ev_type;
  PyObject *__pyx_n_s_event;
  PyObject *__pyx_n_s_event_type;
  PyObject *__pyx_n_s_eventmanager;
  PyObject *__pyx_n_s_events_B1;
  PyObject *__pyx_n_s_events_B2;
  PyObject *__pyx_n_s_events_B3;
  PyObject *__pyx_n_s_events_BP;
  PyObject *__pyx_n_s_events_BR;
  PyObject *__pyx_n_s_events_MN;
  PyObject *__pyx_n_s_evt;
  PyObject *__pyx_n_s_extend;
  PyObject *__pyx_n_s_extensions;
  PyObject *__pyx_n_s_extns;
  PyObject *__pyx_n_s_exts;
  PyObject *__pyx_n_s_f;
  PyObject *__pyx_n_s_face;
  PyObject *__pyx_n_s_far;
  PyObject *__pyx_n_s_fbatt;
  PyObject *__pyx_n_s_fgshader;
  PyObject *__pyx_n_s_file;
  PyObject *__pyx_n_s_filename;
  PyObject *__pyx_n_s_find_library;
  PyObject *__pyx_n_s_flat;
  PyObject *__pyx_n_s_font;
  PyObject *__pyx_n_s_font_config;
  PyObject *__pyx_n_s_font_letters;
  PyObject *__pyx_n_s_font_texture;
  PyObject *__pyx_n_s_fovy;
  PyObject *__pyx_n_s_free_calc_update;
  PyObject *__pyx_n_s_freecalc;
  PyObject *__pyx_n_s_freecalc_update;
  PyObject *__pyx_n_s_freetype;
  PyObject *__pyx_n_s_from;
  PyObject *__pyx_n_s_frombuffer;
  PyObject *__pyx_n_s_func;
  PyObject *__pyx_n_s_g;
  PyObject *__pyx_n_s_g_back;
  PyObject *__pyx_n_s_g_val;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_s_get_buffer;
  PyObject *__pyx_n_s_get_color;
  PyObject *__pyx_n_s_get_objectindexes;
  PyObject *__pyx_n_s_get_pos;
  PyObject *__pyx_n_s_get_shader;
  PyObject *__pyx_n_s_get_texid;
  PyObject *__pyx_n_s_get_vertices;
  PyObject *__pyx_n_s_getdata;
  PyObject *__pyx_n_s_getint;
  PyObject *__pyx_n_s_getsize;
  PyObject *__pyx_n_s_glBegin;
  PyObject *__pyx_n_s_glBindBuffer;
  PyObject *__pyx_n_s_glBindTexture;
  PyObject *__pyx_n_s_glBindTextureUnit;
  PyObject *__pyx_n_s_glBufferData;
  PyObject *__pyx_n_s_glBufferSubData;
  PyObject *__pyx_n_s_glColor3f;
  PyObject *__pyx_n_s_glColor4f;
  PyObject *__pyx_n_s_glDepthFunc;
  PyObject *__pyx_n_s_glDisable;
  PyObject *__pyx_n_s_glDrawArrays;
  PyObject *__pyx_n_s_glEnable;
  PyObject *__pyx_n_s_glEnableClientState;
  PyObject *__pyx_n_s_glEnableVertexAttribArray;
  PyObject *__pyx_n_s_glEnd;
  PyObject *__pyx_n_s_glGenBuffers;
  PyObject *__pyx_n_s_glGenTextures;
  PyObject *__pyx_n_s_glGetDoublev;
  PyObject *__pyx_n_s_glGetIntegerv;
  PyObject *__pyx_n_s_glGetString;
  PyObject *__pyx_n_s_glGetUniformLocation;
  PyObject *__pyx_n_s_glLightfv;
  PyObject *__pyx_n_s_glLoadIdentity;
  PyObject *__pyx_n_s_glMatrixMode;
  PyObject *__pyx_n_s_glPixelStorei;
  PyObject *__pyx_n_s_glRotateScene;
  PyObject *__pyx_n_s_glTexCoord2f;
  PyObject *__pyx_n_s_glTexImage2D;
  PyObject *__pyx_n_s_glTexParameterf;
  PyObject *__pyx_n_s_glTexParameteri;
  PyObject *__pyx_n_s_glTexSubImage2D;
  PyObject *__pyx_n_s_glTranslateScene;
  PyObject *__pyx_n_s_glUniform1iv;
  PyObject *__pyx_n_s_glUseProgram;
  PyObject *__pyx_n_s_glVertex2f;
  PyObject *__pyx_n_s_glVertexAttribPointer;
  PyObject *__pyx_n_s_glViewport;
  PyObject *__pyx_n_s_glXChooseFBConfig;
  PyObject *__pyx_n_s_glXChooseVisual;
  PyObject *__pyx_n_s_glXCreateContext;
  PyObject *__pyx_n_s_glXCreateNewContext;
  PyObject *__pyx_n_s_glXGetVisualFromFBConfig;
  PyObject *__pyx_n_s_glXIsDirect;
  PyObject *__pyx_n_s_glXMakeContextCurrent;
  PyObject *__pyx_n_s_glXMakeCurrent;
  PyObject *__pyx_n_s_glXQueryExtensionsString;
  PyObject *__pyx_n_s_glXQueryVersion;
  PyObject *__pyx_n_s_glXSwapBuffers;
  PyObject *__pyx_n_s_gluLookAt;
  PyObject *__pyx_n_s_gluPerspective;
  PyObject *__pyx_n_s_gluProject;
  PyObject *__pyx_n_s_gluUnProject;
  PyObject *__pyx_n_s_glyph;
  PyObject *__pyx_n_s_h;
  PyObject *__pyx_n_s_height;
  PyObject *__pyx_n_s_help;
  PyObject *__pyx_n_s_hex;
  PyObject *__pyx_n_s_hover_events;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_iLayerType;
  PyObject *__pyx_n_s_iPixelType;
  PyObject *__pyx_n_s_id;
  PyObject *__pyx_n_s_ideal;
  PyObject *__pyx_n_s_idx;
  PyObject *__pyx_n_s_il;
  PyObject *__pyx_n_s_image;
  PyObject *__pyx_n_s_imgnp;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_index;
  PyObject *__pyx_n_s_init;
  PyObject *__pyx_n_s_init_subclass;
  PyObject *__pyx_n_s_initgl;
  PyObject *__pyx_n_s_initialised;
  PyObject *__pyx_n_s_insert;
  PyObject *__pyx_n_s_is_fixed_width;
  PyObject *__pyx_n_s_is_serialized;
  PyObject *__pyx_n_s_j;
  PyObject *__pyx_n_s_keypress_events;
  PyObject *__pyx_n_s_kw;
  PyObject *__pyx_n_s_l;
  PyObject *__pyx_n_s_launch_func;
  PyObject *__pyx_n_s_launch_function_beg;
  PyObject *__pyx_n_s_launch_function_end;
  PyObject *__pyx_n_s_launch_function_mid;
  PyObject *__pyx_n_s_launchev;
  PyObject *__pyx_n_s_lclick_events;
  PyObject *__pyx_n_s_letter;
  PyObject *__pyx_n_s_lfe;
  PyObject *__pyx_n_s_lfg;
  PyObject *__pyx_n_s_lfm;
  PyObject *__pyx_n_s_light_position;
  PyObject *__pyx_n_s_linux;
  PyObject *__pyx_n_s_list;
  PyObject *__pyx_n_s_load;
  PyObject *__pyx_n_s_load_char;
  PyObject *__pyx_n_s_load_scene;
  PyObject *__pyx_n_s_load_texture;
  PyObject *__pyx_n_s_load_texture_dp;
  PyObject *__pyx_n_s_load_texture_locals_image;
  PyObject *__pyx_n_s_load_texture_locals_image___init;
  PyObject *__pyx_n_s_load_texture_repeat;
  PyObject *__pyx_n_s_load_texture_sub;
  PyObject *__pyx_n_s_ls;
  PyObject *__pyx_n_s_m;
  PyObject *__pyx_n_s_m_new;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_major;
  PyObject *__pyx_n_s_mask;
  PyObject *__pyx_n_s_master;
  PyObject *__pyx_n_s_math;
  PyObject *__pyx_n_s_mclick_events;
  PyObject *__pyx_n_s_mem_img;
  PyObject *__pyx_n_s_metaclass;
  PyObject *__pyx_n_s_minor;
  PyObject *__pyx_n_s_mmap;
  PyObject *__pyx_n_s_mode;
  PyObject *__pyx_n_s_mode_2;
  PyObject *__pyx_n_s_module;
  PyObject *__pyx_n_s_move;
  PyObject *__pyx_n_s_move_down;
  PyObject *__pyx_n_s_move_up;
  PyObject *__pyx_n_s_msk;
  PyObject *__pyx_n_s_n;
  PyObject *__pyx_n_s_naiveline;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_named;
  PyObject *__pyx_n_s_ncfg;
  PyObject *__pyx_n_s_nd;
  PyObject *__pyx_n_s_near;
  PyObject *__pyx_n_s_new;
  PyObject *__pyx_n_s_new_from_file;
  PyObject *__pyx_n_s_newcolor;
  PyObject *__pyx_n_s_newpos;
  PyObject *__pyx_n_s_newsize;
  PyObject *__pyx_n_s_newtpos;
  PyObject *__pyx_n_s_np;
  PyObject *__pyx_n_s_nr;
  PyObject *__pyx_n_s_numpy;
  PyObject *__pyx_n_s_nx;
  PyObject *__pyx_n_s_ny;
  PyObject *__pyx_n_s_obj;
  PyObject *__pyx_n_s_obj_c;
  PyObject *__pyx_n_s_object;
  PyObject *__pyx_n_s_object_count;
  PyObject *__pyx_n_s_object_counts;
  PyObject *__pyx_n_s_object_indexes;
  PyObject *__pyx_n_s_object_moved;
  PyObject *__pyx_kp_s_oh_dear_visual_does_not_match;
  PyObject *__pyx_n_s_oj;
  PyObject *__pyx_n_s_open;
  PyObject *__pyx_n_s_orgsize;
  PyObject *__pyx_n_s_os;
  PyObject *__pyx_n_s_ou;
  PyObject *__pyx_n_s_overlay;
  PyObject *__pyx_n_s_p1;
  PyObject *__pyx_n_s_p2;
  PyObject *__pyx_n_s_pas;
  PyObject *__pyx_n_s_paste;
  PyObject *__pyx_n_s_pfd;
  PyObject *__pyx_n_s_pick;
  PyObject *__pyx_n_s_pix_rat_x;
  PyObject *__pyx_n_s_pix_rat_y;
  PyObject *__pyx_n_s_pixelformat;
  PyObject *__pyx_n_s_pixels;
  PyObject *__pyx_n_s_platform;
  PyObject *__pyx_n_s_pointer;
  PyObject *__pyx_n_s_pointerx;
  PyObject *__pyx_n_s_pointery;
  PyObject *__pyx_n_s_points;
  PyObject *__pyx_n_s_pop;
  PyObject *__pyx_n_s_prepare;
  PyObject *__pyx_n_s_prequad;
  PyObject *__pyx_n_s_prerender_quad;
  PyObject *__pyx_n_s_prerender_text;
  PyObject *__pyx_n_s_prerender_texturequad;
  PyObject *__pyx_n_s_prerenderedobj;
  PyObject *__pyx_n_s_pretext;
  PyObject *__pyx_n_s_pretextquad;
  PyObject *__pyx_n_s_previoev;
  PyObject *__pyx_n_s_print;
  PyObject *__pyx_n_s_printContext;
  PyObject *__pyx_n_s_pure_pil_alpha_to_color_v2;
  PyObject *__pyx_n_s_pyvips;
  PyObject *__pyx_n_s_quad;
  PyObject *__pyx_n_s_qualname;
  PyObject *__pyx_n_s_questhead;
  PyObject *__pyx_n_s_queue;
  PyObject *__pyx_n_s_queue_check;
  PyObject *__pyx_n_s_r;
  PyObject *__pyx_n_s_r_back;
  PyObject *__pyx_n_s_r_val;
  PyObject *__pyx_n_s_random;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_rclick_events;
  PyObject *__pyx_n_s_real_index;
  PyObject *__pyx_n_s_real_value;
  PyObject *__pyx_n_s_realdata;
  PyObject *__pyx_n_s_realy;
  PyObject *__pyx_n_s_redraw;
  PyObject *__pyx_n_s_render;
  PyObject *__pyx_n_s_render_letter;
  PyObject *__pyx_n_s_render_quad;
  PyObject *__pyx_n_s_render_text;
  PyObject *__pyx_n_s_render_texture_quad;
  PyObject *__pyx_n_s_repeat;
  PyObject *__pyx_n_s_reset;
  PyObject *__pyx_n_s_reshape;
  PyObject *__pyx_n_s_resize;
  PyObject *__pyx_n_s_resize_2;
  PyObject *__pyx_n_s_restype;
  PyObject *__pyx_n_s_rgba2rgb;
  PyObject *__pyx_n_s_rise;
  PyObject *__pyx_n_s_rnd;
  PyObject *__pyx_n_s_rotate;
  PyObject *__pyx_n_s_round;
  PyObject *__pyx_n_s_rows;
  PyObject *__pyx_n_s_run;
  PyObject *__pyx_n_s_s;
  PyObject *__pyx_n_s_sav_vert;
  PyObject *__pyx_n_s_scale;
  PyObject *__pyx_n_s_scalex;
  PyObject *__pyx_n_s_scaley;
  PyObject *__pyx_n_s_screen;
  PyObject *__pyx_n_s_screen_res;
  PyObject *__pyx_n_s_screenx;
  PyObject *__pyx_n_s_screeny;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_n_s_self_2;
  PyObject *__pyx_n_s_sequential;
  PyObject *__pyx_n_s_serialization;
  PyObject *__pyx_n_s_serialization_current_object;
  PyObject *__pyx_n_s_serialize_to_obj;
  PyObject *__pyx_n_s_serialized_obj;
  PyObject *__pyx_n_s_set_background;
  PyObject *__pyx_n_s_set_centerpoint;
  PyObject *__pyx_n_s_set_char_size;
  PyObject *__pyx_n_s_set_eyepoint;
  PyObject *__pyx_n_s_set_mode;
  PyObject *__pyx_n_s_set_name;
  PyObject *__pyx_n_s_shaderprogram;
  PyObject *__pyx_n_s_shaders;
  PyObject *__pyx_n_s_shape;
  PyObject *__pyx_n_s_shrink;
  PyObject *__pyx_n_s_size;
  PyObject *__pyx_n_s_size_x;
  PyObject *__pyx_n_s_size_y;
  PyObject *__pyx_n_s_sizeof;
  PyObject *__pyx_n_s_sizex;
  PyObject *__pyx_n_s_sizey;
  PyObject *__pyx_n_s_sleep;
  PyObject *__pyx_n_s_slope_error_new;
  PyObject *__pyx_n_s_spacing;
  PyObject *__pyx_n_s_spacing_addx;
  PyObject *__pyx_n_s_spacing_addy;
  PyObject *__pyx_n_s_spacing_y;
  PyObject *__pyx_n_s_split;
  PyObject *__pyx_n_s_sqrt;
  PyObject *__pyx_n_s_start_new_thread;
  PyObject *__pyx_n_s_startswith;
  PyObject *__pyx_n_s_state;
  PyObject *__pyx_n_s_strings;
  PyObject *__pyx_n_s_super;
  PyObject *__pyx_n_s_switch;
  PyObject *__pyx_n_s_sx;
  PyObject *__pyx_n_s_sy;
  PyObject *__pyx_n_s_sys;
  PyObject *__pyx_n_s_t;
  PyObject *__pyx_n_s_t1;
  PyObject *__pyx_n_s_t2;
  PyObject *__pyx_n_s_t3;
  PyObject *__pyx_n_s_t4;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_tex_arrayn_translate;
  PyObject *__pyx_n_s_texcords1;
  PyObject *__pyx_n_s_texcords2;
  PyObject *__pyx_n_s_texcords3;
  PyObject *__pyx_n_s_texcords4;
  PyObject *__pyx_n_s_texid;
  PyObject *__pyx_n_s_texsize;
  PyObject *__pyx_n_s_text;
  PyObject *__pyx_n_s_textid;
  PyObject *__pyx_n_s_textn;
  PyObject *__pyx_n_s_textr;
  PyObject *__pyx_n_s_texture;
  PyObject *__pyx_n_s_texture_2;
  PyObject *__pyx_n_s_texture_cords_to_ratio;
  PyObject *__pyx_n_s_texture_data;
  PyObject *__pyx_n_s_texture_slots;
  PyObject *__pyx_n_s_textured;
  PyObject *__pyx_n_s_textures;
  PyObject *__pyx_n_s_th;
  PyObject *__pyx_n_s_thread;
  PyObject *__pyx_n_s_time;
  PyObject *__pyx_n_s_title;
  PyObject *__pyx_n_s_tk;
  PyObject *__pyx_n_s_tkAutoSpin;
  PyObject *__pyx_n_s_tkCreateContext;
  PyObject *__pyx_n_s_tkExpose;
  PyObject *__pyx_n_s_tkHandlePick;
  PyObject *__pyx_n_s_tkMakeCurrent;
  PyObject *__pyx_n_s_tkMap;
  PyObject *__pyx_n_s_tkPrint;
  PyObject *__pyx_n_s_tkRecordMouse;
  PyObject *__pyx_n_s_tkRedraw;
  PyObject *__pyx_n_s_tkResize;
  PyObject *__pyx_n_s_tkRotate;
  PyObject *__pyx_n_s_tkScale;
  PyObject *__pyx_n_s_tkSwapBuffers;
  PyObject *__pyx_n_s_tkTranslate;
  PyObject *__pyx_n_s_tkinter;
  PyObject *__pyx_n_s_tlist;
  PyObject *__pyx_n_s_to;
  PyObject *__pyx_n_s_total_updates;
  PyObject *__pyx_n_s_tquad;
  PyObject *__pyx_n_s_tr1;
  PyObject *__pyx_n_s_tr2;
  PyObject *__pyx_n_s_tu;
  PyObject *__pyx_n_s_tua;
  PyObject *__pyx_n_s_txn;
  PyObject *__pyx_n_s_txs;
  PyObject *__pyx_n_s_txtid;
  PyObject *__pyx_n_s_ubyte;
  PyObject *__pyx_n_s_uint8;
  PyObject *__pyx_n_s_unload;
  PyObject *__pyx_n_s_update;
  PyObject *__pyx_n_s_update_animation;
  PyObject *__pyx_n_s_update_idletasks;
  PyObject *__pyx_n_s_update_list;
  PyObject *__pyx_n_s_updates;
  PyObject *__pyx_n_s_use_texture;
  PyObject *__pyx_n_s_usecords;
  PyObject *__pyx_n_s_user32;
  PyObject *__pyx_n_s_user32_2;
  PyObject *__pyx_n_s_usingVIPSandShrink;
  PyObject *__pyx_kp_s_utf_8;
  PyObject *__pyx_n_s_util;
  PyObject *__pyx_n_s_v3distsq;
  PyObject *__pyx_n_s_value;
  PyObject *__pyx_n_s_vb_count;
  PyObject *__pyx_n_s_vbo;
  PyObject *__pyx_n_s_vbos;
  PyObject *__pyx_kp_s_version_330_core_layout_locatio;
  PyObject *__pyx_kp_s_version_330_core_layout_locatio_2;
  PyObject *__pyx_n_s_version_info;
  PyObject *__pyx_n_s_vert_lists;
  PyObject *__pyx_n_s_vertices;
  PyObject *__pyx_n_s_vipshome;
  PyObject *__pyx_n_s_vis;
  PyObject *__pyx_n_s_visual;
  PyObject *__pyx_n_s_visualid;
  PyObject *__pyx_n_s_vns;
  PyObject *__pyx_n_s_vxshader;
  PyObject *__pyx_n_s_w;
  PyObject *__pyx_n_s_w_2;
  PyObject *__pyx_n_s_wait;
  PyObject *__pyx_n_s_wglCreateContext;
  PyObject *__pyx_n_s_wglMakeCurrent;
  PyObject *__pyx_n_s_wid;
  PyObject *__pyx_n_s_width;
  PyObject *__pyx_n_s_win;
  PyObject *__pyx_n_s_win32;
  PyObject *__pyx_n_s_win_height;
  PyObject *__pyx_n_s_winfo;
  PyObject *__pyx_n_s_winfo_height;
  PyObject *__pyx_n_s_winfo_id;
  PyObject *__pyx_n_s_winfo_ismapped;
  PyObject *__pyx_n_s_winfo_screen;
  PyObject *__pyx_n_s_winfo_visualid;
  PyObject *__pyx_n_s_winfo_width;
  PyObject *__pyx_n_s_write_to_memory;
  PyObject *__pyx_n_s_wtf;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_x1;
  PyObject *__pyx_n_s_x11lib;
  PyObject *__pyx_n_s_x2;
  PyObject *__pyx_n_s_x_root;
  PyObject *__pyx_n_s_xcenter;
  PyObject *__pyx_n_s_xmouse;
  PyObject *__pyx_n_s_xr;
  PyObject *__pyx_n_s_xspin;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_y1;
  PyObject *__pyx_n_s_y2;
  PyObject *__pyx_n_s_y_root;
  PyObject *__pyx_n_s_ycenter;
  PyObject *__pyx_n_s_ymouse;
  PyObject *__pyx_n_s_yr;
  PyObject *__pyx_n_s_yspin;
  PyObject *__pyx_n_s_z;
  PyObject *__pyx_n_s_zcenter;
  PyObject *__pyx_n_s_zeros;
  PyObject *__pyx_float_0_;
  PyObject *__pyx_float_1_;
  PyObject *__pyx_float_0_0;
  PyObject *__pyx_float_0_1;
  PyObject *__pyx_float_0_5;
  PyObject *__pyx_float_1_0;
  PyObject *__pyx_float_0_01;
  PyObject *__pyx_float_10_0;
  PyObject *__pyx_float_30_0;
  PyObject *__pyx_float_0_001;
  PyObject *__pyx_float_1000_0;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_2;
  PyObject *__pyx_int_3;
  PyObject *__pyx_int_4;
  PyObject *__pyx_int_5;
  PyObject *__pyx_int_6;
  PyObject *__pyx_int_7;
  PyObject *__pyx_int_8;
  PyObject *__pyx_int_9;
  PyObject *__pyx_int_10;
  PyObject *__pyx_int_11;
  PyObject *__pyx_int_12;
  PyObject *__pyx_int_13;
  PyObject *__pyx_int_14;
  PyObject *__pyx_int_15;
  PyObject *__pyx_int_16;
  PyObject *__pyx_int_17;
  PyObject *__pyx_int_18;
  PyObject *__pyx_int_19;
  PyObject *__pyx_int_20;
  PyObject *__pyx_int_21;
  PyObject *__pyx_int_23;
  PyObject *__pyx_int_24;
  PyObject *__pyx_int_25;
  PyObject *__pyx_int_26;
  PyObject *__pyx_int_27;
  PyObject *__pyx_int_28;
  PyObject *__pyx_int_29;
  PyObject *__pyx_int_30;
  PyObject *__pyx_int_31;
  PyObject *__pyx_int_32;
  PyObject *__pyx_int_33;
  PyObject *__pyx_int_34;
  PyObject *__pyx_int_35;
  PyObject *__pyx_int_36;
  PyObject *__pyx_int_37;
  PyObject *__pyx_int_38;
  PyObject *__pyx_int_39;
  PyObject *__pyx_int_40;
  PyObject *__pyx_int_64;
  PyObject *__pyx_int_255;
  PyObject *__pyx_int_256;
  PyObject *__pyx_int_1000;
  PyObject *__pyx_int_1080;
  PyObject *__pyx_int_1920;
  PyObject *__pyx_int_neg_1;
  PyObject *__pyx_int_neg_10;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_slice__18;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__20;
  PyObject *__pyx_tuple__21;
  PyObject *__pyx_tuple__23;
  PyObject *__pyx_tuple__25;
  PyObject *__pyx_tuple__27;
  PyObject *__pyx_tuple__29;
  PyObject *__pyx_tuple__31;
  PyObject *__pyx_tuple__33;
  PyObject *__pyx_tuple__35;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__43;
  PyObject *__pyx_tuple__45;
  PyObject *__pyx_tuple__47;
  PyObject *__pyx_tuple__50;
  PyObject *__pyx_tuple__52;
  PyObject *__pyx_tuple__57;
  PyObject *__pyx_tuple__59;
  PyObject *__pyx_tuple__61;
  PyObject *__pyx_tuple__63;
  PyObject *__pyx_tuple__65;
  PyObject *__pyx_tuple__67;
  PyObject *__pyx_tuple__69;
  PyObject *__pyx_tuple__71;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__75;
  PyObject *__pyx_tuple__76;
  PyObject *__pyx_tuple__78;
  PyObject *__pyx_tuple__81;
  PyObject *__pyx_tuple__83;
  PyObject *__pyx_tuple__85;
  PyObject *__pyx_tuple__87;
  PyObject *__pyx_tuple__89;
  PyObject *__pyx_tuple__91;
  PyObject *__pyx_tuple__93;
  PyObject *__pyx_tuple__95;
  PyObject *__pyx_tuple__97;
  PyObject *__pyx_tuple__98;
  PyObject *__pyx_tuple__100;
  PyObject *__pyx_tuple__102;
  PyObject *__pyx_tuple__104;
  PyObject *__pyx_tuple__106;
  PyObject *__pyx_tuple__108;
  PyObject *__pyx_tuple__110;
  PyObject *__pyx_tuple__112;
  PyObject *__pyx_tuple__114;
  PyObject *__pyx_tuple__116;
  PyObject *__pyx_tuple__118;
  PyObject *__pyx_tuple__120;
  PyObject *__pyx_tuple__121;
  PyObject *__pyx_tuple__122;
  PyObject *__pyx_tuple__124;
  PyObject *__pyx_tuple__126;
  PyObject *__pyx_tuple__128;
  PyObject *__pyx_tuple__129;
  PyObject *__pyx_tuple__130;
  PyObject *__pyx_tuple__132;
  PyObject *__pyx_tuple__134;
  PyObject *__pyx_tuple__136;
  PyObject *__pyx_tuple__138;
  PyObject *__pyx_tuple__140;
  PyObject *__pyx_tuple__142;
  PyObject *__pyx_tuple__144;
  PyObject *__pyx_tuple__146;
  PyObject *__pyx_tuple__148;
  PyObject *__pyx_tuple__150;
  PyObject *__pyx_tuple__152;
  PyObject *__pyx_tuple__154;
  PyObject *__pyx_tuple__156;
  PyObject *__pyx_tuple__158;
  PyObject *__pyx_tuple__160;
  PyObject *__pyx_tuple__162;
  PyObject *__pyx_tuple__164;
  PyObject *__pyx_tuple__166;
  PyObject *__pyx_tuple__168;
  PyObject *__pyx_tuple__170;
  PyObject *__pyx_tuple__172;
  PyObject *__pyx_tuple__174;
  PyObject *__pyx_tuple__176;
  PyObject *__pyx_tuple__178;
  PyObject *__pyx_tuple__180;
  PyObject *__pyx_tuple__182;
  PyObject *__pyx_tuple__184;
  PyObject *__pyx_tuple__186;
  PyObject *__pyx_tuple__188;
  PyObject *__pyx_tuple__190;
  PyObject *__pyx_tuple__192;
  PyObject *__pyx_tuple__194;
  PyObject *__pyx_tuple__196;
  PyObject *__pyx_tuple__198;
  PyObject *__pyx_tuple__200;
  PyObject *__pyx_tuple__202;
  PyObject *__pyx_tuple__204;
  PyObject *__pyx_tuple__206;
  PyObject *__pyx_tuple__208;
  PyObject *__pyx_tuple__210;
  PyObject *__pyx_tuple__211;
  PyObject *__pyx_tuple__213;
  PyObject *__pyx_tuple__214;
  PyObject *__pyx_tuple__216;
  PyObject *__pyx_tuple__218;
  PyObject *__pyx_tuple__219;
  PyObject *__pyx_tuple__221;
  PyObject *__pyx_tuple__223;
  PyObject *__pyx_tuple__225;
  PyObject *__pyx_tuple__226;
  PyObject *__pyx_tuple__228;
  PyObject *__pyx_tuple__229;
  PyObject *__pyx_tuple__231;
  PyObject *__pyx_tuple__233;
  PyObject *__pyx_tuple__235;
  PyObject *__pyx_tuple__236;
  PyObject *__pyx_tuple__239;
  PyObject *__pyx_tuple__241;
  PyObject *__pyx_tuple__242;
  PyObject *__pyx_tuple__244;
  PyObject *__pyx_tuple__246;
  PyObject *__pyx_tuple__248;
  PyObject *__pyx_tuple__250;
  PyObject *__pyx_tuple__252;
  PyObject *__pyx_tuple__254;
  PyObject *__pyx_tuple__256;
  PyObject *__pyx_tuple__258;
  PyObject *__pyx_tuple__259;
  PyObject *__pyx_tuple__261;
  PyObject *__pyx_tuple__262;
  PyObject *__pyx_tuple__264;
  PyObject *__pyx_tuple__266;
  PyObject *__pyx_tuple__268;
  PyObject *__pyx_tuple__270;
  PyObject *__pyx_tuple__272;
  PyObject *__pyx_tuple__274;
  PyObject *__pyx_tuple__276;
  PyObject *__pyx_tuple__278;
  PyObject *__pyx_tuple__280;
  PyObject *__pyx_tuple__282;
  PyObject *__pyx_tuple__284;
  PyObject *__pyx_tuple__286;
  PyObject *__pyx_tuple__288;
  PyObject *__pyx_tuple__290;
  PyObject *__pyx_tuple__292;
  PyObject *__pyx_tuple__294;
  PyObject *__pyx_tuple__296;
  PyObject *__pyx_tuple__298;
  PyObject *__pyx_tuple__300;
  PyObject *__pyx_tuple__302;
  PyObject *__pyx_tuple__304;
  PyObject *__pyx_tuple__306;
  PyObject *__pyx_tuple__307;
  PyObject *__pyx_tuple__309;
  PyObject *__pyx_tuple__311;
  PyObject *__pyx_tuple__313;
  PyObject *__pyx_tuple__315;
  PyObject *__pyx_tuple__319;
  PyObject *__pyx_tuple__321;
  PyObject *__pyx_tuple__323;
  PyObject *__pyx_codeobj__22;
  PyObject *__pyx_codeobj__24;
  PyObject *__pyx_codeobj__26;
  PyObject *__pyx_codeobj__28;
  PyObject *__pyx_codeobj__30;
  PyObject *__pyx_codeobj__32;
  PyObject *__pyx_codeobj__34;
  PyObject *__pyx_codeobj__36;
  PyObject *__pyx_codeobj__38;
  PyObject *__pyx_codeobj__40;
  PyObject *__pyx_codeobj__42;
  PyObject *__pyx_codeobj__44;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__48;
  PyObject *__pyx_codeobj__49;
  PyObject *__pyx_codeobj__51;
  PyObject *__pyx_codeobj__53;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__58;
  PyObject *__pyx_codeobj__60;
  PyObject *__pyx_codeobj__62;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__70;
  PyObject *__pyx_codeobj__72;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__77;
  PyObject *__pyx_codeobj__79;
  PyObject *__pyx_codeobj__82;
  PyObject *__pyx_codeobj__84;
  PyObject *__pyx_codeobj__86;
  PyObject *__pyx_codeobj__88;
  PyObject *__pyx_codeobj__90;
  PyObject *__pyx_codeobj__92;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__96;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__101;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__105;
  PyObject *__pyx_codeobj__107;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__111;
  PyObject *__pyx_codeobj__113;
  PyObject *__pyx_codeobj__115;
  PyObject *__pyx_codeobj__117;
  PyObject *__pyx_codeobj__119;
  PyObject *__pyx_codeobj__123;
  PyObject *__pyx_codeobj__125;
  PyObject *__pyx_codeobj__127;
  PyObject *__pyx_codeobj__131;
  PyObject *__pyx_codeobj__133;
  PyObject *__pyx_codeobj__135;
  PyObject *__pyx_codeobj__137;
  PyObject *__pyx_codeobj__139;
  PyObject *__pyx_codeobj__141;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__145;
  PyObject *__pyx_codeobj__147;
  PyObject *__pyx_codeobj__149;
  PyObject *__pyx_codeobj__151;
  PyObject *__pyx_codeobj__153;
  PyObject *__pyx_codeobj__155;
  PyObject *__pyx_codeobj__157;
  PyObject *__pyx_codeobj__159;
  PyObject *__pyx_codeobj__161;
  PyObject *__pyx_codeobj__163;
  PyObject *__pyx_codeobj__165;
  PyObject *__pyx_codeobj__167;
  PyObject *__pyx_codeobj__169;
  PyObject *__pyx_codeobj__171;
  PyObject *__pyx_codeobj__173;
  PyObject *__pyx_codeobj__175;
  PyObject *__pyx_codeobj__177;
  PyObject *__pyx_codeobj__179;
  PyObject *__pyx_codeobj__181;
  PyObject *__pyx_codeobj__183;
  PyObject *__pyx_codeobj__185;
  PyObject *__pyx_codeobj__187;
  PyObject *__pyx_codeobj__189;
  PyObject *__pyx_codeobj__191;
  PyObject *__pyx_codeobj__193;
  PyObject *__pyx_codeobj__195;
  PyObject *__pyx_codeobj__197;
  PyObject *__pyx_codeobj__199;
  PyObject *__pyx_codeobj__201;
  PyObject *__pyx_codeobj__203;
  PyObject *__pyx_codeobj__205;
  PyObject *__pyx_codeobj__209;
  PyObject *__pyx_codeobj__212;
  PyObject *__pyx_codeobj__215;
  PyObject *__pyx_codeobj__217;
  PyObject *__pyx_codeobj__220;
  PyObject *__pyx_codeobj__222;
  PyObject *__pyx_codeobj__224;
  PyObject *__pyx_codeobj__227;
  PyObject *__pyx_codeobj__230;
  PyObject *__pyx_codeobj__232;
  PyObject *__pyx_codeobj__234;
  PyObject *__pyx_codeobj__237;
  PyObject *__pyx_codeobj__238;
  PyObject *__pyx_codeobj__240;
  PyObject *__pyx_codeobj__243;
  PyObject *__pyx_codeobj__245;
  PyObject *__pyx_codeobj__247;
  PyObject *__pyx_codeobj__249;
  PyObject *__pyx_codeobj__251;
  PyObject *__pyx_codeobj__253;
  PyObject *__pyx_codeobj__255;
  PyObject *__pyx_codeobj__257;
  PyObject *__pyx_codeobj__260;
  PyObject *__pyx_codeobj__263;
  PyObject *__pyx_codeobj__265;
  PyObject *__pyx_codeobj__267;
  PyObject *__pyx_codeobj__269;
  PyObject *__pyx_codeobj__271;
  PyObject *__pyx_codeobj__273;
  PyObject *__pyx_codeobj__275;
  PyObject *__pyx_codeobj__277;
  PyObject *__pyx_codeobj__279;
  PyObject *__pyx_codeobj__281;
  PyObject *__pyx_codeobj__283;
  PyObject *__pyx_codeobj__285;
  PyObject *__pyx_codeobj__287;
  PyObject *__pyx_codeobj__289;
  PyObject *__pyx_codeobj__291;
  PyObject *__pyx_codeobj__293;
  PyObject *__pyx_codeobj__295;
  PyObject *__pyx_codeobj__297;
  PyObject *__pyx_codeobj__299;
  PyObject *__pyx_codeobj__301;
  PyObject *__pyx_codeobj__303;
  PyObject *__pyx_codeobj__305;
  PyObject *__pyx_codeobj__308;
  PyObject *__pyx_codeobj__310;
  PyObject *__pyx_codeobj__312;
  PyObject *__pyx_codeobj__314;
  PyObject *__pyx_codeobj__316;
  PyObject *__pyx_codeobj__317;
  PyObject *__pyx_codeobj__318;
  PyObject *__pyx_codeobj__320;
  PyObject *__pyx_codeobj__322;
  PyObject *__pyx_codeobj__324;
} __pyx_mstate;

#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_n_s_AssertionError);
  Py_CLEAR(clear_module_state->__pyx_n_s_B1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_B1_Motion);
  Py_CLEAR(clear_module_state->__pyx_n_s_B2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_B2_Motion);
  Py_CLEAR(clear_module_state->__pyx_n_s_B3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_B3_Motion);
  Py_CLEAR(clear_module_state->__pyx_n_s_BOOL);
  Py_CLEAR(clear_module_state->__pyx_n_s_BOX_SIZE);
  Py_CLEAR(clear_module_state->__pyx_n_s_BOX_START);
  Py_CLEAR(clear_module_state->__pyx_n_s_BP);
  Py_CLEAR(clear_module_state->__pyx_n_s_BR);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Before);
  Py_CLEAR(clear_module_state->__pyx_kp_s_ButtonRelease_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_1_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_1_Translate_Button_2_Rota);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_2_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Button_3_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_CFUNCTYPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_COLOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChoosePixelFormat);
  Py_CLEAR(clear_module_state->__pyx_n_s_Colormap);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Common_code_for_windows_x11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Configure);
  Py_CLEAR(clear_module_state->__pyx_n_s_Cords);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Create);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents__pas);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_add_event);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_check);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_checkkeypress);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_checklclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_checkmclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_checkmotion);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_checkrclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DEvents_clear_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER_render);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER_render_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER_render_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER_render_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2DRENDER_render_texture_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender_create_font);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender_prerender_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender_prerender_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Dprerender_prerender_texturequ);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw__cords_to_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw__resize);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw__tex_arrayn_translate);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw__texture_cords_to_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_add_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_del_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_line);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_lines);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_point);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_quad_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_quad_texture_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_draw_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_resize);
  Py_CLEAR(clear_module_state->__pyx_n_s_D2Draw_update_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_DRAWMODELOC);
  Py_CLEAR(clear_module_state->__pyx_n_s_DRAW_MODE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_D_vips_dev_8_9_bin);
  Py_CLEAR(clear_module_state->__pyx_n_s_Dialog);
  Py_CLEAR(clear_module_state->__pyx_n_s_Display);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Do_something_to_create_this_obje);
  Py_CLEAR(clear_module_state->__pyx_n_s_Done);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Done_making_a_first_context);
  Py_CLEAR(clear_module_state->__pyx_n_s_Drago2Dengine___versions___win32);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Drago2Dengine_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject___docs);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject__is_serialized);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject__load_scene);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_add_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_add_textureupdate);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_bind_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_clear);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_compile);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_create_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_create_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_delete_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_draw);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_draw_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_edit_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_edit_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_edit_pos);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_edit_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_edit_tpos);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_objectindexes);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_pos);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_shader);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_texid);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_get_vertices);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_move);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_move_down);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_move_up);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_queue);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_queue_check);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_serialize_to_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_set_mode);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_switch);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_DragoObject_use_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventDelay);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventOff);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventOn);
  Py_CLEAR(clear_module_state->__pyx_n_s_EventType);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Expose);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Extension_list);
  Py_CLEAR(clear_module_state->__pyx_n_s_FRAGMENT_SHADER);
  Py_CLEAR(clear_module_state->__pyx_n_s_FT_LOAD_FORCE_AUTOHINT);
  Py_CLEAR(clear_module_state->__pyx_n_s_FT_LOAD_RENDER);
  Py_CLEAR(clear_module_state->__pyx_n_s_Face);
  Py_CLEAR(clear_module_state->__pyx_n_s_Frame);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLU);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLUT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_BLUE_SIZE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_DEPTH_SIZE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_DOUBLEBUFFER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_DRAWABLE_TYPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_GREEN_SIZE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_RED_SIZE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_RENDER_TYPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_RGBA);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_RGBA_BIT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_RGBA_TYPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_WINDOW_BIT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLX_X_RENDERABLE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GLX_version_d_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_ALPHA);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_ARRAY_BUFFER);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_CONTEXT_PROFILE_MASK);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_DEPTH_TEST);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_DYNAMIC_DRAW);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_EXTENSIONS);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_FALSE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_FLOAT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_FRAGMENT_SHADER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_LESS);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_LIGHT0);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_LIGHTING);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_LINEAR);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_MAJOR_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_MAJOR_VERSION_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_MATRIX_MODE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_MINOR_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_MINOR_VERSION_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_MODELVIEW);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_NEAREST);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_POINTS);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_POSITION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_PROJECTION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_QUADS);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_RENDERER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_RENDERER_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_REPEAT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_RGB);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_RGBA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TEXTURE_2D);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TEXTURE_MAG_FILTER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TEXTURE_MIN_FILTER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TEXTURE_WRAP_S);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TEXTURE_WRAP_T);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_TRUE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_UNPACK_ALIGNMENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_UNSIGNED_BYTE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_VENDOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_VENDOR_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GL_VERSION);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_VERSION_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_VERTEX_ARRAY);
  Py_CLEAR(clear_module_state->__pyx_n_s_GL_VERTEX_SHADER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GLint);
  Py_CLEAR(clear_module_state->__pyx_n_s_GetDC);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Got_a_matching_visual_index_d_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_HDC);
  Py_CLEAR(clear_module_state->__pyx_n_s_Hover);
  Py_CLEAR(clear_module_state->__pyx_n_s_Image);
  Py_CLEAR(clear_module_state->__pyx_n_s_Imagenumpy);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Is_Direct);
  Py_CLEAR(clear_module_state->__pyx_n_s_KeyPress);
  Py_CLEAR(clear_module_state->__pyx_kp_s_KeyPress_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_LeftClick);
  Py_CLEAR(clear_module_state->__pyx_n_s_LoadLibrary);
  Py_CLEAR(clear_module_state->__pyx_n_s_MN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Map);
  Py_CLEAR(clear_module_state->__pyx_n_s_MiddleClick);
  Py_CLEAR(clear_module_state->__pyx_n_s_Motion);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Motion_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_MouseHover);
  Py_CLEAR(clear_module_state->__pyx_n_s_MouseLC);
  Py_CLEAR(clear_module_state->__pyx_n_s_MouseMC);
  Py_CLEAR(clear_module_state->__pyx_n_s_MouseRC);
  Py_CLEAR(clear_module_state->__pyx_n_s_NEWLINE);
  Py_CLEAR(clear_module_state->__pyx_n_s_NOENABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_New_Texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_NotImplementedError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Number_of_FBconfigs);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Number_of_extensions);
  Py_CLEAR(clear_module_state->__pyx_n_s_OBJECT);
  Py_CLEAR(clear_module_state->__pyx_n_s_Offests);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ok);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Old_context_errors_arose);
  Py_CLEAR(clear_module_state->__pyx_n_s_OnKey);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame__context);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame__window);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame_tkCreateContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame_tkMakeCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGLFrame_tkSwapBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL_GL);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL_GL_shaders);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL_WGL);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL_raw_GLX__types);
  Py_CLEAR(clear_module_state->__pyx_n_s_OpenGL_raw__GLX);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_StartRotate);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_activate);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_basic_lighting);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_do_AutoSpin);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_freecalc);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_help);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_initgl);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_redraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_reset);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_set_background);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_set_centerpoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_set_eyepoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkAutoSpin);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkExpose);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkHandlePick);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkPrint);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkRecordMouse);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkRedraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkRotate);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkScale);
  Py_CLEAR(clear_module_state->__pyx_n_s_Opengl_tkTranslate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PATH);
  Py_CLEAR(clear_module_state->__pyx_n_s_PFD_DOUBLEBUFFER);
  Py_CLEAR(clear_module_state->__pyx_n_s_PFD_DRAW_TO_WINDOW);
  Py_CLEAR(clear_module_state->__pyx_n_s_PFD_MAIN_PLANE);
  Py_CLEAR(clear_module_state->__pyx_n_s_PFD_SUPPORT_OPENGL);
  Py_CLEAR(clear_module_state->__pyx_n_s_PFD_TYPE_RGBA);
  Py_CLEAR(clear_module_state->__pyx_n_s_PIL);
  Py_CLEAR(clear_module_state->__pyx_n_s_PIXELFORMATDESCRIPTOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_POINTER);
  Py_CLEAR(clear_module_state->__pyx_n_s_PRERENDER_VBO);
  Py_CLEAR(clear_module_state->__pyx_n_s_PRERENDER_VBO___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_RAW_DATA);
  Py_CLEAR(clear_module_state->__pyx_n_s_RENDER_VBO);
  Py_CLEAR(clear_module_state->__pyx_n_s_RENDER_VBO___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_RGB);
  Py_CLEAR(clear_module_state->__pyx_n_s_RawOpengl);
  Py_CLEAR(clear_module_state->__pyx_n_s_RawOpengl___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_RawOpengl_tkRedraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_RightClick);
  Py_CLEAR(clear_module_state->__pyx_n_s_SHADER);
  Py_CLEAR(clear_module_state->__pyx_n_s_SHADER___init);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Screen_is);
  Py_CLEAR(clear_module_state->__pyx_n_s_SetPixelFormat);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Shift_Button_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_Spacing_add);
  Py_CLEAR(clear_module_state->__pyx_n_s_StartRotate);
  Py_CLEAR(clear_module_state->__pyx_n_s_SwapBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_TAB);
  Py_CLEAR(clear_module_state->__pyx_n_s_TEXTUREID);
  Py_CLEAR(clear_module_state->__pyx_n_s_TEXTURE_DISPLAY_METHOD);
  Py_CLEAR(clear_module_state->__pyx_n_s_TXC);
  Py_CLEAR(clear_module_state->__pyx_n_s_TXTARRAY);
  Py_CLEAR(clear_module_state->__pyx_n_s_Texture_unit);
  Py_CLEAR(clear_module_state->__pyx_n_s_Tkinter);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Tkinter_bindings_for_an_Opengl);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Uniform_Layout_Matrix_manipulat);
  Py_CLEAR(clear_module_state->__pyx_n_s_VBO);
  Py_CLEAR(clear_module_state->__pyx_n_s_VBO_OBJ);
  Py_CLEAR(clear_module_state->__pyx_n_s_VBO_OBJ___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_VBO___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_VERTEX_SHADER);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Viewer_help);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Widget_without_any_sophisticated);
  Py_CLEAR(clear_module_state->__pyx_n_s_WinDLL);
  Py_CLEAR(clear_module_state->__pyx_n_s_X11);
  Py_CLEAR(clear_module_state->__pyx_n_s_XDefaultScreen);
  Py_CLEAR(clear_module_state->__pyx_n_s_XOpenDisplay);
  Py_CLEAR(clear_module_state->__pyx_n_s_Z);
  Py_CLEAR(clear_module_state->__pyx_kp_s__10);
  Py_CLEAR(clear_module_state->__pyx_kp_s__13);
  Py_CLEAR(clear_module_state->__pyx_kp_s__207);
  Py_CLEAR(clear_module_state->__pyx_kp_s__8);
  Py_CLEAR(clear_module_state->__pyx_n_s__80);
  Py_CLEAR(clear_module_state->__pyx_kp_s__9);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_n_s_a_val);
  Py_CLEAR(clear_module_state->__pyx_n_s_abcdefgh);
  Py_CLEAR(clear_module_state->__pyx_n_s_access);
  Py_CLEAR(clear_module_state->__pyx_n_s_activate);
  Py_CLEAR(clear_module_state->__pyx_n_s_add_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_add_boldnext);
  Py_CLEAR(clear_module_state->__pyx_n_s_add_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_add_event);
  Py_CLEAR(clear_module_state->__pyx_n_s_add_textureupdate);
  Py_CLEAR(clear_module_state->__pyx_n_s_after);
  Py_CLEAR(clear_module_state->__pyx_n_s_after_cancel);
  Py_CLEAR(clear_module_state->__pyx_n_s_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_alpha);
  Py_CLEAR(clear_module_state->__pyx_n_s_animate);
  Py_CLEAR(clear_module_state->__pyx_n_s_append);
  Py_CLEAR(clear_module_state->__pyx_n_s_args);
  Py_CLEAR(clear_module_state->__pyx_n_s_argtypes);
  Py_CLEAR(clear_module_state->__pyx_n_s_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_ascender);
  Py_CLEAR(clear_module_state->__pyx_n_s_att);
  Py_CLEAR(clear_module_state->__pyx_n_s_autospin);
  Py_CLEAR(clear_module_state->__pyx_n_s_autospin_allowed);
  Py_CLEAR(clear_module_state->__pyx_n_s_b);
  Py_CLEAR(clear_module_state->__pyx_kp_s_b_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_b_back);
  Py_CLEAR(clear_module_state->__pyx_n_s_b_val);
  Py_CLEAR(clear_module_state->__pyx_n_s_background);
  Py_CLEAR(clear_module_state->__pyx_n_s_bands);
  Py_CLEAR(clear_module_state->__pyx_n_s_base);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame__display);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_check_all_b1_eve);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_check_all_bpress);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_check_all_brelas);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_check_event_butt);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_create_event);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_free_calc_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_freecalc);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_initgl);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_printContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_redraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkCreateContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkExpose);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkMakeCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkMap);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkResize);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_tkSwapBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_baseOpenGLFrame_wait);
  Py_CLEAR(clear_module_state->__pyx_n_s_basic_lighting);
  Py_CLEAR(clear_module_state->__pyx_n_s_basicshader);
  Py_CLEAR(clear_module_state->__pyx_n_s_best);
  Py_CLEAR(clear_module_state->__pyx_n_s_bg);
  Py_CLEAR(clear_module_state->__pyx_n_s_bind);
  Py_CLEAR(clear_module_state->__pyx_n_s_bind_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_bitmap);
  Py_CLEAR(clear_module_state->__pyx_n_s_bitmap_left);
  Py_CLEAR(clear_module_state->__pyx_n_s_bitmap_top);
  Py_CLEAR(clear_module_state->__pyx_n_s_bresenham);
  Py_CLEAR(clear_module_state->__pyx_n_s_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_buffer1);
  Py_CLEAR(clear_module_state->__pyx_n_s_bufferid);
  Py_CLEAR(clear_module_state->__pyx_n_s_buffmanager);
  Py_CLEAR(clear_module_state->__pyx_n_s_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_c1);
  Py_CLEAR(clear_module_state->__pyx_n_s_c1_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_c2);
  Py_CLEAR(clear_module_state->__pyx_n_s_c2_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_c3);
  Py_CLEAR(clear_module_state->__pyx_n_s_c4);
  Py_CLEAR(clear_module_state->__pyx_n_s_cColorBits);
  Py_CLEAR(clear_module_state->__pyx_n_s_cDepthBits);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_bool);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_char_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_float);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_int);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_void_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_call);
  Py_CLEAR(clear_module_state->__pyx_n_s_cb);
  Py_CLEAR(clear_module_state->__pyx_n_s_cdll);
  Py_CLEAR(clear_module_state->__pyx_n_s_centre);
  Py_CLEAR(clear_module_state->__pyx_n_s_cf);
  Py_CLEAR(clear_module_state->__pyx_n_s_cfgs);
  Py_CLEAR(clear_module_state->__pyx_n_s_cfloat);
  Py_CLEAR(clear_module_state->__pyx_n_s_cfloat_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_change_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_check);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_all_b1_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_all_bpress_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_all_brelase_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_event_button_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkkeypress);
  Py_CLEAR(clear_module_state->__pyx_n_s_checklclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkmclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkmotion);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkrclick);
  Py_CLEAR(clear_module_state->__pyx_n_s_chr);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_cnf);
  Py_CLEAR(clear_module_state->__pyx_n_s_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_compile);
  Py_CLEAR(clear_module_state->__pyx_n_s_compileProgram);
  Py_CLEAR(clear_module_state->__pyx_n_s_compileShader);
  Py_CLEAR(clear_module_state->__pyx_n_s_config);
  Py_CLEAR(clear_module_state->__pyx_n_s_contents);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords1);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords2);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords3);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords4);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_cords_to_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_s_crd);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_event);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_font);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_create_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_crop);
  Py_CLEAR(clear_module_state->__pyx_n_s_ct);
  Py_CLEAR(clear_module_state->__pyx_n_s_ctypes);
  Py_CLEAR(clear_module_state->__pyx_n_s_ctypes_wintypes);
  Py_CLEAR(clear_module_state->__pyx_n_s_curpos);
  Py_CLEAR(clear_module_state->__pyx_n_s_cvroot);
  Py_CLEAR(clear_module_state->__pyx_n_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_dat);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_length);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_tr1);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_tr2);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_txn);
  Py_CLEAR(clear_module_state->__pyx_n_s_data_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_default);
  Py_CLEAR(clear_module_state->__pyx_n_s_del_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_delay);
  Py_CLEAR(clear_module_state->__pyx_n_s_delete_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_descender);
  Py_CLEAR(clear_module_state->__pyx_n_s_dialog);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_display);
  Py_CLEAR(clear_module_state->__pyx_n_s_dist);
  Py_CLEAR(clear_module_state->__pyx_n_s_distance);
  Py_CLEAR(clear_module_state->__pyx_n_s_do_AutoSpin);
  Py_CLEAR(clear_module_state->__pyx_n_s_doc);
  Py_CLEAR(clear_module_state->__pyx_n_s_docs);
  Py_CLEAR(clear_module_state->__pyx_n_s_dp_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_line);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_lines);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_point);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_quad_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_quad_texture_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_draw_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_dtype);
  Py_CLEAR(clear_module_state->__pyx_n_s_dummy);
  Py_CLEAR(clear_module_state->__pyx_n_s_dwFlags);
  Py_CLEAR(clear_module_state->__pyx_n_s_dx);
  Py_CLEAR(clear_module_state->__pyx_n_s_dy);
  Py_CLEAR(clear_module_state->__pyx_n_s_e);
  Py_CLEAR(clear_module_state->__pyx_n_s_edit_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_edit_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_edit_pos);
  Py_CLEAR(clear_module_state->__pyx_n_s_edit_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_edit_tpos);
  Py_CLEAR(clear_module_state->__pyx_n_s_encode);
  Py_CLEAR(clear_module_state->__pyx_n_s_end);
  Py_CLEAR(clear_module_state->__pyx_n_s_environ);
  Py_CLEAR(clear_module_state->__pyx_n_s_ev);
  Py_CLEAR(clear_module_state->__pyx_n_s_ev_list);
  Py_CLEAR(clear_module_state->__pyx_n_s_ev_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_event);
  Py_CLEAR(clear_module_state->__pyx_n_s_event_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_eventmanager);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_B1);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_B2);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_B3);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_BP);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_BR);
  Py_CLEAR(clear_module_state->__pyx_n_s_events_MN);
  Py_CLEAR(clear_module_state->__pyx_n_s_evt);
  Py_CLEAR(clear_module_state->__pyx_n_s_extend);
  Py_CLEAR(clear_module_state->__pyx_n_s_extensions);
  Py_CLEAR(clear_module_state->__pyx_n_s_extns);
  Py_CLEAR(clear_module_state->__pyx_n_s_exts);
  Py_CLEAR(clear_module_state->__pyx_n_s_f);
  Py_CLEAR(clear_module_state->__pyx_n_s_face);
  Py_CLEAR(clear_module_state->__pyx_n_s_far);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbatt);
  Py_CLEAR(clear_module_state->__pyx_n_s_fgshader);
  Py_CLEAR(clear_module_state->__pyx_n_s_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_filename);
  Py_CLEAR(clear_module_state->__pyx_n_s_find_library);
  Py_CLEAR(clear_module_state->__pyx_n_s_flat);
  Py_CLEAR(clear_module_state->__pyx_n_s_font);
  Py_CLEAR(clear_module_state->__pyx_n_s_font_config);
  Py_CLEAR(clear_module_state->__pyx_n_s_font_letters);
  Py_CLEAR(clear_module_state->__pyx_n_s_font_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_fovy);
  Py_CLEAR(clear_module_state->__pyx_n_s_free_calc_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_freecalc);
  Py_CLEAR(clear_module_state->__pyx_n_s_freecalc_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_freetype);
  Py_CLEAR(clear_module_state->__pyx_n_s_from);
  Py_CLEAR(clear_module_state->__pyx_n_s_frombuffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_func);
  Py_CLEAR(clear_module_state->__pyx_n_s_g);
  Py_CLEAR(clear_module_state->__pyx_n_s_g_back);
  Py_CLEAR(clear_module_state->__pyx_n_s_g_val);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_buffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_color);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_objectindexes);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_pos);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_shader);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_texid);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_vertices);
  Py_CLEAR(clear_module_state->__pyx_n_s_getdata);
  Py_CLEAR(clear_module_state->__pyx_n_s_getint);
  Py_CLEAR(clear_module_state->__pyx_n_s_getsize);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBegin);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBindBuffer);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBindTexture);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBindTextureUnit);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBufferData);
  Py_CLEAR(clear_module_state->__pyx_n_s_glBufferSubData);
  Py_CLEAR(clear_module_state->__pyx_n_s_glColor3f);
  Py_CLEAR(clear_module_state->__pyx_n_s_glColor4f);
  Py_CLEAR(clear_module_state->__pyx_n_s_glDepthFunc);
  Py_CLEAR(clear_module_state->__pyx_n_s_glDisable);
  Py_CLEAR(clear_module_state->__pyx_n_s_glDrawArrays);
  Py_CLEAR(clear_module_state->__pyx_n_s_glEnable);
  Py_CLEAR(clear_module_state->__pyx_n_s_glEnableClientState);
  Py_CLEAR(clear_module_state->__pyx_n_s_glEnableVertexAttribArray);
  Py_CLEAR(clear_module_state->__pyx_n_s_glEnd);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGenBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGenTextures);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGetDoublev);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGetIntegerv);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGetString);
  Py_CLEAR(clear_module_state->__pyx_n_s_glGetUniformLocation);
  Py_CLEAR(clear_module_state->__pyx_n_s_glLightfv);
  Py_CLEAR(clear_module_state->__pyx_n_s_glLoadIdentity);
  Py_CLEAR(clear_module_state->__pyx_n_s_glMatrixMode);
  Py_CLEAR(clear_module_state->__pyx_n_s_glPixelStorei);
  Py_CLEAR(clear_module_state->__pyx_n_s_glRotateScene);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTexCoord2f);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTexImage2D);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTexParameterf);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTexParameteri);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTexSubImage2D);
  Py_CLEAR(clear_module_state->__pyx_n_s_glTranslateScene);
  Py_CLEAR(clear_module_state->__pyx_n_s_glUniform1iv);
  Py_CLEAR(clear_module_state->__pyx_n_s_glUseProgram);
  Py_CLEAR(clear_module_state->__pyx_n_s_glVertex2f);
  Py_CLEAR(clear_module_state->__pyx_n_s_glVertexAttribPointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_glViewport);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXChooseFBConfig);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXChooseVisual);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXCreateContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXCreateNewContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXGetVisualFromFBConfig);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXIsDirect);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXMakeContextCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXMakeCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXQueryExtensionsString);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXQueryVersion);
  Py_CLEAR(clear_module_state->__pyx_n_s_glXSwapBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_gluLookAt);
  Py_CLEAR(clear_module_state->__pyx_n_s_gluPerspective);
  Py_CLEAR(clear_module_state->__pyx_n_s_gluProject);
  Py_CLEAR(clear_module_state->__pyx_n_s_gluUnProject);
  Py_CLEAR(clear_module_state->__pyx_n_s_glyph);
  Py_CLEAR(clear_module_state->__pyx_n_s_h);
  Py_CLEAR(clear_module_state->__pyx_n_s_height);
  Py_CLEAR(clear_module_state->__pyx_n_s_help);
  Py_CLEAR(clear_module_state->__pyx_n_s_hex);
  Py_CLEAR(clear_module_state->__pyx_n_s_hover_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_iLayerType);
  Py_CLEAR(clear_module_state->__pyx_n_s_iPixelType);
  Py_CLEAR(clear_module_state->__pyx_n_s_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_ideal);
  Py_CLEAR(clear_module_state->__pyx_n_s_idx);
  Py_CLEAR(clear_module_state->__pyx_n_s_il);
  Py_CLEAR(clear_module_state->__pyx_n_s_image);
  Py_CLEAR(clear_module_state->__pyx_n_s_imgnp);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_init);
  Py_CLEAR(clear_module_state->__pyx_n_s_init_subclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_initgl);
  Py_CLEAR(clear_module_state->__pyx_n_s_initialised);
  Py_CLEAR(clear_module_state->__pyx_n_s_insert);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_fixed_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_serialized);
  Py_CLEAR(clear_module_state->__pyx_n_s_j);
  Py_CLEAR(clear_module_state->__pyx_n_s_keypress_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_kw);
  Py_CLEAR(clear_module_state->__pyx_n_s_l);
  Py_CLEAR(clear_module_state->__pyx_n_s_launch_func);
  Py_CLEAR(clear_module_state->__pyx_n_s_launch_function_beg);
  Py_CLEAR(clear_module_state->__pyx_n_s_launch_function_end);
  Py_CLEAR(clear_module_state->__pyx_n_s_launch_function_mid);
  Py_CLEAR(clear_module_state->__pyx_n_s_launchev);
  Py_CLEAR(clear_module_state->__pyx_n_s_lclick_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_lfe);
  Py_CLEAR(clear_module_state->__pyx_n_s_lfg);
  Py_CLEAR(clear_module_state->__pyx_n_s_lfm);
  Py_CLEAR(clear_module_state->__pyx_n_s_light_position);
  Py_CLEAR(clear_module_state->__pyx_n_s_linux);
  Py_CLEAR(clear_module_state->__pyx_n_s_list);
  Py_CLEAR(clear_module_state->__pyx_n_s_load);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_char);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_scene);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture_dp);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture_locals_image);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture_locals_image___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture_repeat);
  Py_CLEAR(clear_module_state->__pyx_n_s_load_texture_sub);
  Py_CLEAR(clear_module_state->__pyx_n_s_ls);
  Py_CLEAR(clear_module_state->__pyx_n_s_m);
  Py_CLEAR(clear_module_state->__pyx_n_s_m_new);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_major);
  Py_CLEAR(clear_module_state->__pyx_n_s_mask);
  Py_CLEAR(clear_module_state->__pyx_n_s_master);
  Py_CLEAR(clear_module_state->__pyx_n_s_math);
  Py_CLEAR(clear_module_state->__pyx_n_s_mclick_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_mem_img);
  Py_CLEAR(clear_module_state->__pyx_n_s_metaclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_minor);
  Py_CLEAR(clear_module_state->__pyx_n_s_mmap);
  Py_CLEAR(clear_module_state->__pyx_n_s_mode);
  Py_CLEAR(clear_module_state->__pyx_n_s_mode_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_module);
  Py_CLEAR(clear_module_state->__pyx_n_s_move);
  Py_CLEAR(clear_module_state->__pyx_n_s_move_down);
  Py_CLEAR(clear_module_state->__pyx_n_s_move_up);
  Py_CLEAR(clear_module_state->__pyx_n_s_msk);
  Py_CLEAR(clear_module_state->__pyx_n_s_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_naiveline);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_named);
  Py_CLEAR(clear_module_state->__pyx_n_s_ncfg);
  Py_CLEAR(clear_module_state->__pyx_n_s_nd);
  Py_CLEAR(clear_module_state->__pyx_n_s_near);
  Py_CLEAR(clear_module_state->__pyx_n_s_new);
  Py_CLEAR(clear_module_state->__pyx_n_s_new_from_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_newcolor);
  Py_CLEAR(clear_module_state->__pyx_n_s_newpos);
  Py_CLEAR(clear_module_state->__pyx_n_s_newsize);
  Py_CLEAR(clear_module_state->__pyx_n_s_newtpos);
  Py_CLEAR(clear_module_state->__pyx_n_s_np);
  Py_CLEAR(clear_module_state->__pyx_n_s_nr);
  Py_CLEAR(clear_module_state->__pyx_n_s_numpy);
  Py_CLEAR(clear_module_state->__pyx_n_s_nx);
  Py_CLEAR(clear_module_state->__pyx_n_s_ny);
  Py_CLEAR(clear_module_state->__pyx_n_s_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_obj_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_object);
  Py_CLEAR(clear_module_state->__pyx_n_s_object_count);
  Py_CLEAR(clear_module_state->__pyx_n_s_object_counts);
  Py_CLEAR(clear_module_state->__pyx_n_s_object_indexes);
  Py_CLEAR(clear_module_state->__pyx_n_s_object_moved);
  Py_CLEAR(clear_module_state->__pyx_kp_s_oh_dear_visual_does_not_match);
  Py_CLEAR(clear_module_state->__pyx_n_s_oj);
  Py_CLEAR(clear_module_state->__pyx_n_s_open);
  Py_CLEAR(clear_module_state->__pyx_n_s_orgsize);
  Py_CLEAR(clear_module_state->__pyx_n_s_os);
  Py_CLEAR(clear_module_state->__pyx_n_s_ou);
  Py_CLEAR(clear_module_state->__pyx_n_s_overlay);
  Py_CLEAR(clear_module_state->__pyx_n_s_p1);
  Py_CLEAR(clear_module_state->__pyx_n_s_p2);
  Py_CLEAR(clear_module_state->__pyx_n_s_pas);
  Py_CLEAR(clear_module_state->__pyx_n_s_paste);
  Py_CLEAR(clear_module_state->__pyx_n_s_pfd);
  Py_CLEAR(clear_module_state->__pyx_n_s_pick);
  Py_CLEAR(clear_module_state->__pyx_n_s_pix_rat_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_pix_rat_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_pixelformat);
  Py_CLEAR(clear_module_state->__pyx_n_s_pixels);
  Py_CLEAR(clear_module_state->__pyx_n_s_platform);
  Py_CLEAR(clear_module_state->__pyx_n_s_pointer);
  Py_CLEAR(clear_module_state->__pyx_n_s_pointerx);
  Py_CLEAR(clear_module_state->__pyx_n_s_pointery);
  Py_CLEAR(clear_module_state->__pyx_n_s_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_pop);
  Py_CLEAR(clear_module_state->__pyx_n_s_prepare);
  Py_CLEAR(clear_module_state->__pyx_n_s_prequad);
  Py_CLEAR(clear_module_state->__pyx_n_s_prerender_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_prerender_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_prerender_texturequad);
  Py_CLEAR(clear_module_state->__pyx_n_s_prerenderedobj);
  Py_CLEAR(clear_module_state->__pyx_n_s_pretext);
  Py_CLEAR(clear_module_state->__pyx_n_s_pretextquad);
  Py_CLEAR(clear_module_state->__pyx_n_s_previoev);
  Py_CLEAR(clear_module_state->__pyx_n_s_print);
  Py_CLEAR(clear_module_state->__pyx_n_s_printContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_pure_pil_alpha_to_color_v2);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyvips);
  Py_CLEAR(clear_module_state->__pyx_n_s_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_qualname);
  Py_CLEAR(clear_module_state->__pyx_n_s_questhead);
  Py_CLEAR(clear_module_state->__pyx_n_s_queue);
  Py_CLEAR(clear_module_state->__pyx_n_s_queue_check);
  Py_CLEAR(clear_module_state->__pyx_n_s_r);
  Py_CLEAR(clear_module_state->__pyx_n_s_r_back);
  Py_CLEAR(clear_module_state->__pyx_n_s_r_val);
  Py_CLEAR(clear_module_state->__pyx_n_s_random);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_rclick_events);
  Py_CLEAR(clear_module_state->__pyx_n_s_real_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_real_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_realdata);
  Py_CLEAR(clear_module_state->__pyx_n_s_realy);
  Py_CLEAR(clear_module_state->__pyx_n_s_redraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_render);
  Py_CLEAR(clear_module_state->__pyx_n_s_render_letter);
  Py_CLEAR(clear_module_state->__pyx_n_s_render_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_render_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_render_texture_quad);
  Py_CLEAR(clear_module_state->__pyx_n_s_repeat);
  Py_CLEAR(clear_module_state->__pyx_n_s_reset);
  Py_CLEAR(clear_module_state->__pyx_n_s_reshape);
  Py_CLEAR(clear_module_state->__pyx_n_s_resize);
  Py_CLEAR(clear_module_state->__pyx_n_s_resize_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_restype);
  Py_CLEAR(clear_module_state->__pyx_n_s_rgba2rgb);
  Py_CLEAR(clear_module_state->__pyx_n_s_rise);
  Py_CLEAR(clear_module_state->__pyx_n_s_rnd);
  Py_CLEAR(clear_module_state->__pyx_n_s_rotate);
  Py_CLEAR(clear_module_state->__pyx_n_s_round);
  Py_CLEAR(clear_module_state->__pyx_n_s_rows);
  Py_CLEAR(clear_module_state->__pyx_n_s_run);
  Py_CLEAR(clear_module_state->__pyx_n_s_s);
  Py_CLEAR(clear_module_state->__pyx_n_s_sav_vert);
  Py_CLEAR(clear_module_state->__pyx_n_s_scale);
  Py_CLEAR(clear_module_state->__pyx_n_s_scalex);
  Py_CLEAR(clear_module_state->__pyx_n_s_scaley);
  Py_CLEAR(clear_module_state->__pyx_n_s_screen);
  Py_CLEAR(clear_module_state->__pyx_n_s_screen_res);
  Py_CLEAR(clear_module_state->__pyx_n_s_screenx);
  Py_CLEAR(clear_module_state->__pyx_n_s_screeny);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_n_s_self_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_sequential);
  Py_CLEAR(clear_module_state->__pyx_n_s_serialization);
  Py_CLEAR(clear_module_state->__pyx_n_s_serialization_current_object);
  Py_CLEAR(clear_module_state->__pyx_n_s_serialize_to_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_serialized_obj);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_background);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_centerpoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_char_size);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_eyepoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_mode);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_shaderprogram);
  Py_CLEAR(clear_module_state->__pyx_n_s_shaders);
  Py_CLEAR(clear_module_state->__pyx_n_s_shape);
  Py_CLEAR(clear_module_state->__pyx_n_s_shrink);
  Py_CLEAR(clear_module_state->__pyx_n_s_size);
  Py_CLEAR(clear_module_state->__pyx_n_s_size_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_size_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_sizeof);
  Py_CLEAR(clear_module_state->__pyx_n_s_sizex);
  Py_CLEAR(clear_module_state->__pyx_n_s_sizey);
  Py_CLEAR(clear_module_state->__pyx_n_s_sleep);
  Py_CLEAR(clear_module_state->__pyx_n_s_slope_error_new);
  Py_CLEAR(clear_module_state->__pyx_n_s_spacing);
  Py_CLEAR(clear_module_state->__pyx_n_s_spacing_addx);
  Py_CLEAR(clear_module_state->__pyx_n_s_spacing_addy);
  Py_CLEAR(clear_module_state->__pyx_n_s_spacing_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_split);
  Py_CLEAR(clear_module_state->__pyx_n_s_sqrt);
  Py_CLEAR(clear_module_state->__pyx_n_s_start_new_thread);
  Py_CLEAR(clear_module_state->__pyx_n_s_startswith);
  Py_CLEAR(clear_module_state->__pyx_n_s_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_strings);
  Py_CLEAR(clear_module_state->__pyx_n_s_super);
  Py_CLEAR(clear_module_state->__pyx_n_s_switch);
  Py_CLEAR(clear_module_state->__pyx_n_s_sx);
  Py_CLEAR(clear_module_state->__pyx_n_s_sy);
  Py_CLEAR(clear_module_state->__pyx_n_s_sys);
  Py_CLEAR(clear_module_state->__pyx_n_s_t);
  Py_CLEAR(clear_module_state->__pyx_n_s_t1);
  Py_CLEAR(clear_module_state->__pyx_n_s_t2);
  Py_CLEAR(clear_module_state->__pyx_n_s_t3);
  Py_CLEAR(clear_module_state->__pyx_n_s_t4);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_tex_arrayn_translate);
  Py_CLEAR(clear_module_state->__pyx_n_s_texcords1);
  Py_CLEAR(clear_module_state->__pyx_n_s_texcords2);
  Py_CLEAR(clear_module_state->__pyx_n_s_texcords3);
  Py_CLEAR(clear_module_state->__pyx_n_s_texcords4);
  Py_CLEAR(clear_module_state->__pyx_n_s_texid);
  Py_CLEAR(clear_module_state->__pyx_n_s_texsize);
  Py_CLEAR(clear_module_state->__pyx_n_s_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_textid);
  Py_CLEAR(clear_module_state->__pyx_n_s_textn);
  Py_CLEAR(clear_module_state->__pyx_n_s_textr);
  Py_CLEAR(clear_module_state->__pyx_n_s_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_texture_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_texture_cords_to_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_s_texture_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_texture_slots);
  Py_CLEAR(clear_module_state->__pyx_n_s_textured);
  Py_CLEAR(clear_module_state->__pyx_n_s_textures);
  Py_CLEAR(clear_module_state->__pyx_n_s_th);
  Py_CLEAR(clear_module_state->__pyx_n_s_thread);
  Py_CLEAR(clear_module_state->__pyx_n_s_time);
  Py_CLEAR(clear_module_state->__pyx_n_s_title);
  Py_CLEAR(clear_module_state->__pyx_n_s_tk);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkAutoSpin);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkCreateContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkExpose);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkHandlePick);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkMakeCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkMap);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkPrint);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkRecordMouse);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkRedraw);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkResize);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkRotate);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkScale);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkSwapBuffers);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkTranslate);
  Py_CLEAR(clear_module_state->__pyx_n_s_tkinter);
  Py_CLEAR(clear_module_state->__pyx_n_s_tlist);
  Py_CLEAR(clear_module_state->__pyx_n_s_to);
  Py_CLEAR(clear_module_state->__pyx_n_s_total_updates);
  Py_CLEAR(clear_module_state->__pyx_n_s_tquad);
  Py_CLEAR(clear_module_state->__pyx_n_s_tr1);
  Py_CLEAR(clear_module_state->__pyx_n_s_tr2);
  Py_CLEAR(clear_module_state->__pyx_n_s_tu);
  Py_CLEAR(clear_module_state->__pyx_n_s_tua);
  Py_CLEAR(clear_module_state->__pyx_n_s_txn);
  Py_CLEAR(clear_module_state->__pyx_n_s_txs);
  Py_CLEAR(clear_module_state->__pyx_n_s_txtid);
  Py_CLEAR(clear_module_state->__pyx_n_s_ubyte);
  Py_CLEAR(clear_module_state->__pyx_n_s_uint8);
  Py_CLEAR(clear_module_state->__pyx_n_s_unload);
  Py_CLEAR(clear_module_state->__pyx_n_s_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_update_animation);
  Py_CLEAR(clear_module_state->__pyx_n_s_update_idletasks);
  Py_CLEAR(clear_module_state->__pyx_n_s_update_list);
  Py_CLEAR(clear_module_state->__pyx_n_s_updates);
  Py_CLEAR(clear_module_state->__pyx_n_s_use_texture);
  Py_CLEAR(clear_module_state->__pyx_n_s_usecords);
  Py_CLEAR(clear_module_state->__pyx_n_s_user32);
  Py_CLEAR(clear_module_state->__pyx_n_s_user32_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_usingVIPSandShrink);
  Py_CLEAR(clear_module_state->__pyx_kp_s_utf_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_util);
  Py_CLEAR(clear_module_state->__pyx_n_s_v3distsq);
  Py_CLEAR(clear_module_state->__pyx_n_s_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_vb_count);
  Py_CLEAR(clear_module_state->__pyx_n_s_vbo);
  Py_CLEAR(clear_module_state->__pyx_n_s_vbos);
  Py_CLEAR(clear_module_state->__pyx_kp_s_version_330_core_layout_locatio);
  Py_CLEAR(clear_module_state->__pyx_kp_s_version_330_core_layout_locatio_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_version_info);
  Py_CLEAR(clear_module_state->__pyx_n_s_vert_lists);
  Py_CLEAR(clear_module_state->__pyx_n_s_vertices);
  Py_CLEAR(clear_module_state->__pyx_n_s_vipshome);
  Py_CLEAR(clear_module_state->__pyx_n_s_vis);
  Py_CLEAR(clear_module_state->__pyx_n_s_visual);
  Py_CLEAR(clear_module_state->__pyx_n_s_visualid);
  Py_CLEAR(clear_module_state->__pyx_n_s_vns);
  Py_CLEAR(clear_module_state->__pyx_n_s_vxshader);
  Py_CLEAR(clear_module_state->__pyx_n_s_w);
  Py_CLEAR(clear_module_state->__pyx_n_s_w_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_wait);
  Py_CLEAR(clear_module_state->__pyx_n_s_wglCreateContext);
  Py_CLEAR(clear_module_state->__pyx_n_s_wglMakeCurrent);
  Py_CLEAR(clear_module_state->__pyx_n_s_wid);
  Py_CLEAR(clear_module_state->__pyx_n_s_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_win);
  Py_CLEAR(clear_module_state->__pyx_n_s_win32);
  Py_CLEAR(clear_module_state->__pyx_n_s_win_height);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_height);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_ismapped);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_screen);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_visualid);
  Py_CLEAR(clear_module_state->__pyx_n_s_winfo_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_write_to_memory);
  Py_CLEAR(clear_module_state->__pyx_n_s_wtf);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_x1);
  Py_CLEAR(clear_module_state->__pyx_n_s_x11lib);
  Py_CLEAR(clear_module_state->__pyx_n_s_x2);
  Py_CLEAR(clear_module_state->__pyx_n_s_x_root);
  Py_CLEAR(clear_module_state->__pyx_n_s_xcenter);
  Py_CLEAR(clear_module_state->__pyx_n_s_xmouse);
  Py_CLEAR(clear_module_state->__pyx_n_s_xr);
  Py_CLEAR(clear_module_state->__pyx_n_s_xspin);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_y1);
  Py_CLEAR(clear_module_state->__pyx_n_s_y2);
  Py_CLEAR(clear_module_state->__pyx_n_s_y_root);
  Py_CLEAR(clear_module_state->__pyx_n_s_ycenter);
  Py_CLEAR(clear_module_state->__pyx_n_s_ymouse);
  Py_CLEAR(clear_module_state->__pyx_n_s_yr);
  Py_CLEAR(clear_module_state->__pyx_n_s_yspin);
  Py_CLEAR(clear_module_state->__pyx_n_s_z);
  Py_CLEAR(clear_module_state->__pyx_n_s_zcenter);
  Py_CLEAR(clear_module_state->__pyx_n_s_zeros);
  Py_CLEAR(clear_module_state->__pyx_float_0_);
  Py_CLEAR(clear_module_state->__pyx_float_1_);
  Py_CLEAR(clear_module_state->__pyx_float_0_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_1);
  Py_CLEAR(clear_module_state->__pyx_float_0_5);
  Py_CLEAR(clear_module_state->__pyx_float_1_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_01);
  Py_CLEAR(clear_module_state->__pyx_float_10_0);
  Py_CLEAR(clear_module_state->__pyx_float_30_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_001);
  Py_CLEAR(clear_module_state->__pyx_float_1000_0);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_2);
  Py_CLEAR(clear_module_state->__pyx_int_3);
  Py_CLEAR(clear_module_state->__pyx_int_4);
  Py_CLEAR(clear_module_state->__pyx_int_5);
  Py_CLEAR(clear_module_state->__pyx_int_6);
  Py_CLEAR(clear_module_state->__pyx_int_7);
  Py_CLEAR(clear_module_state->__pyx_int_8);
  Py_CLEAR(clear_module_state->__pyx_int_9);
  Py_CLEAR(clear_module_state->__pyx_int_10);
  Py_CLEAR(clear_module_state->__pyx_int_11);
  Py_CLEAR(clear_module_state->__pyx_int_12);
  Py_CLEAR(clear_module_state->__pyx_int_13);
  Py_CLEAR(clear_module_state->__pyx_int_14);
  Py_CLEAR(clear_module_state->__pyx_int_15);
  Py_CLEAR(clear_module_state->__pyx_int_16);
  Py_CLEAR(clear_module_state->__pyx_int_17);
  Py_CLEAR(clear_module_state->__pyx_int_18);
  Py_CLEAR(clear_module_state->__pyx_int_19);
  Py_CLEAR(clear_module_state->__pyx_int_20);
  Py_CLEAR(clear_module_state->__pyx_int_21);
  Py_CLEAR(clear_module_state->__pyx_int_23);
  Py_CLEAR(clear_module_state->__pyx_int_24);
  Py_CLEAR(clear_module_state->__pyx_int_25);
  Py_CLEAR(clear_module_state->__pyx_int_26);
  Py_CLEAR(clear_module_state->__pyx_int_27);
  Py_CLEAR(clear_module_state->__pyx_int_28);
  Py_CLEAR(clear_module_state->__pyx_int_29);
  Py_CLEAR(clear_module_state->__pyx_int_30);
  Py_CLEAR(clear_module_state->__pyx_int_31);
  Py_CLEAR(clear_module_state->__pyx_int_32);
  Py_CLEAR(clear_module_state->__pyx_int_33);
  Py_CLEAR(clear_module_state->__pyx_int_34);
  Py_CLEAR(clear_module_state->__pyx_int_35);
  Py_CLEAR(clear_module_state->__pyx_int_36);
  Py_CLEAR(clear_module_state->__pyx_int_37);
  Py_CLEAR(clear_module_state->__pyx_int_38);
  Py_CLEAR(clear_module_state->__pyx_int_39);
  Py_CLEAR(clear_module_state->__pyx_int_40);
  Py_CLEAR(clear_module_state->__pyx_int_64);
  Py_CLEAR(clear_module_state->__pyx_int_255);
  Py_CLEAR(clear_module_state->__pyx_int_256);
  Py_CLEAR(clear_module_state->__pyx_int_1000);
  Py_CLEAR(clear_module_state->__pyx_int_1080);
  Py_CLEAR(clear_module_state->__pyx_int_1920);
  Py_CLEAR(clear_module_state->__pyx_int_neg_1);
  Py_CLEAR(clear_module_state->__pyx_int_neg_10);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_slice__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__20);
  Py_CLEAR(clear_module_state->__pyx_tuple__21);
  Py_CLEAR(clear_module_state->__pyx_tuple__23);
  Py_CLEAR(clear_module_state->__pyx_tuple__25);
  Py_CLEAR(clear_module_state->__pyx_tuple__27);
  Py_CLEAR(clear_module_state->__pyx_tuple__29);
  Py_CLEAR(clear_module_state->__pyx_tuple__31);
  Py_CLEAR(clear_module_state->__pyx_tuple__33);
  Py_CLEAR(clear_module_state->__pyx_tuple__35);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__43);
  Py_CLEAR(clear_module_state->__pyx_tuple__45);
  Py_CLEAR(clear_module_state->__pyx_tuple__47);
  Py_CLEAR(clear_module_state->__pyx_tuple__50);
  Py_CLEAR(clear_module_state->__pyx_tuple__52);
  Py_CLEAR(clear_module_state->__pyx_tuple__57);
  Py_CLEAR(clear_module_state->__pyx_tuple__59);
  Py_CLEAR(clear_module_state->__pyx_tuple__61);
  Py_CLEAR(clear_module_state->__pyx_tuple__63);
  Py_CLEAR(clear_module_state->__pyx_tuple__65);
  Py_CLEAR(clear_module_state->__pyx_tuple__67);
  Py_CLEAR(clear_module_state->__pyx_tuple__69);
  Py_CLEAR(clear_module_state->__pyx_tuple__71);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__75);
  Py_CLEAR(clear_module_state->__pyx_tuple__76);
  Py_CLEAR(clear_module_state->__pyx_tuple__78);
  Py_CLEAR(clear_module_state->__pyx_tuple__81);
  Py_CLEAR(clear_module_state->__pyx_tuple__83);
  Py_CLEAR(clear_module_state->__pyx_tuple__85);
  Py_CLEAR(clear_module_state->__pyx_tuple__87);
  Py_CLEAR(clear_module_state->__pyx_tuple__89);
  Py_CLEAR(clear_module_state->__pyx_tuple__91);
  Py_CLEAR(clear_module_state->__pyx_tuple__93);
  Py_CLEAR(clear_module_state->__pyx_tuple__95);
  Py_CLEAR(clear_module_state->__pyx_tuple__97);
  Py_CLEAR(clear_module_state->__pyx_tuple__98);
  Py_CLEAR(clear_module_state->__pyx_tuple__100);
  Py_CLEAR(clear_module_state->__pyx_tuple__102);
  Py_CLEAR(clear_module_state->__pyx_tuple__104);
  Py_CLEAR(clear_module_state->__pyx_tuple__106);
  Py_CLEAR(clear_module_state->__pyx_tuple__108);
  Py_CLEAR(clear_module_state->__pyx_tuple__110);
  Py_CLEAR(clear_module_state->__pyx_tuple__112);
  Py_CLEAR(clear_module_state->__pyx_tuple__114);
  Py_CLEAR(clear_module_state->__pyx_tuple__116);
  Py_CLEAR(clear_module_state->__pyx_tuple__118);
  Py_CLEAR(clear_module_state->__pyx_tuple__120);
  Py_CLEAR(clear_module_state->__pyx_tuple__121);
  Py_CLEAR(clear_module_state->__pyx_tuple__122);
  Py_CLEAR(clear_module_state->__pyx_tuple__124);
  Py_CLEAR(clear_module_state->__pyx_tuple__126);
  Py_CLEAR(clear_module_state->__pyx_tuple__128);
  Py_CLEAR(clear_module_state->__pyx_tuple__129);
  Py_CLEAR(clear_module_state->__pyx_tuple__130);
  Py_CLEAR(clear_module_state->__pyx_tuple__132);
  Py_CLEAR(clear_module_state->__pyx_tuple__134);
  Py_CLEAR(clear_module_state->__pyx_tuple__136);
  Py_CLEAR(clear_module_state->__pyx_tuple__138);
  Py_CLEAR(clear_module_state->__pyx_tuple__140);
  Py_CLEAR(clear_module_state->__pyx_tuple__142);
  Py_CLEAR(clear_module_state->__pyx_tuple__144);
  Py_CLEAR(clear_module_state->__pyx_tuple__146);
  Py_CLEAR(clear_module_state->__pyx_tuple__148);
  Py_CLEAR(clear_module_state->__pyx_tuple__150);
  Py_CLEAR(clear_module_state->__pyx_tuple__152);
  Py_CLEAR(clear_module_state->__pyx_tuple__154);
  Py_CLEAR(clear_module_state->__pyx_tuple__156);
  Py_CLEAR(clear_module_state->__pyx_tuple__158);
  Py_CLEAR(clear_module_state->__pyx_tuple__160);
  Py_CLEAR(clear_module_state->__pyx_tuple__162);
  Py_CLEAR(clear_module_state->__pyx_tuple__164);
  Py_CLEAR(clear_module_state->__pyx_tuple__166);
  Py_CLEAR(clear_module_state->__pyx_tuple__168);
  Py_CLEAR(clear_module_state->__pyx_tuple__170);
  Py_CLEAR(clear_module_state->__pyx_tuple__172);
  Py_CLEAR(clear_module_state->__pyx_tuple__174);
  Py_CLEAR(clear_module_state->__pyx_tuple__176);
  Py_CLEAR(clear_module_state->__pyx_tuple__178);
  Py_CLEAR(clear_module_state->__pyx_tuple__180);
  Py_CLEAR(clear_module_state->__pyx_tuple__182);
  Py_CLEAR(clear_module_state->__pyx_tuple__184);
  Py_CLEAR(clear_module_state->__pyx_tuple__186);
  Py_CLEAR(clear_module_state->__pyx_tuple__188);
  Py_CLEAR(clear_module_state->__pyx_tuple__190);
  Py_CLEAR(clear_module_state->__pyx_tuple__192);
  Py_CLEAR(clear_module_state->__pyx_tuple__194);
  Py_CLEAR(clear_module_state->__pyx_tuple__196);
  Py_CLEAR(clear_module_state->__pyx_tuple__198);
  Py_CLEAR(clear_module_state->__pyx_tuple__200);
  Py_CLEAR(clear_module_state->__pyx_tuple__202);
  Py_CLEAR(clear_module_state->__pyx_tuple__204);
  Py_CLEAR(clear_module_state->__pyx_tuple__206);
  Py_CLEAR(clear_module_state->__pyx_tuple__208);
  Py_CLEAR(clear_module_state->__pyx_tuple__210);
  Py_CLEAR(clear_module_state->__pyx_tuple__211);
  Py_CLEAR(clear_module_state->__pyx_tuple__213);
  Py_CLEAR(clear_module_state->__pyx_tuple__214);
  Py_CLEAR(clear_module_state->__pyx_tuple__216);
  Py_CLEAR(clear_module_state->__pyx_tuple__218);
  Py_CLEAR(clear_module_state->__pyx_tuple__219);
  Py_CLEAR(clear_module_state->__pyx_tuple__221);
  Py_CLEAR(clear_module_state->__pyx_tuple__223);
  Py_CLEAR(clear_module_state->__pyx_tuple__225);
  Py_CLEAR(clear_module_state->__pyx_tuple__226);
  Py_CLEAR(clear_module_state->__pyx_tuple__228);
  Py_CLEAR(clear_module_state->__pyx_tuple__229);
  Py_CLEAR(clear_module_state->__pyx_tuple__231);
  Py_CLEAR(clear_module_state->__pyx_tuple__233);
  Py_CLEAR(clear_module_state->__pyx_tuple__235);
  Py_CLEAR(clear_module_state->__pyx_tuple__236);
  Py_CLEAR(clear_module_state->__pyx_tuple__239);
  Py_CLEAR(clear_module_state->__pyx_tuple__241);
  Py_CLEAR(clear_module_state->__pyx_tuple__242);
  Py_CLEAR(clear_module_state->__pyx_tuple__244);
  Py_CLEAR(clear_module_state->__pyx_tuple__246);
  Py_CLEAR(clear_module_state->__pyx_tuple__248);
  Py_CLEAR(clear_module_state->__pyx_tuple__250);
  Py_CLEAR(clear_module_state->__pyx_tuple__252);
  Py_CLEAR(clear_module_state->__pyx_tuple__254);
  Py_CLEAR(clear_module_state->__pyx_tuple__256);
  Py_CLEAR(clear_module_state->__pyx_tuple__258);
  Py_CLEAR(clear_module_state->__pyx_tuple__259);
  Py_CLEAR(clear_module_state->__pyx_tuple__261);
  Py_CLEAR(clear_module_state->__pyx_tuple__262);
  Py_CLEAR(clear_module_state->__pyx_tuple__264);
  Py_CLEAR(clear_module_state->__pyx_tuple__266);
  Py_CLEAR(clear_module_state->__pyx_tuple__268);
  Py_CLEAR(clear_module_state->__pyx_tuple__270);
  Py_CLEAR(clear_module_state->__pyx_tuple__272);
  Py_CLEAR(clear_module_state->__pyx_tuple__274);
  Py_CLEAR(clear_module_state->__pyx_tuple__276);
  Py_CLEAR(clear_module_state->__pyx_tuple__278);
  Py_CLEAR(clear_module_state->__pyx_tuple__280);
  Py_CLEAR(clear_module_state->__pyx_tuple__282);
  Py_CLEAR(clear_module_state->__pyx_tuple__284);
  Py_CLEAR(clear_module_state->__pyx_tuple__286);
  Py_CLEAR(clear_module_state->__pyx_tuple__288);
  Py_CLEAR(clear_module_state->__pyx_tuple__290);
  Py_CLEAR(clear_module_state->__pyx_tuple__292);
  Py_CLEAR(clear_module_state->__pyx_tuple__294);
  Py_CLEAR(clear_module_state->__pyx_tuple__296);
  Py_CLEAR(clear_module_state->__pyx_tuple__298);
  Py_CLEAR(clear_module_state->__pyx_tuple__300);
  Py_CLEAR(clear_module_state->__pyx_tuple__302);
  Py_CLEAR(clear_module_state->__pyx_tuple__304);
  Py_CLEAR(clear_module_state->__pyx_tuple__306);
  Py_CLEAR(clear_module_state->__pyx_tuple__307);
  Py_CLEAR(clear_module_state->__pyx_tuple__309);
  Py_CLEAR(clear_module_state->__pyx_tuple__311);
  Py_CLEAR(clear_module_state->__pyx_tuple__313);
  Py_CLEAR(clear_module_state->__pyx_tuple__315);
  Py_CLEAR(clear_module_state->__pyx_tuple__319);
  Py_CLEAR(clear_module_state->__pyx_tuple__321);
  Py_CLEAR(clear_module_state->__pyx_tuple__323);
  Py_CLEAR(clear_module_state->__pyx_codeobj__22);
  Py_CLEAR(clear_module_state->__pyx_codeobj__24);
  Py_CLEAR(clear_module_state->__pyx_codeobj__26);
  Py_CLEAR(clear_module_state->__pyx_codeobj__28);
  Py_CLEAR(clear_module_state->__pyx_codeobj__30);
  Py_CLEAR(clear_module_state->__pyx_codeobj__32);
  Py_CLEAR(clear_module_state->__pyx_codeobj__34);
  Py_CLEAR(clear_module_state->__pyx_codeobj__36);
  Py_CLEAR(clear_module_state->__pyx_codeobj__38);
  Py_CLEAR(clear_module_state->__pyx_codeobj__40);
  Py_CLEAR(clear_module_state->__pyx_codeobj__42);
  Py_CLEAR(clear_module_state->__pyx_codeobj__44);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__48);
  Py_CLEAR(clear_module_state->__pyx_codeobj__49);
  Py_CLEAR(clear_module_state->__pyx_codeobj__51);
  Py_CLEAR(clear_module_state->__pyx_codeobj__53);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__58);
  Py_CLEAR(clear_module_state->__pyx_codeobj__60);
  Py_CLEAR(clear_module_state->__pyx_codeobj__62);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__70);
  Py_CLEAR(clear_module_state->__pyx_codeobj__72);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__77);
  Py_CLEAR(clear_module_state->__pyx_codeobj__79);
  Py_CLEAR(clear_module_state->__pyx_codeobj__82);
  Py_CLEAR(clear_module_state->__pyx_codeobj__84);
  Py_CLEAR(clear_module_state->__pyx_codeobj__86);
  Py_CLEAR(clear_module_state->__pyx_codeobj__88);
  Py_CLEAR(clear_module_state->__pyx_codeobj__90);
  Py_CLEAR(clear_module_state->__pyx_codeobj__92);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__96);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__101);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__105);
  Py_CLEAR(clear_module_state->__pyx_codeobj__107);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__111);
  Py_CLEAR(clear_module_state->__pyx_codeobj__113);
  Py_CLEAR(clear_module_state->__pyx_codeobj__115);
  Py_CLEAR(clear_module_state->__pyx_codeobj__117);
  Py_CLEAR(clear_module_state->__pyx_codeobj__119);
  Py_CLEAR(clear_module_state->__pyx_codeobj__123);
  Py_CLEAR(clear_module_state->__pyx_codeobj__125);
  Py_CLEAR(clear_module_state->__pyx_codeobj__127);
  Py_CLEAR(clear_module_state->__pyx_codeobj__131);
  Py_CLEAR(clear_module_state->__pyx_codeobj__133);
  Py_CLEAR(clear_module_state->__pyx_codeobj__135);
  Py_CLEAR(clear_module_state->__pyx_codeobj__137);
  Py_CLEAR(clear_module_state->__pyx_codeobj__139);
  Py_CLEAR(clear_module_state->__pyx_codeobj__141);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__145);
  Py_CLEAR(clear_module_state->__pyx_codeobj__147);
  Py_CLEAR(clear_module_state->__pyx_codeobj__149);
  Py_CLEAR(clear_module_state->__pyx_codeobj__151);
  Py_CLEAR(clear_module_state->__pyx_codeobj__153);
  Py_CLEAR(clear_module_state->__pyx_codeobj__155);
  Py_CLEAR(clear_module_state->__pyx_codeobj__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__159);
  Py_CLEAR(clear_module_state->__pyx_codeobj__161);
  Py_CLEAR(clear_module_state->__pyx_codeobj__163);
  Py_CLEAR(clear_module_state->__pyx_codeobj__165);
  Py_CLEAR(clear_module_state->__pyx_codeobj__167);
  Py_CLEAR(clear_module_state->__pyx_codeobj__169);
  Py_CLEAR(clear_module_state->__pyx_codeobj__171);
  Py_CLEAR(clear_module_state->__pyx_codeobj__173);
  Py_CLEAR(clear_module_state->__pyx_codeobj__175);
  Py_CLEAR(clear_module_state->__pyx_codeobj__177);
  Py_CLEAR(clear_module_state->__pyx_codeobj__179);
  Py_CLEAR(clear_module_state->__pyx_codeobj__181);
  Py_CLEAR(clear_module_state->__pyx_codeobj__183);
  Py_CLEAR(clear_module_state->__pyx_codeobj__185);
  Py_CLEAR(clear_module_state->__pyx_codeobj__187);
  Py_CLEAR(clear_module_state->__pyx_codeobj__189);
  Py_CLEAR(clear_module_state->__pyx_codeobj__191);
  Py_CLEAR(clear_module_state->__pyx_codeobj__193);
  Py_CLEAR(clear_module_state->__pyx_codeobj__195);
  Py_CLEAR(clear_module_state->__pyx_codeobj__197);
  Py_CLEAR(clear_module_state->__pyx_codeobj__199);
  Py_CLEAR(clear_module_state->__pyx_codeobj__201);
  Py_CLEAR(clear_module_state->__pyx_codeobj__203);
  Py_CLEAR(clear_module_state->__pyx_codeobj__205);
  Py_CLEAR(clear_module_state->__pyx_codeobj__209);
  Py_CLEAR(clear_module_state->__pyx_codeobj__212);
  Py_CLEAR(clear_module_state->__pyx_codeobj__215);
  Py_CLEAR(clear_module_state->__pyx_codeobj__217);
  Py_CLEAR(clear_module_state->__pyx_codeobj__220);
  Py_CLEAR(clear_module_state->__pyx_codeobj__222);
  Py_CLEAR(clear_module_state->__pyx_codeobj__224);
  Py_CLEAR(clear_module_state->__pyx_codeobj__227);
  Py_CLEAR(clear_module_state->__pyx_codeobj__230);
  Py_CLEAR(clear_module_state->__pyx_codeobj__232);
  Py_CLEAR(clear_module_state->__pyx_codeobj__234);
  Py_CLEAR(clear_module_state->__pyx_codeobj__237);
  Py_CLEAR(clear_module_state->__pyx_codeobj__238);
  Py_CLEAR(clear_module_state->__pyx_codeobj__240);
  Py_CLEAR(clear_module_state->__pyx_codeobj__243);
  Py_CLEAR(clear_module_state->__pyx_codeobj__245);
  Py_CLEAR(clear_module_state->__pyx_codeobj__247);
  Py_CLEAR(clear_module_state->__pyx_codeobj__249);
  Py_CLEAR(clear_module_state->__pyx_codeobj__251);
  Py_CLEAR(clear_module_state->__pyx_codeobj__253);
  Py_CLEAR(clear_module_state->__pyx_codeobj__255);
  Py_CLEAR(clear_module_state->__pyx_codeobj__257);
  Py_CLEAR(clear_module_state->__pyx_codeobj__260);
  Py_CLEAR(clear_module_state->__pyx_codeobj__263);
  Py_CLEAR(clear_module_state->__pyx_codeobj__265);
  Py_CLEAR(clear_module_state->__pyx_codeobj__267);
  Py_CLEAR(clear_module_state->__pyx_codeobj__269);
  Py_CLEAR(clear_module_state->__pyx_codeobj__271);
  Py_CLEAR(clear_module_state->__pyx_codeobj__273);
  Py_CLEAR(clear_module_state->__pyx_codeobj__275);
  Py_CLEAR(clear_module_state->__pyx_codeobj__277);
  Py_CLEAR(clear_module_state->__pyx_codeobj__279);
  Py_CLEAR(clear_module_state->__pyx_codeobj__281);
  Py_CLEAR(clear_module_state->__pyx_codeobj__283);
  Py_CLEAR(clear_module_state->__pyx_codeobj__285);
  Py_CLEAR(clear_module_state->__pyx_codeobj__287);
  Py_CLEAR(clear_module_state->__pyx_codeobj__289);
  Py_CLEAR(clear_module_state->__pyx_codeobj__291);
  Py_CLEAR(clear_module_state->__pyx_codeobj__293);
  Py_CLEAR(clear_module_state->__pyx_codeobj__295);
  Py_CLEAR(clear_module_state->__pyx_codeobj__297);
  Py_CLEAR(clear_module_state->__pyx_codeobj__299);
  Py_CLEAR(clear_module_state->__pyx_codeobj__301);
  Py_CLEAR(clear_module_state->__pyx_codeobj__303);
  Py_CLEAR(clear_module_state->__pyx_codeobj__305);
  Py_CLEAR(clear_module_state->__pyx_codeobj__308);
  Py_CLEAR(clear_module_state->__pyx_codeobj__310);
  Py_CLEAR(clear_module_state->__pyx_codeobj__312);
  Py_CLEAR(clear_module_state->__pyx_codeobj__314);
  Py_CLEAR(clear_module_state->__pyx_codeobj__316);
  Py_CLEAR(clear_module_state->__pyx_codeobj__317);
  Py_CLEAR(clear_module_state->__pyx_codeobj__318);
  Py_CLEAR(clear_module_state->__pyx_codeobj__320);
  Py_CLEAR(clear_module_state->__pyx_codeobj__322);
  Py_CLEAR(clear_module_state->__pyx_codeobj__324);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_n_s_AssertionError);
  Py_VISIT(traverse_module_state->__pyx_n_s_B1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_B1_Motion);
  Py_VISIT(traverse_module_state->__pyx_n_s_B2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_B2_Motion);
  Py_VISIT(traverse_module_state->__pyx_n_s_B3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_B3_Motion);
  Py_VISIT(traverse_module_state->__pyx_n_s_BOOL);
  Py_VISIT(traverse_module_state->__pyx_n_s_BOX_SIZE);
  Py_VISIT(traverse_module_state->__pyx_n_s_BOX_START);
  Py_VISIT(traverse_module_state->__pyx_n_s_BP);
  Py_VISIT(traverse_module_state->__pyx_n_s_BR);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Before);
  Py_VISIT(traverse_module_state->__pyx_kp_s_ButtonRelease_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_1_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_1_Translate_Button_2_Rota);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_2_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Button_3_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_CFUNCTYPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_COLOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChoosePixelFormat);
  Py_VISIT(traverse_module_state->__pyx_n_s_Colormap);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Common_code_for_windows_x11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Configure);
  Py_VISIT(traverse_module_state->__pyx_n_s_Cords);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Create);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents__pas);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_add_event);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_check);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_checkkeypress);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_checklclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_checkmclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_checkmotion);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_checkrclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DEvents_clear_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER_render);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER_render_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER_render_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER_render_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2DRENDER_render_texture_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender_create_font);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender_prerender_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender_prerender_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Dprerender_prerender_texturequ);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw__cords_to_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw__resize);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw__tex_arrayn_translate);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw__texture_cords_to_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_add_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_del_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_line);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_lines);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_point);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_quad_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_quad_texture_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_draw_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_resize);
  Py_VISIT(traverse_module_state->__pyx_n_s_D2Draw_update_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_DRAWMODELOC);
  Py_VISIT(traverse_module_state->__pyx_n_s_DRAW_MODE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_D_vips_dev_8_9_bin);
  Py_VISIT(traverse_module_state->__pyx_n_s_Dialog);
  Py_VISIT(traverse_module_state->__pyx_n_s_Display);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Do_something_to_create_this_obje);
  Py_VISIT(traverse_module_state->__pyx_n_s_Done);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Done_making_a_first_context);
  Py_VISIT(traverse_module_state->__pyx_n_s_Drago2Dengine___versions___win32);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Drago2Dengine_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject___docs);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject__is_serialized);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject__load_scene);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_add_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_add_textureupdate);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_bind_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_clear);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_compile);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_create_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_create_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_delete_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_draw);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_draw_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_edit_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_edit_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_edit_pos);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_edit_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_edit_tpos);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_objectindexes);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_pos);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_shader);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_texid);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_get_vertices);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_move);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_move_down);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_move_up);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_queue);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_queue_check);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_serialize_to_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_set_mode);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_switch);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_DragoObject_use_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventDelay);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventOff);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventOn);
  Py_VISIT(traverse_module_state->__pyx_n_s_EventType);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Expose);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Extension_list);
  Py_VISIT(traverse_module_state->__pyx_n_s_FRAGMENT_SHADER);
  Py_VISIT(traverse_module_state->__pyx_n_s_FT_LOAD_FORCE_AUTOHINT);
  Py_VISIT(traverse_module_state->__pyx_n_s_FT_LOAD_RENDER);
  Py_VISIT(traverse_module_state->__pyx_n_s_Face);
  Py_VISIT(traverse_module_state->__pyx_n_s_Frame);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLU);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLUT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_BLUE_SIZE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_DEPTH_SIZE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_DOUBLEBUFFER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_DRAWABLE_TYPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_GREEN_SIZE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_RED_SIZE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_RENDER_TYPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_RGBA);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_RGBA_BIT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_RGBA_TYPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_WINDOW_BIT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLX_X_RENDERABLE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GLX_version_d_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_ALPHA);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_ARRAY_BUFFER);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_CONTEXT_PROFILE_MASK);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_DEPTH_TEST);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_DYNAMIC_DRAW);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_EXTENSIONS);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_FALSE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_FLOAT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_FRAGMENT_SHADER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_LESS);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_LIGHT0);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_LIGHTING);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_LINEAR);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_MAJOR_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_MAJOR_VERSION_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_MATRIX_MODE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_MINOR_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_MINOR_VERSION_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_MODELVIEW);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_NEAREST);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_POINTS);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_POSITION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_PROJECTION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_QUADS);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_RENDERER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_RENDERER_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_REPEAT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_RGB);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_RGBA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TEXTURE_2D);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TEXTURE_MAG_FILTER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TEXTURE_MIN_FILTER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TEXTURE_WRAP_S);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TEXTURE_WRAP_T);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_TRUE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_UNPACK_ALIGNMENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_UNSIGNED_BYTE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_VENDOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_VENDOR_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GL_VERSION);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_VERSION_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_VERTEX_ARRAY);
  Py_VISIT(traverse_module_state->__pyx_n_s_GL_VERTEX_SHADER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GLint);
  Py_VISIT(traverse_module_state->__pyx_n_s_GetDC);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Got_a_matching_visual_index_d_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_HDC);
  Py_VISIT(traverse_module_state->__pyx_n_s_Hover);
  Py_VISIT(traverse_module_state->__pyx_n_s_Image);
  Py_VISIT(traverse_module_state->__pyx_n_s_Imagenumpy);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Is_Direct);
  Py_VISIT(traverse_module_state->__pyx_n_s_KeyPress);
  Py_VISIT(traverse_module_state->__pyx_kp_s_KeyPress_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_LeftClick);
  Py_VISIT(traverse_module_state->__pyx_n_s_LoadLibrary);
  Py_VISIT(traverse_module_state->__pyx_n_s_MN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Map);
  Py_VISIT(traverse_module_state->__pyx_n_s_MiddleClick);
  Py_VISIT(traverse_module_state->__pyx_n_s_Motion);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Motion_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_MouseHover);
  Py_VISIT(traverse_module_state->__pyx_n_s_MouseLC);
  Py_VISIT(traverse_module_state->__pyx_n_s_MouseMC);
  Py_VISIT(traverse_module_state->__pyx_n_s_MouseRC);
  Py_VISIT(traverse_module_state->__pyx_n_s_NEWLINE);
  Py_VISIT(traverse_module_state->__pyx_n_s_NOENABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_New_Texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_NotImplementedError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Number_of_FBconfigs);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Number_of_extensions);
  Py_VISIT(traverse_module_state->__pyx_n_s_OBJECT);
  Py_VISIT(traverse_module_state->__pyx_n_s_Offests);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ok);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Old_context_errors_arose);
  Py_VISIT(traverse_module_state->__pyx_n_s_OnKey);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame__context);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame__window);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame_tkCreateContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame_tkMakeCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGLFrame_tkSwapBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL_GL);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL_GL_shaders);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL_WGL);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL_raw_GLX__types);
  Py_VISIT(traverse_module_state->__pyx_n_s_OpenGL_raw__GLX);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_StartRotate);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_activate);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_basic_lighting);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_do_AutoSpin);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_freecalc);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_help);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_initgl);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_redraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_reset);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_set_background);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_set_centerpoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_set_eyepoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkAutoSpin);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkExpose);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkHandlePick);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkPrint);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkRecordMouse);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkRedraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkRotate);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkScale);
  Py_VISIT(traverse_module_state->__pyx_n_s_Opengl_tkTranslate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PATH);
  Py_VISIT(traverse_module_state->__pyx_n_s_PFD_DOUBLEBUFFER);
  Py_VISIT(traverse_module_state->__pyx_n_s_PFD_DRAW_TO_WINDOW);
  Py_VISIT(traverse_module_state->__pyx_n_s_PFD_MAIN_PLANE);
  Py_VISIT(traverse_module_state->__pyx_n_s_PFD_SUPPORT_OPENGL);
  Py_VISIT(traverse_module_state->__pyx_n_s_PFD_TYPE_RGBA);
  Py_VISIT(traverse_module_state->__pyx_n_s_PIL);
  Py_VISIT(traverse_module_state->__pyx_n_s_PIXELFORMATDESCRIPTOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_POINTER);
  Py_VISIT(traverse_module_state->__pyx_n_s_PRERENDER_VBO);
  Py_VISIT(traverse_module_state->__pyx_n_s_PRERENDER_VBO___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_RAW_DATA);
  Py_VISIT(traverse_module_state->__pyx_n_s_RENDER_VBO);
  Py_VISIT(traverse_module_state->__pyx_n_s_RENDER_VBO___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_RGB);
  Py_VISIT(traverse_module_state->__pyx_n_s_RawOpengl);
  Py_VISIT(traverse_module_state->__pyx_n_s_RawOpengl___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_RawOpengl_tkRedraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_RightClick);
  Py_VISIT(traverse_module_state->__pyx_n_s_SHADER);
  Py_VISIT(traverse_module_state->__pyx_n_s_SHADER___init);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Screen_is);
  Py_VISIT(traverse_module_state->__pyx_n_s_SetPixelFormat);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Shift_Button_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_Spacing_add);
  Py_VISIT(traverse_module_state->__pyx_n_s_StartRotate);
  Py_VISIT(traverse_module_state->__pyx_n_s_SwapBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_TAB);
  Py_VISIT(traverse_module_state->__pyx_n_s_TEXTUREID);
  Py_VISIT(traverse_module_state->__pyx_n_s_TEXTURE_DISPLAY_METHOD);
  Py_VISIT(traverse_module_state->__pyx_n_s_TXC);
  Py_VISIT(traverse_module_state->__pyx_n_s_TXTARRAY);
  Py_VISIT(traverse_module_state->__pyx_n_s_Texture_unit);
  Py_VISIT(traverse_module_state->__pyx_n_s_Tkinter);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Tkinter_bindings_for_an_Opengl);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Uniform_Layout_Matrix_manipulat);
  Py_VISIT(traverse_module_state->__pyx_n_s_VBO);
  Py_VISIT(traverse_module_state->__pyx_n_s_VBO_OBJ);
  Py_VISIT(traverse_module_state->__pyx_n_s_VBO_OBJ___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_VBO___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_VERTEX_SHADER);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Viewer_help);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Widget_without_any_sophisticated);
  Py_VISIT(traverse_module_state->__pyx_n_s_WinDLL);
  Py_VISIT(traverse_module_state->__pyx_n_s_X11);
  Py_VISIT(traverse_module_state->__pyx_n_s_XDefaultScreen);
  Py_VISIT(traverse_module_state->__pyx_n_s_XOpenDisplay);
  Py_VISIT(traverse_module_state->__pyx_n_s_Z);
  Py_VISIT(traverse_module_state->__pyx_kp_s__10);
  Py_VISIT(traverse_module_state->__pyx_kp_s__13);
  Py_VISIT(traverse_module_state->__pyx_kp_s__207);
  Py_VISIT(traverse_module_state->__pyx_kp_s__8);
  Py_VISIT(traverse_module_state->__pyx_n_s__80);
  Py_VISIT(traverse_module_state->__pyx_kp_s__9);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_n_s_a_val);
  Py_VISIT(traverse_module_state->__pyx_n_s_abcdefgh);
  Py_VISIT(traverse_module_state->__pyx_n_s_access);
  Py_VISIT(traverse_module_state->__pyx_n_s_activate);
  Py_VISIT(traverse_module_state->__pyx_n_s_add_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_add_boldnext);
  Py_VISIT(traverse_module_state->__pyx_n_s_add_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_add_event);
  Py_VISIT(traverse_module_state->__pyx_n_s_add_textureupdate);
  Py_VISIT(traverse_module_state->__pyx_n_s_after);
  Py_VISIT(traverse_module_state->__pyx_n_s_after_cancel);
  Py_VISIT(traverse_module_state->__pyx_n_s_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_alpha);
  Py_VISIT(traverse_module_state->__pyx_n_s_animate);
  Py_VISIT(traverse_module_state->__pyx_n_s_append);
  Py_VISIT(traverse_module_state->__pyx_n_s_args);
  Py_VISIT(traverse_module_state->__pyx_n_s_argtypes);
  Py_VISIT(traverse_module_state->__pyx_n_s_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_ascender);
  Py_VISIT(traverse_module_state->__pyx_n_s_att);
  Py_VISIT(traverse_module_state->__pyx_n_s_autospin);
  Py_VISIT(traverse_module_state->__pyx_n_s_autospin_allowed);
  Py_VISIT(traverse_module_state->__pyx_n_s_b);
  Py_VISIT(traverse_module_state->__pyx_kp_s_b_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_b_back);
  Py_VISIT(traverse_module_state->__pyx_n_s_b_val);
  Py_VISIT(traverse_module_state->__pyx_n_s_background);
  Py_VISIT(traverse_module_state->__pyx_n_s_bands);
  Py_VISIT(traverse_module_state->__pyx_n_s_base);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame__display);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_check_all_b1_eve);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_check_all_bpress);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_check_all_brelas);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_check_event_butt);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_create_event);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_free_calc_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_freecalc);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_initgl);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_printContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_redraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkCreateContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkExpose);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkMakeCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkMap);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkResize);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_tkSwapBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_baseOpenGLFrame_wait);
  Py_VISIT(traverse_module_state->__pyx_n_s_basic_lighting);
  Py_VISIT(traverse_module_state->__pyx_n_s_basicshader);
  Py_VISIT(traverse_module_state->__pyx_n_s_best);
  Py_VISIT(traverse_module_state->__pyx_n_s_bg);
  Py_VISIT(traverse_module_state->__pyx_n_s_bind);
  Py_VISIT(traverse_module_state->__pyx_n_s_bind_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_bitmap);
  Py_VISIT(traverse_module_state->__pyx_n_s_bitmap_left);
  Py_VISIT(traverse_module_state->__pyx_n_s_bitmap_top);
  Py_VISIT(traverse_module_state->__pyx_n_s_bresenham);
  Py_VISIT(traverse_module_state->__pyx_n_s_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_buffer1);
  Py_VISIT(traverse_module_state->__pyx_n_s_bufferid);
  Py_VISIT(traverse_module_state->__pyx_n_s_buffmanager);
  Py_VISIT(traverse_module_state->__pyx_n_s_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_c1);
  Py_VISIT(traverse_module_state->__pyx_n_s_c1_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_c2);
  Py_VISIT(traverse_module_state->__pyx_n_s_c2_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_c3);
  Py_VISIT(traverse_module_state->__pyx_n_s_c4);
  Py_VISIT(traverse_module_state->__pyx_n_s_cColorBits);
  Py_VISIT(traverse_module_state->__pyx_n_s_cDepthBits);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_bool);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_char_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_float);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_int);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_void_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_call);
  Py_VISIT(traverse_module_state->__pyx_n_s_cb);
  Py_VISIT(traverse_module_state->__pyx_n_s_cdll);
  Py_VISIT(traverse_module_state->__pyx_n_s_centre);
  Py_VISIT(traverse_module_state->__pyx_n_s_cf);
  Py_VISIT(traverse_module_state->__pyx_n_s_cfgs);
  Py_VISIT(traverse_module_state->__pyx_n_s_cfloat);
  Py_VISIT(traverse_module_state->__pyx_n_s_cfloat_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_change_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_check);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_all_b1_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_all_bpress_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_all_brelase_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_event_button_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkkeypress);
  Py_VISIT(traverse_module_state->__pyx_n_s_checklclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkmclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkmotion);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkrclick);
  Py_VISIT(traverse_module_state->__pyx_n_s_chr);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_cnf);
  Py_VISIT(traverse_module_state->__pyx_n_s_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_compile);
  Py_VISIT(traverse_module_state->__pyx_n_s_compileProgram);
  Py_VISIT(traverse_module_state->__pyx_n_s_compileShader);
  Py_VISIT(traverse_module_state->__pyx_n_s_config);
  Py_VISIT(traverse_module_state->__pyx_n_s_contents);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords1);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords2);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords3);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords4);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_cords_to_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_s_crd);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_event);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_font);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_create_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_crop);
  Py_VISIT(traverse_module_state->__pyx_n_s_ct);
  Py_VISIT(traverse_module_state->__pyx_n_s_ctypes);
  Py_VISIT(traverse_module_state->__pyx_n_s_ctypes_wintypes);
  Py_VISIT(traverse_module_state->__pyx_n_s_curpos);
  Py_VISIT(traverse_module_state->__pyx_n_s_cvroot);
  Py_VISIT(traverse_module_state->__pyx_n_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_dat);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_length);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_tr1);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_tr2);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_txn);
  Py_VISIT(traverse_module_state->__pyx_n_s_data_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_default);
  Py_VISIT(traverse_module_state->__pyx_n_s_del_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_delay);
  Py_VISIT(traverse_module_state->__pyx_n_s_delete_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_descender);
  Py_VISIT(traverse_module_state->__pyx_n_s_dialog);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_display);
  Py_VISIT(traverse_module_state->__pyx_n_s_dist);
  Py_VISIT(traverse_module_state->__pyx_n_s_distance);
  Py_VISIT(traverse_module_state->__pyx_n_s_do_AutoSpin);
  Py_VISIT(traverse_module_state->__pyx_n_s_doc);
  Py_VISIT(traverse_module_state->__pyx_n_s_docs);
  Py_VISIT(traverse_module_state->__pyx_n_s_dp_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_line);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_lines);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_point);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_quad_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_quad_texture_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_draw_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_dtype);
  Py_VISIT(traverse_module_state->__pyx_n_s_dummy);
  Py_VISIT(traverse_module_state->__pyx_n_s_dwFlags);
  Py_VISIT(traverse_module_state->__pyx_n_s_dx);
  Py_VISIT(traverse_module_state->__pyx_n_s_dy);
  Py_VISIT(traverse_module_state->__pyx_n_s_e);
  Py_VISIT(traverse_module_state->__pyx_n_s_edit_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_edit_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_edit_pos);
  Py_VISIT(traverse_module_state->__pyx_n_s_edit_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_edit_tpos);
  Py_VISIT(traverse_module_state->__pyx_n_s_encode);
  Py_VISIT(traverse_module_state->__pyx_n_s_end);
  Py_VISIT(traverse_module_state->__pyx_n_s_environ);
  Py_VISIT(traverse_module_state->__pyx_n_s_ev);
  Py_VISIT(traverse_module_state->__pyx_n_s_ev_list);
  Py_VISIT(traverse_module_state->__pyx_n_s_ev_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_event);
  Py_VISIT(traverse_module_state->__pyx_n_s_event_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_eventmanager);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_B1);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_B2);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_B3);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_BP);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_BR);
  Py_VISIT(traverse_module_state->__pyx_n_s_events_MN);
  Py_VISIT(traverse_module_state->__pyx_n_s_evt);
  Py_VISIT(traverse_module_state->__pyx_n_s_extend);
  Py_VISIT(traverse_module_state->__pyx_n_s_extensions);
  Py_VISIT(traverse_module_state->__pyx_n_s_extns);
  Py_VISIT(traverse_module_state->__pyx_n_s_exts);
  Py_VISIT(traverse_module_state->__pyx_n_s_f);
  Py_VISIT(traverse_module_state->__pyx_n_s_face);
  Py_VISIT(traverse_module_state->__pyx_n_s_far);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbatt);
  Py_VISIT(traverse_module_state->__pyx_n_s_fgshader);
  Py_VISIT(traverse_module_state->__pyx_n_s_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_filename);
  Py_VISIT(traverse_module_state->__pyx_n_s_find_library);
  Py_VISIT(traverse_module_state->__pyx_n_s_flat);
  Py_VISIT(traverse_module_state->__pyx_n_s_font);
  Py_VISIT(traverse_module_state->__pyx_n_s_font_config);
  Py_VISIT(traverse_module_state->__pyx_n_s_font_letters);
  Py_VISIT(traverse_module_state->__pyx_n_s_font_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_fovy);
  Py_VISIT(traverse_module_state->__pyx_n_s_free_calc_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_freecalc);
  Py_VISIT(traverse_module_state->__pyx_n_s_freecalc_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_freetype);
  Py_VISIT(traverse_module_state->__pyx_n_s_from);
  Py_VISIT(traverse_module_state->__pyx_n_s_frombuffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_func);
  Py_VISIT(traverse_module_state->__pyx_n_s_g);
  Py_VISIT(traverse_module_state->__pyx_n_s_g_back);
  Py_VISIT(traverse_module_state->__pyx_n_s_g_val);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_buffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_color);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_objectindexes);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_pos);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_shader);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_texid);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_vertices);
  Py_VISIT(traverse_module_state->__pyx_n_s_getdata);
  Py_VISIT(traverse_module_state->__pyx_n_s_getint);
  Py_VISIT(traverse_module_state->__pyx_n_s_getsize);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBegin);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBindBuffer);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBindTexture);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBindTextureUnit);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBufferData);
  Py_VISIT(traverse_module_state->__pyx_n_s_glBufferSubData);
  Py_VISIT(traverse_module_state->__pyx_n_s_glColor3f);
  Py_VISIT(traverse_module_state->__pyx_n_s_glColor4f);
  Py_VISIT(traverse_module_state->__pyx_n_s_glDepthFunc);
  Py_VISIT(traverse_module_state->__pyx_n_s_glDisable);
  Py_VISIT(traverse_module_state->__pyx_n_s_glDrawArrays);
  Py_VISIT(traverse_module_state->__pyx_n_s_glEnable);
  Py_VISIT(traverse_module_state->__pyx_n_s_glEnableClientState);
  Py_VISIT(traverse_module_state->__pyx_n_s_glEnableVertexAttribArray);
  Py_VISIT(traverse_module_state->__pyx_n_s_glEnd);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGenBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGenTextures);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGetDoublev);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGetIntegerv);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGetString);
  Py_VISIT(traverse_module_state->__pyx_n_s_glGetUniformLocation);
  Py_VISIT(traverse_module_state->__pyx_n_s_glLightfv);
  Py_VISIT(traverse_module_state->__pyx_n_s_glLoadIdentity);
  Py_VISIT(traverse_module_state->__pyx_n_s_glMatrixMode);
  Py_VISIT(traverse_module_state->__pyx_n_s_glPixelStorei);
  Py_VISIT(traverse_module_state->__pyx_n_s_glRotateScene);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTexCoord2f);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTexImage2D);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTexParameterf);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTexParameteri);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTexSubImage2D);
  Py_VISIT(traverse_module_state->__pyx_n_s_glTranslateScene);
  Py_VISIT(traverse_module_state->__pyx_n_s_glUniform1iv);
  Py_VISIT(traverse_module_state->__pyx_n_s_glUseProgram);
  Py_VISIT(traverse_module_state->__pyx_n_s_glVertex2f);
  Py_VISIT(traverse_module_state->__pyx_n_s_glVertexAttribPointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_glViewport);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXChooseFBConfig);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXChooseVisual);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXCreateContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXCreateNewContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXGetVisualFromFBConfig);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXIsDirect);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXMakeContextCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXMakeCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXQueryExtensionsString);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXQueryVersion);
  Py_VISIT(traverse_module_state->__pyx_n_s_glXSwapBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_gluLookAt);
  Py_VISIT(traverse_module_state->__pyx_n_s_gluPerspective);
  Py_VISIT(traverse_module_state->__pyx_n_s_gluProject);
  Py_VISIT(traverse_module_state->__pyx_n_s_gluUnProject);
  Py_VISIT(traverse_module_state->__pyx_n_s_glyph);
  Py_VISIT(traverse_module_state->__pyx_n_s_h);
  Py_VISIT(traverse_module_state->__pyx_n_s_height);
  Py_VISIT(traverse_module_state->__pyx_n_s_help);
  Py_VISIT(traverse_module_state->__pyx_n_s_hex);
  Py_VISIT(traverse_module_state->__pyx_n_s_hover_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_iLayerType);
  Py_VISIT(traverse_module_state->__pyx_n_s_iPixelType);
  Py_VISIT(traverse_module_state->__pyx_n_s_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_ideal);
  Py_VISIT(traverse_module_state->__pyx_n_s_idx);
  Py_VISIT(traverse_module_state->__pyx_n_s_il);
  Py_VISIT(traverse_module_state->__pyx_n_s_image);
  Py_VISIT(traverse_module_state->__pyx_n_s_imgnp);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_init);
  Py_VISIT(traverse_module_state->__pyx_n_s_init_subclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_initgl);
  Py_VISIT(traverse_module_state->__pyx_n_s_initialised);
  Py_VISIT(traverse_module_state->__pyx_n_s_insert);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_fixed_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_serialized);
  Py_VISIT(traverse_module_state->__pyx_n_s_j);
  Py_VISIT(traverse_module_state->__pyx_n_s_keypress_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_kw);
  Py_VISIT(traverse_module_state->__pyx_n_s_l);
  Py_VISIT(traverse_module_state->__pyx_n_s_launch_func);
  Py_VISIT(traverse_module_state->__pyx_n_s_launch_function_beg);
  Py_VISIT(traverse_module_state->__pyx_n_s_launch_function_end);
  Py_VISIT(traverse_module_state->__pyx_n_s_launch_function_mid);
  Py_VISIT(traverse_module_state->__pyx_n_s_launchev);
  Py_VISIT(traverse_module_state->__pyx_n_s_lclick_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_lfe);
  Py_VISIT(traverse_module_state->__pyx_n_s_lfg);
  Py_VISIT(traverse_module_state->__pyx_n_s_lfm);
  Py_VISIT(traverse_module_state->__pyx_n_s_light_position);
  Py_VISIT(traverse_module_state->__pyx_n_s_linux);
  Py_VISIT(traverse_module_state->__pyx_n_s_list);
  Py_VISIT(traverse_module_state->__pyx_n_s_load);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_char);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_scene);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture_dp);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture_locals_image);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture_locals_image___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture_repeat);
  Py_VISIT(traverse_module_state->__pyx_n_s_load_texture_sub);
  Py_VISIT(traverse_module_state->__pyx_n_s_ls);
  Py_VISIT(traverse_module_state->__pyx_n_s_m);
  Py_VISIT(traverse_module_state->__pyx_n_s_m_new);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_major);
  Py_VISIT(traverse_module_state->__pyx_n_s_mask);
  Py_VISIT(traverse_module_state->__pyx_n_s_master);
  Py_VISIT(traverse_module_state->__pyx_n_s_math);
  Py_VISIT(traverse_module_state->__pyx_n_s_mclick_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_mem_img);
  Py_VISIT(traverse_module_state->__pyx_n_s_metaclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_minor);
  Py_VISIT(traverse_module_state->__pyx_n_s_mmap);
  Py_VISIT(traverse_module_state->__pyx_n_s_mode);
  Py_VISIT(traverse_module_state->__pyx_n_s_mode_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_module);
  Py_VISIT(traverse_module_state->__pyx_n_s_move);
  Py_VISIT(traverse_module_state->__pyx_n_s_move_down);
  Py_VISIT(traverse_module_state->__pyx_n_s_move_up);
  Py_VISIT(traverse_module_state->__pyx_n_s_msk);
  Py_VISIT(traverse_module_state->__pyx_n_s_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_naiveline);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_named);
  Py_VISIT(traverse_module_state->__pyx_n_s_ncfg);
  Py_VISIT(traverse_module_state->__pyx_n_s_nd);
  Py_VISIT(traverse_module_state->__pyx_n_s_near);
  Py_VISIT(traverse_module_state->__pyx_n_s_new);
  Py_VISIT(traverse_module_state->__pyx_n_s_new_from_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_newcolor);
  Py_VISIT(traverse_module_state->__pyx_n_s_newpos);
  Py_VISIT(traverse_module_state->__pyx_n_s_newsize);
  Py_VISIT(traverse_module_state->__pyx_n_s_newtpos);
  Py_VISIT(traverse_module_state->__pyx_n_s_np);
  Py_VISIT(traverse_module_state->__pyx_n_s_nr);
  Py_VISIT(traverse_module_state->__pyx_n_s_numpy);
  Py_VISIT(traverse_module_state->__pyx_n_s_nx);
  Py_VISIT(traverse_module_state->__pyx_n_s_ny);
  Py_VISIT(traverse_module_state->__pyx_n_s_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_obj_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_object);
  Py_VISIT(traverse_module_state->__pyx_n_s_object_count);
  Py_VISIT(traverse_module_state->__pyx_n_s_object_counts);
  Py_VISIT(traverse_module_state->__pyx_n_s_object_indexes);
  Py_VISIT(traverse_module_state->__pyx_n_s_object_moved);
  Py_VISIT(traverse_module_state->__pyx_kp_s_oh_dear_visual_does_not_match);
  Py_VISIT(traverse_module_state->__pyx_n_s_oj);
  Py_VISIT(traverse_module_state->__pyx_n_s_open);
  Py_VISIT(traverse_module_state->__pyx_n_s_orgsize);
  Py_VISIT(traverse_module_state->__pyx_n_s_os);
  Py_VISIT(traverse_module_state->__pyx_n_s_ou);
  Py_VISIT(traverse_module_state->__pyx_n_s_overlay);
  Py_VISIT(traverse_module_state->__pyx_n_s_p1);
  Py_VISIT(traverse_module_state->__pyx_n_s_p2);
  Py_VISIT(traverse_module_state->__pyx_n_s_pas);
  Py_VISIT(traverse_module_state->__pyx_n_s_paste);
  Py_VISIT(traverse_module_state->__pyx_n_s_pfd);
  Py_VISIT(traverse_module_state->__pyx_n_s_pick);
  Py_VISIT(traverse_module_state->__pyx_n_s_pix_rat_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_pix_rat_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_pixelformat);
  Py_VISIT(traverse_module_state->__pyx_n_s_pixels);
  Py_VISIT(traverse_module_state->__pyx_n_s_platform);
  Py_VISIT(traverse_module_state->__pyx_n_s_pointer);
  Py_VISIT(traverse_module_state->__pyx_n_s_pointerx);
  Py_VISIT(traverse_module_state->__pyx_n_s_pointery);
  Py_VISIT(traverse_module_state->__pyx_n_s_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_pop);
  Py_VISIT(traverse_module_state->__pyx_n_s_prepare);
  Py_VISIT(traverse_module_state->__pyx_n_s_prequad);
  Py_VISIT(traverse_module_state->__pyx_n_s_prerender_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_prerender_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_prerender_texturequad);
  Py_VISIT(traverse_module_state->__pyx_n_s_prerenderedobj);
  Py_VISIT(traverse_module_state->__pyx_n_s_pretext);
  Py_VISIT(traverse_module_state->__pyx_n_s_pretextquad);
  Py_VISIT(traverse_module_state->__pyx_n_s_previoev);
  Py_VISIT(traverse_module_state->__pyx_n_s_print);
  Py_VISIT(traverse_module_state->__pyx_n_s_printContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_pure_pil_alpha_to_color_v2);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyvips);
  Py_VISIT(traverse_module_state->__pyx_n_s_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_qualname);
  Py_VISIT(traverse_module_state->__pyx_n_s_questhead);
  Py_VISIT(traverse_module_state->__pyx_n_s_queue);
  Py_VISIT(traverse_module_state->__pyx_n_s_queue_check);
  Py_VISIT(traverse_module_state->__pyx_n_s_r);
  Py_VISIT(traverse_module_state->__pyx_n_s_r_back);
  Py_VISIT(traverse_module_state->__pyx_n_s_r_val);
  Py_VISIT(traverse_module_state->__pyx_n_s_random);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_rclick_events);
  Py_VISIT(traverse_module_state->__pyx_n_s_real_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_real_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_realdata);
  Py_VISIT(traverse_module_state->__pyx_n_s_realy);
  Py_VISIT(traverse_module_state->__pyx_n_s_redraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_render);
  Py_VISIT(traverse_module_state->__pyx_n_s_render_letter);
  Py_VISIT(traverse_module_state->__pyx_n_s_render_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_render_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_render_texture_quad);
  Py_VISIT(traverse_module_state->__pyx_n_s_repeat);
  Py_VISIT(traverse_module_state->__pyx_n_s_reset);
  Py_VISIT(traverse_module_state->__pyx_n_s_reshape);
  Py_VISIT(traverse_module_state->__pyx_n_s_resize);
  Py_VISIT(traverse_module_state->__pyx_n_s_resize_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_restype);
  Py_VISIT(traverse_module_state->__pyx_n_s_rgba2rgb);
  Py_VISIT(traverse_module_state->__pyx_n_s_rise);
  Py_VISIT(traverse_module_state->__pyx_n_s_rnd);
  Py_VISIT(traverse_module_state->__pyx_n_s_rotate);
  Py_VISIT(traverse_module_state->__pyx_n_s_round);
  Py_VISIT(traverse_module_state->__pyx_n_s_rows);
  Py_VISIT(traverse_module_state->__pyx_n_s_run);
  Py_VISIT(traverse_module_state->__pyx_n_s_s);
  Py_VISIT(traverse_module_state->__pyx_n_s_sav_vert);
  Py_VISIT(traverse_module_state->__pyx_n_s_scale);
  Py_VISIT(traverse_module_state->__pyx_n_s_scalex);
  Py_VISIT(traverse_module_state->__pyx_n_s_scaley);
  Py_VISIT(traverse_module_state->__pyx_n_s_screen);
  Py_VISIT(traverse_module_state->__pyx_n_s_screen_res);
  Py_VISIT(traverse_module_state->__pyx_n_s_screenx);
  Py_VISIT(traverse_module_state->__pyx_n_s_screeny);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_n_s_self_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_sequential);
  Py_VISIT(traverse_module_state->__pyx_n_s_serialization);
  Py_VISIT(traverse_module_state->__pyx_n_s_serialization_current_object);
  Py_VISIT(traverse_module_state->__pyx_n_s_serialize_to_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_serialized_obj);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_background);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_centerpoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_char_size);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_eyepoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_mode);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_shaderprogram);
  Py_VISIT(traverse_module_state->__pyx_n_s_shaders);
  Py_VISIT(traverse_module_state->__pyx_n_s_shape);
  Py_VISIT(traverse_module_state->__pyx_n_s_shrink);
  Py_VISIT(traverse_module_state->__pyx_n_s_size);
  Py_VISIT(traverse_module_state->__pyx_n_s_size_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_size_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_sizeof);
  Py_VISIT(traverse_module_state->__pyx_n_s_sizex);
  Py_VISIT(traverse_module_state->__pyx_n_s_sizey);
  Py_VISIT(traverse_module_state->__pyx_n_s_sleep);
  Py_VISIT(traverse_module_state->__pyx_n_s_slope_error_new);
  Py_VISIT(traverse_module_state->__pyx_n_s_spacing);
  Py_VISIT(traverse_module_state->__pyx_n_s_spacing_addx);
  Py_VISIT(traverse_module_state->__pyx_n_s_spacing_addy);
  Py_VISIT(traverse_module_state->__pyx_n_s_spacing_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_split);
  Py_VISIT(traverse_module_state->__pyx_n_s_sqrt);
  Py_VISIT(traverse_module_state->__pyx_n_s_start_new_thread);
  Py_VISIT(traverse_module_state->__pyx_n_s_startswith);
  Py_VISIT(traverse_module_state->__pyx_n_s_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_strings);
  Py_VISIT(traverse_module_state->__pyx_n_s_super);
  Py_VISIT(traverse_module_state->__pyx_n_s_switch);
  Py_VISIT(traverse_module_state->__pyx_n_s_sx);
  Py_VISIT(traverse_module_state->__pyx_n_s_sy);
  Py_VISIT(traverse_module_state->__pyx_n_s_sys);
  Py_VISIT(traverse_module_state->__pyx_n_s_t);
  Py_VISIT(traverse_module_state->__pyx_n_s_t1);
  Py_VISIT(traverse_module_state->__pyx_n_s_t2);
  Py_VISIT(traverse_module_state->__pyx_n_s_t3);
  Py_VISIT(traverse_module_state->__pyx_n_s_t4);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_tex_arrayn_translate);
  Py_VISIT(traverse_module_state->__pyx_n_s_texcords1);
  Py_VISIT(traverse_module_state->__pyx_n_s_texcords2);
  Py_VISIT(traverse_module_state->__pyx_n_s_texcords3);
  Py_VISIT(traverse_module_state->__pyx_n_s_texcords4);
  Py_VISIT(traverse_module_state->__pyx_n_s_texid);
  Py_VISIT(traverse_module_state->__pyx_n_s_texsize);
  Py_VISIT(traverse_module_state->__pyx_n_s_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_textid);
  Py_VISIT(traverse_module_state->__pyx_n_s_textn);
  Py_VISIT(traverse_module_state->__pyx_n_s_textr);
  Py_VISIT(traverse_module_state->__pyx_n_s_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_texture_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_texture_cords_to_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_s_texture_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_texture_slots);
  Py_VISIT(traverse_module_state->__pyx_n_s_textured);
  Py_VISIT(traverse_module_state->__pyx_n_s_textures);
  Py_VISIT(traverse_module_state->__pyx_n_s_th);
  Py_VISIT(traverse_module_state->__pyx_n_s_thread);
  Py_VISIT(traverse_module_state->__pyx_n_s_time);
  Py_VISIT(traverse_module_state->__pyx_n_s_title);
  Py_VISIT(traverse_module_state->__pyx_n_s_tk);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkAutoSpin);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkCreateContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkExpose);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkHandlePick);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkMakeCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkMap);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkPrint);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkRecordMouse);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkRedraw);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkResize);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkRotate);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkScale);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkSwapBuffers);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkTranslate);
  Py_VISIT(traverse_module_state->__pyx_n_s_tkinter);
  Py_VISIT(traverse_module_state->__pyx_n_s_tlist);
  Py_VISIT(traverse_module_state->__pyx_n_s_to);
  Py_VISIT(traverse_module_state->__pyx_n_s_total_updates);
  Py_VISIT(traverse_module_state->__pyx_n_s_tquad);
  Py_VISIT(traverse_module_state->__pyx_n_s_tr1);
  Py_VISIT(traverse_module_state->__pyx_n_s_tr2);
  Py_VISIT(traverse_module_state->__pyx_n_s_tu);
  Py_VISIT(traverse_module_state->__pyx_n_s_tua);
  Py_VISIT(traverse_module_state->__pyx_n_s_txn);
  Py_VISIT(traverse_module_state->__pyx_n_s_txs);
  Py_VISIT(traverse_module_state->__pyx_n_s_txtid);
  Py_VISIT(traverse_module_state->__pyx_n_s_ubyte);
  Py_VISIT(traverse_module_state->__pyx_n_s_uint8);
  Py_VISIT(traverse_module_state->__pyx_n_s_unload);
  Py_VISIT(traverse_module_state->__pyx_n_s_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_update_animation);
  Py_VISIT(traverse_module_state->__pyx_n_s_update_idletasks);
  Py_VISIT(traverse_module_state->__pyx_n_s_update_list);
  Py_VISIT(traverse_module_state->__pyx_n_s_updates);
  Py_VISIT(traverse_module_state->__pyx_n_s_use_texture);
  Py_VISIT(traverse_module_state->__pyx_n_s_usecords);
  Py_VISIT(traverse_module_state->__pyx_n_s_user32);
  Py_VISIT(traverse_module_state->__pyx_n_s_user32_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_usingVIPSandShrink);
  Py_VISIT(traverse_module_state->__pyx_kp_s_utf_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_util);
  Py_VISIT(traverse_module_state->__pyx_n_s_v3distsq);
  Py_VISIT(traverse_module_state->__pyx_n_s_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_vb_count);
  Py_VISIT(traverse_module_state->__pyx_n_s_vbo);
  Py_VISIT(traverse_module_state->__pyx_n_s_vbos);
  Py_VISIT(traverse_module_state->__pyx_kp_s_version_330_core_layout_locatio);
  Py_VISIT(traverse_module_state->__pyx_kp_s_version_330_core_layout_locatio_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_version_info);
  Py_VISIT(traverse_module_state->__pyx_n_s_vert_lists);
  Py_VISIT(traverse_module_state->__pyx_n_s_vertices);
  Py_VISIT(traverse_module_state->__pyx_n_s_vipshome);
  Py_VISIT(traverse_module_state->__pyx_n_s_vis);
  Py_VISIT(traverse_module_state->__pyx_n_s_visual);
  Py_VISIT(traverse_module_state->__pyx_n_s_visualid);
  Py_VISIT(traverse_module_state->__pyx_n_s_vns);
  Py_VISIT(traverse_module_state->__pyx_n_s_vxshader);
  Py_VISIT(traverse_module_state->__pyx_n_s_w);
  Py_VISIT(traverse_module_state->__pyx_n_s_w_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_wait);
  Py_VISIT(traverse_module_state->__pyx_n_s_wglCreateContext);
  Py_VISIT(traverse_module_state->__pyx_n_s_wglMakeCurrent);
  Py_VISIT(traverse_module_state->__pyx_n_s_wid);
  Py_VISIT(traverse_module_state->__pyx_n_s_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_win);
  Py_VISIT(traverse_module_state->__pyx_n_s_win32);
  Py_VISIT(traverse_module_state->__pyx_n_s_win_height);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_height);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_ismapped);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_screen);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_visualid);
  Py_VISIT(traverse_module_state->__pyx_n_s_winfo_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_write_to_memory);
  Py_VISIT(traverse_module_state->__pyx_n_s_wtf);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_x1);
  Py_VISIT(traverse_module_state->__pyx_n_s_x11lib);
  Py_VISIT(traverse_module_state->__pyx_n_s_x2);
  Py_VISIT(traverse_module_state->__pyx_n_s_x_root);
  Py_VISIT(traverse_module_state->__pyx_n_s_xcenter);
  Py_VISIT(traverse_module_state->__pyx_n_s_xmouse);
  Py_VISIT(traverse_module_state->__pyx_n_s_xr);
  Py_VISIT(traverse_module_state->__pyx_n_s_xspin);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_y1);
  Py_VISIT(traverse_module_state->__pyx_n_s_y2);
  Py_VISIT(traverse_module_state->__pyx_n_s_y_root);
  Py_VISIT(traverse_module_state->__pyx_n_s_ycenter);
  Py_VISIT(traverse_module_state->__pyx_n_s_ymouse);
  Py_VISIT(traverse_module_state->__pyx_n_s_yr);
  Py_VISIT(traverse_module_state->__pyx_n_s_yspin);
  Py_VISIT(traverse_module_state->__pyx_n_s_z);
  Py_VISIT(traverse_module_state->__pyx_n_s_zcenter);
  Py_VISIT(traverse_module_state->__pyx_n_s_zeros);
  Py_VISIT(traverse_module_state->__pyx_float_0_);
  Py_VISIT(traverse_module_state->__pyx_float_1_);
  Py_VISIT(traverse_module_state->__pyx_float_0_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_1);
  Py_VISIT(traverse_module_state->__pyx_float_0_5);
  Py_VISIT(traverse_module_state->__pyx_float_1_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_01);
  Py_VISIT(traverse_module_state->__pyx_float_10_0);
  Py_VISIT(traverse_module_state->__pyx_float_30_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_001);
  Py_VISIT(traverse_module_state->__pyx_float_1000_0);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_2);
  Py_VISIT(traverse_module_state->__pyx_int_3);
  Py_VISIT(traverse_module_state->__pyx_int_4);
  Py_VISIT(traverse_module_state->__pyx_int_5);
  Py_VISIT(traverse_module_state->__pyx_int_6);
  Py_VISIT(traverse_module_state->__pyx_int_7);
  Py_VISIT(traverse_module_state->__pyx_int_8);
  Py_VISIT(traverse_module_state->__pyx_int_9);
  Py_VISIT(traverse_module_state->__pyx_int_10);
  Py_VISIT(traverse_module_state->__pyx_int_11);
  Py_VISIT(traverse_module_state->__pyx_int_12);
  Py_VISIT(traverse_module_state->__pyx_int_13);
  Py_VISIT(traverse_module_state->__pyx_int_14);
  Py_VISIT(traverse_module_state->__pyx_int_15);
  Py_VISIT(traverse_module_state->__pyx_int_16);
  Py_VISIT(traverse_module_state->__pyx_int_17);
  Py_VISIT(traverse_module_state->__pyx_int_18);
  Py_VISIT(traverse_module_state->__pyx_int_19);
  Py_VISIT(traverse_module_state->__pyx_int_20);
  Py_VISIT(traverse_module_state->__pyx_int_21);
  Py_VISIT(traverse_module_state->__pyx_int_23);
  Py_VISIT(traverse_module_state->__pyx_int_24);
  Py_VISIT(traverse_module_state->__pyx_int_25);
  Py_VISIT(traverse_module_state->__pyx_int_26);
  Py_VISIT(traverse_module_state->__pyx_int_27);
  Py_VISIT(traverse_module_state->__pyx_int_28);
  Py_VISIT(traverse_module_state->__pyx_int_29);
  Py_VISIT(traverse_module_state->__pyx_int_30);
  Py_VISIT(traverse_module_state->__pyx_int_31);
  Py_VISIT(traverse_module_state->__pyx_int_32);
  Py_VISIT(traverse_module_state->__pyx_int_33);
  Py_VISIT(traverse_module_state->__pyx_int_34);
  Py_VISIT(traverse_module_state->__pyx_int_35);
  Py_VISIT(traverse_module_state->__pyx_int_36);
  Py_VISIT(traverse_module_state->__pyx_int_37);
  Py_VISIT(traverse_module_state->__pyx_int_38);
  Py_VISIT(traverse_module_state->__pyx_int_39);
  Py_VISIT(traverse_module_state->__pyx_int_40);
  Py_VISIT(traverse_module_state->__pyx_int_64);
  Py_VISIT(traverse_module_state->__pyx_int_255);
  Py_VISIT(traverse_module_state->__pyx_int_256);
  Py_VISIT(traverse_module_state->__pyx_int_1000);
  Py_VISIT(traverse_module_state->__pyx_int_1080);
  Py_VISIT(traverse_module_state->__pyx_int_1920);
  Py_VISIT(traverse_module_state->__pyx_int_neg_1);
  Py_VISIT(traverse_module_state->__pyx_int_neg_10);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_slice__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__20);
  Py_VISIT(traverse_module_state->__pyx_tuple__21);
  Py_VISIT(traverse_module_state->__pyx_tuple__23);
  Py_VISIT(traverse_module_state->__pyx_tuple__25);
  Py_VISIT(traverse_module_state->__pyx_tuple__27);
  Py_VISIT(traverse_module_state->__pyx_tuple__29);
  Py_VISIT(traverse_module_state->__pyx_tuple__31);
  Py_VISIT(traverse_module_state->__pyx_tuple__33);
  Py_VISIT(traverse_module_state->__pyx_tuple__35);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__43);
  Py_VISIT(traverse_module_state->__pyx_tuple__45);
  Py_VISIT(traverse_module_state->__pyx_tuple__47);
  Py_VISIT(traverse_module_state->__pyx_tuple__50);
  Py_VISIT(traverse_module_state->__pyx_tuple__52);
  Py_VISIT(traverse_module_state->__pyx_tuple__57);
  Py_VISIT(traverse_module_state->__pyx_tuple__59);
  Py_VISIT(traverse_module_state->__pyx_tuple__61);
  Py_VISIT(traverse_module_state->__pyx_tuple__63);
  Py_VISIT(traverse_module_state->__pyx_tuple__65);
  Py_VISIT(traverse_module_state->__pyx_tuple__67);
  Py_VISIT(traverse_module_state->__pyx_tuple__69);
  Py_VISIT(traverse_module_state->__pyx_tuple__71);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__75);
  Py_VISIT(traverse_module_state->__pyx_tuple__76);
  Py_VISIT(traverse_module_state->__pyx_tuple__78);
  Py_VISIT(traverse_module_state->__pyx_tuple__81);
  Py_VISIT(traverse_module_state->__pyx_tuple__83);
  Py_VISIT(traverse_module_state->__pyx_tuple__85);
  Py_VISIT(traverse_module_state->__pyx_tuple__87);
  Py_VISIT(traverse_module_state->__pyx_tuple__89);
  Py_VISIT(traverse_module_state->__pyx_tuple__91);
  Py_VISIT(traverse_module_state->__pyx_tuple__93);
  Py_VISIT(traverse_module_state->__pyx_tuple__95);
  Py_VISIT(traverse_module_state->__pyx_tuple__97);
  Py_VISIT(traverse_module_state->__pyx_tuple__98);
  Py_VISIT(traverse_module_state->__pyx_tuple__100);
  Py_VISIT(traverse_module_state->__pyx_tuple__102);
  Py_VISIT(traverse_module_state->__pyx_tuple__104);
  Py_VISIT(traverse_module_state->__pyx_tuple__106);
  Py_VISIT(traverse_module_state->__pyx_tuple__108);
  Py_VISIT(traverse_module_state->__pyx_tuple__110);
  Py_VISIT(traverse_module_state->__pyx_tuple__112);
  Py_VISIT(traverse_module_state->__pyx_tuple__114);
  Py_VISIT(traverse_module_state->__pyx_tuple__116);
  Py_VISIT(traverse_module_state->__pyx_tuple__118);
  Py_VISIT(traverse_module_state->__pyx_tuple__120);
  Py_VISIT(traverse_module_state->__pyx_tuple__121);
  Py_VISIT(traverse_module_state->__pyx_tuple__122);
  Py_VISIT(traverse_module_state->__pyx_tuple__124);
  Py_VISIT(traverse_module_state->__pyx_tuple__126);
  Py_VISIT(traverse_module_state->__pyx_tuple__128);
  Py_VISIT(traverse_module_state->__pyx_tuple__129);
  Py_VISIT(traverse_module_state->__pyx_tuple__130);
  Py_VISIT(traverse_module_state->__pyx_tuple__132);
  Py_VISIT(traverse_module_state->__pyx_tuple__134);
  Py_VISIT(traverse_module_state->__pyx_tuple__136);
  Py_VISIT(traverse_module_state->__pyx_tuple__138);
  Py_VISIT(traverse_module_state->__pyx_tuple__140);
  Py_VISIT(traverse_module_state->__pyx_tuple__142);
  Py_VISIT(traverse_module_state->__pyx_tuple__144);
  Py_VISIT(traverse_module_state->__pyx_tuple__146);
  Py_VISIT(traverse_module_state->__pyx_tuple__148);
  Py_VISIT(traverse_module_state->__pyx_tuple__150);
  Py_VISIT(traverse_module_state->__pyx_tuple__152);
  Py_VISIT(traverse_module_state->__pyx_tuple__154);
  Py_VISIT(traverse_module_state->__pyx_tuple__156);
  Py_VISIT(traverse_module_state->__pyx_tuple__158);
  Py_VISIT(traverse_module_state->__pyx_tuple__160);
  Py_VISIT(traverse_module_state->__pyx_tuple__162);
  Py_VISIT(traverse_module_state->__pyx_tuple__164);
  Py_VISIT(traverse_module_state->__pyx_tuple__166);
  Py_VISIT(traverse_module_state->__pyx_tuple__168);
  Py_VISIT(traverse_module_state->__pyx_tuple__170);
  Py_VISIT(traverse_module_state->__pyx_tuple__172);
  Py_VISIT(traverse_module_state->__pyx_tuple__174);
  Py_VISIT(traverse_module_state->__pyx_tuple__176);
  Py_VISIT(traverse_module_state->__pyx_tuple__178);
  Py_VISIT(traverse_module_state->__pyx_tuple__180);
  Py_VISIT(traverse_module_state->__pyx_tuple__182);
  Py_VISIT(traverse_module_state->__pyx_tuple__184);
  Py_VISIT(traverse_module_state->__pyx_tuple__186);
  Py_VISIT(traverse_module_state->__pyx_tuple__188);
  Py_VISIT(traverse_module_state->__pyx_tuple__190);
  Py_VISIT(traverse_module_state->__pyx_tuple__192);
  Py_VISIT(traverse_module_state->__pyx_tuple__194);
  Py_VISIT(traverse_module_state->__pyx_tuple__196);
  Py_VISIT(traverse_module_state->__pyx_tuple__198);
  Py_VISIT(traverse_module_state->__pyx_tuple__200);
  Py_VISIT(traverse_module_state->__pyx_tuple__202);
  Py_VISIT(traverse_module_state->__pyx_tuple__204);
  Py_VISIT(traverse_module_state->__pyx_tuple__206);
  Py_VISIT(traverse_module_state->__pyx_tuple__208);
  Py_VISIT(traverse_module_state->__pyx_tuple__210);
  Py_VISIT(traverse_module_state->__pyx_tuple__211);
  Py_VISIT(traverse_module_state->__pyx_tuple__213);
  Py_VISIT(traverse_module_state->__pyx_tuple__214);
  Py_VISIT(traverse_module_state->__pyx_tuple__216);
  Py_VISIT(traverse_module_state->__pyx_tuple__218);
  Py_VISIT(traverse_module_state->__pyx_tuple__219);
  Py_VISIT(traverse_module_state->__pyx_tuple__221);
  Py_VISIT(traverse_module_state->__pyx_tuple__223);
  Py_VISIT(traverse_module_state->__pyx_tuple__225);
  Py_VISIT(traverse_module_state->__pyx_tuple__226);
  Py_VISIT(traverse_module_state->__pyx_tuple__228);
  Py_VISIT(traverse_module_state->__pyx_tuple__229);
  Py_VISIT(traverse_module_state->__pyx_tuple__231);
  Py_VISIT(traverse_module_state->__pyx_tuple__233);
  Py_VISIT(traverse_module_state->__pyx_tuple__235);
  Py_VISIT(traverse_module_state->__pyx_tuple__236);
  Py_VISIT(traverse_module_state->__pyx_tuple__239);
  Py_VISIT(traverse_module_state->__pyx_tuple__241);
  Py_VISIT(traverse_module_state->__pyx_tuple__242);
  Py_VISIT(traverse_module_state->__pyx_tuple__244);
  Py_VISIT(traverse_module_state->__pyx_tuple__246);
  Py_VISIT(traverse_module_state->__pyx_tuple__248);
  Py_VISIT(traverse_module_state->__pyx_tuple__250);
  Py_VISIT(traverse_module_state->__pyx_tuple__252);
  Py_VISIT(traverse_module_state->__pyx_tuple__254);
  Py_VISIT(traverse_module_state->__pyx_tuple__256);
  Py_VISIT(traverse_module_state->__pyx_tuple__258);
  Py_VISIT(traverse_module_state->__pyx_tuple__259);
  Py_VISIT(traverse_module_state->__pyx_tuple__261);
  Py_VISIT(traverse_module_state->__pyx_tuple__262);
  Py_VISIT(traverse_module_state->__pyx_tuple__264);
  Py_VISIT(traverse_module_state->__pyx_tuple__266);
  Py_VISIT(traverse_module_state->__pyx_tuple__268);
  Py_VISIT(traverse_module_state->__pyx_tuple__270);
  Py_VISIT(traverse_module_state->__pyx_tuple__272);
  Py_VISIT(traverse_module_state->__pyx_tuple__274);
  Py_VISIT(traverse_module_state->__pyx_tuple__276);
  Py_VISIT(traverse_module_state->__pyx_tuple__278);
  Py_VISIT(traverse_module_state->__pyx_tuple__280);
  Py_VISIT(traverse_module_state->__pyx_tuple__282);
  Py_VISIT(traverse_module_state->__pyx_tuple__284);
  Py_VISIT(traverse_module_state->__pyx_tuple__286);
  Py_VISIT(traverse_module_state->__pyx_tuple__288);
  Py_VISIT(traverse_module_state->__pyx_tuple__290);
  Py_VISIT(traverse_module_state->__pyx_tuple__292);
  Py_VISIT(traverse_module_state->__pyx_tuple__294);
  Py_VISIT(traverse_module_state->__pyx_tuple__296);
  Py_VISIT(traverse_module_state->__pyx_tuple__298);
  Py_VISIT(traverse_module_state->__pyx_tuple__300);
  Py_VISIT(traverse_module_state->__pyx_tuple__302);
  Py_VISIT(traverse_module_state->__pyx_tuple__304);
  Py_VISIT(traverse_module_state->__pyx_tuple__306);
  Py_VISIT(traverse_module_state->__pyx_tuple__307);
  Py_VISIT(traverse_module_state->__pyx_tuple__309);
  Py_VISIT(traverse_module_state->__pyx_tuple__311);
  Py_VISIT(traverse_module_state->__pyx_tuple__313);
  Py_VISIT(traverse_module_state->__pyx_tuple__315);
  Py_VISIT(traverse_module_state->__pyx_tuple__319);
  Py_VISIT(traverse_module_state->__pyx_tuple__321);
  Py_VISIT(traverse_module_state->__pyx_tuple__323);
  Py_VISIT(traverse_module_state->__pyx_codeobj__22);
  Py_VISIT(traverse_module_state->__pyx_codeobj__24);
  Py_VISIT(traverse_module_state->__pyx_codeobj__26);
  Py_VISIT(traverse_module_state->__pyx_codeobj__28);
  Py_VISIT(traverse_module_state->__pyx_codeobj__30);
  Py_VISIT(traverse_module_state->__pyx_codeobj__32);
  Py_VISIT(traverse_module_state->__pyx_codeobj__34);
  Py_VISIT(traverse_module_state->__pyx_codeobj__36);
  Py_VISIT(traverse_module_state->__pyx_codeobj__38);
  Py_VISIT(traverse_module_state->__pyx_codeobj__40);
  Py_VISIT(traverse_module_state->__pyx_codeobj__42);
  Py_VISIT(traverse_module_state->__pyx_codeobj__44);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__48);
  Py_VISIT(traverse_module_state->__pyx_codeobj__49);
  Py_VISIT(traverse_module_state->__pyx_codeobj__51);
  Py_VISIT(traverse_module_state->__pyx_codeobj__53);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__58);
  Py_VISIT(traverse_module_state->__pyx_codeobj__60);
  Py_VISIT(traverse_module_state->__pyx_codeobj__62);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__70);
  Py_VISIT(traverse_module_state->__pyx_codeobj__72);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__77);
  Py_VISIT(traverse_module_state->__pyx_codeobj__79);
  Py_VISIT(traverse_module_state->__pyx_codeobj__82);
  Py_VISIT(traverse_module_state->__pyx_codeobj__84);
  Py_VISIT(traverse_module_state->__pyx_codeobj__86);
  Py_VISIT(traverse_module_state->__pyx_codeobj__88);
  Py_VISIT(traverse_module_state->__pyx_codeobj__90);
  Py_VISIT(traverse_module_state->__pyx_codeobj__92);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__96);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__101);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__105);
  Py_VISIT(traverse_module_state->__pyx_codeobj__107);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__111);
  Py_VISIT(traverse_module_state->__pyx_codeobj__113);
  Py_VISIT(traverse_module_state->__pyx_codeobj__115);
  Py_VISIT(traverse_module_state->__pyx_codeobj__117);
  Py_VISIT(traverse_module_state->__pyx_codeobj__119);
  Py_VISIT(traverse_module_state->__pyx_codeobj__123);
  Py_VISIT(traverse_module_state->__pyx_codeobj__125);
  Py_VISIT(traverse_module_state->__pyx_codeobj__127);
  Py_VISIT(traverse_module_state->__pyx_codeobj__131);
  Py_VISIT(traverse_module_state->__pyx_codeobj__133);
  Py_VISIT(traverse_module_state->__pyx_codeobj__135);
  Py_VISIT(traverse_module_state->__pyx_codeobj__137);
  Py_VISIT(traverse_module_state->__pyx_codeobj__139);
  Py_VISIT(traverse_module_state->__pyx_codeobj__141);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__145);
  Py_VISIT(traverse_module_state->__pyx_codeobj__147);
  Py_VISIT(traverse_module_state->__pyx_codeobj__149);
  Py_VISIT(traverse_module_state->__pyx_codeobj__151);
  Py_VISIT(traverse_module_state->__pyx_codeobj__153);
  Py_VISIT(traverse_module_state->__pyx_codeobj__155);
  Py_VISIT(traverse_module_state->__pyx_codeobj__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__159);
  Py_VISIT(traverse_module_state->__pyx_codeobj__161);
  Py_VISIT(traverse_module_state->__pyx_codeobj__163);
  Py_VISIT(traverse_module_state->__pyx_codeobj__165);
  Py_VISIT(traverse_module_state->__pyx_codeobj__167);
  Py_VISIT(traverse_module_state->__pyx_codeobj__169);
  Py_VISIT(traverse_module_state->__pyx_codeobj__171);
  Py_VISIT(traverse_module_state->__pyx_codeobj__173);
  Py_VISIT(traverse_module_state->__pyx_codeobj__175);
  Py_VISIT(traverse_module_state->__pyx_codeobj__177);
  Py_VISIT(traverse_module_state->__pyx_codeobj__179);
  Py_VISIT(traverse_module_state->__pyx_codeobj__181);
  Py_VISIT(traverse_module_state->__pyx_codeobj__183);
  Py_VISIT(traverse_module_state->__pyx_codeobj__185);
  Py_VISIT(traverse_module_state->__pyx_codeobj__187);
  Py_VISIT(traverse_module_state->__pyx_codeobj__189);
  Py_VISIT(traverse_module_state->__pyx_codeobj__191);
  Py_VISIT(traverse_module_state->__pyx_codeobj__193);
  Py_VISIT(traverse_module_state->__pyx_codeobj__195);
  Py_VISIT(traverse_module_state->__pyx_codeobj__197);
  Py_VISIT(traverse_module_state->__pyx_codeobj__199);
  Py_VISIT(traverse_module_state->__pyx_codeobj__201);
  Py_VISIT(traverse_module_state->__pyx_codeobj__203);
  Py_VISIT(traverse_module_state->__pyx_codeobj__205);
  Py_VISIT(traverse_module_state->__pyx_codeobj__209);
  Py_VISIT(traverse_module_state->__pyx_codeobj__212);
  Py_VISIT(traverse_module_state->__pyx_codeobj__215);
  Py_VISIT(traverse_module_state->__pyx_codeobj__217);
  Py_VISIT(traverse_module_state->__pyx_codeobj__220);
  Py_VISIT(traverse_module_state->__pyx_codeobj__222);
  Py_VISIT(traverse_module_state->__pyx_codeobj__224);
  Py_VISIT(traverse_module_state->__pyx_codeobj__227);
  Py_VISIT(traverse_module_state->__pyx_codeobj__230);
  Py_VISIT(traverse_module_state->__pyx_codeobj__232);
  Py_VISIT(traverse_module_state->__pyx_codeobj__234);
  Py_VISIT(traverse_module_state->__pyx_codeobj__237);
  Py_VISIT(traverse_module_state->__pyx_codeobj__238);
  Py_VISIT(traverse_module_state->__pyx_codeobj__240);
  Py_VISIT(traverse_module_state->__pyx_codeobj__243);
  Py_VISIT(traverse_module_state->__pyx_codeobj__245);
  Py_VISIT(traverse_module_state->__pyx_codeobj__247);
  Py_VISIT(traverse_module_state->__pyx_codeobj__249);
  Py_VISIT(traverse_module_state->__pyx_codeobj__251);
  Py_VISIT(traverse_module_state->__pyx_codeobj__253);
  Py_VISIT(traverse_module_state->__pyx_codeobj__255);
  Py_VISIT(traverse_module_state->__pyx_codeobj__257);
  Py_VISIT(traverse_module_state->__pyx_codeobj__260);
  Py_VISIT(traverse_module_state->__pyx_codeobj__263);
  Py_VISIT(traverse_module_state->__pyx_codeobj__265);
  Py_VISIT(traverse_module_state->__pyx_codeobj__267);
  Py_VISIT(traverse_module_state->__pyx_codeobj__269);
  Py_VISIT(traverse_module_state->__pyx_codeobj__271);
  Py_VISIT(traverse_module_state->__pyx_codeobj__273);
  Py_VISIT(traverse_module_state->__pyx_codeobj__275);
  Py_VISIT(traverse_module_state->__pyx_codeobj__277);
  Py_VISIT(traverse_module_state->__pyx_codeobj__279);
  Py_VISIT(traverse_module_state->__pyx_codeobj__281);
  Py_VISIT(traverse_module_state->__pyx_codeobj__283);
  Py_VISIT(traverse_module_state->__pyx_codeobj__285);
  Py_VISIT(traverse_module_state->__pyx_codeobj__287);
  Py_VISIT(traverse_module_state->__pyx_codeobj__289);
  Py_VISIT(traverse_module_state->__pyx_codeobj__291);
  Py_VISIT(traverse_module_state->__pyx_codeobj__293);
  Py_VISIT(traverse_module_state->__pyx_codeobj__295);
  Py_VISIT(traverse_module_state->__pyx_codeobj__297);
  Py_VISIT(traverse_module_state->__pyx_codeobj__299);
  Py_VISIT(traverse_module_state->__pyx_codeobj__301);
  Py_VISIT(traverse_module_state->__pyx_codeobj__303);
  Py_VISIT(traverse_module_state->__pyx_codeobj__305);
  Py_VISIT(traverse_module_state->__pyx_codeobj__308);
  Py_VISIT(traverse_module_state->__pyx_codeobj__310);
  Py_VISIT(traverse_module_state->__pyx_codeobj__312);
  Py_VISIT(traverse_module_state->__pyx_codeobj__314);
  Py_VISIT(traverse_module_state->__pyx_codeobj__316);
  Py_VISIT(traverse_module_state->__pyx_codeobj__317);
  Py_VISIT(traverse_module_state->__pyx_codeobj__318);
  Py_VISIT(traverse_module_state->__pyx_codeobj__320);
  Py_VISIT(traverse_module_state->__pyx_codeobj__322);
  Py_VISIT(traverse_module_state->__pyx_codeobj__324);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#if CYTHON_COMPILING_IN_LIMITED_API
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#define __pyx_n_s_AssertionError __pyx_mstate_global->__pyx_n_s_AssertionError
#define __pyx_n_s_B1 __pyx_mstate_global->__pyx_n_s_B1
#define __pyx_kp_s_B1_Motion __pyx_mstate_global->__pyx_kp_s_B1_Motion
#define __pyx_n_s_B2 __pyx_mstate_global->__pyx_n_s_B2
#define __pyx_kp_s_B2_Motion __pyx_mstate_global->__pyx_kp_s_B2_Motion
#define __pyx_n_s_B3 __pyx_mstate_global->__pyx_n_s_B3
#define __pyx_kp_s_B3_Motion __pyx_mstate_global->__pyx_kp_s_B3_Motion
#define __pyx_n_s_BOOL __pyx_mstate_global->__pyx_n_s_BOOL
#define __pyx_n_s_BOX_SIZE __pyx_mstate_global->__pyx_n_s_BOX_SIZE
#define __pyx_n_s_BOX_START __pyx_mstate_global->__pyx_n_s_BOX_START
#define __pyx_n_s_BP __pyx_mstate_global->__pyx_n_s_BP
#define __pyx_n_s_BR __pyx_mstate_global->__pyx_n_s_BR
#define __pyx_kp_s_Before __pyx_mstate_global->__pyx_kp_s_Before
#define __pyx_kp_s_ButtonRelease_2 __pyx_mstate_global->__pyx_kp_s_ButtonRelease_2
#define __pyx_kp_s_Button_1 __pyx_mstate_global->__pyx_kp_s_Button_1
#define __pyx_kp_s_Button_1_2 __pyx_mstate_global->__pyx_kp_s_Button_1_2
#define __pyx_kp_s_Button_1_Translate_Button_2_Rota __pyx_mstate_global->__pyx_kp_s_Button_1_Translate_Button_2_Rota
#define __pyx_kp_s_Button_2 __pyx_mstate_global->__pyx_kp_s_Button_2
#define __pyx_kp_s_Button_2_2 __pyx_mstate_global->__pyx_kp_s_Button_2_2
#define __pyx_kp_s_Button_3 __pyx_mstate_global->__pyx_kp_s_Button_3
#define __pyx_kp_s_Button_3_2 __pyx_mstate_global->__pyx_kp_s_Button_3_2
#define __pyx_n_s_CFUNCTYPE __pyx_mstate_global->__pyx_n_s_CFUNCTYPE
#define __pyx_n_s_COLOR __pyx_mstate_global->__pyx_n_s_COLOR
#define __pyx_n_s_ChoosePixelFormat __pyx_mstate_global->__pyx_n_s_ChoosePixelFormat
#define __pyx_n_s_Colormap __pyx_mstate_global->__pyx_n_s_Colormap
#define __pyx_kp_s_Common_code_for_windows_x11 __pyx_mstate_global->__pyx_kp_s_Common_code_for_windows_x11
#define __pyx_kp_s_Configure __pyx_mstate_global->__pyx_kp_s_Configure
#define __pyx_n_s_Cords __pyx_mstate_global->__pyx_n_s_Cords
#define __pyx_kp_s_Create __pyx_mstate_global->__pyx_kp_s_Create
#define __pyx_n_s_D2DEvents __pyx_mstate_global->__pyx_n_s_D2DEvents
#define __pyx_n_s_D2DEvents___init __pyx_mstate_global->__pyx_n_s_D2DEvents___init
#define __pyx_n_s_D2DEvents__pas __pyx_mstate_global->__pyx_n_s_D2DEvents__pas
#define __pyx_n_s_D2DEvents_add_event __pyx_mstate_global->__pyx_n_s_D2DEvents_add_event
#define __pyx_n_s_D2DEvents_check __pyx_mstate_global->__pyx_n_s_D2DEvents_check
#define __pyx_n_s_D2DEvents_checkkeypress __pyx_mstate_global->__pyx_n_s_D2DEvents_checkkeypress
#define __pyx_n_s_D2DEvents_checklclick __pyx_mstate_global->__pyx_n_s_D2DEvents_checklclick
#define __pyx_n_s_D2DEvents_checkmclick __pyx_mstate_global->__pyx_n_s_D2DEvents_checkmclick
#define __pyx_n_s_D2DEvents_checkmotion __pyx_mstate_global->__pyx_n_s_D2DEvents_checkmotion
#define __pyx_n_s_D2DEvents_checkrclick __pyx_mstate_global->__pyx_n_s_D2DEvents_checkrclick
#define __pyx_n_s_D2DEvents_clear_events __pyx_mstate_global->__pyx_n_s_D2DEvents_clear_events
#define __pyx_n_s_D2DRENDER __pyx_mstate_global->__pyx_n_s_D2DRENDER
#define __pyx_n_s_D2DRENDER_render __pyx_mstate_global->__pyx_n_s_D2DRENDER_render
#define __pyx_n_s_D2DRENDER_render_letter __pyx_mstate_global->__pyx_n_s_D2DRENDER_render_letter
#define __pyx_n_s_D2DRENDER_render_quad __pyx_mstate_global->__pyx_n_s_D2DRENDER_render_quad
#define __pyx_n_s_D2DRENDER_render_text __pyx_mstate_global->__pyx_n_s_D2DRENDER_render_text
#define __pyx_n_s_D2DRENDER_render_texture_quad __pyx_mstate_global->__pyx_n_s_D2DRENDER_render_texture_quad
#define __pyx_n_s_D2Dprerender __pyx_mstate_global->__pyx_n_s_D2Dprerender
#define __pyx_n_s_D2Dprerender___init __pyx_mstate_global->__pyx_n_s_D2Dprerender___init
#define __pyx_n_s_D2Dprerender_create_font __pyx_mstate_global->__pyx_n_s_D2Dprerender_create_font
#define __pyx_n_s_D2Dprerender_prerender_quad __pyx_mstate_global->__pyx_n_s_D2Dprerender_prerender_quad
#define __pyx_n_s_D2Dprerender_prerender_text __pyx_mstate_global->__pyx_n_s_D2Dprerender_prerender_text
#define __pyx_n_s_D2Dprerender_prerender_texturequ __pyx_mstate_global->__pyx_n_s_D2Dprerender_prerender_texturequ
#define __pyx_n_s_D2Draw __pyx_mstate_global->__pyx_n_s_D2Draw
#define __pyx_n_s_D2Draw___init __pyx_mstate_global->__pyx_n_s_D2Draw___init
#define __pyx_n_s_D2Draw__cords_to_ratio __pyx_mstate_global->__pyx_n_s_D2Draw__cords_to_ratio
#define __pyx_n_s_D2Draw__resize __pyx_mstate_global->__pyx_n_s_D2Draw__resize
#define __pyx_n_s_D2Draw__tex_arrayn_translate __pyx_mstate_global->__pyx_n_s_D2Draw__tex_arrayn_translate
#define __pyx_n_s_D2Draw__texture_cords_to_ratio __pyx_mstate_global->__pyx_n_s_D2Draw__texture_cords_to_ratio
#define __pyx_n_s_D2Draw_add_animation __pyx_mstate_global->__pyx_n_s_D2Draw_add_animation
#define __pyx_n_s_D2Draw_del_animation __pyx_mstate_global->__pyx_n_s_D2Draw_del_animation
#define __pyx_n_s_D2Draw_draw_line __pyx_mstate_global->__pyx_n_s_D2Draw_draw_line
#define __pyx_n_s_D2Draw_draw_lines __pyx_mstate_global->__pyx_n_s_D2Draw_draw_lines
#define __pyx_n_s_D2Draw_draw_point __pyx_mstate_global->__pyx_n_s_D2Draw_draw_point
#define __pyx_n_s_D2Draw_draw_points __pyx_mstate_global->__pyx_n_s_D2Draw_draw_points
#define __pyx_n_s_D2Draw_draw_quad __pyx_mstate_global->__pyx_n_s_D2Draw_draw_quad
#define __pyx_n_s_D2Draw_draw_quad_texture __pyx_mstate_global->__pyx_n_s_D2Draw_draw_quad_texture
#define __pyx_n_s_D2Draw_draw_quad_texture_array __pyx_mstate_global->__pyx_n_s_D2Draw_draw_quad_texture_array
#define __pyx_n_s_D2Draw_draw_text __pyx_mstate_global->__pyx_n_s_D2Draw_draw_text
#define __pyx_n_s_D2Draw_resize __pyx_mstate_global->__pyx_n_s_D2Draw_resize
#define __pyx_n_s_D2Draw_update_animation __pyx_mstate_global->__pyx_n_s_D2Draw_update_animation
#define __pyx_n_s_DRAWMODELOC __pyx_mstate_global->__pyx_n_s_DRAWMODELOC
#define __pyx_n_s_DRAW_MODE __pyx_mstate_global->__pyx_n_s_DRAW_MODE
#define __pyx_kp_s_D_vips_dev_8_9_bin __pyx_mstate_global->__pyx_kp_s_D_vips_dev_8_9_bin
#define __pyx_n_s_Dialog __pyx_mstate_global->__pyx_n_s_Dialog
#define __pyx_n_s_Display __pyx_mstate_global->__pyx_n_s_Display
#define __pyx_kp_s_Do_something_to_create_this_obje __pyx_mstate_global->__pyx_kp_s_Do_something_to_create_this_obje
#define __pyx_n_s_Done __pyx_mstate_global->__pyx_n_s_Done
#define __pyx_kp_s_Done_making_a_first_context __pyx_mstate_global->__pyx_kp_s_Done_making_a_first_context
#define __pyx_n_s_Drago2Dengine___versions___win32 __pyx_mstate_global->__pyx_n_s_Drago2Dengine___versions___win32
#define __pyx_kp_s_Drago2Dengine_py __pyx_mstate_global->__pyx_kp_s_Drago2Dengine_py
#define __pyx_n_s_DragoObject __pyx_mstate_global->__pyx_n_s_DragoObject
#define __pyx_n_s_DragoObject___docs __pyx_mstate_global->__pyx_n_s_DragoObject___docs
#define __pyx_n_s_DragoObject___init __pyx_mstate_global->__pyx_n_s_DragoObject___init
#define __pyx_n_s_DragoObject__is_serialized __pyx_mstate_global->__pyx_n_s_DragoObject__is_serialized
#define __pyx_n_s_DragoObject__load_scene __pyx_mstate_global->__pyx_n_s_DragoObject__load_scene
#define __pyx_n_s_DragoObject_add_buffer __pyx_mstate_global->__pyx_n_s_DragoObject_add_buffer
#define __pyx_n_s_DragoObject_add_textureupdate __pyx_mstate_global->__pyx_n_s_DragoObject_add_textureupdate
#define __pyx_n_s_DragoObject_bind_buffer __pyx_mstate_global->__pyx_n_s_DragoObject_bind_buffer
#define __pyx_n_s_DragoObject_clear __pyx_mstate_global->__pyx_n_s_DragoObject_clear
#define __pyx_n_s_DragoObject_compile __pyx_mstate_global->__pyx_n_s_DragoObject_compile
#define __pyx_n_s_DragoObject_create_letter __pyx_mstate_global->__pyx_n_s_DragoObject_create_letter
#define __pyx_n_s_DragoObject_create_quad __pyx_mstate_global->__pyx_n_s_DragoObject_create_quad
#define __pyx_n_s_DragoObject_delete_obj __pyx_mstate_global->__pyx_n_s_DragoObject_delete_obj
#define __pyx_n_s_DragoObject_draw __pyx_mstate_global->__pyx_n_s_DragoObject_draw
#define __pyx_n_s_DragoObject_draw_text __pyx_mstate_global->__pyx_n_s_DragoObject_draw_text
#define __pyx_n_s_DragoObject_edit_color __pyx_mstate_global->__pyx_n_s_DragoObject_edit_color
#define __pyx_n_s_DragoObject_edit_letter __pyx_mstate_global->__pyx_n_s_DragoObject_edit_letter
#define __pyx_n_s_DragoObject_edit_pos __pyx_mstate_global->__pyx_n_s_DragoObject_edit_pos
#define __pyx_n_s_DragoObject_edit_texture __pyx_mstate_global->__pyx_n_s_DragoObject_edit_texture
#define __pyx_n_s_DragoObject_edit_tpos __pyx_mstate_global->__pyx_n_s_DragoObject_edit_tpos
#define __pyx_n_s_DragoObject_get_buffer __pyx_mstate_global->__pyx_n_s_DragoObject_get_buffer
#define __pyx_n_s_DragoObject_get_color __pyx_mstate_global->__pyx_n_s_DragoObject_get_color
#define __pyx_n_s_DragoObject_get_objectindexes __pyx_mstate_global->__pyx_n_s_DragoObject_get_objectindexes
#define __pyx_n_s_DragoObject_get_pos __pyx_mstate_global->__pyx_n_s_DragoObject_get_pos
#define __pyx_n_s_DragoObject_get_shader __pyx_mstate_global->__pyx_n_s_DragoObject_get_shader
#define __pyx_n_s_DragoObject_get_texid __pyx_mstate_global->__pyx_n_s_DragoObject_get_texid
#define __pyx_n_s_DragoObject_get_vertices __pyx_mstate_global->__pyx_n_s_DragoObject_get_vertices
#define __pyx_n_s_DragoObject_move __pyx_mstate_global->__pyx_n_s_DragoObject_move
#define __pyx_n_s_DragoObject_move_down __pyx_mstate_global->__pyx_n_s_DragoObject_move_down
#define __pyx_n_s_DragoObject_move_up __pyx_mstate_global->__pyx_n_s_DragoObject_move_up
#define __pyx_n_s_DragoObject_queue __pyx_mstate_global->__pyx_n_s_DragoObject_queue
#define __pyx_n_s_DragoObject_queue_check __pyx_mstate_global->__pyx_n_s_DragoObject_queue_check
#define __pyx_n_s_DragoObject_serialize_to_obj __pyx_mstate_global->__pyx_n_s_DragoObject_serialize_to_obj
#define __pyx_n_s_DragoObject_set_mode __pyx_mstate_global->__pyx_n_s_DragoObject_set_mode
#define __pyx_n_s_DragoObject_switch __pyx_mstate_global->__pyx_n_s_DragoObject_switch
#define __pyx_n_s_DragoObject_update __pyx_mstate_global->__pyx_n_s_DragoObject_update
#define __pyx_n_s_DragoObject_use_texture __pyx_mstate_global->__pyx_n_s_DragoObject_use_texture
#define __pyx_n_s_EventDelay __pyx_mstate_global->__pyx_n_s_EventDelay
#define __pyx_n_s_EventOff __pyx_mstate_global->__pyx_n_s_EventOff
#define __pyx_n_s_EventOn __pyx_mstate_global->__pyx_n_s_EventOn
#define __pyx_n_s_EventType __pyx_mstate_global->__pyx_n_s_EventType
#define __pyx_kp_s_Expose __pyx_mstate_global->__pyx_kp_s_Expose
#define __pyx_kp_s_Extension_list __pyx_mstate_global->__pyx_kp_s_Extension_list
#define __pyx_n_s_FRAGMENT_SHADER __pyx_mstate_global->__pyx_n_s_FRAGMENT_SHADER
#define __pyx_n_s_FT_LOAD_FORCE_AUTOHINT __pyx_mstate_global->__pyx_n_s_FT_LOAD_FORCE_AUTOHINT
#define __pyx_n_s_FT_LOAD_RENDER __pyx_mstate_global->__pyx_n_s_FT_LOAD_RENDER
#define __pyx_n_s_Face __pyx_mstate_global->__pyx_n_s_Face
#define __pyx_n_s_Frame __pyx_mstate_global->__pyx_n_s_Frame
#define __pyx_n_s_GL __pyx_mstate_global->__pyx_n_s_GL
#define __pyx_n_s_GLU __pyx_mstate_global->__pyx_n_s_GLU
#define __pyx_n_s_GLUT __pyx_mstate_global->__pyx_n_s_GLUT
#define __pyx_n_s_GLX __pyx_mstate_global->__pyx_n_s_GLX
#define __pyx_n_s_GLX_BLUE_SIZE __pyx_mstate_global->__pyx_n_s_GLX_BLUE_SIZE
#define __pyx_n_s_GLX_DEPTH_SIZE __pyx_mstate_global->__pyx_n_s_GLX_DEPTH_SIZE
#define __pyx_n_s_GLX_DOUBLEBUFFER __pyx_mstate_global->__pyx_n_s_GLX_DOUBLEBUFFER
#define __pyx_n_s_GLX_DRAWABLE_TYPE __pyx_mstate_global->__pyx_n_s_GLX_DRAWABLE_TYPE
#define __pyx_n_s_GLX_GREEN_SIZE __pyx_mstate_global->__pyx_n_s_GLX_GREEN_SIZE
#define __pyx_n_s_GLX_RED_SIZE __pyx_mstate_global->__pyx_n_s_GLX_RED_SIZE
#define __pyx_n_s_GLX_RENDER_TYPE __pyx_mstate_global->__pyx_n_s_GLX_RENDER_TYPE
#define __pyx_n_s_GLX_RGBA __pyx_mstate_global->__pyx_n_s_GLX_RGBA
#define __pyx_n_s_GLX_RGBA_BIT __pyx_mstate_global->__pyx_n_s_GLX_RGBA_BIT
#define __pyx_n_s_GLX_RGBA_TYPE __pyx_mstate_global->__pyx_n_s_GLX_RGBA_TYPE
#define __pyx_n_s_GLX_WINDOW_BIT __pyx_mstate_global->__pyx_n_s_GLX_WINDOW_BIT
#define __pyx_n_s_GLX_X_RENDERABLE __pyx_mstate_global->__pyx_n_s_GLX_X_RENDERABLE
#define __pyx_kp_s_GLX_version_d_d __pyx_mstate_global->__pyx_kp_s_GLX_version_d_d
#define __pyx_n_s_GL_ALPHA __pyx_mstate_global->__pyx_n_s_GL_ALPHA
#define __pyx_n_s_GL_ARRAY_BUFFER __pyx_mstate_global->__pyx_n_s_GL_ARRAY_BUFFER
#define __pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL __pyx_mstate_global->__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL
#define __pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE __pyx_mstate_global->__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE
#define __pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT __pyx_mstate_global->__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT
#define __pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2 __pyx_mstate_global->__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2
#define __pyx_n_s_GL_CONTEXT_PROFILE_MASK __pyx_mstate_global->__pyx_n_s_GL_CONTEXT_PROFILE_MASK
#define __pyx_n_s_GL_DEPTH_TEST __pyx_mstate_global->__pyx_n_s_GL_DEPTH_TEST
#define __pyx_n_s_GL_DYNAMIC_DRAW __pyx_mstate_global->__pyx_n_s_GL_DYNAMIC_DRAW
#define __pyx_n_s_GL_EXTENSIONS __pyx_mstate_global->__pyx_n_s_GL_EXTENSIONS
#define __pyx_n_s_GL_FALSE __pyx_mstate_global->__pyx_n_s_GL_FALSE
#define __pyx_n_s_GL_FLOAT __pyx_mstate_global->__pyx_n_s_GL_FLOAT
#define __pyx_n_s_GL_FRAGMENT_SHADER __pyx_mstate_global->__pyx_n_s_GL_FRAGMENT_SHADER
#define __pyx_n_s_GL_LESS __pyx_mstate_global->__pyx_n_s_GL_LESS
#define __pyx_n_s_GL_LIGHT0 __pyx_mstate_global->__pyx_n_s_GL_LIGHT0
#define __pyx_n_s_GL_LIGHTING __pyx_mstate_global->__pyx_n_s_GL_LIGHTING
#define __pyx_n_s_GL_LINEAR __pyx_mstate_global->__pyx_n_s_GL_LINEAR
#define __pyx_kp_s_GL_MAJOR_VERSION __pyx_mstate_global->__pyx_kp_s_GL_MAJOR_VERSION
#define __pyx_n_s_GL_MAJOR_VERSION_2 __pyx_mstate_global->__pyx_n_s_GL_MAJOR_VERSION_2
#define __pyx_n_s_GL_MATRIX_MODE __pyx_mstate_global->__pyx_n_s_GL_MATRIX_MODE
#define __pyx_kp_s_GL_MINOR_VERSION __pyx_mstate_global->__pyx_kp_s_GL_MINOR_VERSION
#define __pyx_n_s_GL_MINOR_VERSION_2 __pyx_mstate_global->__pyx_n_s_GL_MINOR_VERSION_2
#define __pyx_n_s_GL_MODELVIEW __pyx_mstate_global->__pyx_n_s_GL_MODELVIEW
#define __pyx_n_s_GL_NEAREST __pyx_mstate_global->__pyx_n_s_GL_NEAREST
#define __pyx_n_s_GL_POINTS __pyx_mstate_global->__pyx_n_s_GL_POINTS
#define __pyx_n_s_GL_POSITION __pyx_mstate_global->__pyx_n_s_GL_POSITION
#define __pyx_n_s_GL_PROJECTION __pyx_mstate_global->__pyx_n_s_GL_PROJECTION
#define __pyx_n_s_GL_QUADS __pyx_mstate_global->__pyx_n_s_GL_QUADS
#define __pyx_kp_s_GL_RENDERER __pyx_mstate_global->__pyx_kp_s_GL_RENDERER
#define __pyx_n_s_GL_RENDERER_2 __pyx_mstate_global->__pyx_n_s_GL_RENDERER_2
#define __pyx_n_s_GL_REPEAT __pyx_mstate_global->__pyx_n_s_GL_REPEAT
#define __pyx_n_s_GL_RGB __pyx_mstate_global->__pyx_n_s_GL_RGB
#define __pyx_n_s_GL_RGBA __pyx_mstate_global->__pyx_n_s_GL_RGBA
#define __pyx_kp_s_GL_SHADING_LANGUAGE_VERSION __pyx_mstate_global->__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION
#define __pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2 __pyx_mstate_global->__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2
#define __pyx_n_s_GL_TEXTURE_2D __pyx_mstate_global->__pyx_n_s_GL_TEXTURE_2D
#define __pyx_n_s_GL_TEXTURE_MAG_FILTER __pyx_mstate_global->__pyx_n_s_GL_TEXTURE_MAG_FILTER
#define __pyx_n_s_GL_TEXTURE_MIN_FILTER __pyx_mstate_global->__pyx_n_s_GL_TEXTURE_MIN_FILTER
#define __pyx_n_s_GL_TEXTURE_WRAP_S __pyx_mstate_global->__pyx_n_s_GL_TEXTURE_WRAP_S
#define __pyx_n_s_GL_TEXTURE_WRAP_T __pyx_mstate_global->__pyx_n_s_GL_TEXTURE_WRAP_T
#define __pyx_n_s_GL_TRUE __pyx_mstate_global->__pyx_n_s_GL_TRUE
#define __pyx_n_s_GL_UNPACK_ALIGNMENT __pyx_mstate_global->__pyx_n_s_GL_UNPACK_ALIGNMENT
#define __pyx_n_s_GL_UNSIGNED_BYTE __pyx_mstate_global->__pyx_n_s_GL_UNSIGNED_BYTE
#define __pyx_kp_s_GL_VENDOR __pyx_mstate_global->__pyx_kp_s_GL_VENDOR
#define __pyx_n_s_GL_VENDOR_2 __pyx_mstate_global->__pyx_n_s_GL_VENDOR_2
#define __pyx_kp_s_GL_VERSION __pyx_mstate_global->__pyx_kp_s_GL_VERSION
#define __pyx_n_s_GL_VERSION_2 __pyx_mstate_global->__pyx_n_s_GL_VERSION_2
#define __pyx_n_s_GL_VERTEX_ARRAY __pyx_mstate_global->__pyx_n_s_GL_VERTEX_ARRAY
#define __pyx_n_s_GL_VERTEX_SHADER __pyx_mstate_global->__pyx_n_s_GL_VERTEX_SHADER
#define __pyx_n_s_GLint __pyx_mstate_global->__pyx_n_s_GLint
#define __pyx_n_s_GetDC __pyx_mstate_global->__pyx_n_s_GetDC
#define __pyx_kp_s_Got_a_matching_visual_index_d_d __pyx_mstate_global->__pyx_kp_s_Got_a_matching_visual_index_d_d
#define __pyx_n_s_HDC __pyx_mstate_global->__pyx_n_s_HDC
#define __pyx_n_s_Hover __pyx_mstate_global->__pyx_n_s_Hover
#define __pyx_n_s_Image __pyx_mstate_global->__pyx_n_s_Image
#define __pyx_n_s_Imagenumpy __pyx_mstate_global->__pyx_n_s_Imagenumpy
#define __pyx_kp_s_Is_Direct __pyx_mstate_global->__pyx_kp_s_Is_Direct
#define __pyx_n_s_KeyPress __pyx_mstate_global->__pyx_n_s_KeyPress
#define __pyx_kp_s_KeyPress_2 __pyx_mstate_global->__pyx_kp_s_KeyPress_2
#define __pyx_n_s_LeftClick __pyx_mstate_global->__pyx_n_s_LeftClick
#define __pyx_n_s_LoadLibrary __pyx_mstate_global->__pyx_n_s_LoadLibrary
#define __pyx_n_s_MN __pyx_mstate_global->__pyx_n_s_MN
#define __pyx_kp_s_Map __pyx_mstate_global->__pyx_kp_s_Map
#define __pyx_n_s_MiddleClick __pyx_mstate_global->__pyx_n_s_MiddleClick
#define __pyx_n_s_Motion __pyx_mstate_global->__pyx_n_s_Motion
#define __pyx_kp_s_Motion_2 __pyx_mstate_global->__pyx_kp_s_Motion_2
#define __pyx_n_s_MouseHover __pyx_mstate_global->__pyx_n_s_MouseHover
#define __pyx_n_s_MouseLC __pyx_mstate_global->__pyx_n_s_MouseLC
#define __pyx_n_s_MouseMC __pyx_mstate_global->__pyx_n_s_MouseMC
#define __pyx_n_s_MouseRC __pyx_mstate_global->__pyx_n_s_MouseRC
#define __pyx_n_s_NEWLINE __pyx_mstate_global->__pyx_n_s_NEWLINE
#define __pyx_n_s_NOENABLE __pyx_mstate_global->__pyx_n_s_NOENABLE
#define __pyx_n_s_New_Texture __pyx_mstate_global->__pyx_n_s_New_Texture
#define __pyx_n_s_NotImplementedError __pyx_mstate_global->__pyx_n_s_NotImplementedError
#define __pyx_kp_s_Number_of_FBconfigs __pyx_mstate_global->__pyx_kp_s_Number_of_FBconfigs
#define __pyx_kp_s_Number_of_extensions __pyx_mstate_global->__pyx_kp_s_Number_of_extensions
#define __pyx_n_s_OBJECT __pyx_mstate_global->__pyx_n_s_OBJECT
#define __pyx_n_s_Offests __pyx_mstate_global->__pyx_n_s_Offests
#define __pyx_n_s_Ok __pyx_mstate_global->__pyx_n_s_Ok
#define __pyx_kp_s_Old_context_errors_arose __pyx_mstate_global->__pyx_kp_s_Old_context_errors_arose
#define __pyx_n_s_OnKey __pyx_mstate_global->__pyx_n_s_OnKey
#define __pyx_n_s_OpenGL __pyx_mstate_global->__pyx_n_s_OpenGL
#define __pyx_n_s_OpenGLFrame __pyx_mstate_global->__pyx_n_s_OpenGLFrame
#define __pyx_n_s_OpenGLFrame__context __pyx_mstate_global->__pyx_n_s_OpenGLFrame__context
#define __pyx_n_s_OpenGLFrame__window __pyx_mstate_global->__pyx_n_s_OpenGLFrame__window
#define __pyx_n_s_OpenGLFrame_tkCreateContext __pyx_mstate_global->__pyx_n_s_OpenGLFrame_tkCreateContext
#define __pyx_n_s_OpenGLFrame_tkMakeCurrent __pyx_mstate_global->__pyx_n_s_OpenGLFrame_tkMakeCurrent
#define __pyx_n_s_OpenGLFrame_tkSwapBuffers __pyx_mstate_global->__pyx_n_s_OpenGLFrame_tkSwapBuffers
#define __pyx_n_s_OpenGL_GL __pyx_mstate_global->__pyx_n_s_OpenGL_GL
#define __pyx_n_s_OpenGL_GL_shaders __pyx_mstate_global->__pyx_n_s_OpenGL_GL_shaders
#define __pyx_n_s_OpenGL_WGL __pyx_mstate_global->__pyx_n_s_OpenGL_WGL
#define __pyx_n_s_OpenGL_raw_GLX__types __pyx_mstate_global->__pyx_n_s_OpenGL_raw_GLX__types
#define __pyx_n_s_OpenGL_raw__GLX __pyx_mstate_global->__pyx_n_s_OpenGL_raw__GLX
#define __pyx_n_s_Opengl __pyx_mstate_global->__pyx_n_s_Opengl
#define __pyx_n_s_Opengl_StartRotate __pyx_mstate_global->__pyx_n_s_Opengl_StartRotate
#define __pyx_n_s_Opengl___init __pyx_mstate_global->__pyx_n_s_Opengl___init
#define __pyx_n_s_Opengl_activate __pyx_mstate_global->__pyx_n_s_Opengl_activate
#define __pyx_n_s_Opengl_basic_lighting __pyx_mstate_global->__pyx_n_s_Opengl_basic_lighting
#define __pyx_n_s_Opengl_do_AutoSpin __pyx_mstate_global->__pyx_n_s_Opengl_do_AutoSpin
#define __pyx_n_s_Opengl_freecalc __pyx_mstate_global->__pyx_n_s_Opengl_freecalc
#define __pyx_n_s_Opengl_help __pyx_mstate_global->__pyx_n_s_Opengl_help
#define __pyx_n_s_Opengl_initgl __pyx_mstate_global->__pyx_n_s_Opengl_initgl
#define __pyx_n_s_Opengl_redraw __pyx_mstate_global->__pyx_n_s_Opengl_redraw
#define __pyx_n_s_Opengl_reset __pyx_mstate_global->__pyx_n_s_Opengl_reset
#define __pyx_n_s_Opengl_set_background __pyx_mstate_global->__pyx_n_s_Opengl_set_background
#define __pyx_n_s_Opengl_set_centerpoint __pyx_mstate_global->__pyx_n_s_Opengl_set_centerpoint
#define __pyx_n_s_Opengl_set_eyepoint __pyx_mstate_global->__pyx_n_s_Opengl_set_eyepoint
#define __pyx_n_s_Opengl_tkAutoSpin __pyx_mstate_global->__pyx_n_s_Opengl_tkAutoSpin
#define __pyx_n_s_Opengl_tkExpose __pyx_mstate_global->__pyx_n_s_Opengl_tkExpose
#define __pyx_n_s_Opengl_tkHandlePick __pyx_mstate_global->__pyx_n_s_Opengl_tkHandlePick
#define __pyx_n_s_Opengl_tkPrint __pyx_mstate_global->__pyx_n_s_Opengl_tkPrint
#define __pyx_n_s_Opengl_tkRecordMouse __pyx_mstate_global->__pyx_n_s_Opengl_tkRecordMouse
#define __pyx_n_s_Opengl_tkRedraw __pyx_mstate_global->__pyx_n_s_Opengl_tkRedraw
#define __pyx_n_s_Opengl_tkRotate __pyx_mstate_global->__pyx_n_s_Opengl_tkRotate
#define __pyx_n_s_Opengl_tkScale __pyx_mstate_global->__pyx_n_s_Opengl_tkScale
#define __pyx_n_s_Opengl_tkTranslate __pyx_mstate_global->__pyx_n_s_Opengl_tkTranslate
#define __pyx_n_s_PATH __pyx_mstate_global->__pyx_n_s_PATH
#define __pyx_n_s_PFD_DOUBLEBUFFER __pyx_mstate_global->__pyx_n_s_PFD_DOUBLEBUFFER
#define __pyx_n_s_PFD_DRAW_TO_WINDOW __pyx_mstate_global->__pyx_n_s_PFD_DRAW_TO_WINDOW
#define __pyx_n_s_PFD_MAIN_PLANE __pyx_mstate_global->__pyx_n_s_PFD_MAIN_PLANE
#define __pyx_n_s_PFD_SUPPORT_OPENGL __pyx_mstate_global->__pyx_n_s_PFD_SUPPORT_OPENGL
#define __pyx_n_s_PFD_TYPE_RGBA __pyx_mstate_global->__pyx_n_s_PFD_TYPE_RGBA
#define __pyx_n_s_PIL __pyx_mstate_global->__pyx_n_s_PIL
#define __pyx_n_s_PIXELFORMATDESCRIPTOR __pyx_mstate_global->__pyx_n_s_PIXELFORMATDESCRIPTOR
#define __pyx_n_s_POINTER __pyx_mstate_global->__pyx_n_s_POINTER
#define __pyx_n_s_PRERENDER_VBO __pyx_mstate_global->__pyx_n_s_PRERENDER_VBO
#define __pyx_n_s_PRERENDER_VBO___init __pyx_mstate_global->__pyx_n_s_PRERENDER_VBO___init
#define __pyx_n_s_RAW_DATA __pyx_mstate_global->__pyx_n_s_RAW_DATA
#define __pyx_n_s_RENDER_VBO __pyx_mstate_global->__pyx_n_s_RENDER_VBO
#define __pyx_n_s_RENDER_VBO___init __pyx_mstate_global->__pyx_n_s_RENDER_VBO___init
#define __pyx_n_s_RGB __pyx_mstate_global->__pyx_n_s_RGB
#define __pyx_n_s_RawOpengl __pyx_mstate_global->__pyx_n_s_RawOpengl
#define __pyx_n_s_RawOpengl___init __pyx_mstate_global->__pyx_n_s_RawOpengl___init
#define __pyx_n_s_RawOpengl_tkRedraw __pyx_mstate_global->__pyx_n_s_RawOpengl_tkRedraw
#define __pyx_n_s_RightClick __pyx_mstate_global->__pyx_n_s_RightClick
#define __pyx_n_s_SHADER __pyx_mstate_global->__pyx_n_s_SHADER
#define __pyx_n_s_SHADER___init __pyx_mstate_global->__pyx_n_s_SHADER___init
#define __pyx_kp_s_Screen_is __pyx_mstate_global->__pyx_kp_s_Screen_is
#define __pyx_n_s_SetPixelFormat __pyx_mstate_global->__pyx_n_s_SetPixelFormat
#define __pyx_kp_s_Shift_Button_1 __pyx_mstate_global->__pyx_kp_s_Shift_Button_1
#define __pyx_n_s_Spacing_add __pyx_mstate_global->__pyx_n_s_Spacing_add
#define __pyx_n_s_StartRotate __pyx_mstate_global->__pyx_n_s_StartRotate
#define __pyx_n_s_SwapBuffers __pyx_mstate_global->__pyx_n_s_SwapBuffers
#define __pyx_n_s_TAB __pyx_mstate_global->__pyx_n_s_TAB
#define __pyx_n_s_TEXTUREID __pyx_mstate_global->__pyx_n_s_TEXTUREID
#define __pyx_n_s_TEXTURE_DISPLAY_METHOD __pyx_mstate_global->__pyx_n_s_TEXTURE_DISPLAY_METHOD
#define __pyx_n_s_TXC __pyx_mstate_global->__pyx_n_s_TXC
#define __pyx_n_s_TXTARRAY __pyx_mstate_global->__pyx_n_s_TXTARRAY
#define __pyx_n_s_Texture_unit __pyx_mstate_global->__pyx_n_s_Texture_unit
#define __pyx_n_s_Tkinter __pyx_mstate_global->__pyx_n_s_Tkinter
#define __pyx_kp_s_Tkinter_bindings_for_an_Opengl __pyx_mstate_global->__pyx_kp_s_Tkinter_bindings_for_an_Opengl
#define __pyx_kp_s_Uniform_Layout_Matrix_manipulat __pyx_mstate_global->__pyx_kp_s_Uniform_Layout_Matrix_manipulat
#define __pyx_n_s_VBO __pyx_mstate_global->__pyx_n_s_VBO
#define __pyx_n_s_VBO_OBJ __pyx_mstate_global->__pyx_n_s_VBO_OBJ
#define __pyx_n_s_VBO_OBJ___init __pyx_mstate_global->__pyx_n_s_VBO_OBJ___init
#define __pyx_n_s_VBO___init __pyx_mstate_global->__pyx_n_s_VBO___init
#define __pyx_n_s_VERTEX_SHADER __pyx_mstate_global->__pyx_n_s_VERTEX_SHADER
#define __pyx_kp_s_Viewer_help __pyx_mstate_global->__pyx_kp_s_Viewer_help
#define __pyx_kp_s_Widget_without_any_sophisticated __pyx_mstate_global->__pyx_kp_s_Widget_without_any_sophisticated
#define __pyx_n_s_WinDLL __pyx_mstate_global->__pyx_n_s_WinDLL
#define __pyx_n_s_X11 __pyx_mstate_global->__pyx_n_s_X11
#define __pyx_n_s_XDefaultScreen __pyx_mstate_global->__pyx_n_s_XDefaultScreen
#define __pyx_n_s_XOpenDisplay __pyx_mstate_global->__pyx_n_s_XOpenDisplay
#define __pyx_n_s_Z __pyx_mstate_global->__pyx_n_s_Z
#define __pyx_kp_s__10 __pyx_mstate_global->__pyx_kp_s__10
#define __pyx_kp_s__13 __pyx_mstate_global->__pyx_kp_s__13
#define __pyx_kp_s__207 __pyx_mstate_global->__pyx_kp_s__207
#define __pyx_kp_s__8 __pyx_mstate_global->__pyx_kp_s__8
#define __pyx_n_s__80 __pyx_mstate_global->__pyx_n_s__80
#define __pyx_kp_s__9 __pyx_mstate_global->__pyx_kp_s__9
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_n_s_a_val __pyx_mstate_global->__pyx_n_s_a_val
#define __pyx_n_s_abcdefgh __pyx_mstate_global->__pyx_n_s_abcdefgh
#define __pyx_n_s_access __pyx_mstate_global->__pyx_n_s_access
#define __pyx_n_s_activate __pyx_mstate_global->__pyx_n_s_activate
#define __pyx_n_s_add_animation __pyx_mstate_global->__pyx_n_s_add_animation
#define __pyx_n_s_add_boldnext __pyx_mstate_global->__pyx_n_s_add_boldnext
#define __pyx_n_s_add_buffer __pyx_mstate_global->__pyx_n_s_add_buffer
#define __pyx_n_s_add_event __pyx_mstate_global->__pyx_n_s_add_event
#define __pyx_n_s_add_textureupdate __pyx_mstate_global->__pyx_n_s_add_textureupdate
#define __pyx_n_s_after __pyx_mstate_global->__pyx_n_s_after
#define __pyx_n_s_after_cancel __pyx_mstate_global->__pyx_n_s_after_cancel
#define __pyx_n_s_all __pyx_mstate_global->__pyx_n_s_all
#define __pyx_n_s_alpha __pyx_mstate_global->__pyx_n_s_alpha
#define __pyx_n_s_animate __pyx_mstate_global->__pyx_n_s_animate
#define __pyx_n_s_append __pyx_mstate_global->__pyx_n_s_append
#define __pyx_n_s_args __pyx_mstate_global->__pyx_n_s_args
#define __pyx_n_s_argtypes __pyx_mstate_global->__pyx_n_s_argtypes
#define __pyx_n_s_array __pyx_mstate_global->__pyx_n_s_array
#define __pyx_n_s_ascender __pyx_mstate_global->__pyx_n_s_ascender
#define __pyx_n_s_att __pyx_mstate_global->__pyx_n_s_att
#define __pyx_n_s_autospin __pyx_mstate_global->__pyx_n_s_autospin
#define __pyx_n_s_autospin_allowed __pyx_mstate_global->__pyx_n_s_autospin_allowed
#define __pyx_n_s_b __pyx_mstate_global->__pyx_n_s_b
#define __pyx_kp_s_b_2 __pyx_mstate_global->__pyx_kp_s_b_2
#define __pyx_n_s_b_back __pyx_mstate_global->__pyx_n_s_b_back
#define __pyx_n_s_b_val __pyx_mstate_global->__pyx_n_s_b_val
#define __pyx_n_s_background __pyx_mstate_global->__pyx_n_s_background
#define __pyx_n_s_bands __pyx_mstate_global->__pyx_n_s_bands
#define __pyx_n_s_base __pyx_mstate_global->__pyx_n_s_base
#define __pyx_n_s_baseOpenGLFrame __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame
#define __pyx_n_s_baseOpenGLFrame___init __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame___init
#define __pyx_n_s_baseOpenGLFrame__display __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame__display
#define __pyx_n_s_baseOpenGLFrame_check_all_b1_eve __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_check_all_b1_eve
#define __pyx_n_s_baseOpenGLFrame_check_all_bpress __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_check_all_bpress
#define __pyx_n_s_baseOpenGLFrame_check_all_brelas __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_check_all_brelas
#define __pyx_n_s_baseOpenGLFrame_check_event_butt __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_check_event_butt
#define __pyx_n_s_baseOpenGLFrame_create_event __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_create_event
#define __pyx_n_s_baseOpenGLFrame_free_calc_update __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_free_calc_update
#define __pyx_n_s_baseOpenGLFrame_freecalc __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_freecalc
#define __pyx_n_s_baseOpenGLFrame_initgl __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_initgl
#define __pyx_n_s_baseOpenGLFrame_printContext __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_printContext
#define __pyx_n_s_baseOpenGLFrame_redraw __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_redraw
#define __pyx_n_s_baseOpenGLFrame_tkCreateContext __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkCreateContext
#define __pyx_n_s_baseOpenGLFrame_tkExpose __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkExpose
#define __pyx_n_s_baseOpenGLFrame_tkMakeCurrent __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkMakeCurrent
#define __pyx_n_s_baseOpenGLFrame_tkMap __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkMap
#define __pyx_n_s_baseOpenGLFrame_tkResize __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkResize
#define __pyx_n_s_baseOpenGLFrame_tkSwapBuffers __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_tkSwapBuffers
#define __pyx_n_s_baseOpenGLFrame_wait __pyx_mstate_global->__pyx_n_s_baseOpenGLFrame_wait
#define __pyx_n_s_basic_lighting __pyx_mstate_global->__pyx_n_s_basic_lighting
#define __pyx_n_s_basicshader __pyx_mstate_global->__pyx_n_s_basicshader
#define __pyx_n_s_best __pyx_mstate_global->__pyx_n_s_best
#define __pyx_n_s_bg __pyx_mstate_global->__pyx_n_s_bg
#define __pyx_n_s_bind __pyx_mstate_global->__pyx_n_s_bind
#define __pyx_n_s_bind_buffer __pyx_mstate_global->__pyx_n_s_bind_buffer
#define __pyx_n_s_bitmap __pyx_mstate_global->__pyx_n_s_bitmap
#define __pyx_n_s_bitmap_left __pyx_mstate_global->__pyx_n_s_bitmap_left
#define __pyx_n_s_bitmap_top __pyx_mstate_global->__pyx_n_s_bitmap_top
#define __pyx_n_s_bresenham __pyx_mstate_global->__pyx_n_s_bresenham
#define __pyx_n_s_buffer __pyx_mstate_global->__pyx_n_s_buffer
#define __pyx_n_s_buffer1 __pyx_mstate_global->__pyx_n_s_buffer1
#define __pyx_n_s_bufferid __pyx_mstate_global->__pyx_n_s_bufferid
#define __pyx_n_s_buffmanager __pyx_mstate_global->__pyx_n_s_buffmanager
#define __pyx_n_s_c __pyx_mstate_global->__pyx_n_s_c
#define __pyx_n_s_c1 __pyx_mstate_global->__pyx_n_s_c1
#define __pyx_n_s_c1_2 __pyx_mstate_global->__pyx_n_s_c1_2
#define __pyx_n_s_c2 __pyx_mstate_global->__pyx_n_s_c2
#define __pyx_n_s_c2_2 __pyx_mstate_global->__pyx_n_s_c2_2
#define __pyx_n_s_c3 __pyx_mstate_global->__pyx_n_s_c3
#define __pyx_n_s_c4 __pyx_mstate_global->__pyx_n_s_c4
#define __pyx_n_s_cColorBits __pyx_mstate_global->__pyx_n_s_cColorBits
#define __pyx_n_s_cDepthBits __pyx_mstate_global->__pyx_n_s_cDepthBits
#define __pyx_n_s_c_bool __pyx_mstate_global->__pyx_n_s_c_bool
#define __pyx_n_s_c_char_p __pyx_mstate_global->__pyx_n_s_c_char_p
#define __pyx_n_s_c_float __pyx_mstate_global->__pyx_n_s_c_float
#define __pyx_n_s_c_int __pyx_mstate_global->__pyx_n_s_c_int
#define __pyx_n_s_c_void_p __pyx_mstate_global->__pyx_n_s_c_void_p
#define __pyx_n_s_call __pyx_mstate_global->__pyx_n_s_call
#define __pyx_n_s_cb __pyx_mstate_global->__pyx_n_s_cb
#define __pyx_n_s_cdll __pyx_mstate_global->__pyx_n_s_cdll
#define __pyx_n_s_centre __pyx_mstate_global->__pyx_n_s_centre
#define __pyx_n_s_cf __pyx_mstate_global->__pyx_n_s_cf
#define __pyx_n_s_cfgs __pyx_mstate_global->__pyx_n_s_cfgs
#define __pyx_n_s_cfloat __pyx_mstate_global->__pyx_n_s_cfloat
#define __pyx_n_s_cfloat_array __pyx_mstate_global->__pyx_n_s_cfloat_array
#define __pyx_n_s_change_color __pyx_mstate_global->__pyx_n_s_change_color
#define __pyx_n_s_check __pyx_mstate_global->__pyx_n_s_check
#define __pyx_n_s_check_all_b1_events __pyx_mstate_global->__pyx_n_s_check_all_b1_events
#define __pyx_n_s_check_all_bpress_events __pyx_mstate_global->__pyx_n_s_check_all_bpress_events
#define __pyx_n_s_check_all_brelase_events __pyx_mstate_global->__pyx_n_s_check_all_brelase_events
#define __pyx_n_s_check_event_button_1 __pyx_mstate_global->__pyx_n_s_check_event_button_1
#define __pyx_n_s_checkkeypress __pyx_mstate_global->__pyx_n_s_checkkeypress
#define __pyx_n_s_checklclick __pyx_mstate_global->__pyx_n_s_checklclick
#define __pyx_n_s_checkmclick __pyx_mstate_global->__pyx_n_s_checkmclick
#define __pyx_n_s_checkmotion __pyx_mstate_global->__pyx_n_s_checkmotion
#define __pyx_n_s_checkrclick __pyx_mstate_global->__pyx_n_s_checkrclick
#define __pyx_n_s_chr __pyx_mstate_global->__pyx_n_s_chr
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_clear __pyx_mstate_global->__pyx_n_s_clear
#define __pyx_n_s_clear_events __pyx_mstate_global->__pyx_n_s_clear_events
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_cnf __pyx_mstate_global->__pyx_n_s_cnf
#define __pyx_n_s_color __pyx_mstate_global->__pyx_n_s_color
#define __pyx_n_s_compile __pyx_mstate_global->__pyx_n_s_compile
#define __pyx_n_s_compileProgram __pyx_mstate_global->__pyx_n_s_compileProgram
#define __pyx_n_s_compileShader __pyx_mstate_global->__pyx_n_s_compileShader
#define __pyx_n_s_config __pyx_mstate_global->__pyx_n_s_config
#define __pyx_n_s_contents __pyx_mstate_global->__pyx_n_s_contents
#define __pyx_n_s_cords __pyx_mstate_global->__pyx_n_s_cords
#define __pyx_n_s_cords1 __pyx_mstate_global->__pyx_n_s_cords1
#define __pyx_n_s_cords2 __pyx_mstate_global->__pyx_n_s_cords2
#define __pyx_n_s_cords3 __pyx_mstate_global->__pyx_n_s_cords3
#define __pyx_n_s_cords4 __pyx_mstate_global->__pyx_n_s_cords4
#define __pyx_n_s_cords_2 __pyx_mstate_global->__pyx_n_s_cords_2
#define __pyx_n_s_cords_to_ratio __pyx_mstate_global->__pyx_n_s_cords_to_ratio
#define __pyx_n_s_crd __pyx_mstate_global->__pyx_n_s_crd
#define __pyx_n_s_create_event __pyx_mstate_global->__pyx_n_s_create_event
#define __pyx_n_s_create_font __pyx_mstate_global->__pyx_n_s_create_font
#define __pyx_n_s_create_letter __pyx_mstate_global->__pyx_n_s_create_letter
#define __pyx_n_s_create_quad __pyx_mstate_global->__pyx_n_s_create_quad
#define __pyx_n_s_crop __pyx_mstate_global->__pyx_n_s_crop
#define __pyx_n_s_ct __pyx_mstate_global->__pyx_n_s_ct
#define __pyx_n_s_ctypes __pyx_mstate_global->__pyx_n_s_ctypes
#define __pyx_n_s_ctypes_wintypes __pyx_mstate_global->__pyx_n_s_ctypes_wintypes
#define __pyx_n_s_curpos __pyx_mstate_global->__pyx_n_s_curpos
#define __pyx_n_s_cvroot __pyx_mstate_global->__pyx_n_s_cvroot
#define __pyx_n_s_d __pyx_mstate_global->__pyx_n_s_d
#define __pyx_n_s_dat __pyx_mstate_global->__pyx_n_s_dat
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_n_s_data_length __pyx_mstate_global->__pyx_n_s_data_length
#define __pyx_n_s_data_tr1 __pyx_mstate_global->__pyx_n_s_data_tr1
#define __pyx_n_s_data_tr2 __pyx_mstate_global->__pyx_n_s_data_tr2
#define __pyx_n_s_data_txn __pyx_mstate_global->__pyx_n_s_data_txn
#define __pyx_n_s_data_type __pyx_mstate_global->__pyx_n_s_data_type
#define __pyx_n_s_default __pyx_mstate_global->__pyx_n_s_default
#define __pyx_n_s_del_animation __pyx_mstate_global->__pyx_n_s_del_animation
#define __pyx_n_s_delay __pyx_mstate_global->__pyx_n_s_delay
#define __pyx_n_s_delete_obj __pyx_mstate_global->__pyx_n_s_delete_obj
#define __pyx_n_s_descender __pyx_mstate_global->__pyx_n_s_descender
#define __pyx_n_s_dialog __pyx_mstate_global->__pyx_n_s_dialog
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_n_s_display __pyx_mstate_global->__pyx_n_s_display
#define __pyx_n_s_dist __pyx_mstate_global->__pyx_n_s_dist
#define __pyx_n_s_distance __pyx_mstate_global->__pyx_n_s_distance
#define __pyx_n_s_do_AutoSpin __pyx_mstate_global->__pyx_n_s_do_AutoSpin
#define __pyx_n_s_doc __pyx_mstate_global->__pyx_n_s_doc
#define __pyx_n_s_docs __pyx_mstate_global->__pyx_n_s_docs
#define __pyx_n_s_dp_data __pyx_mstate_global->__pyx_n_s_dp_data
#define __pyx_n_s_draw __pyx_mstate_global->__pyx_n_s_draw
#define __pyx_n_s_draw_line __pyx_mstate_global->__pyx_n_s_draw_line
#define __pyx_n_s_draw_lines __pyx_mstate_global->__pyx_n_s_draw_lines
#define __pyx_n_s_draw_point __pyx_mstate_global->__pyx_n_s_draw_point
#define __pyx_n_s_draw_points __pyx_mstate_global->__pyx_n_s_draw_points
#define __pyx_n_s_draw_quad __pyx_mstate_global->__pyx_n_s_draw_quad
#define __pyx_n_s_draw_quad_texture __pyx_mstate_global->__pyx_n_s_draw_quad_texture
#define __pyx_n_s_draw_quad_texture_array __pyx_mstate_global->__pyx_n_s_draw_quad_texture_array
#define __pyx_n_s_draw_text __pyx_mstate_global->__pyx_n_s_draw_text
#define __pyx_n_s_dtype __pyx_mstate_global->__pyx_n_s_dtype
#define __pyx_n_s_dummy __pyx_mstate_global->__pyx_n_s_dummy
#define __pyx_n_s_dwFlags __pyx_mstate_global->__pyx_n_s_dwFlags
#define __pyx_n_s_dx __pyx_mstate_global->__pyx_n_s_dx
#define __pyx_n_s_dy __pyx_mstate_global->__pyx_n_s_dy
#define __pyx_n_s_e __pyx_mstate_global->__pyx_n_s_e
#define __pyx_n_s_edit_color __pyx_mstate_global->__pyx_n_s_edit_color
#define __pyx_n_s_edit_letter __pyx_mstate_global->__pyx_n_s_edit_letter
#define __pyx_n_s_edit_pos __pyx_mstate_global->__pyx_n_s_edit_pos
#define __pyx_n_s_edit_texture __pyx_mstate_global->__pyx_n_s_edit_texture
#define __pyx_n_s_edit_tpos __pyx_mstate_global->__pyx_n_s_edit_tpos
#define __pyx_n_s_encode __pyx_mstate_global->__pyx_n_s_encode
#define __pyx_n_s_end __pyx_mstate_global->__pyx_n_s_end
#define __pyx_n_s_environ __pyx_mstate_global->__pyx_n_s_environ
#define __pyx_n_s_ev __pyx_mstate_global->__pyx_n_s_ev
#define __pyx_n_s_ev_list __pyx_mstate_global->__pyx_n_s_ev_list
#define __pyx_n_s_ev_type __pyx_mstate_global->__pyx_n_s_ev_type
#define __pyx_n_s_event __pyx_mstate_global->__pyx_n_s_event
#define __pyx_n_s_event_type __pyx_mstate_global->__pyx_n_s_event_type
#define __pyx_n_s_eventmanager __pyx_mstate_global->__pyx_n_s_eventmanager
#define __pyx_n_s_events_B1 __pyx_mstate_global->__pyx_n_s_events_B1
#define __pyx_n_s_events_B2 __pyx_mstate_global->__pyx_n_s_events_B2
#define __pyx_n_s_events_B3 __pyx_mstate_global->__pyx_n_s_events_B3
#define __pyx_n_s_events_BP __pyx_mstate_global->__pyx_n_s_events_BP
#define __pyx_n_s_events_BR __pyx_mstate_global->__pyx_n_s_events_BR
#define __pyx_n_s_events_MN __pyx_mstate_global->__pyx_n_s_events_MN
#define __pyx_n_s_evt __pyx_mstate_global->__pyx_n_s_evt
#define __pyx_n_s_extend __pyx_mstate_global->__pyx_n_s_extend
#define __pyx_n_s_extensions __pyx_mstate_global->__pyx_n_s_extensions
#define __pyx_n_s_extns __pyx_mstate_global->__pyx_n_s_extns
#define __pyx_n_s_exts __pyx_mstate_global->__pyx_n_s_exts
#define __pyx_n_s_f __pyx_mstate_global->__pyx_n_s_f
#define __pyx_n_s_face __pyx_mstate_global->__pyx_n_s_face
#define __pyx_n_s_far __pyx_mstate_global->__pyx_n_s_far
#define __pyx_n_s_fbatt __pyx_mstate_global->__pyx_n_s_fbatt
#define __pyx_n_s_fgshader __pyx_mstate_global->__pyx_n_s_fgshader
#define __pyx_n_s_file __pyx_mstate_global->__pyx_n_s_file
#define __pyx_n_s_filename __pyx_mstate_global->__pyx_n_s_filename
#define __pyx_n_s_find_library __pyx_mstate_global->__pyx_n_s_find_library
#define __pyx_n_s_flat __pyx_mstate_global->__pyx_n_s_flat
#define __pyx_n_s_font __pyx_mstate_global->__pyx_n_s_font
#define __pyx_n_s_font_config __pyx_mstate_global->__pyx_n_s_font_config
#define __pyx_n_s_font_letters __pyx_mstate_global->__pyx_n_s_font_letters
#define __pyx_n_s_font_texture __pyx_mstate_global->__pyx_n_s_font_texture
#define __pyx_n_s_fovy __pyx_mstate_global->__pyx_n_s_fovy
#define __pyx_n_s_free_calc_update __pyx_mstate_global->__pyx_n_s_free_calc_update
#define __pyx_n_s_freecalc __pyx_mstate_global->__pyx_n_s_freecalc
#define __pyx_n_s_freecalc_update __pyx_mstate_global->__pyx_n_s_freecalc_update
#define __pyx_n_s_freetype __pyx_mstate_global->__pyx_n_s_freetype
#define __pyx_n_s_from __pyx_mstate_global->__pyx_n_s_from
#define __pyx_n_s_frombuffer __pyx_mstate_global->__pyx_n_s_frombuffer
#define __pyx_n_s_func __pyx_mstate_global->__pyx_n_s_func
#define __pyx_n_s_g __pyx_mstate_global->__pyx_n_s_g
#define __pyx_n_s_g_back __pyx_mstate_global->__pyx_n_s_g_back
#define __pyx_n_s_g_val __pyx_mstate_global->__pyx_n_s_g_val
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_s_get_buffer __pyx_mstate_global->__pyx_n_s_get_buffer
#define __pyx_n_s_get_color __pyx_mstate_global->__pyx_n_s_get_color
#define __pyx_n_s_get_objectindexes __pyx_mstate_global->__pyx_n_s_get_objectindexes
#define __pyx_n_s_get_pos __pyx_mstate_global->__pyx_n_s_get_pos
#define __pyx_n_s_get_shader __pyx_mstate_global->__pyx_n_s_get_shader
#define __pyx_n_s_get_texid __pyx_mstate_global->__pyx_n_s_get_texid
#define __pyx_n_s_get_vertices __pyx_mstate_global->__pyx_n_s_get_vertices
#define __pyx_n_s_getdata __pyx_mstate_global->__pyx_n_s_getdata
#define __pyx_n_s_getint __pyx_mstate_global->__pyx_n_s_getint
#define __pyx_n_s_getsize __pyx_mstate_global->__pyx_n_s_getsize
#define __pyx_n_s_glBegin __pyx_mstate_global->__pyx_n_s_glBegin
#define __pyx_n_s_glBindBuffer __pyx_mstate_global->__pyx_n_s_glBindBuffer
#define __pyx_n_s_glBindTexture __pyx_mstate_global->__pyx_n_s_glBindTexture
#define __pyx_n_s_glBindTextureUnit __pyx_mstate_global->__pyx_n_s_glBindTextureUnit
#define __pyx_n_s_glBufferData __pyx_mstate_global->__pyx_n_s_glBufferData
#define __pyx_n_s_glBufferSubData __pyx_mstate_global->__pyx_n_s_glBufferSubData
#define __pyx_n_s_glColor3f __pyx_mstate_global->__pyx_n_s_glColor3f
#define __pyx_n_s_glColor4f __pyx_mstate_global->__pyx_n_s_glColor4f
#define __pyx_n_s_glDepthFunc __pyx_mstate_global->__pyx_n_s_glDepthFunc
#define __pyx_n_s_glDisable __pyx_mstate_global->__pyx_n_s_glDisable
#define __pyx_n_s_glDrawArrays __pyx_mstate_global->__pyx_n_s_glDrawArrays
#define __pyx_n_s_glEnable __pyx_mstate_global->__pyx_n_s_glEnable
#define __pyx_n_s_glEnableClientState __pyx_mstate_global->__pyx_n_s_glEnableClientState
#define __pyx_n_s_glEnableVertexAttribArray __pyx_mstate_global->__pyx_n_s_glEnableVertexAttribArray
#define __pyx_n_s_glEnd __pyx_mstate_global->__pyx_n_s_glEnd
#define __pyx_n_s_glGenBuffers __pyx_mstate_global->__pyx_n_s_glGenBuffers
#define __pyx_n_s_glGenTextures __pyx_mstate_global->__pyx_n_s_glGenTextures
#define __pyx_n_s_glGetDoublev __pyx_mstate_global->__pyx_n_s_glGetDoublev
#define __pyx_n_s_glGetIntegerv __pyx_mstate_global->__pyx_n_s_glGetIntegerv
#define __pyx_n_s_glGetString __pyx_mstate_global->__pyx_n_s_glGetString
#define __pyx_n_s_glGetUniformLocation __pyx_mstate_global->__pyx_n_s_glGetUniformLocation
#define __pyx_n_s_glLightfv __pyx_mstate_global->__pyx_n_s_glLightfv
#define __pyx_n_s_glLoadIdentity __pyx_mstate_global->__pyx_n_s_glLoadIdentity
#define __pyx_n_s_glMatrixMode __pyx_mstate_global->__pyx_n_s_glMatrixMode
#define __pyx_n_s_glPixelStorei __pyx_mstate_global->__pyx_n_s_glPixelStorei
#define __pyx_n_s_glRotateScene __pyx_mstate_global->__pyx_n_s_glRotateScene
#define __pyx_n_s_glTexCoord2f __pyx_mstate_global->__pyx_n_s_glTexCoord2f
#define __pyx_n_s_glTexImage2D __pyx_mstate_global->__pyx_n_s_glTexImage2D
#define __pyx_n_s_glTexParameterf __pyx_mstate_global->__pyx_n_s_glTexParameterf
#define __pyx_n_s_glTexParameteri __pyx_mstate_global->__pyx_n_s_glTexParameteri
#define __pyx_n_s_glTexSubImage2D __pyx_mstate_global->__pyx_n_s_glTexSubImage2D
#define __pyx_n_s_glTranslateScene __pyx_mstate_global->__pyx_n_s_glTranslateScene
#define __pyx_n_s_glUniform1iv __pyx_mstate_global->__pyx_n_s_glUniform1iv
#define __pyx_n_s_glUseProgram __pyx_mstate_global->__pyx_n_s_glUseProgram
#define __pyx_n_s_glVertex2f __pyx_mstate_global->__pyx_n_s_glVertex2f
#define __pyx_n_s_glVertexAttribPointer __pyx_mstate_global->__pyx_n_s_glVertexAttribPointer
#define __pyx_n_s_glViewport __pyx_mstate_global->__pyx_n_s_glViewport
#define __pyx_n_s_glXChooseFBConfig __pyx_mstate_global->__pyx_n_s_glXChooseFBConfig
#define __pyx_n_s_glXChooseVisual __pyx_mstate_global->__pyx_n_s_glXChooseVisual
#define __pyx_n_s_glXCreateContext __pyx_mstate_global->__pyx_n_s_glXCreateContext
#define __pyx_n_s_glXCreateNewContext __pyx_mstate_global->__pyx_n_s_glXCreateNewContext
#define __pyx_n_s_glXGetVisualFromFBConfig __pyx_mstate_global->__pyx_n_s_glXGetVisualFromFBConfig
#define __pyx_n_s_glXIsDirect __pyx_mstate_global->__pyx_n_s_glXIsDirect
#define __pyx_n_s_glXMakeContextCurrent __pyx_mstate_global->__pyx_n_s_glXMakeContextCurrent
#define __pyx_n_s_glXMakeCurrent __pyx_mstate_global->__pyx_n_s_glXMakeCurrent
#define __pyx_n_s_glXQueryExtensionsString __pyx_mstate_global->__pyx_n_s_glXQueryExtensionsString
#define __pyx_n_s_glXQueryVersion __pyx_mstate_global->__pyx_n_s_glXQueryVersion
#define __pyx_n_s_glXSwapBuffers __pyx_mstate_global->__pyx_n_s_glXSwapBuffers
#define __pyx_n_s_gluLookAt __pyx_mstate_global->__pyx_n_s_gluLookAt
#define __pyx_n_s_gluPerspective __pyx_mstate_global->__pyx_n_s_gluPerspective
#define __pyx_n_s_gluProject __pyx_mstate_global->__pyx_n_s_gluProject
#define __pyx_n_s_gluUnProject __pyx_mstate_global->__pyx_n_s_gluUnProject
#define __pyx_n_s_glyph __pyx_mstate_global->__pyx_n_s_glyph
#define __pyx_n_s_h __pyx_mstate_global->__pyx_n_s_h
#define __pyx_n_s_height __pyx_mstate_global->__pyx_n_s_height
#define __pyx_n_s_help __pyx_mstate_global->__pyx_n_s_help
#define __pyx_n_s_hex __pyx_mstate_global->__pyx_n_s_hex
#define __pyx_n_s_hover_events __pyx_mstate_global->__pyx_n_s_hover_events
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_iLayerType __pyx_mstate_global->__pyx_n_s_iLayerType
#define __pyx_n_s_iPixelType __pyx_mstate_global->__pyx_n_s_iPixelType
#define __pyx_n_s_id __pyx_mstate_global->__pyx_n_s_id
#define __pyx_n_s_ideal __pyx_mstate_global->__pyx_n_s_ideal
#define __pyx_n_s_idx __pyx_mstate_global->__pyx_n_s_idx
#define __pyx_n_s_il __pyx_mstate_global->__pyx_n_s_il
#define __pyx_n_s_image __pyx_mstate_global->__pyx_n_s_image
#define __pyx_n_s_imgnp __pyx_mstate_global->__pyx_n_s_imgnp
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_index __pyx_mstate_global->__pyx_n_s_index
#define __pyx_n_s_init __pyx_mstate_global->__pyx_n_s_init
#define __pyx_n_s_init_subclass __pyx_mstate_global->__pyx_n_s_init_subclass
#define __pyx_n_s_initgl __pyx_mstate_global->__pyx_n_s_initgl
#define __pyx_n_s_initialised __pyx_mstate_global->__pyx_n_s_initialised
#define __pyx_n_s_insert __pyx_mstate_global->__pyx_n_s_insert
#define __pyx_n_s_is_fixed_width __pyx_mstate_global->__pyx_n_s_is_fixed_width
#define __pyx_n_s_is_serialized __pyx_mstate_global->__pyx_n_s_is_serialized
#define __pyx_n_s_j __pyx_mstate_global->__pyx_n_s_j
#define __pyx_n_s_keypress_events __pyx_mstate_global->__pyx_n_s_keypress_events
#define __pyx_n_s_kw __pyx_mstate_global->__pyx_n_s_kw
#define __pyx_n_s_l __pyx_mstate_global->__pyx_n_s_l
#define __pyx_n_s_launch_func __pyx_mstate_global->__pyx_n_s_launch_func
#define __pyx_n_s_launch_function_beg __pyx_mstate_global->__pyx_n_s_launch_function_beg
#define __pyx_n_s_launch_function_end __pyx_mstate_global->__pyx_n_s_launch_function_end
#define __pyx_n_s_launch_function_mid __pyx_mstate_global->__pyx_n_s_launch_function_mid
#define __pyx_n_s_launchev __pyx_mstate_global->__pyx_n_s_launchev
#define __pyx_n_s_lclick_events __pyx_mstate_global->__pyx_n_s_lclick_events
#define __pyx_n_s_letter __pyx_mstate_global->__pyx_n_s_letter
#define __pyx_n_s_lfe __pyx_mstate_global->__pyx_n_s_lfe
#define __pyx_n_s_lfg __pyx_mstate_global->__pyx_n_s_lfg
#define __pyx_n_s_lfm __pyx_mstate_global->__pyx_n_s_lfm
#define __pyx_n_s_light_position __pyx_mstate_global->__pyx_n_s_light_position
#define __pyx_n_s_linux __pyx_mstate_global->__pyx_n_s_linux
#define __pyx_n_s_list __pyx_mstate_global->__pyx_n_s_list
#define __pyx_n_s_load __pyx_mstate_global->__pyx_n_s_load
#define __pyx_n_s_load_char __pyx_mstate_global->__pyx_n_s_load_char
#define __pyx_n_s_load_scene __pyx_mstate_global->__pyx_n_s_load_scene
#define __pyx_n_s_load_texture __pyx_mstate_global->__pyx_n_s_load_texture
#define __pyx_n_s_load_texture_dp __pyx_mstate_global->__pyx_n_s_load_texture_dp
#define __pyx_n_s_load_texture_locals_image __pyx_mstate_global->__pyx_n_s_load_texture_locals_image
#define __pyx_n_s_load_texture_locals_image___init __pyx_mstate_global->__pyx_n_s_load_texture_locals_image___init
#define __pyx_n_s_load_texture_repeat __pyx_mstate_global->__pyx_n_s_load_texture_repeat
#define __pyx_n_s_load_texture_sub __pyx_mstate_global->__pyx_n_s_load_texture_sub
#define __pyx_n_s_ls __pyx_mstate_global->__pyx_n_s_ls
#define __pyx_n_s_m __pyx_mstate_global->__pyx_n_s_m
#define __pyx_n_s_m_new __pyx_mstate_global->__pyx_n_s_m_new
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_major __pyx_mstate_global->__pyx_n_s_major
#define __pyx_n_s_mask __pyx_mstate_global->__pyx_n_s_mask
#define __pyx_n_s_master __pyx_mstate_global->__pyx_n_s_master
#define __pyx_n_s_math __pyx_mstate_global->__pyx_n_s_math
#define __pyx_n_s_mclick_events __pyx_mstate_global->__pyx_n_s_mclick_events
#define __pyx_n_s_mem_img __pyx_mstate_global->__pyx_n_s_mem_img
#define __pyx_n_s_metaclass __pyx_mstate_global->__pyx_n_s_metaclass
#define __pyx_n_s_minor __pyx_mstate_global->__pyx_n_s_minor
#define __pyx_n_s_mmap __pyx_mstate_global->__pyx_n_s_mmap
#define __pyx_n_s_mode __pyx_mstate_global->__pyx_n_s_mode
#define __pyx_n_s_mode_2 __pyx_mstate_global->__pyx_n_s_mode_2
#define __pyx_n_s_module __pyx_mstate_global->__pyx_n_s_module
#define __pyx_n_s_move __pyx_mstate_global->__pyx_n_s_move
#define __pyx_n_s_move_down __pyx_mstate_global->__pyx_n_s_move_down
#define __pyx_n_s_move_up __pyx_mstate_global->__pyx_n_s_move_up
#define __pyx_n_s_msk __pyx_mstate_global->__pyx_n_s_msk
#define __pyx_n_s_n __pyx_mstate_global->__pyx_n_s_n
#define __pyx_n_s_naiveline __pyx_mstate_global->__pyx_n_s_naiveline
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_named __pyx_mstate_global->__pyx_n_s_named
#define __pyx_n_s_ncfg __pyx_mstate_global->__pyx_n_s_ncfg
#define __pyx_n_s_nd __pyx_mstate_global->__pyx_n_s_nd
#define __pyx_n_s_near __pyx_mstate_global->__pyx_n_s_near
#define __pyx_n_s_new __pyx_mstate_global->__pyx_n_s_new
#define __pyx_n_s_new_from_file __pyx_mstate_global->__pyx_n_s_new_from_file
#define __pyx_n_s_newcolor __pyx_mstate_global->__pyx_n_s_newcolor
#define __pyx_n_s_newpos __pyx_mstate_global->__pyx_n_s_newpos
#define __pyx_n_s_newsize __pyx_mstate_global->__pyx_n_s_newsize
#define __pyx_n_s_newtpos __pyx_mstate_global->__pyx_n_s_newtpos
#define __pyx_n_s_np __pyx_mstate_global->__pyx_n_s_np
#define __pyx_n_s_nr __pyx_mstate_global->__pyx_n_s_nr
#define __pyx_n_s_numpy __pyx_mstate_global->__pyx_n_s_numpy
#define __pyx_n_s_nx __pyx_mstate_global->__pyx_n_s_nx
#define __pyx_n_s_ny __pyx_mstate_global->__pyx_n_s_ny
#define __pyx_n_s_obj __pyx_mstate_global->__pyx_n_s_obj
#define __pyx_n_s_obj_c __pyx_mstate_global->__pyx_n_s_obj_c
#define __pyx_n_s_object __pyx_mstate_global->__pyx_n_s_object
#define __pyx_n_s_object_count __pyx_mstate_global->__pyx_n_s_object_count
#define __pyx_n_s_object_counts __pyx_mstate_global->__pyx_n_s_object_counts
#define __pyx_n_s_object_indexes __pyx_mstate_global->__pyx_n_s_object_indexes
#define __pyx_n_s_object_moved __pyx_mstate_global->__pyx_n_s_object_moved
#define __pyx_kp_s_oh_dear_visual_does_not_match __pyx_mstate_global->__pyx_kp_s_oh_dear_visual_does_not_match
#define __pyx_n_s_oj __pyx_mstate_global->__pyx_n_s_oj
#define __pyx_n_s_open __pyx_mstate_global->__pyx_n_s_open
#define __pyx_n_s_orgsize __pyx_mstate_global->__pyx_n_s_orgsize
#define __pyx_n_s_os __pyx_mstate_global->__pyx_n_s_os
#define __pyx_n_s_ou __pyx_mstate_global->__pyx_n_s_ou
#define __pyx_n_s_overlay __pyx_mstate_global->__pyx_n_s_overlay
#define __pyx_n_s_p1 __pyx_mstate_global->__pyx_n_s_p1
#define __pyx_n_s_p2 __pyx_mstate_global->__pyx_n_s_p2
#define __pyx_n_s_pas __pyx_mstate_global->__pyx_n_s_pas
#define __pyx_n_s_paste __pyx_mstate_global->__pyx_n_s_paste
#define __pyx_n_s_pfd __pyx_mstate_global->__pyx_n_s_pfd
#define __pyx_n_s_pick __pyx_mstate_global->__pyx_n_s_pick
#define __pyx_n_s_pix_rat_x __pyx_mstate_global->__pyx_n_s_pix_rat_x
#define __pyx_n_s_pix_rat_y __pyx_mstate_global->__pyx_n_s_pix_rat_y
#define __pyx_n_s_pixelformat __pyx_mstate_global->__pyx_n_s_pixelformat
#define __pyx_n_s_pixels __pyx_mstate_global->__pyx_n_s_pixels
#define __pyx_n_s_platform __pyx_mstate_global->__pyx_n_s_platform
#define __pyx_n_s_pointer __pyx_mstate_global->__pyx_n_s_pointer
#define __pyx_n_s_pointerx __pyx_mstate_global->__pyx_n_s_pointerx
#define __pyx_n_s_pointery __pyx_mstate_global->__pyx_n_s_pointery
#define __pyx_n_s_points __pyx_mstate_global->__pyx_n_s_points
#define __pyx_n_s_pop __pyx_mstate_global->__pyx_n_s_pop
#define __pyx_n_s_prepare __pyx_mstate_global->__pyx_n_s_prepare
#define __pyx_n_s_prequad __pyx_mstate_global->__pyx_n_s_prequad
#define __pyx_n_s_prerender_quad __pyx_mstate_global->__pyx_n_s_prerender_quad
#define __pyx_n_s_prerender_text __pyx_mstate_global->__pyx_n_s_prerender_text
#define __pyx_n_s_prerender_texturequad __pyx_mstate_global->__pyx_n_s_prerender_texturequad
#define __pyx_n_s_prerenderedobj __pyx_mstate_global->__pyx_n_s_prerenderedobj
#define __pyx_n_s_pretext __pyx_mstate_global->__pyx_n_s_pretext
#define __pyx_n_s_pretextquad __pyx_mstate_global->__pyx_n_s_pretextquad
#define __pyx_n_s_previoev __pyx_mstate_global->__pyx_n_s_previoev
#define __pyx_n_s_print __pyx_mstate_global->__pyx_n_s_print
#define __pyx_n_s_printContext __pyx_mstate_global->__pyx_n_s_printContext
#define __pyx_n_s_pure_pil_alpha_to_color_v2 __pyx_mstate_global->__pyx_n_s_pure_pil_alpha_to_color_v2
#define __pyx_n_s_pyvips __pyx_mstate_global->__pyx_n_s_pyvips
#define __pyx_n_s_quad __pyx_mstate_global->__pyx_n_s_quad
#define __pyx_n_s_qualname __pyx_mstate_global->__pyx_n_s_qualname
#define __pyx_n_s_questhead __pyx_mstate_global->__pyx_n_s_questhead
#define __pyx_n_s_queue __pyx_mstate_global->__pyx_n_s_queue
#define __pyx_n_s_queue_check __pyx_mstate_global->__pyx_n_s_queue_check
#define __pyx_n_s_r __pyx_mstate_global->__pyx_n_s_r
#define __pyx_n_s_r_back __pyx_mstate_global->__pyx_n_s_r_back
#define __pyx_n_s_r_val __pyx_mstate_global->__pyx_n_s_r_val
#define __pyx_n_s_random __pyx_mstate_global->__pyx_n_s_random
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_rclick_events __pyx_mstate_global->__pyx_n_s_rclick_events
#define __pyx_n_s_real_index __pyx_mstate_global->__pyx_n_s_real_index
#define __pyx_n_s_real_value __pyx_mstate_global->__pyx_n_s_real_value
#define __pyx_n_s_realdata __pyx_mstate_global->__pyx_n_s_realdata
#define __pyx_n_s_realy __pyx_mstate_global->__pyx_n_s_realy
#define __pyx_n_s_redraw __pyx_mstate_global->__pyx_n_s_redraw
#define __pyx_n_s_render __pyx_mstate_global->__pyx_n_s_render
#define __pyx_n_s_render_letter __pyx_mstate_global->__pyx_n_s_render_letter
#define __pyx_n_s_render_quad __pyx_mstate_global->__pyx_n_s_render_quad
#define __pyx_n_s_render_text __pyx_mstate_global->__pyx_n_s_render_text
#define __pyx_n_s_render_texture_quad __pyx_mstate_global->__pyx_n_s_render_texture_quad
#define __pyx_n_s_repeat __pyx_mstate_global->__pyx_n_s_repeat
#define __pyx_n_s_reset __pyx_mstate_global->__pyx_n_s_reset
#define __pyx_n_s_reshape __pyx_mstate_global->__pyx_n_s_reshape
#define __pyx_n_s_resize __pyx_mstate_global->__pyx_n_s_resize
#define __pyx_n_s_resize_2 __pyx_mstate_global->__pyx_n_s_resize_2
#define __pyx_n_s_restype __pyx_mstate_global->__pyx_n_s_restype
#define __pyx_n_s_rgba2rgb __pyx_mstate_global->__pyx_n_s_rgba2rgb
#define __pyx_n_s_rise __pyx_mstate_global->__pyx_n_s_rise
#define __pyx_n_s_rnd __pyx_mstate_global->__pyx_n_s_rnd
#define __pyx_n_s_rotate __pyx_mstate_global->__pyx_n_s_rotate
#define __pyx_n_s_round __pyx_mstate_global->__pyx_n_s_round
#define __pyx_n_s_rows __pyx_mstate_global->__pyx_n_s_rows
#define __pyx_n_s_run __pyx_mstate_global->__pyx_n_s_run
#define __pyx_n_s_s __pyx_mstate_global->__pyx_n_s_s
#define __pyx_n_s_sav_vert __pyx_mstate_global->__pyx_n_s_sav_vert
#define __pyx_n_s_scale __pyx_mstate_global->__pyx_n_s_scale
#define __pyx_n_s_scalex __pyx_mstate_global->__pyx_n_s_scalex
#define __pyx_n_s_scaley __pyx_mstate_global->__pyx_n_s_scaley
#define __pyx_n_s_screen __pyx_mstate_global->__pyx_n_s_screen
#define __pyx_n_s_screen_res __pyx_mstate_global->__pyx_n_s_screen_res
#define __pyx_n_s_screenx __pyx_mstate_global->__pyx_n_s_screenx
#define __pyx_n_s_screeny __pyx_mstate_global->__pyx_n_s_screeny
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_n_s_self_2 __pyx_mstate_global->__pyx_n_s_self_2
#define __pyx_n_s_sequential __pyx_mstate_global->__pyx_n_s_sequential
#define __pyx_n_s_serialization __pyx_mstate_global->__pyx_n_s_serialization
#define __pyx_n_s_serialization_current_object __pyx_mstate_global->__pyx_n_s_serialization_current_object
#define __pyx_n_s_serialize_to_obj __pyx_mstate_global->__pyx_n_s_serialize_to_obj
#define __pyx_n_s_serialized_obj __pyx_mstate_global->__pyx_n_s_serialized_obj
#define __pyx_n_s_set_background __pyx_mstate_global->__pyx_n_s_set_background
#define __pyx_n_s_set_centerpoint __pyx_mstate_global->__pyx_n_s_set_centerpoint
#define __pyx_n_s_set_char_size __pyx_mstate_global->__pyx_n_s_set_char_size
#define __pyx_n_s_set_eyepoint __pyx_mstate_global->__pyx_n_s_set_eyepoint
#define __pyx_n_s_set_mode __pyx_mstate_global->__pyx_n_s_set_mode
#define __pyx_n_s_set_name __pyx_mstate_global->__pyx_n_s_set_name
#define __pyx_n_s_shaderprogram __pyx_mstate_global->__pyx_n_s_shaderprogram
#define __pyx_n_s_shaders __pyx_mstate_global->__pyx_n_s_shaders
#define __pyx_n_s_shape __pyx_mstate_global->__pyx_n_s_shape
#define __pyx_n_s_shrink __pyx_mstate_global->__pyx_n_s_shrink
#define __pyx_n_s_size __pyx_mstate_global->__pyx_n_s_size
#define __pyx_n_s_size_x __pyx_mstate_global->__pyx_n_s_size_x
#define __pyx_n_s_size_y __pyx_mstate_global->__pyx_n_s_size_y
#define __pyx_n_s_sizeof __pyx_mstate_global->__pyx_n_s_sizeof
#define __pyx_n_s_sizex __pyx_mstate_global->__pyx_n_s_sizex
#define __pyx_n_s_sizey __pyx_mstate_global->__pyx_n_s_sizey
#define __pyx_n_s_sleep __pyx_mstate_global->__pyx_n_s_sleep
#define __pyx_n_s_slope_error_new __pyx_mstate_global->__pyx_n_s_slope_error_new
#define __pyx_n_s_spacing __pyx_mstate_global->__pyx_n_s_spacing
#define __pyx_n_s_spacing_addx __pyx_mstate_global->__pyx_n_s_spacing_addx
#define __pyx_n_s_spacing_addy __pyx_mstate_global->__pyx_n_s_spacing_addy
#define __pyx_n_s_spacing_y __pyx_mstate_global->__pyx_n_s_spacing_y
#define __pyx_n_s_split __pyx_mstate_global->__pyx_n_s_split
#define __pyx_n_s_sqrt __pyx_mstate_global->__pyx_n_s_sqrt
#define __pyx_n_s_start_new_thread __pyx_mstate_global->__pyx_n_s_start_new_thread
#define __pyx_n_s_startswith __pyx_mstate_global->__pyx_n_s_startswith
#define __pyx_n_s_state __pyx_mstate_global->__pyx_n_s_state
#define __pyx_n_s_strings __pyx_mstate_global->__pyx_n_s_strings
#define __pyx_n_s_super __pyx_mstate_global->__pyx_n_s_super
#define __pyx_n_s_switch __pyx_mstate_global->__pyx_n_s_switch
#define __pyx_n_s_sx __pyx_mstate_global->__pyx_n_s_sx
#define __pyx_n_s_sy __pyx_mstate_global->__pyx_n_s_sy
#define __pyx_n_s_sys __pyx_mstate_global->__pyx_n_s_sys
#define __pyx_n_s_t __pyx_mstate_global->__pyx_n_s_t
#define __pyx_n_s_t1 __pyx_mstate_global->__pyx_n_s_t1
#define __pyx_n_s_t2 __pyx_mstate_global->__pyx_n_s_t2
#define __pyx_n_s_t3 __pyx_mstate_global->__pyx_n_s_t3
#define __pyx_n_s_t4 __pyx_mstate_global->__pyx_n_s_t4
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_tex_arrayn_translate __pyx_mstate_global->__pyx_n_s_tex_arrayn_translate
#define __pyx_n_s_texcords1 __pyx_mstate_global->__pyx_n_s_texcords1
#define __pyx_n_s_texcords2 __pyx_mstate_global->__pyx_n_s_texcords2
#define __pyx_n_s_texcords3 __pyx_mstate_global->__pyx_n_s_texcords3
#define __pyx_n_s_texcords4 __pyx_mstate_global->__pyx_n_s_texcords4
#define __pyx_n_s_texid __pyx_mstate_global->__pyx_n_s_texid
#define __pyx_n_s_texsize __pyx_mstate_global->__pyx_n_s_texsize
#define __pyx_n_s_text __pyx_mstate_global->__pyx_n_s_text
#define __pyx_n_s_textid __pyx_mstate_global->__pyx_n_s_textid
#define __pyx_n_s_textn __pyx_mstate_global->__pyx_n_s_textn
#define __pyx_n_s_textr __pyx_mstate_global->__pyx_n_s_textr
#define __pyx_n_s_texture __pyx_mstate_global->__pyx_n_s_texture
#define __pyx_n_s_texture_2 __pyx_mstate_global->__pyx_n_s_texture_2
#define __pyx_n_s_texture_cords_to_ratio __pyx_mstate_global->__pyx_n_s_texture_cords_to_ratio
#define __pyx_n_s_texture_data __pyx_mstate_global->__pyx_n_s_texture_data
#define __pyx_n_s_texture_slots __pyx_mstate_global->__pyx_n_s_texture_slots
#define __pyx_n_s_textured __pyx_mstate_global->__pyx_n_s_textured
#define __pyx_n_s_textures __pyx_mstate_global->__pyx_n_s_textures
#define __pyx_n_s_th __pyx_mstate_global->__pyx_n_s_th
#define __pyx_n_s_thread __pyx_mstate_global->__pyx_n_s_thread
#define __pyx_n_s_time __pyx_mstate_global->__pyx_n_s_time
#define __pyx_n_s_title __pyx_mstate_global->__pyx_n_s_title
#define __pyx_n_s_tk __pyx_mstate_global->__pyx_n_s_tk
#define __pyx_n_s_tkAutoSpin __pyx_mstate_global->__pyx_n_s_tkAutoSpin
#define __pyx_n_s_tkCreateContext __pyx_mstate_global->__pyx_n_s_tkCreateContext
#define __pyx_n_s_tkExpose __pyx_mstate_global->__pyx_n_s_tkExpose
#define __pyx_n_s_tkHandlePick __pyx_mstate_global->__pyx_n_s_tkHandlePick
#define __pyx_n_s_tkMakeCurrent __pyx_mstate_global->__pyx_n_s_tkMakeCurrent
#define __pyx_n_s_tkMap __pyx_mstate_global->__pyx_n_s_tkMap
#define __pyx_n_s_tkPrint __pyx_mstate_global->__pyx_n_s_tkPrint
#define __pyx_n_s_tkRecordMouse __pyx_mstate_global->__pyx_n_s_tkRecordMouse
#define __pyx_n_s_tkRedraw __pyx_mstate_global->__pyx_n_s_tkRedraw
#define __pyx_n_s_tkResize __pyx_mstate_global->__pyx_n_s_tkResize
#define __pyx_n_s_tkRotate __pyx_mstate_global->__pyx_n_s_tkRotate
#define __pyx_n_s_tkScale __pyx_mstate_global->__pyx_n_s_tkScale
#define __pyx_n_s_tkSwapBuffers __pyx_mstate_global->__pyx_n_s_tkSwapBuffers
#define __pyx_n_s_tkTranslate __pyx_mstate_global->__pyx_n_s_tkTranslate
#define __pyx_n_s_tkinter __pyx_mstate_global->__pyx_n_s_tkinter
#define __pyx_n_s_tlist __pyx_mstate_global->__pyx_n_s_tlist
#define __pyx_n_s_to __pyx_mstate_global->__pyx_n_s_to
#define __pyx_n_s_total_updates __pyx_mstate_global->__pyx_n_s_total_updates
#define __pyx_n_s_tquad __pyx_mstate_global->__pyx_n_s_tquad
#define __pyx_n_s_tr1 __pyx_mstate_global->__pyx_n_s_tr1
#define __pyx_n_s_tr2 __pyx_mstate_global->__pyx_n_s_tr2
#define __pyx_n_s_tu __pyx_mstate_global->__pyx_n_s_tu
#define __pyx_n_s_tua __pyx_mstate_global->__pyx_n_s_tua
#define __pyx_n_s_txn __pyx_mstate_global->__pyx_n_s_txn
#define __pyx_n_s_txs __pyx_mstate_global->__pyx_n_s_txs
#define __pyx_n_s_txtid __pyx_mstate_global->__pyx_n_s_txtid
#define __pyx_n_s_ubyte __pyx_mstate_global->__pyx_n_s_ubyte
#define __pyx_n_s_uint8 __pyx_mstate_global->__pyx_n_s_uint8
#define __pyx_n_s_unload __pyx_mstate_global->__pyx_n_s_unload
#define __pyx_n_s_update __pyx_mstate_global->__pyx_n_s_update
#define __pyx_n_s_update_animation __pyx_mstate_global->__pyx_n_s_update_animation
#define __pyx_n_s_update_idletasks __pyx_mstate_global->__pyx_n_s_update_idletasks
#define __pyx_n_s_update_list __pyx_mstate_global->__pyx_n_s_update_list
#define __pyx_n_s_updates __pyx_mstate_global->__pyx_n_s_updates
#define __pyx_n_s_use_texture __pyx_mstate_global->__pyx_n_s_use_texture
#define __pyx_n_s_usecords __pyx_mstate_global->__pyx_n_s_usecords
#define __pyx_n_s_user32 __pyx_mstate_global->__pyx_n_s_user32
#define __pyx_n_s_user32_2 __pyx_mstate_global->__pyx_n_s_user32_2
#define __pyx_n_s_usingVIPSandShrink __pyx_mstate_global->__pyx_n_s_usingVIPSandShrink
#define __pyx_kp_s_utf_8 __pyx_mstate_global->__pyx_kp_s_utf_8
#define __pyx_n_s_util __pyx_mstate_global->__pyx_n_s_util
#define __pyx_n_s_v3distsq __pyx_mstate_global->__pyx_n_s_v3distsq
#define __pyx_n_s_value __pyx_mstate_global->__pyx_n_s_value
#define __pyx_n_s_vb_count __pyx_mstate_global->__pyx_n_s_vb_count
#define __pyx_n_s_vbo __pyx_mstate_global->__pyx_n_s_vbo
#define __pyx_n_s_vbos __pyx_mstate_global->__pyx_n_s_vbos
#define __pyx_kp_s_version_330_core_layout_locatio __pyx_mstate_global->__pyx_kp_s_version_330_core_layout_locatio
#define __pyx_kp_s_version_330_core_layout_locatio_2 __pyx_mstate_global->__pyx_kp_s_version_330_core_layout_locatio_2
#define __pyx_n_s_version_info __pyx_mstate_global->__pyx_n_s_version_info
#define __pyx_n_s_vert_lists __pyx_mstate_global->__pyx_n_s_vert_lists
#define __pyx_n_s_vertices __pyx_mstate_global->__pyx_n_s_vertices
#define __pyx_n_s_vipshome __pyx_mstate_global->__pyx_n_s_vipshome
#define __pyx_n_s_vis __pyx_mstate_global->__pyx_n_s_vis
#define __pyx_n_s_visual __pyx_mstate_global->__pyx_n_s_visual
#define __pyx_n_s_visualid __pyx_mstate_global->__pyx_n_s_visualid
#define __pyx_n_s_vns __pyx_mstate_global->__pyx_n_s_vns
#define __pyx_n_s_vxshader __pyx_mstate_global->__pyx_n_s_vxshader
#define __pyx_n_s_w __pyx_mstate_global->__pyx_n_s_w
#define __pyx_n_s_w_2 __pyx_mstate_global->__pyx_n_s_w_2
#define __pyx_n_s_wait __pyx_mstate_global->__pyx_n_s_wait
#define __pyx_n_s_wglCreateContext __pyx_mstate_global->__pyx_n_s_wglCreateContext
#define __pyx_n_s_wglMakeCurrent __pyx_mstate_global->__pyx_n_s_wglMakeCurrent
#define __pyx_n_s_wid __pyx_mstate_global->__pyx_n_s_wid
#define __pyx_n_s_width __pyx_mstate_global->__pyx_n_s_width
#define __pyx_n_s_win __pyx_mstate_global->__pyx_n_s_win
#define __pyx_n_s_win32 __pyx_mstate_global->__pyx_n_s_win32
#define __pyx_n_s_win_height __pyx_mstate_global->__pyx_n_s_win_height
#define __pyx_n_s_winfo __pyx_mstate_global->__pyx_n_s_winfo
#define __pyx_n_s_winfo_height __pyx_mstate_global->__pyx_n_s_winfo_height
#define __pyx_n_s_winfo_id __pyx_mstate_global->__pyx_n_s_winfo_id
#define __pyx_n_s_winfo_ismapped __pyx_mstate_global->__pyx_n_s_winfo_ismapped
#define __pyx_n_s_winfo_screen __pyx_mstate_global->__pyx_n_s_winfo_screen
#define __pyx_n_s_winfo_visualid __pyx_mstate_global->__pyx_n_s_winfo_visualid
#define __pyx_n_s_winfo_width __pyx_mstate_global->__pyx_n_s_winfo_width
#define __pyx_n_s_write_to_memory __pyx_mstate_global->__pyx_n_s_write_to_memory
#define __pyx_n_s_wtf __pyx_mstate_global->__pyx_n_s_wtf
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_x1 __pyx_mstate_global->__pyx_n_s_x1
#define __pyx_n_s_x11lib __pyx_mstate_global->__pyx_n_s_x11lib
#define __pyx_n_s_x2 __pyx_mstate_global->__pyx_n_s_x2
#define __pyx_n_s_x_root __pyx_mstate_global->__pyx_n_s_x_root
#define __pyx_n_s_xcenter __pyx_mstate_global->__pyx_n_s_xcenter
#define __pyx_n_s_xmouse __pyx_mstate_global->__pyx_n_s_xmouse
#define __pyx_n_s_xr __pyx_mstate_global->__pyx_n_s_xr
#define __pyx_n_s_xspin __pyx_mstate_global->__pyx_n_s_xspin
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_y1 __pyx_mstate_global->__pyx_n_s_y1
#define __pyx_n_s_y2 __pyx_mstate_global->__pyx_n_s_y2
#define __pyx_n_s_y_root __pyx_mstate_global->__pyx_n_s_y_root
#define __pyx_n_s_ycenter __pyx_mstate_global->__pyx_n_s_ycenter
#define __pyx_n_s_ymouse __pyx_mstate_global->__pyx_n_s_ymouse
#define __pyx_n_s_yr __pyx_mstate_global->__pyx_n_s_yr
#define __pyx_n_s_yspin __pyx_mstate_global->__pyx_n_s_yspin
#define __pyx_n_s_z __pyx_mstate_global->__pyx_n_s_z
#define __pyx_n_s_zcenter __pyx_mstate_global->__pyx_n_s_zcenter
#define __pyx_n_s_zeros __pyx_mstate_global->__pyx_n_s_zeros
#define __pyx_float_0_ __pyx_mstate_global->__pyx_float_0_
#define __pyx_float_1_ __pyx_mstate_global->__pyx_float_1_
#define __pyx_float_0_0 __pyx_mstate_global->__pyx_float_0_0
#define __pyx_float_0_1 __pyx_mstate_global->__pyx_float_0_1
#define __pyx_float_0_5 __pyx_mstate_global->__pyx_float_0_5
#define __pyx_float_1_0 __pyx_mstate_global->__pyx_float_1_0
#define __pyx_float_0_01 __pyx_mstate_global->__pyx_float_0_01
#define __pyx_float_10_0 __pyx_mstate_global->__pyx_float_10_0
#define __pyx_float_30_0 __pyx_mstate_global->__pyx_float_30_0
#define __pyx_float_0_001 __pyx_mstate_global->__pyx_float_0_001
#define __pyx_float_1000_0 __pyx_mstate_global->__pyx_float_1000_0
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_2 __pyx_mstate_global->__pyx_int_2
#define __pyx_int_3 __pyx_mstate_global->__pyx_int_3
#define __pyx_int_4 __pyx_mstate_global->__pyx_int_4
#define __pyx_int_5 __pyx_mstate_global->__pyx_int_5
#define __pyx_int_6 __pyx_mstate_global->__pyx_int_6
#define __pyx_int_7 __pyx_mstate_global->__pyx_int_7
#define __pyx_int_8 __pyx_mstate_global->__pyx_int_8
#define __pyx_int_9 __pyx_mstate_global->__pyx_int_9
#define __pyx_int_10 __pyx_mstate_global->__pyx_int_10
#define __pyx_int_11 __pyx_mstate_global->__pyx_int_11
#define __pyx_int_12 __pyx_mstate_global->__pyx_int_12
#define __pyx_int_13 __pyx_mstate_global->__pyx_int_13
#define __pyx_int_14 __pyx_mstate_global->__pyx_int_14
#define __pyx_int_15 __pyx_mstate_global->__pyx_int_15
#define __pyx_int_16 __pyx_mstate_global->__pyx_int_16
#define __pyx_int_17 __pyx_mstate_global->__pyx_int_17
#define __pyx_int_18 __pyx_mstate_global->__pyx_int_18
#define __pyx_int_19 __pyx_mstate_global->__pyx_int_19
#define __pyx_int_20 __pyx_mstate_global->__pyx_int_20
#define __pyx_int_21 __pyx_mstate_global->__pyx_int_21
#define __pyx_int_23 __pyx_mstate_global->__pyx_int_23
#define __pyx_int_24 __pyx_mstate_global->__pyx_int_24
#define __pyx_int_25 __pyx_mstate_global->__pyx_int_25
#define __pyx_int_26 __pyx_mstate_global->__pyx_int_26
#define __pyx_int_27 __pyx_mstate_global->__pyx_int_27
#define __pyx_int_28 __pyx_mstate_global->__pyx_int_28
#define __pyx_int_29 __pyx_mstate_global->__pyx_int_29
#define __pyx_int_30 __pyx_mstate_global->__pyx_int_30
#define __pyx_int_31 __pyx_mstate_global->__pyx_int_31
#define __pyx_int_32 __pyx_mstate_global->__pyx_int_32
#define __pyx_int_33 __pyx_mstate_global->__pyx_int_33
#define __pyx_int_34 __pyx_mstate_global->__pyx_int_34
#define __pyx_int_35 __pyx_mstate_global->__pyx_int_35
#define __pyx_int_36 __pyx_mstate_global->__pyx_int_36
#define __pyx_int_37 __pyx_mstate_global->__pyx_int_37
#define __pyx_int_38 __pyx_mstate_global->__pyx_int_38
#define __pyx_int_39 __pyx_mstate_global->__pyx_int_39
#define __pyx_int_40 __pyx_mstate_global->__pyx_int_40
#define __pyx_int_64 __pyx_mstate_global->__pyx_int_64
#define __pyx_int_255 __pyx_mstate_global->__pyx_int_255
#define __pyx_int_256 __pyx_mstate_global->__pyx_int_256
#define __pyx_int_1000 __pyx_mstate_global->__pyx_int_1000
#define __pyx_int_1080 __pyx_mstate_global->__pyx_int_1080
#define __pyx_int_1920 __pyx_mstate_global->__pyx_int_1920
#define __pyx_int_neg_1 __pyx_mstate_global->__pyx_int_neg_1
#define __pyx_int_neg_10 __pyx_mstate_global->__pyx_int_neg_10
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_slice__18 __pyx_mstate_global->__pyx_slice__18
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__20 __pyx_mstate_global->__pyx_tuple__20
#define __pyx_tuple__21 __pyx_mstate_global->__pyx_tuple__21
#define __pyx_tuple__23 __pyx_mstate_global->__pyx_tuple__23
#define __pyx_tuple__25 __pyx_mstate_global->__pyx_tuple__25
#define __pyx_tuple__27 __pyx_mstate_global->__pyx_tuple__27
#define __pyx_tuple__29 __pyx_mstate_global->__pyx_tuple__29
#define __pyx_tuple__31 __pyx_mstate_global->__pyx_tuple__31
#define __pyx_tuple__33 __pyx_mstate_global->__pyx_tuple__33
#define __pyx_tuple__35 __pyx_mstate_global->__pyx_tuple__35
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__43 __pyx_mstate_global->__pyx_tuple__43
#define __pyx_tuple__45 __pyx_mstate_global->__pyx_tuple__45
#define __pyx_tuple__47 __pyx_mstate_global->__pyx_tuple__47
#define __pyx_tuple__50 __pyx_mstate_global->__pyx_tuple__50
#define __pyx_tuple__52 __pyx_mstate_global->__pyx_tuple__52
#define __pyx_tuple__57 __pyx_mstate_global->__pyx_tuple__57
#define __pyx_tuple__59 __pyx_mstate_global->__pyx_tuple__59
#define __pyx_tuple__61 __pyx_mstate_global->__pyx_tuple__61
#define __pyx_tuple__63 __pyx_mstate_global->__pyx_tuple__63
#define __pyx_tuple__65 __pyx_mstate_global->__pyx_tuple__65
#define __pyx_tuple__67 __pyx_mstate_global->__pyx_tuple__67
#define __pyx_tuple__69 __pyx_mstate_global->__pyx_tuple__69
#define __pyx_tuple__71 __pyx_mstate_global->__pyx_tuple__71
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__75 __pyx_mstate_global->__pyx_tuple__75
#define __pyx_tuple__76 __pyx_mstate_global->__pyx_tuple__76
#define __pyx_tuple__78 __pyx_mstate_global->__pyx_tuple__78
#define __pyx_tuple__81 __pyx_mstate_global->__pyx_tuple__81
#define __pyx_tuple__83 __pyx_mstate_global->__pyx_tuple__83
#define __pyx_tuple__85 __pyx_mstate_global->__pyx_tuple__85
#define __pyx_tuple__87 __pyx_mstate_global->__pyx_tuple__87
#define __pyx_tuple__89 __pyx_mstate_global->__pyx_tuple__89
#define __pyx_tuple__91 __pyx_mstate_global->__pyx_tuple__91
#define __pyx_tuple__93 __pyx_mstate_global->__pyx_tuple__93
#define __pyx_tuple__95 __pyx_mstate_global->__pyx_tuple__95
#define __pyx_tuple__97 __pyx_mstate_global->__pyx_tuple__97
#define __pyx_tuple__98 __pyx_mstate_global->__pyx_tuple__98
#define __pyx_tuple__100 __pyx_mstate_global->__pyx_tuple__100
#define __pyx_tuple__102 __pyx_mstate_global->__pyx_tuple__102
#define __pyx_tuple__104 __pyx_mstate_global->__pyx_tuple__104
#define __pyx_tuple__106 __pyx_mstate_global->__pyx_tuple__106
#define __pyx_tuple__108 __pyx_mstate_global->__pyx_tuple__108
#define __pyx_tuple__110 __pyx_mstate_global->__pyx_tuple__110
#define __pyx_tuple__112 __pyx_mstate_global->__pyx_tuple__112
#define __pyx_tuple__114 __pyx_mstate_global->__pyx_tuple__114
#define __pyx_tuple__116 __pyx_mstate_global->__pyx_tuple__116
#define __pyx_tuple__118 __pyx_mstate_global->__pyx_tuple__118
#define __pyx_tuple__120 __pyx_mstate_global->__pyx_tuple__120
#define __pyx_tuple__121 __pyx_mstate_global->__pyx_tuple__121
#define __pyx_tuple__122 __pyx_mstate_global->__pyx_tuple__122
#define __pyx_tuple__124 __pyx_mstate_global->__pyx_tuple__124
#define __pyx_tuple__126 __pyx_mstate_global->__pyx_tuple__126
#define __pyx_tuple__128 __pyx_mstate_global->__pyx_tuple__128
#define __pyx_tuple__129 __pyx_mstate_global->__pyx_tuple__129
#define __pyx_tuple__130 __pyx_mstate_global->__pyx_tuple__130
#define __pyx_tuple__132 __pyx_mstate_global->__pyx_tuple__132
#define __pyx_tuple__134 __pyx_mstate_global->__pyx_tuple__134
#define __pyx_tuple__136 __pyx_mstate_global->__pyx_tuple__136
#define __pyx_tuple__138 __pyx_mstate_global->__pyx_tuple__138
#define __pyx_tuple__140 __pyx_mstate_global->__pyx_tuple__140
#define __pyx_tuple__142 __pyx_mstate_global->__pyx_tuple__142
#define __pyx_tuple__144 __pyx_mstate_global->__pyx_tuple__144
#define __pyx_tuple__146 __pyx_mstate_global->__pyx_tuple__146
#define __pyx_tuple__148 __pyx_mstate_global->__pyx_tuple__148
#define __pyx_tuple__150 __pyx_mstate_global->__pyx_tuple__150
#define __pyx_tuple__152 __pyx_mstate_global->__pyx_tuple__152
#define __pyx_tuple__154 __pyx_mstate_global->__pyx_tuple__154
#define __pyx_tuple__156 __pyx_mstate_global->__pyx_tuple__156
#define __pyx_tuple__158 __pyx_mstate_global->__pyx_tuple__158
#define __pyx_tuple__160 __pyx_mstate_global->__pyx_tuple__160
#define __pyx_tuple__162 __pyx_mstate_global->__pyx_tuple__162
#define __pyx_tuple__164 __pyx_mstate_global->__pyx_tuple__164
#define __pyx_tuple__166 __pyx_mstate_global->__pyx_tuple__166
#define __pyx_tuple__168 __pyx_mstate_global->__pyx_tuple__168
#define __pyx_tuple__170 __pyx_mstate_global->__pyx_tuple__170
#define __pyx_tuple__172 __pyx_mstate_global->__pyx_tuple__172
#define __pyx_tuple__174 __pyx_mstate_global->__pyx_tuple__174
#define __pyx_tuple__176 __pyx_mstate_global->__pyx_tuple__176
#define __pyx_tuple__178 __pyx_mstate_global->__pyx_tuple__178
#define __pyx_tuple__180 __pyx_mstate_global->__pyx_tuple__180
#define __pyx_tuple__182 __pyx_mstate_global->__pyx_tuple__182
#define __pyx_tuple__184 __pyx_mstate_global->__pyx_tuple__184
#define __pyx_tuple__186 __pyx_mstate_global->__pyx_tuple__186
#define __pyx_tuple__188 __pyx_mstate_global->__pyx_tuple__188
#define __pyx_tuple__190 __pyx_mstate_global->__pyx_tuple__190
#define __pyx_tuple__192 __pyx_mstate_global->__pyx_tuple__192
#define __pyx_tuple__194 __pyx_mstate_global->__pyx_tuple__194
#define __pyx_tuple__196 __pyx_mstate_global->__pyx_tuple__196
#define __pyx_tuple__198 __pyx_mstate_global->__pyx_tuple__198
#define __pyx_tuple__200 __pyx_mstate_global->__pyx_tuple__200
#define __pyx_tuple__202 __pyx_mstate_global->__pyx_tuple__202
#define __pyx_tuple__204 __pyx_mstate_global->__pyx_tuple__204
#define __pyx_tuple__206 __pyx_mstate_global->__pyx_tuple__206
#define __pyx_tuple__208 __pyx_mstate_global->__pyx_tuple__208
#define __pyx_tuple__210 __pyx_mstate_global->__pyx_tuple__210
#define __pyx_tuple__211 __pyx_mstate_global->__pyx_tuple__211
#define __pyx_tuple__213 __pyx_mstate_global->__pyx_tuple__213
#define __pyx_tuple__214 __pyx_mstate_global->__pyx_tuple__214
#define __pyx_tuple__216 __pyx_mstate_global->__pyx_tuple__216
#define __pyx_tuple__218 __pyx_mstate_global->__pyx_tuple__218
#define __pyx_tuple__219 __pyx_mstate_global->__pyx_tuple__219
#define __pyx_tuple__221 __pyx_mstate_global->__pyx_tuple__221
#define __pyx_tuple__223 __pyx_mstate_global->__pyx_tuple__223
#define __pyx_tuple__225 __pyx_mstate_global->__pyx_tuple__225
#define __pyx_tuple__226 __pyx_mstate_global->__pyx_tuple__226
#define __pyx_tuple__228 __pyx_mstate_global->__pyx_tuple__228
#define __pyx_tuple__229 __pyx_mstate_global->__pyx_tuple__229
#define __pyx_tuple__231 __pyx_mstate_global->__pyx_tuple__231
#define __pyx_tuple__233 __pyx_mstate_global->__pyx_tuple__233
#define __pyx_tuple__235 __pyx_mstate_global->__pyx_tuple__235
#define __pyx_tuple__236 __pyx_mstate_global->__pyx_tuple__236
#define __pyx_tuple__239 __pyx_mstate_global->__pyx_tuple__239
#define __pyx_tuple__241 __pyx_mstate_global->__pyx_tuple__241
#define __pyx_tuple__242 __pyx_mstate_global->__pyx_tuple__242
#define __pyx_tuple__244 __pyx_mstate_global->__pyx_tuple__244
#define __pyx_tuple__246 __pyx_mstate_global->__pyx_tuple__246
#define __pyx_tuple__248 __pyx_mstate_global->__pyx_tuple__248
#define __pyx_tuple__250 __pyx_mstate_global->__pyx_tuple__250
#define __pyx_tuple__252 __pyx_mstate_global->__pyx_tuple__252
#define __pyx_tuple__254 __pyx_mstate_global->__pyx_tuple__254
#define __pyx_tuple__256 __pyx_mstate_global->__pyx_tuple__256
#define __pyx_tuple__258 __pyx_mstate_global->__pyx_tuple__258
#define __pyx_tuple__259 __pyx_mstate_global->__pyx_tuple__259
#define __pyx_tuple__261 __pyx_mstate_global->__pyx_tuple__261
#define __pyx_tuple__262 __pyx_mstate_global->__pyx_tuple__262
#define __pyx_tuple__264 __pyx_mstate_global->__pyx_tuple__264
#define __pyx_tuple__266 __pyx_mstate_global->__pyx_tuple__266
#define __pyx_tuple__268 __pyx_mstate_global->__pyx_tuple__268
#define __pyx_tuple__270 __pyx_mstate_global->__pyx_tuple__270
#define __pyx_tuple__272 __pyx_mstate_global->__pyx_tuple__272
#define __pyx_tuple__274 __pyx_mstate_global->__pyx_tuple__274
#define __pyx_tuple__276 __pyx_mstate_global->__pyx_tuple__276
#define __pyx_tuple__278 __pyx_mstate_global->__pyx_tuple__278
#define __pyx_tuple__280 __pyx_mstate_global->__pyx_tuple__280
#define __pyx_tuple__282 __pyx_mstate_global->__pyx_tuple__282
#define __pyx_tuple__284 __pyx_mstate_global->__pyx_tuple__284
#define __pyx_tuple__286 __pyx_mstate_global->__pyx_tuple__286
#define __pyx_tuple__288 __pyx_mstate_global->__pyx_tuple__288
#define __pyx_tuple__290 __pyx_mstate_global->__pyx_tuple__290
#define __pyx_tuple__292 __pyx_mstate_global->__pyx_tuple__292
#define __pyx_tuple__294 __pyx_mstate_global->__pyx_tuple__294
#define __pyx_tuple__296 __pyx_mstate_global->__pyx_tuple__296
#define __pyx_tuple__298 __pyx_mstate_global->__pyx_tuple__298
#define __pyx_tuple__300 __pyx_mstate_global->__pyx_tuple__300
#define __pyx_tuple__302 __pyx_mstate_global->__pyx_tuple__302
#define __pyx_tuple__304 __pyx_mstate_global->__pyx_tuple__304
#define __pyx_tuple__306 __pyx_mstate_global->__pyx_tuple__306
#define __pyx_tuple__307 __pyx_mstate_global->__pyx_tuple__307
#define __pyx_tuple__309 __pyx_mstate_global->__pyx_tuple__309
#define __pyx_tuple__311 __pyx_mstate_global->__pyx_tuple__311
#define __pyx_tuple__313 __pyx_mstate_global->__pyx_tuple__313
#define __pyx_tuple__315 __pyx_mstate_global->__pyx_tuple__315
#define __pyx_tuple__319 __pyx_mstate_global->__pyx_tuple__319
#define __pyx_tuple__321 __pyx_mstate_global->__pyx_tuple__321
#define __pyx_tuple__323 __pyx_mstate_global->__pyx_tuple__323
#define __pyx_codeobj__22 __pyx_mstate_global->__pyx_codeobj__22
#define __pyx_codeobj__24 __pyx_mstate_global->__pyx_codeobj__24
#define __pyx_codeobj__26 __pyx_mstate_global->__pyx_codeobj__26
#define __pyx_codeobj__28 __pyx_mstate_global->__pyx_codeobj__28
#define __pyx_codeobj__30 __pyx_mstate_global->__pyx_codeobj__30
#define __pyx_codeobj__32 __pyx_mstate_global->__pyx_codeobj__32
#define __pyx_codeobj__34 __pyx_mstate_global->__pyx_codeobj__34
#define __pyx_codeobj__36 __pyx_mstate_global->__pyx_codeobj__36
#define __pyx_codeobj__38 __pyx_mstate_global->__pyx_codeobj__38
#define __pyx_codeobj__40 __pyx_mstate_global->__pyx_codeobj__40
#define __pyx_codeobj__42 __pyx_mstate_global->__pyx_codeobj__42
#define __pyx_codeobj__44 __pyx_mstate_global->__pyx_codeobj__44
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__48 __pyx_mstate_global->__pyx_codeobj__48
#define __pyx_codeobj__49 __pyx_mstate_global->__pyx_codeobj__49
#define __pyx_codeobj__51 __pyx_mstate_global->__pyx_codeobj__51
#define __pyx_codeobj__53 __pyx_mstate_global->__pyx_codeobj__53
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__58 __pyx_mstate_global->__pyx_codeobj__58
#define __pyx_codeobj__60 __pyx_mstate_global->__pyx_codeobj__60
#define __pyx_codeobj__62 __pyx_mstate_global->__pyx_codeobj__62
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__70 __pyx_mstate_global->__pyx_codeobj__70
#define __pyx_codeobj__72 __pyx_mstate_global->__pyx_codeobj__72
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__77 __pyx_mstate_global->__pyx_codeobj__77
#define __pyx_codeobj__79 __pyx_mstate_global->__pyx_codeobj__79
#define __pyx_codeobj__82 __pyx_mstate_global->__pyx_codeobj__82
#define __pyx_codeobj__84 __pyx_mstate_global->__pyx_codeobj__84
#define __pyx_codeobj__86 __pyx_mstate_global->__pyx_codeobj__86
#define __pyx_codeobj__88 __pyx_mstate_global->__pyx_codeobj__88
#define __pyx_codeobj__90 __pyx_mstate_global->__pyx_codeobj__90
#define __pyx_codeobj__92 __pyx_mstate_global->__pyx_codeobj__92
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__96 __pyx_mstate_global->__pyx_codeobj__96
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__101 __pyx_mstate_global->__pyx_codeobj__101
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__105 __pyx_mstate_global->__pyx_codeobj__105
#define __pyx_codeobj__107 __pyx_mstate_global->__pyx_codeobj__107
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__111 __pyx_mstate_global->__pyx_codeobj__111
#define __pyx_codeobj__113 __pyx_mstate_global->__pyx_codeobj__113
#define __pyx_codeobj__115 __pyx_mstate_global->__pyx_codeobj__115
#define __pyx_codeobj__117 __pyx_mstate_global->__pyx_codeobj__117
#define __pyx_codeobj__119 __pyx_mstate_global->__pyx_codeobj__119
#define __pyx_codeobj__123 __pyx_mstate_global->__pyx_codeobj__123
#define __pyx_codeobj__125 __pyx_mstate_global->__pyx_codeobj__125
#define __pyx_codeobj__127 __pyx_mstate_global->__pyx_codeobj__127
#define __pyx_codeobj__131 __pyx_mstate_global->__pyx_codeobj__131
#define __pyx_codeobj__133 __pyx_mstate_global->__pyx_codeobj__133
#define __pyx_codeobj__135 __pyx_mstate_global->__pyx_codeobj__135
#define __pyx_codeobj__137 __pyx_mstate_global->__pyx_codeobj__137
#define __pyx_codeobj__139 __pyx_mstate_global->__pyx_codeobj__139
#define __pyx_codeobj__141 __pyx_mstate_global->__pyx_codeobj__141
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__145 __pyx_mstate_global->__pyx_codeobj__145
#define __pyx_codeobj__147 __pyx_mstate_global->__pyx_codeobj__147
#define __pyx_codeobj__149 __pyx_mstate_global->__pyx_codeobj__149
#define __pyx_codeobj__151 __pyx_mstate_global->__pyx_codeobj__151
#define __pyx_codeobj__153 __pyx_mstate_global->__pyx_codeobj__153
#define __pyx_codeobj__155 __pyx_mstate_global->__pyx_codeobj__155
#define __pyx_codeobj__157 __pyx_mstate_global->__pyx_codeobj__157
#define __pyx_codeobj__159 __pyx_mstate_global->__pyx_codeobj__159
#define __pyx_codeobj__161 __pyx_mstate_global->__pyx_codeobj__161
#define __pyx_codeobj__163 __pyx_mstate_global->__pyx_codeobj__163
#define __pyx_codeobj__165 __pyx_mstate_global->__pyx_codeobj__165
#define __pyx_codeobj__167 __pyx_mstate_global->__pyx_codeobj__167
#define __pyx_codeobj__169 __pyx_mstate_global->__pyx_codeobj__169
#define __pyx_codeobj__171 __pyx_mstate_global->__pyx_codeobj__171
#define __pyx_codeobj__173 __pyx_mstate_global->__pyx_codeobj__173
#define __pyx_codeobj__175 __pyx_mstate_global->__pyx_codeobj__175
#define __pyx_codeobj__177 __pyx_mstate_global->__pyx_codeobj__177
#define __pyx_codeobj__179 __pyx_mstate_global->__pyx_codeobj__179
#define __pyx_codeobj__181 __pyx_mstate_global->__pyx_codeobj__181
#define __pyx_codeobj__183 __pyx_mstate_global->__pyx_codeobj__183
#define __pyx_codeobj__185 __pyx_mstate_global->__pyx_codeobj__185
#define __pyx_codeobj__187 __pyx_mstate_global->__pyx_codeobj__187
#define __pyx_codeobj__189 __pyx_mstate_global->__pyx_codeobj__189
#define __pyx_codeobj__191 __pyx_mstate_global->__pyx_codeobj__191
#define __pyx_codeobj__193 __pyx_mstate_global->__pyx_codeobj__193
#define __pyx_codeobj__195 __pyx_mstate_global->__pyx_codeobj__195
#define __pyx_codeobj__197 __pyx_mstate_global->__pyx_codeobj__197
#define __pyx_codeobj__199 __pyx_mstate_global->__pyx_codeobj__199
#define __pyx_codeobj__201 __pyx_mstate_global->__pyx_codeobj__201
#define __pyx_codeobj__203 __pyx_mstate_global->__pyx_codeobj__203
#define __pyx_codeobj__205 __pyx_mstate_global->__pyx_codeobj__205
#define __pyx_codeobj__209 __pyx_mstate_global->__pyx_codeobj__209
#define __pyx_codeobj__212 __pyx_mstate_global->__pyx_codeobj__212
#define __pyx_codeobj__215 __pyx_mstate_global->__pyx_codeobj__215
#define __pyx_codeobj__217 __pyx_mstate_global->__pyx_codeobj__217
#define __pyx_codeobj__220 __pyx_mstate_global->__pyx_codeobj__220
#define __pyx_codeobj__222 __pyx_mstate_global->__pyx_codeobj__222
#define __pyx_codeobj__224 __pyx_mstate_global->__pyx_codeobj__224
#define __pyx_codeobj__227 __pyx_mstate_global->__pyx_codeobj__227
#define __pyx_codeobj__230 __pyx_mstate_global->__pyx_codeobj__230
#define __pyx_codeobj__232 __pyx_mstate_global->__pyx_codeobj__232
#define __pyx_codeobj__234 __pyx_mstate_global->__pyx_codeobj__234
#define __pyx_codeobj__237 __pyx_mstate_global->__pyx_codeobj__237
#define __pyx_codeobj__238 __pyx_mstate_global->__pyx_codeobj__238
#define __pyx_codeobj__240 __pyx_mstate_global->__pyx_codeobj__240
#define __pyx_codeobj__243 __pyx_mstate_global->__pyx_codeobj__243
#define __pyx_codeobj__245 __pyx_mstate_global->__pyx_codeobj__245
#define __pyx_codeobj__247 __pyx_mstate_global->__pyx_codeobj__247
#define __pyx_codeobj__249 __pyx_mstate_global->__pyx_codeobj__249
#define __pyx_codeobj__251 __pyx_mstate_global->__pyx_codeobj__251
#define __pyx_codeobj__253 __pyx_mstate_global->__pyx_codeobj__253
#define __pyx_codeobj__255 __pyx_mstate_global->__pyx_codeobj__255
#define __pyx_codeobj__257 __pyx_mstate_global->__pyx_codeobj__257
#define __pyx_codeobj__260 __pyx_mstate_global->__pyx_codeobj__260
#define __pyx_codeobj__263 __pyx_mstate_global->__pyx_codeobj__263
#define __pyx_codeobj__265 __pyx_mstate_global->__pyx_codeobj__265
#define __pyx_codeobj__267 __pyx_mstate_global->__pyx_codeobj__267
#define __pyx_codeobj__269 __pyx_mstate_global->__pyx_codeobj__269
#define __pyx_codeobj__271 __pyx_mstate_global->__pyx_codeobj__271
#define __pyx_codeobj__273 __pyx_mstate_global->__pyx_codeobj__273
#define __pyx_codeobj__275 __pyx_mstate_global->__pyx_codeobj__275
#define __pyx_codeobj__277 __pyx_mstate_global->__pyx_codeobj__277
#define __pyx_codeobj__279 __pyx_mstate_global->__pyx_codeobj__279
#define __pyx_codeobj__281 __pyx_mstate_global->__pyx_codeobj__281
#define __pyx_codeobj__283 __pyx_mstate_global->__pyx_codeobj__283
#define __pyx_codeobj__285 __pyx_mstate_global->__pyx_codeobj__285
#define __pyx_codeobj__287 __pyx_mstate_global->__pyx_codeobj__287
#define __pyx_codeobj__289 __pyx_mstate_global->__pyx_codeobj__289
#define __pyx_codeobj__291 __pyx_mstate_global->__pyx_codeobj__291
#define __pyx_codeobj__293 __pyx_mstate_global->__pyx_codeobj__293
#define __pyx_codeobj__295 __pyx_mstate_global->__pyx_codeobj__295
#define __pyx_codeobj__297 __pyx_mstate_global->__pyx_codeobj__297
#define __pyx_codeobj__299 __pyx_mstate_global->__pyx_codeobj__299
#define __pyx_codeobj__301 __pyx_mstate_global->__pyx_codeobj__301
#define __pyx_codeobj__303 __pyx_mstate_global->__pyx_codeobj__303
#define __pyx_codeobj__305 __pyx_mstate_global->__pyx_codeobj__305
#define __pyx_codeobj__308 __pyx_mstate_global->__pyx_codeobj__308
#define __pyx_codeobj__310 __pyx_mstate_global->__pyx_codeobj__310
#define __pyx_codeobj__312 __pyx_mstate_global->__pyx_codeobj__312
#define __pyx_codeobj__314 __pyx_mstate_global->__pyx_codeobj__314
#define __pyx_codeobj__316 __pyx_mstate_global->__pyx_codeobj__316
#define __pyx_codeobj__317 __pyx_mstate_global->__pyx_codeobj__317
#define __pyx_codeobj__318 __pyx_mstate_global->__pyx_codeobj__318
#define __pyx_codeobj__320 __pyx_mstate_global->__pyx_codeobj__320
#define __pyx_codeobj__322 __pyx_mstate_global->__pyx_codeobj__322
#define __pyx_codeobj__324 __pyx_mstate_global->__pyx_codeobj__324
#endif
/* #### Code section: module_code ### */

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":4
 * if __name__ == '__main__':
 *     import math
 * def naiveline(x1,y1,x2,y2):             # <<<<<<<<<<<<<<
 *     points = []
 *     rise = y2-y1
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_1naiveline(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_1naiveline = {"naiveline", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_1naiveline, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_1naiveline(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x1 = 0;
  PyObject *__pyx_v_y1 = 0;
  PyObject *__pyx_v_x2 = 0;
  PyObject *__pyx_v_y2 = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("naiveline (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_x2,&__pyx_n_s_y2,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_x2,&__pyx_n_s_y2,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x1)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y1)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("naiveline", 1, 4, 4, 1); __PYX_ERR(0, 4, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("naiveline", 1, 4, 4, 2); __PYX_ERR(0, 4, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 4, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("naiveline", 1, 4, 4, 3); __PYX_ERR(0, 4, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "naiveline") < 0)) __PYX_ERR(0, 4, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_x1 = values[0];
    __pyx_v_y1 = values[1];
    __pyx_v_x2 = values[2];
    __pyx_v_y2 = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("naiveline", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 4, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.naiveline", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_naiveline(__pyx_self, __pyx_v_x1, __pyx_v_y1, __pyx_v_x2, __pyx_v_y2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_naiveline(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x1, PyObject *__pyx_v_y1, PyObject *__pyx_v_x2, PyObject *__pyx_v_y2) {
  PyObject *__pyx_v_points = NULL;
  PyObject *__pyx_v_rise = NULL;
  PyObject *__pyx_v_run = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_m = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("naiveline", 0);
  __Pyx_INCREF(__pyx_v_x1);
  __Pyx_INCREF(__pyx_v_y1);
  __Pyx_INCREF(__pyx_v_x2);
  __Pyx_INCREF(__pyx_v_y2);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":5
 *     import math
 * def naiveline(x1,y1,x2,y2):
 *     points = []             # <<<<<<<<<<<<<<
 *     rise = y2-y1
 *     run =   x2-x1
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":6
 * def naiveline(x1,y1,x2,y2):
 *     points = []
 *     rise = y2-y1             # <<<<<<<<<<<<<<
 *     run =   x2-x1
 *     if run == 0:
 */
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_y2, __pyx_v_y1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_rise = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":7
 *     points = []
 *     rise = y2-y1
 *     run =   x2-x1             # <<<<<<<<<<<<<<
 *     if run == 0:
 *         if y2 < y1:
 */
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_x2, __pyx_v_x1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_run = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":8
 *     rise = y2-y1
 *     run =   x2-x1
 *     if run == 0:             # <<<<<<<<<<<<<<
 *         if y2 < y1:
 *             y1, y2 = (y2, y1)
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_run, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":9
 *     run =   x2-x1
 *     if run == 0:
 *         if y2 < y1:             # <<<<<<<<<<<<<<
 *             y1, y2 = (y2, y1)
 *         for y in range(y1,y2+1):
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_y2, __pyx_v_y1, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 9, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":10
 *     if run == 0:
 *         if y2 < y1:
 *             y1, y2 = (y2, y1)             # <<<<<<<<<<<<<<
 *         for y in range(y1,y2+1):
 *             points.append([x1,y])
 */
      __pyx_t_3 = __pyx_v_y2;
      __pyx_t_4 = __pyx_v_y1;
      __pyx_v_y1 = __pyx_t_3;
      __pyx_t_3 = 0;
      __pyx_v_y2 = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":9
 *     run =   x2-x1
 *     if run == 0:
 *         if y2 < y1:             # <<<<<<<<<<<<<<
 *             y1, y2 = (y2, y1)
 *         for y in range(y1,y2+1):
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":11
 *         if y2 < y1:
 *             y1, y2 = (y2, y1)
 *         for y in range(y1,y2+1):             # <<<<<<<<<<<<<<
 *             points.append([x1,y])
 *     else:
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_y2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_y1);
    __Pyx_GIVEREF(__pyx_v_y1);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_y1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_5 = __pyx_t_1; __Pyx_INCREF(__pyx_t_5); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 11, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 11, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_7)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 11, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 11, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_7(__pyx_t_5);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 11, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":12
 *             y1, y2 = (y2, y1)
 *         for y in range(y1,y2+1):
 *             points.append([x1,y])             # <<<<<<<<<<<<<<
 *     else:
 *         m = float(rise)/run
 */
      __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_x1);
      __Pyx_GIVEREF(__pyx_v_x1);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_x1);
      __Pyx_INCREF(__pyx_v_y);
      __Pyx_GIVEREF(__pyx_v_y);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
      __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_points, __pyx_t_1); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 12, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":11
 *         if y2 < y1:
 *             y1, y2 = (y2, y1)
 *         for y in range(y1,y2+1):             # <<<<<<<<<<<<<<
 *             points.append([x1,y])
 *     else:
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":8
 *     rise = y2-y1
 *     run =   x2-x1
 *     if run == 0:             # <<<<<<<<<<<<<<
 *         if y2 < y1:
 *             y1, y2 = (y2, y1)
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":14
 *             points.append([x1,y])
 *     else:
 *         m = float(rise)/run             # <<<<<<<<<<<<<<
 *         b = y1 - m * x1
 *         if m <= 1 and m >= -1:
 */
  /*else*/ {
    __pyx_t_5 = __Pyx_PyNumber_Float(__pyx_v_rise); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_v_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_m = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":15
 *     else:
 *         m = float(rise)/run
 *         b = y1 - m * x1             # <<<<<<<<<<<<<<
 *         if m <= 1 and m >= -1:
 *             if x2 < x1:
 */
    __pyx_t_1 = PyNumber_Multiply(__pyx_v_m, __pyx_v_x1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_y1, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_b = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":16
 *         m = float(rise)/run
 *         b = y1 - m * x1
 *         if m <= 1 and m >= -1:             # <<<<<<<<<<<<<<
 *             if x2 < x1:
 *                 x1, x2 = (x2, x1 )
 */
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_m, __pyx_int_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 16, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 16, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_9) {
    } else {
      __pyx_t_2 = __pyx_t_9;
      goto __pyx_L8_bool_binop_done;
    }
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_m, __pyx_int_neg_1, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 16, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 16, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_2 = __pyx_t_9;
    __pyx_L8_bool_binop_done:;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":17
 *         b = y1 - m * x1
 *         if m <= 1 and m >= -1:
 *             if x2 < x1:             # <<<<<<<<<<<<<<
 *                 x1, x2 = (x2, x1 )
 *             for x in range(x1,x2+1):
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_x2, __pyx_v_x1, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 17, __pyx_L1_error)
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 17, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_2) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":18
 *         if m <= 1 and m >= -1:
 *             if x2 < x1:
 *                 x1, x2 = (x2, x1 )             # <<<<<<<<<<<<<<
 *             for x in range(x1,x2+1):
 *                 y = int(round(m*x+b))
 */
        __pyx_t_4 = __pyx_v_x2;
        __pyx_t_3 = __pyx_v_x1;
        __pyx_v_x1 = __pyx_t_4;
        __pyx_t_4 = 0;
        __pyx_v_x2 = __pyx_t_3;
        __pyx_t_3 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":17
 *         b = y1 - m * x1
 *         if m <= 1 and m >= -1:
 *             if x2 < x1:             # <<<<<<<<<<<<<<
 *                 x1, x2 = (x2, x1 )
 *             for x in range(x1,x2+1):
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":19
 *             if x2 < x1:
 *                 x1, x2 = (x2, x1 )
 *             for x in range(x1,x2+1):             # <<<<<<<<<<<<<<
 *                 y = int(round(m*x+b))
 *                 points.append([x,y])
 */
      __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_v_x2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_x1);
      __Pyx_GIVEREF(__pyx_v_x1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x1);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 19, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
        __pyx_t_1 = __pyx_t_5; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
        __pyx_t_7 = NULL;
      } else {
        __pyx_t_6 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 19, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_7 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 19, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (likely(!__pyx_t_7)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 19, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 19, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_5); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 19, __pyx_L1_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 19, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_7(__pyx_t_1);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 19, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":20
 *                 x1, x2 = (x2, x1 )
 *             for x in range(x1,x2+1):
 *                 y = int(round(m*x+b))             # <<<<<<<<<<<<<<
 *                 points.append([x,y])
 *         else:
 */
        __pyx_t_5 = PyNumber_Multiply(__pyx_v_m, __pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 20, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_10 = PyNumber_Add(__pyx_t_5, __pyx_v_b); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 20, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_round, __pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 20, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 20, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_10);
        __pyx_t_10 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":21
 *             for x in range(x1,x2+1):
 *                 y = int(round(m*x+b))
 *                 points.append([x,y])             # <<<<<<<<<<<<<<
 *         else:
 *             if y2 < y1:
 */
        __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 21, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_v_x);
        __Pyx_GIVEREF(__pyx_v_x);
        PyList_SET_ITEM(__pyx_t_10, 0, __pyx_v_x);
        __Pyx_INCREF(__pyx_v_y);
        __Pyx_GIVEREF(__pyx_v_y);
        PyList_SET_ITEM(__pyx_t_10, 1, __pyx_v_y);
        __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_points, __pyx_t_10); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 21, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":19
 *             if x2 < x1:
 *                 x1, x2 = (x2, x1 )
 *             for x in range(x1,x2+1):             # <<<<<<<<<<<<<<
 *                 y = int(round(m*x+b))
 *                 points.append([x,y])
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":16
 *         m = float(rise)/run
 *         b = y1 - m * x1
 *         if m <= 1 and m >= -1:             # <<<<<<<<<<<<<<
 *             if x2 < x1:
 *                 x1, x2 = (x2, x1 )
 */
      goto __pyx_L7;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":23
 *                 points.append([x,y])
 *         else:
 *             if y2 < y1:             # <<<<<<<<<<<<<<
 *                 y1, y2 = (y2,y1)
 *             for y in range(y1,y2+1):
 */
    /*else*/ {
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_y2, __pyx_v_y1, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 23, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_2) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":24
 *         else:
 *             if y2 < y1:
 *                 y1, y2 = (y2,y1)             # <<<<<<<<<<<<<<
 *             for y in range(y1,y2+1):
 *                 x = int(round((y-b)/m))
 */
        __pyx_t_3 = __pyx_v_y2;
        __pyx_t_4 = __pyx_v_y1;
        __pyx_v_y1 = __pyx_t_3;
        __pyx_t_3 = 0;
        __pyx_v_y2 = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":23
 *                 points.append([x,y])
 *         else:
 *             if y2 < y1:             # <<<<<<<<<<<<<<
 *                 y1, y2 = (y2,y1)
 *             for y in range(y1,y2+1):
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":25
 *             if y2 < y1:
 *                 y1, y2 = (y2,y1)
 *             for y in range(y1,y2+1):             # <<<<<<<<<<<<<<
 *                 x = int(round((y-b)/m))
 *                 points.append([x,y])
 */
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_y2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_v_y1);
      __Pyx_GIVEREF(__pyx_v_y1);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_v_y1);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_10 = __pyx_t_1; __Pyx_INCREF(__pyx_t_10); __pyx_t_6 = 0;
        __pyx_t_7 = NULL;
      } else {
        __pyx_t_6 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 25, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_7 = Py_TYPE(__pyx_t_10)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 25, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (likely(!__pyx_t_7)) {
          if (likely(PyList_CheckExact(__pyx_t_10))) {
            if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 25, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_10, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          } else {
            if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 25, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_10, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          }
        } else {
          __pyx_t_1 = __pyx_t_7(__pyx_t_10);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 25, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":26
 *                 y1, y2 = (y2,y1)
 *             for y in range(y1,y2+1):
 *                 x = int(round((y-b)/m))             # <<<<<<<<<<<<<<
 *                 points.append([x,y])
 * 
 */
        __pyx_t_1 = PyNumber_Subtract(__pyx_v_y, __pyx_v_b); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_v_m); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 26, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_round, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 26, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 26, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":27
 *             for y in range(y1,y2+1):
 *                 x = int(round((y-b)/m))
 *                 points.append([x,y])             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 27, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_x);
        __Pyx_GIVEREF(__pyx_v_x);
        PyList_SET_ITEM(__pyx_t_5, 0, __pyx_v_x);
        __Pyx_INCREF(__pyx_v_y);
        __Pyx_GIVEREF(__pyx_v_y);
        PyList_SET_ITEM(__pyx_t_5, 1, __pyx_v_y);
        __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_points, __pyx_t_5); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 27, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":25
 *             if y2 < y1:
 *                 y1, y2 = (y2,y1)
 *             for y in range(y1,y2+1):             # <<<<<<<<<<<<<<
 *                 x = int(round((y-b)/m))
 *                 points.append([x,y])
 */
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __pyx_L7:;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":31
 * 
 * 
 *     return points             # <<<<<<<<<<<<<<
 * def bresenham(x1,y1,x2, y2):  #Line Drawing
 *     m_new = 2 * (y2 - y1)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_points);
  __pyx_r = __pyx_v_points;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":4
 * if __name__ == '__main__':
 *     import math
 * def naiveline(x1,y1,x2,y2):             # <<<<<<<<<<<<<<
 *     points = []
 *     rise = y2-y1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.naiveline", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XDECREF(__pyx_v_rise);
  __Pyx_XDECREF(__pyx_v_run);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_m);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_x1);
  __Pyx_XDECREF(__pyx_v_y1);
  __Pyx_XDECREF(__pyx_v_x2);
  __Pyx_XDECREF(__pyx_v_y2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":32
 * 
 *     return points
 * def bresenham(x1,y1,x2, y2):  #Line Drawing             # <<<<<<<<<<<<<<
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3bresenham(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3bresenham = {"bresenham", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3bresenham, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3bresenham(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x1 = 0;
  PyObject *__pyx_v_y1 = 0;
  PyObject *__pyx_v_x2 = 0;
  PyObject *__pyx_v_y2 = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bresenham (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_x2,&__pyx_n_s_y2,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_y1,&__pyx_n_s_x2,&__pyx_n_s_y2,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x1)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y1)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("bresenham", 1, 4, 4, 1); __PYX_ERR(0, 32, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("bresenham", 1, 4, 4, 2); __PYX_ERR(0, 32, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 32, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("bresenham", 1, 4, 4, 3); __PYX_ERR(0, 32, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "bresenham") < 0)) __PYX_ERR(0, 32, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_x1 = values[0];
    __pyx_v_y1 = values[1];
    __pyx_v_x2 = values[2];
    __pyx_v_y2 = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("bresenham", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 32, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.bresenham", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_2bresenham(__pyx_self, __pyx_v_x1, __pyx_v_y1, __pyx_v_x2, __pyx_v_y2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_2bresenham(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x1, PyObject *__pyx_v_y1, PyObject *__pyx_v_x2, PyObject *__pyx_v_y2) {
  PyObject *__pyx_v_m_new = NULL;
  PyObject *__pyx_v_slope_error_new = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_points = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bresenham", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":33
 *     return points
 * def bresenham(x1,y1,x2, y2):  #Line Drawing
 *     m_new = 2 * (y2 - y1)             # <<<<<<<<<<<<<<
 *     slope_error_new = m_new - (x2 - x1)
 *     y=y1
 */
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_y2, __pyx_v_y1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_MultiplyCObj(__pyx_int_2, __pyx_t_1, 2, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_m_new = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":34
 * def bresenham(x1,y1,x2, y2):  #Line Drawing
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)             # <<<<<<<<<<<<<<
 *     y=y1
 *     points = []
 */
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_x2, __pyx_v_x1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_m_new, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_slope_error_new = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":35
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)
 *     y=y1             # <<<<<<<<<<<<<<
 *     points = []
 *     for x in range(x1,x2+1):
 */
  __Pyx_INCREF(__pyx_v_y1);
  __pyx_v_y = __pyx_v_y1;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":36
 *     slope_error_new = m_new - (x2 - x1)
 *     y=y1
 *     points = []             # <<<<<<<<<<<<<<
 *     for x in range(x1,x2+1):
 *         points.append([x,y])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_points = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":37
 *     y=y1
 *     points = []
 *     for x in range(x1,x2+1):             # <<<<<<<<<<<<<<
 *         points.append([x,y])
 *         slope_error_new+= m_new
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_x2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_x1);
  __Pyx_GIVEREF(__pyx_v_x1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_x1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 37, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 37, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 37, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 37, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":38
 *     points = []
 *     for x in range(x1,x2+1):
 *         points.append([x,y])             # <<<<<<<<<<<<<<
 *         slope_error_new+= m_new
 *         if (slope_error_new >= 0):
 */
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_x);
    __Pyx_GIVEREF(__pyx_v_x);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
    __Pyx_INCREF(__pyx_v_y);
    __Pyx_GIVEREF(__pyx_v_y);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_points, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":39
 *     for x in range(x1,x2+1):
 *         points.append([x,y])
 *         slope_error_new+= m_new             # <<<<<<<<<<<<<<
 *         if (slope_error_new >= 0):
 *             y=y+1
 */
    __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_slope_error_new, __pyx_v_m_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 39, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_slope_error_new, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":40
 *         points.append([x,y])
 *         slope_error_new+= m_new
 *         if (slope_error_new >= 0):             # <<<<<<<<<<<<<<
 *             y=y+1
 *             slope_error_new =slope_error_new - 2 * (x2 - x1)
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_slope_error_new, __pyx_int_0, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 40, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":41
 *         slope_error_new+= m_new
 *         if (slope_error_new >= 0):
 *             y=y+1             # <<<<<<<<<<<<<<
 *             slope_error_new =slope_error_new - 2 * (x2 - x1)
 * 
 */
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 41, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":42
 *         if (slope_error_new >= 0):
 *             y=y+1
 *             slope_error_new =slope_error_new - 2 * (x2 - x1)             # <<<<<<<<<<<<<<
 * 
 *     return points
 */
      __pyx_t_1 = PyNumber_Subtract(__pyx_v_x2, __pyx_v_x1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_PyInt_MultiplyCObj(__pyx_int_2, __pyx_t_1, 2, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 42, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Subtract(__pyx_v_slope_error_new, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 42, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF_SET(__pyx_v_slope_error_new, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":40
 *         points.append([x,y])
 *         slope_error_new+= m_new
 *         if (slope_error_new >= 0):             # <<<<<<<<<<<<<<
 *             y=y+1
 *             slope_error_new =slope_error_new - 2 * (x2 - x1)
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":37
 *     y=y1
 *     points = []
 *     for x in range(x1,x2+1):             # <<<<<<<<<<<<<<
 *         points.append([x,y])
 *         slope_error_new+= m_new
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":44
 *             slope_error_new =slope_error_new - 2 * (x2 - x1)
 * 
 *     return points             # <<<<<<<<<<<<<<
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_points);
  __pyx_r = __pyx_v_points;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":32
 * 
 *     return points
 * def bresenham(x1,y1,x2, y2):  #Line Drawing             # <<<<<<<<<<<<<<
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.bresenham", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_m_new);
  __Pyx_XDECREF(__pyx_v_slope_error_new);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":46
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         self.size = screen_res
 *         self.newsize= (0,0)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_screen_res = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screen_res,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screen_res,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 46, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screen_res)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 46, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 46, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 46, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_screen_res = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 46, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw___init__(__pyx_self, __pyx_v_self, __pyx_v_screen_res);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_screen_res) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":47
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):
 *         self.size = screen_res             # <<<<<<<<<<<<<<
 *         self.newsize= (0,0)
 *         self.nx = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_size, __pyx_v_screen_res) < 0) __PYX_ERR(0, 47, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":48
 *     def __init__(self,screen_res):
 *         self.size = screen_res
 *         self.newsize= (0,0)             # <<<<<<<<<<<<<<
 *         self.nx = 0
 *         self.ny = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_newsize, __pyx_tuple_) < 0) __PYX_ERR(0, 48, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":49
 *         self.size = screen_res
 *         self.newsize= (0,0)
 *         self.nx = 0             # <<<<<<<<<<<<<<
 *         self.ny = 0
 *         self.centre = (screen_res[0]/2,screen_res[1]/2) #x,y
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nx, __pyx_int_0) < 0) __PYX_ERR(0, 49, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":50
 *         self.newsize= (0,0)
 *         self.nx = 0
 *         self.ny = 0             # <<<<<<<<<<<<<<
 *         self.centre = (screen_res[0]/2,screen_res[1]/2) #x,y
 *         self.pix_rat_x = 2/(screen_res[0])
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ny, __pyx_int_0) < 0) __PYX_ERR(0, 50, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":51
 *         self.nx = 0
 *         self.ny = 0
 *         self.centre = (screen_res[0]/2,screen_res[1]/2) #x,y             # <<<<<<<<<<<<<<
 *         self.pix_rat_x = 2/(screen_res[0])
 *         self.pix_rat_y = 2/(screen_res[1])
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_screen_res, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_int_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_screen_res, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_int_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_centre, __pyx_t_1) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":52
 *         self.ny = 0
 *         self.centre = (screen_res[0]/2,screen_res[1]/2) #x,y
 *         self.pix_rat_x = 2/(screen_res[0])             # <<<<<<<<<<<<<<
 *         self.pix_rat_y = 2/(screen_res[1])
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_screen_res, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_pix_rat_x, __pyx_t_3) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":53
 *         self.centre = (screen_res[0]/2,screen_res[1]/2) #x,y
 *         self.pix_rat_x = 2/(screen_res[0])
 *         self.pix_rat_y = 2/(screen_res[1])             # <<<<<<<<<<<<<<
 * 
 *     def _resize(self):
 */
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_screen_res, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_pix_rat_y, __pyx_t_1) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":46
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         self.size = screen_res
 *         self.newsize= (0,0)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":55
 *         self.pix_rat_y = 2/(screen_res[1])
 * 
 *     def _resize(self):             # <<<<<<<<<<<<<<
 *         self.nx = self.orgsize[0]-self.newsize[0]
 *         self.ny = self.orgsize[1]-self.newsize[1]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_3_resize(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_3_resize = {"_resize", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_3_resize, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_3_resize(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_resize (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_2_resize(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_2_resize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_resize", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":56
 * 
 *     def _resize(self):
 *         self.nx = self.orgsize[0]-self.newsize[0]             # <<<<<<<<<<<<<<
 *         self.ny = self.orgsize[1]-self.newsize[1]
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_orgsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_newsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_nx, __pyx_t_1) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":57
 *     def _resize(self):
 *         self.nx = self.orgsize[0]-self.newsize[0]
 *         self.ny = self.orgsize[1]-self.newsize[1]             # <<<<<<<<<<<<<<
 * 
 *     def resize(self,newsize,orgsize):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_orgsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_newsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ny, __pyx_t_1) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":55
 *         self.pix_rat_y = 2/(screen_res[1])
 * 
 *     def _resize(self):             # <<<<<<<<<<<<<<
 *         self.nx = self.orgsize[0]-self.newsize[0]
 *         self.ny = self.orgsize[1]-self.newsize[1]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._resize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":59
 *         self.ny = self.orgsize[1]-self.newsize[1]
 * 
 *     def resize(self,newsize,orgsize):             # <<<<<<<<<<<<<<
 *         self.newsize = newsize
 *         self.orgsize = orgsize
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_5resize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_5resize = {"resize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_5resize, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_5resize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_newsize = 0;
  PyObject *__pyx_v_orgsize = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("resize (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_newsize,&__pyx_n_s_orgsize,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_newsize,&__pyx_n_s_orgsize,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_newsize)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("resize", 1, 3, 3, 1); __PYX_ERR(0, 59, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_orgsize)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 59, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("resize", 1, 3, 3, 2); __PYX_ERR(0, 59, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "resize") < 0)) __PYX_ERR(0, 59, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_newsize = values[1];
    __pyx_v_orgsize = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("resize", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 59, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.resize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_4resize(__pyx_self, __pyx_v_self, __pyx_v_newsize, __pyx_v_orgsize);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_4resize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_newsize, PyObject *__pyx_v_orgsize) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("resize", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":60
 * 
 *     def resize(self,newsize,orgsize):
 *         self.newsize = newsize             # <<<<<<<<<<<<<<
 *         self.orgsize = orgsize
 *         self._resize()
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_newsize, __pyx_v_newsize) < 0) __PYX_ERR(0, 60, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":61
 *     def resize(self,newsize,orgsize):
 *         self.newsize = newsize
 *         self.orgsize = orgsize             # <<<<<<<<<<<<<<
 *         self._resize()
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_orgsize, __pyx_v_orgsize) < 0) __PYX_ERR(0, 61, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":62
 *         self.newsize = newsize
 *         self.orgsize = orgsize
 *         self._resize()             # <<<<<<<<<<<<<<
 * 
 *     def _cords_to_ratio(self,x,y):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_resize); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 62, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":59
 *         self.ny = self.orgsize[1]-self.newsize[1]
 * 
 *     def resize(self,newsize,orgsize):             # <<<<<<<<<<<<<<
 *         self.newsize = newsize
 *         self.orgsize = orgsize
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.resize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":64
 *         self._resize()
 * 
 *     def _cords_to_ratio(self,x,y):             # <<<<<<<<<<<<<<
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_7_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_7_cords_to_ratio = {"_cords_to_ratio", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_7_cords_to_ratio, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_7_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_cords_to_ratio (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 64, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 64, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 3, 3, 1); __PYX_ERR(0, 64, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 64, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 3, 3, 2); __PYX_ERR(0, 64, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_cords_to_ratio") < 0)) __PYX_ERR(0, 64, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 64, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_6_cords_to_ratio(__pyx_self, __pyx_v_self, __pyx_v_x, __pyx_v_y);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_6_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y) {
  PyObject *__pyx_v_xr = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_cords_to_ratio", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":65
 * 
 *     def _cords_to_ratio(self,x,y):
 *         xr = x*self.pix_rat_x             # <<<<<<<<<<<<<<
 *         yr = y*self.pix_rat_y
 *         if xr > 1:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_pix_rat_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_xr = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":66
 *     def _cords_to_ratio(self,x,y):
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y             # <<<<<<<<<<<<<<
 *         if xr > 1:
 *             xr = xr-1
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_pix_rat_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_yr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":67
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 *         if xr > 1:             # <<<<<<<<<<<<<<
 *             xr = xr-1
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_xr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 67, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":68
 *         yr = y*self.pix_rat_y
 *         if xr > 1:
 *             xr = xr-1             # <<<<<<<<<<<<<<
 *         else:
 *             xr = xr-1
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 68, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":67
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 *         if xr > 1:             # <<<<<<<<<<<<<<
 *             xr = xr-1
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":70
 *             xr = xr-1
 *         else:
 *             xr = xr-1             # <<<<<<<<<<<<<<
 *         if yr > 1:
 *             yr = 1-yr
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":71
 *         else:
 *             xr = xr-1
 *         if yr > 1:             # <<<<<<<<<<<<<<
 *             yr = 1-yr
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_yr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 71, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":72
 *             xr = xr-1
 *         if yr > 1:
 *             yr = 1-yr             # <<<<<<<<<<<<<<
 *         else:
 *             yr = 1-yr
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 72, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":71
 *         else:
 *             xr = xr-1
 *         if yr > 1:             # <<<<<<<<<<<<<<
 *             yr = 1-yr
 *         else:
 */
    goto __pyx_L4;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":74
 *             yr = 1-yr
 *         else:
 *             yr = 1-yr             # <<<<<<<<<<<<<<
 *         return (xr,yr)
 * 
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 74, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":75
 *         else:
 *             yr = 1-yr
 *         return (xr,yr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_xr);
  __Pyx_GIVEREF(__pyx_v_xr);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_xr);
  __Pyx_INCREF(__pyx_v_yr);
  __Pyx_GIVEREF(__pyx_v_yr);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_yr);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":64
 *         self._resize()
 * 
 *     def _cords_to_ratio(self,x,y):             # <<<<<<<<<<<<<<
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xr);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":78
 * 
 * 
 *     def _texture_cords_to_ratio(self,x,y,size):             # <<<<<<<<<<<<<<
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_9_texture_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_9_texture_cords_to_ratio = {"_texture_cords_to_ratio", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_9_texture_cords_to_ratio, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_9_texture_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_size = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_texture_cords_to_ratio (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_size,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_size,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 4, 4, 1); __PYX_ERR(0, 78, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 4, 4, 2); __PYX_ERR(0, 78, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 78, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 4, 4, 3); __PYX_ERR(0, 78, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_texture_cords_to_ratio") < 0)) __PYX_ERR(0, 78, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
    __pyx_v_size = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 78, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._texture_cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_8_texture_cords_to_ratio(__pyx_self, __pyx_v_self, __pyx_v_x, __pyx_v_y, __pyx_v_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_8_texture_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_size) {
  PyObject *__pyx_v_xr = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_texture_cords_to_ratio", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":79
 * 
 *     def _texture_cords_to_ratio(self,x,y,size):
 *         xr = x*(2/size[0])             # <<<<<<<<<<<<<<
 *         yr = y*(2/size[1])
 *         if xr > 1:
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_size, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_x, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_xr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":80
 *     def _texture_cords_to_ratio(self,x,y,size):
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])             # <<<<<<<<<<<<<<
 *         if xr > 1:
 *             xr = xr-1
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_size, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_yr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":81
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 *         if xr > 1:             # <<<<<<<<<<<<<<
 *             xr = xr-1
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_xr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 81, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":82
 *         yr = y*(2/size[1])
 *         if xr > 1:
 *             xr = xr-1             # <<<<<<<<<<<<<<
 *         else:
 *             xr = -(1-xr)
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 82, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":81
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 *         if xr > 1:             # <<<<<<<<<<<<<<
 *             xr = xr-1
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":84
 *             xr = xr-1
 *         else:
 *             xr = -(1-xr)             # <<<<<<<<<<<<<<
 *         if yr > 1:
 *             yr = (1-yr)
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_xr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 84, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_2);
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":85
 *         else:
 *             xr = -(1-xr)
 *         if yr > 1:             # <<<<<<<<<<<<<<
 *             yr = (1-yr)
 *         else:
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_yr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 85, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":86
 *             xr = -(1-xr)
 *         if yr > 1:
 *             yr = (1-yr)             # <<<<<<<<<<<<<<
 *         else:
 *             yr = -(yr-1)
 */
    __pyx_t_2 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":85
 *         else:
 *             xr = -(1-xr)
 *         if yr > 1:             # <<<<<<<<<<<<<<
 *             yr = (1-yr)
 *         else:
 */
    goto __pyx_L4;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":88
 *             yr = (1-yr)
 *         else:
 *             yr = -(yr-1)             # <<<<<<<<<<<<<<
 *         return (xr,yr)
 * 
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_v_yr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 88, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":89
 *         else:
 *             yr = -(yr-1)
 *         return (xr,yr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_xr);
  __Pyx_GIVEREF(__pyx_v_xr);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_xr);
  __Pyx_INCREF(__pyx_v_yr);
  __Pyx_GIVEREF(__pyx_v_yr);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_yr);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":78
 * 
 * 
 *     def _texture_cords_to_ratio(self,x,y,size):             # <<<<<<<<<<<<<<
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._texture_cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xr);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":93
 * 
 * 
 *     def _tex_arrayn_translate(self,n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_36__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_n);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_n);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_n);
  __Pyx_INCREF(((PyObject *)__pyx_int_0));
  __Pyx_GIVEREF(((PyObject *)__pyx_int_0));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_int_0));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_txs);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_txs);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self)->__pyx_arg_txs);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_11_tex_arrayn_translate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_10_tex_arrayn_translate, " n = x,y  s = size  txs - texturesize  ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_11_tex_arrayn_translate = {"_tex_arrayn_translate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_11_tex_arrayn_translate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_10_tex_arrayn_translate};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_11_tex_arrayn_translate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_s = 0;
  PyObject *__pyx_v_txs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_tex_arrayn_translate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_n,&__pyx_n_s_s,&__pyx_n_s_txs,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_n,&__pyx_n_s_s,&__pyx_n_s_txs,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    __pyx_defaults *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_n;
    values[2] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[3] = __pyx_dynamic_args->__pyx_arg_txs;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_s);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_txs);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 93, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_tex_arrayn_translate") < 0)) __PYX_ERR(0, 93, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_n = values[1];
    __pyx_v_s = values[2];
    __pyx_v_txs = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_tex_arrayn_translate", 0, 1, 4, __pyx_nargs); __PYX_ERR(0, 93, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._tex_arrayn_translate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_10_tex_arrayn_translate(__pyx_self, __pyx_v_self, __pyx_v_n, __pyx_v_s, __pyx_v_txs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_10_tex_arrayn_translate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_n, PyObject *__pyx_v_s, PyObject *__pyx_v_txs) {
  PyObject *__pyx_v_x1 = NULL;
  PyObject *__pyx_v_y1 = NULL;
  PyObject *__pyx_v_x2 = NULL;
  PyObject *__pyx_v_y2 = NULL;
  PyObject *__pyx_v__c1 = NULL;
  PyObject *__pyx_v__c2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_tex_arrayn_translate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":95
 *     def _tex_arrayn_translate(self,n=[0,0],s=0,txs=[0,0]):
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s             # <<<<<<<<<<<<<<
 *         y1 = (n[1]*s)-s
 *         x2 = (n[0]*s)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_x1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":96
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s
 *         y1 = (n[1]*s)-s             # <<<<<<<<<<<<<<
 *         x2 = (n[0]*s)
 *         y2 = (n[1]*s)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":97
 *         x1 = (n[0]*s)-s
 *         y1 = (n[1]*s)-s
 *         x2 = (n[0]*s)             # <<<<<<<<<<<<<<
 *         y2 = (n[1]*s)
 *         _c1 =self._texture_cords_to_ratio(x1,y1,txs)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x2 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":98
 *         y1 = (n[1]*s)-s
 *         x2 = (n[0]*s)
 *         y2 = (n[1]*s)             # <<<<<<<<<<<<<<
 *         _c1 =self._texture_cords_to_ratio(x1,y1,txs)
 *         _c2 =self._texture_cords_to_ratio(x2,y2,txs)
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_n, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":99
 *         x2 = (n[0]*s)
 *         y2 = (n[1]*s)
 *         _c1 =self._texture_cords_to_ratio(x1,y1,txs)             # <<<<<<<<<<<<<<
 *         _c2 =self._texture_cords_to_ratio(x2,y2,txs)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_texture_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_x1, __pyx_v_y1, __pyx_v_txs};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v__c1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":100
 *         y2 = (n[1]*s)
 *         _c1 =self._texture_cords_to_ratio(x1,y1,txs)
 *         _c2 =self._texture_cords_to_ratio(x2,y2,txs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_texture_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_x2, __pyx_v_y2, __pyx_v_txs};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 100, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v__c2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":103
 * 
 * 
 *         return _c1,_c2             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v__c1);
  __Pyx_GIVEREF(__pyx_v__c1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__c1);
  __Pyx_INCREF(__pyx_v__c2);
  __Pyx_GIVEREF(__pyx_v__c2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v__c2);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":93
 * 
 * 
 *     def _tex_arrayn_translate(self,n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw._tex_arrayn_translate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x1);
  __Pyx_XDECREF(__pyx_v_y1);
  __Pyx_XDECREF(__pyx_v_x2);
  __Pyx_XDECREF(__pyx_v_y2);
  __Pyx_XDECREF(__pyx_v__c1);
  __Pyx_XDECREF(__pyx_v__c2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":108
 * 
 * 
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_38__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults1, __pyx_self)->__pyx_arg_cords);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults1, __pyx_self)->__pyx_arg_cords);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults1, __pyx_self)->__pyx_arg_cords);
  __Pyx_INCREF(((PyObject*)__pyx_empty_tuple));
  __Pyx_GIVEREF(((PyObject*)__pyx_empty_tuple));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)__pyx_empty_tuple));
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_None));
  __Pyx_INCREF(((PyObject *)__pyx_int_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_int_1));
  PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)__pyx_int_1));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_13draw_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_13draw_quad = {"draw_quad", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_13draw_quad, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_13draw_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  CYTHON_UNUSED PyObject *__pyx_v_rotate = 0;
  PyObject *__pyx_v_alpha = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_quad (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_rotate,&__pyx_n_s_alpha,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_rotate,&__pyx_n_s_alpha,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    __pyx_defaults1 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults1, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_cords;
    values[2] = ((PyObject *)((PyObject*)__pyx_empty_tuple));
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = ((PyObject *)((PyObject *)__pyx_int_1));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rotate);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_alpha);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_quad") < 0)) __PYX_ERR(0, 108, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_rotate = values[3];
    __pyx_v_alpha = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_quad", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 108, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_12draw_quad(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color, __pyx_v_rotate, __pyx_v_alpha);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_12draw_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, CYTHON_UNUSED PyObject *__pyx_v_rotate, PyObject *__pyx_v_alpha) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_quad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":109
 * 
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":110
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glColor4f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_2, __pyx_t_6, __pyx_v_alpha};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 4+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":111
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_6, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":112
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)             # <<<<<<<<<<<<<<
 * 
 *         GL.glVertex2f(tr1[0], tr1[1])
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nx); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ny); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyNumber_Subtract(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_3, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":114
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 * 
 *         GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":115
 * 
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":116
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         GL.glEnd()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_3, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":117
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":118
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":108
 * 
 * 
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":123
 * 
 * 
 *     def draw_quad_texture(self,cords=[],color=(),textr=None,NOENABLE=False):             # <<<<<<<<<<<<<<
 *         if NOENABLE is True:
 *             pass
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_40__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_self)->__pyx_arg_cords);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_self)->__pyx_arg_cords);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_self)->__pyx_arg_cords);
  __Pyx_INCREF(((PyObject*)__pyx_empty_tuple));
  __Pyx_GIVEREF(((PyObject*)__pyx_empty_tuple));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)__pyx_empty_tuple));
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_None));
  __Pyx_INCREF(((PyObject *)Py_False));
  __Pyx_GIVEREF(((PyObject *)Py_False));
  PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)Py_False));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_15draw_quad_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_15draw_quad_texture = {"draw_quad_texture", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_15draw_quad_texture, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_15draw_quad_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_textr = 0;
  PyObject *__pyx_v_NOENABLE = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_quad_texture (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_textr,&__pyx_n_s_NOENABLE,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_textr,&__pyx_n_s_NOENABLE,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    __pyx_defaults2 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_cords;
    values[2] = ((PyObject *)((PyObject*)__pyx_empty_tuple));
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = ((PyObject *)((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_textr);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_NOENABLE);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 123, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_quad_texture") < 0)) __PYX_ERR(0, 123, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_textr = values[3];
    __pyx_v_NOENABLE = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_quad_texture", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 123, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_14draw_quad_texture(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color, __pyx_v_textr, __pyx_v_NOENABLE);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_14draw_quad_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_textr, PyObject *__pyx_v_NOENABLE) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_quad_texture", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":124
 * 
 *     def draw_quad_texture(self,cords=[],color=(),textr=None,NOENABLE=False):
 *         if NOENABLE is True:             # <<<<<<<<<<<<<<
 *             pass
 *         else:
 */
  __pyx_t_1 = (__pyx_v_NOENABLE == Py_True);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":127
 *             pass
 *         else:
 *             GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *             GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *             GL.glColor3f(color[0],color[1],color[2])
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_6};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 127, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":128
 *         else:
 *             GL.glEnable(GL.GL_TEXTURE_2D)
 *             GL.glBindTexture(GL.GL_TEXTURE_2D, textr)             # <<<<<<<<<<<<<<
 *             GL.glColor3f(color[0],color[1],color[2])
 *             GL.glBegin(GL.GL_QUADS)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_4, __pyx_v_textr};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 128, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":129
 *             GL.glEnable(GL.GL_TEXTURE_2D)
 *             GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *             GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *             GL.glBegin(GL.GL_QUADS)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_9, __pyx_t_6, __pyx_t_5, __pyx_t_8};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 129, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":130
 *             GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *             GL.glColor3f(color[0],color[1],color[2])
 *             GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 * 
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_5};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":132
 *             GL.glBegin(GL.GL_QUADS)
 * 
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_5, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __pyx_v_tr1 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":133
 * 
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ny); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = PyNumber_Subtract(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_9};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __pyx_v_tr2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":136
 * 
 * 
 *         GL.glTexCoord2f(1, 1)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0], tr2[1])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":137
 * 
 *         GL.glTexCoord2f(1, 1)
 *         GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 * 
 *         GL.glTexCoord2f(0, 1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_8, __pyx_t_6};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":139
 *         GL.glVertex2f(tr2[0], tr2[1])
 * 
 *         GL.glTexCoord2f(0, 1)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr2[1])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":140
 * 
 *         GL.glTexCoord2f(0, 1)
 *         GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 * 
 *         GL.glTexCoord2f(0, 0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_9, __pyx_t_8};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":142
 *         GL.glVertex2f(tr1[0],tr2[1])
 * 
 *         GL.glTexCoord2f(0, 0)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glTexCoord2f(1, 0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":143
 * 
 *         GL.glTexCoord2f(0, 0)
 *         GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glTexCoord2f(1, 0)
 *         GL.glVertex2f(tr2[0],tr1[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_9};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":144
 *         GL.glTexCoord2f(0, 0)
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glTexCoord2f(1, 0)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0],tr1[1])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":145
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glTexCoord2f(1, 0)
 *         GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_8, __pyx_t_6};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":149
 * 
 * 
 *         if NOENABLE is True:             # <<<<<<<<<<<<<<
 *             pass
 *         else:
 */
  __pyx_t_2 = (__pyx_v_NOENABLE == Py_True);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {
    goto __pyx_L4;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":152
 *             pass
 *         else:
 *             GL.glEnd()             # <<<<<<<<<<<<<<
 *             GL.glDisable(GL.GL_TEXTURE_2D)
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_9, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":153
 *         else:
 *             GL.glEnd()
 *             GL.glDisable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glDisable); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_8};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 153, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L4:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":123
 * 
 * 
 *     def draw_quad_texture(self,cords=[],color=(),textr=None,NOENABLE=False):             # <<<<<<<<<<<<<<
 *         if NOENABLE is True:
 *             pass
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":156
 * 
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_17draw_point(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_17draw_point = {"draw_point", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_17draw_point, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_17draw_point(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_point (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)((PyObject*)__pyx_tuple__2));
    values[2] = ((PyObject *)((PyObject*)__pyx_tuple__5));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 156, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_point") < 0)) __PYX_ERR(0, 156, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_point", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 156, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_16draw_point(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_16draw_point(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_point", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":157
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":158
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(color[0],color[1],color[2])
 *         GL.glVertex2f(tr1[0],tr1[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_POINTS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 158, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":159
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr1[1])
 *         GL.glEnd()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_4, __pyx_t_2, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":160
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         GL.glVertex2f(tr1[0],tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 *     def draw_points():
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_3, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":161
 *         GL.glColor3f(color[0],color[1],color[2])
 *         GL.glVertex2f(tr1[0],tr1[1])
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 *     def draw_points():
 *         pass#DFPASS
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":156
 * 
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_point", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":162
 *         GL.glVertex2f(tr1[0],tr1[1])
 *         GL.glEnd()
 *     def draw_points():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_19draw_points(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_19draw_points = {"draw_points", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_19draw_points, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_19draw_points(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_points (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_18draw_points(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_18draw_points(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_points", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":164
 *     def draw_points():
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)             # <<<<<<<<<<<<<<
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_42__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults3, __pyx_self)->__pyx_arg_cords);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults3, __pyx_self)->__pyx_arg_cords);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults3, __pyx_self)->__pyx_arg_cords);
  __Pyx_INCREF(((PyObject*)__pyx_empty_tuple));
  __Pyx_GIVEREF(((PyObject*)__pyx_empty_tuple));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)__pyx_empty_tuple));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_21draw_line(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_21draw_line = {"draw_line", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_21draw_line, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_21draw_line(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_line (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults3 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults3, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_cords;
    values[2] = ((PyObject *)((PyObject*)__pyx_empty_tuple));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 164, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 164, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 164, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_line") < 0)) __PYX_ERR(0, 164, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_line", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 164, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_20draw_line(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_20draw_line(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_pixels = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_line", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":165
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))             # <<<<<<<<<<<<<<
 *         pixels = []
 *         x=0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_bresenham); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_8, 4+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":166
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []             # <<<<<<<<<<<<<<
 *         x=0
 *         for i in tr1:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_pixels = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":167
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []
 *         x=0             # <<<<<<<<<<<<<<
 *         for i in tr1:
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_x = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":168
 *         pixels = []
 *         x=0
 *         for i in tr1:             # <<<<<<<<<<<<<<
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))
 *             x+=1
 */
  if (likely(PyList_CheckExact(__pyx_v_tr1)) || PyTuple_CheckExact(__pyx_v_tr1)) {
    __pyx_t_1 = __pyx_v_tr1; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_tr1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 168, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 168, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 168, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_10(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 168, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":169
 *         x=0
 *         for i in tr1:
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))             # <<<<<<<<<<<<<<
 *             x+=1
 *         GL.glBegin(GL.GL_POINTS)
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 169, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_pixels, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":170
 *         for i in tr1:
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))
 *             x+=1             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])
 */
    __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":168
 *         pixels = []
 *         x=0
 *         for i in tr1:             # <<<<<<<<<<<<<<
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))
 *             x+=1
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":171
 *             pixels.append(self._cords_to_ratio(i[0],i[1]))
 *             x+=1
 *         GL.glBegin(GL.GL_POINTS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(color[0],color[1],color[2])
 *         for i in pixels:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_POINTS); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 171, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":172
 *             x+=1
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *         for i in pixels:
 *             GL.glVertex2f(i[0],i[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_7, __pyx_t_2, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":173
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         for i in pixels:             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()
 */
  __pyx_t_1 = __pyx_v_pixels; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_5); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 173, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 173, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":174
 *         GL.glColor3f(color[0],color[1],color[2])
 *         for i in pixels:
 *             GL.glVertex2f(i[0],i[1])             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 *     def draw_lines():
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 174, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_7};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":173
 *         GL.glBegin(GL.GL_POINTS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         for i in pixels:             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":175
 *         for i in pixels:
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 *     def draw_lines():
 *         pass#DFPASS
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 175, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":164
 *     def draw_points():
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)             # <<<<<<<<<<<<<<
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_pixels);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":176
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()
 *     def draw_lines():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_23draw_lines(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_23draw_lines = {"draw_lines", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_23draw_lines, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_23draw_lines(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_lines (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_22draw_lines(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_22draw_lines(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_lines", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":179
 *         pass#DFPASS
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):             # <<<<<<<<<<<<<<
 *         color=color
 *         textr=font_texture
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_44__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_cords);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_cords);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_cords);
  __Pyx_INCREF(((PyObject*)__pyx_empty_tuple));
  __Pyx_GIVEREF(((PyObject*)__pyx_empty_tuple));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)__pyx_empty_tuple));
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_font_letters);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_font_letters);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self)->__pyx_arg_font_letters);
  __Pyx_INCREF(((PyObject*)__pyx_n_s_abcdefgh));
  __Pyx_GIVEREF(((PyObject*)__pyx_n_s_abcdefgh));
  PyTuple_SET_ITEM(__pyx_t_1, 4, ((PyObject*)__pyx_n_s_abcdefgh));
  __Pyx_INCREF(((PyObject*)__pyx_tuple__6));
  __Pyx_GIVEREF(((PyObject*)__pyx_tuple__6));
  PyTuple_SET_ITEM(__pyx_t_1, 5, ((PyObject*)__pyx_tuple__6));
  __Pyx_INCREF(((PyObject*)__pyx_tuple__7));
  __Pyx_GIVEREF(((PyObject*)__pyx_tuple__7));
  PyTuple_SET_ITEM(__pyx_t_1, 6, ((PyObject*)__pyx_tuple__7));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_25draw_text(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_25draw_text = {"draw_text", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_25draw_text, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_25draw_text(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_font_texture = 0;
  PyObject *__pyx_v_font_letters = 0;
  PyObject *__pyx_v_text = 0;
  PyObject *__pyx_v_config = 0;
  CYTHON_UNUSED PyObject *__pyx_v_font_config = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_text (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_font_texture,&__pyx_n_s_font_letters,&__pyx_n_s_text,&__pyx_n_s_config,&__pyx_n_s_font_config,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_font_texture,&__pyx_n_s_font_letters,&__pyx_n_s_text,&__pyx_n_s_config,&__pyx_n_s_font_config,0};
    #endif
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    __pyx_defaults4 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_cords;
    values[2] = ((PyObject *)((PyObject*)__pyx_empty_tuple));
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = __pyx_dynamic_args->__pyx_arg_font_letters;
    values[5] = ((PyObject *)((PyObject*)__pyx_n_s_abcdefgh));
    values[6] = ((PyObject *)((PyObject*)__pyx_tuple__6));
    values[7] = ((PyObject *)((PyObject*)__pyx_tuple__7));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_FASTCALL(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font_texture);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font_letters);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_config);
          if (value) { values[6] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font_config);
          if (value) { values[7] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_text") < 0)) __PYX_ERR(0, 179, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_FASTCALL(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_font_texture = values[3];
    __pyx_v_font_letters = values[4];
    __pyx_v_text = values[5];
    __pyx_v_config = values[6];
    __pyx_v_font_config = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_text", 0, 1, 8, __pyx_nargs); __PYX_ERR(0, 179, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_24draw_text(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color, __pyx_v_font_texture, __pyx_v_font_letters, __pyx_v_text, __pyx_v_config, __pyx_v_font_config);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_24draw_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_font_texture, PyObject *__pyx_v_font_letters, PyObject *__pyx_v_text, PyObject *__pyx_v_config, CYTHON_UNUSED PyObject *__pyx_v_font_config) {
  PyObject *__pyx_v_textr = NULL;
  PyObject *__pyx_v_spacing = NULL;
  PyObject *__pyx_v_spacing_addx = NULL;
  PyObject *__pyx_v_spacing_addy = NULL;
  PyObject *__pyx_v_size_x = NULL;
  PyObject *__pyx_v_size_y = NULL;
  long __pyx_v_r;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_spacing_y = NULL;
  long __pyx_v_add_boldnext;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_l = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_ls = NULL;
  PyObject *__pyx_v_cords_ = NULL;
  PyObject *__pyx_v_textn = NULL;
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_v_txn = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_text", 0);
  __Pyx_INCREF(__pyx_v_color);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":180
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):
 *         color=color             # <<<<<<<<<<<<<<
 *         textr=font_texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */
  __Pyx_INCREF(__pyx_v_color);
  __Pyx_DECREF_SET(__pyx_v_color, __pyx_v_color);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":181
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):
 *         color=color
 *         textr=font_texture             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 */
  __Pyx_INCREF(__pyx_v_font_texture);
  __pyx_v_textr = __pyx_v_font_texture;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":182
 *         color=color
 *         textr=font_texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":183
 *         textr=font_texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_2, __pyx_v_textr};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":184
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(color[0],color[1],color[2])
 *         spacing = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":185
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *         spacing = 0
 *         spacing_addx=10
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_2, __pyx_t_4, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 185, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":186
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         spacing = 0             # <<<<<<<<<<<<<<
 *         spacing_addx=10
 *         spacing_addy=16
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_spacing = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":187
 *         GL.glColor3f(color[0],color[1],color[2])
 *         spacing = 0
 *         spacing_addx=10             # <<<<<<<<<<<<<<
 *         spacing_addy=16
 *         size_x = 16
 */
  __Pyx_INCREF(__pyx_int_10);
  __pyx_v_spacing_addx = __pyx_int_10;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":188
 *         spacing = 0
 *         spacing_addx=10
 *         spacing_addy=16             # <<<<<<<<<<<<<<
 *         size_x = 16
 *         size_y = 16
 */
  __Pyx_INCREF(__pyx_int_16);
  __pyx_v_spacing_addy = __pyx_int_16;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":189
 *         spacing_addx=10
 *         spacing_addy=16
 *         size_x = 16             # <<<<<<<<<<<<<<
 *         size_y = 16
 *         r=0
 */
  __Pyx_INCREF(__pyx_int_16);
  __pyx_v_size_x = __pyx_int_16;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":190
 *         spacing_addy=16
 *         size_x = 16
 *         size_y = 16             # <<<<<<<<<<<<<<
 *         r=0
 *         y=0
 */
  __Pyx_INCREF(__pyx_int_16);
  __pyx_v_size_y = __pyx_int_16;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":191
 *         size_x = 16
 *         size_y = 16
 *         r=0             # <<<<<<<<<<<<<<
 *         y=0
 *         spacing_y=0
 */
  __pyx_v_r = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":192
 *         size_y = 16
 *         r=0
 *         y=0             # <<<<<<<<<<<<<<
 *         spacing_y=0
 *         add_boldnext=0
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_y = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":193
 *         r=0
 *         y=0
 *         spacing_y=0             # <<<<<<<<<<<<<<
 *         add_boldnext=0
 *         for i in text:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_spacing_y = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":194
 *         y=0
 *         spacing_y=0
 *         add_boldnext=0             # <<<<<<<<<<<<<<
 *         for i in text:
 *             yr=0
 */
  __pyx_v_add_boldnext = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":195
 *         spacing_y=0
 *         add_boldnext=0
 *         for i in text:             # <<<<<<<<<<<<<<
 *             yr=0
 *             x=0
 */
  if (likely(PyList_CheckExact(__pyx_v_text)) || PyTuple_CheckExact(__pyx_v_text)) {
    __pyx_t_1 = __pyx_v_text; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 195, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 195, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 195, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 195, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 195, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_9(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 195, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":196
 *         add_boldnext=0
 *         for i in text:
 *             yr=0             # <<<<<<<<<<<<<<
 *             x=0
 *             l=i
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_yr, __pyx_int_0);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":197
 *         for i in text:
 *             yr=0
 *             x=0             # <<<<<<<<<<<<<<
 *             l=i
 *             if i == '/' or r == 1:
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_int_0);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":198
 *             yr=0
 *             x=0
 *             l=i             # <<<<<<<<<<<<<<
 *             if i == '/' or r == 1:
 *                 r=1
 */
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_XDECREF_SET(__pyx_v_l, __pyx_v_i);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":199
 *             x=0
 *             l=i
 *             if i == '/' or r == 1:             # <<<<<<<<<<<<<<
 *                 r=1
 *                 if i == 'n':
 */
    __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_kp_s__8, Py_EQ)); if (unlikely(__pyx_t_11 < 0)) __PYX_ERR(0, 199, __pyx_L1_error)
    if (!__pyx_t_11) {
    } else {
      __pyx_t_10 = __pyx_t_11;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_11 = ((__pyx_v_r == 1) != 0);
    __pyx_t_10 = __pyx_t_11;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_10) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":200
 *             l=i
 *             if i == '/' or r == 1:
 *                 r=1             # <<<<<<<<<<<<<<
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy
 */
      __pyx_v_r = 1;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":201
 *             if i == '/' or r == 1:
 *                 r=1
 *                 if i == 'n':             # <<<<<<<<<<<<<<
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 */
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_n_s_n, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 201, __pyx_L1_error)
      if (__pyx_t_10) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":202
 *                 r=1
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy             # <<<<<<<<<<<<<<
 *                     spacing=0
 *                     r=0
 */
        __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_spacing_y, __pyx_v_spacing_addy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 202, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_spacing_y, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":203
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy
 *                     spacing=0             # <<<<<<<<<<<<<<
 *                     r=0
 *                 if i == 'b':
 */
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_DECREF_SET(__pyx_v_spacing, __pyx_int_0);

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":204
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 *                     r=0             # <<<<<<<<<<<<<<
 *                 if i == 'b':
 *                     add_boldnext = 1
 */
        __pyx_v_r = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":201
 *             if i == '/' or r == 1:
 *                 r=1
 *                 if i == 'n':             # <<<<<<<<<<<<<<
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":205
 *                     spacing=0
 *                     r=0
 *                 if i == 'b':             # <<<<<<<<<<<<<<
 *                     add_boldnext = 1
 *                     r=0
 */
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_n_s_b, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 205, __pyx_L1_error)
      if (__pyx_t_10) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":206
 *                     r=0
 *                 if i == 'b':
 *                     add_boldnext = 1             # <<<<<<<<<<<<<<
 *                     r=0
 *                 else:pass
 */
        __pyx_v_add_boldnext = 1;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":207
 *                 if i == 'b':
 *                     add_boldnext = 1
 *                     r=0             # <<<<<<<<<<<<<<
 *                 else:pass
 *             else:
 */
        __pyx_v_r = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":205
 *                     spacing=0
 *                     r=0
 *                 if i == 'b':             # <<<<<<<<<<<<<<
 *                     add_boldnext = 1
 *                     r=0
 */
        goto __pyx_L9;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":208
 *                     add_boldnext = 1
 *                     r=0
 *                 else:pass             # <<<<<<<<<<<<<<
 *             else:
 *                 if add_boldnext == 1:
 */
      /*else*/ {
      }
      __pyx_L9:;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":199
 *             x=0
 *             l=i
 *             if i == '/' or r == 1:             # <<<<<<<<<<<<<<
 *                 r=1
 *                 if i == 'n':
 */
      goto __pyx_L5;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":210
 *                 else:pass
 *             else:
 *                 if add_boldnext == 1:             # <<<<<<<<<<<<<<
 *                     l='[b]'+l
 *                     add_boldnext=0
 */
    /*else*/ {
      __pyx_t_10 = ((__pyx_v_add_boldnext == 1) != 0);
      if (__pyx_t_10) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":211
 *             else:
 *                 if add_boldnext == 1:
 *                     l='[b]'+l             # <<<<<<<<<<<<<<
 *                     add_boldnext=0
 *                 for ls in font_letters:
 */
        __pyx_t_3 = PyNumber_Add(__pyx_kp_s_b_2, __pyx_v_l); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 211, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF_SET(__pyx_v_l, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":212
 *                 if add_boldnext == 1:
 *                     l='[b]'+l
 *                     add_boldnext=0             # <<<<<<<<<<<<<<
 *                 for ls in font_letters:
 *                     try:
 */
        __pyx_v_add_boldnext = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":210
 *                 else:pass
 *             else:
 *                 if add_boldnext == 1:             # <<<<<<<<<<<<<<
 *                     l='[b]'+l
 *                     add_boldnext=0
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":213
 *                     l='[b]'+l
 *                     add_boldnext=0
 *                 for ls in font_letters:             # <<<<<<<<<<<<<<
 *                     try:
 *                         x = font_letters[yr].index(l)
 */
      if (likely(PyList_CheckExact(__pyx_v_font_letters)) || PyTuple_CheckExact(__pyx_v_font_letters)) {
        __pyx_t_3 = __pyx_v_font_letters; __Pyx_INCREF(__pyx_t_3); __pyx_t_12 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_12 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_font_letters); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 213, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_13 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 213, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_6); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 213, __pyx_L1_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 213, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_6); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 213, __pyx_L1_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 213, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_13(__pyx_t_3);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 213, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_v_ls, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":214
 *                     add_boldnext=0
 *                 for ls in font_letters:
 *                     try:             # <<<<<<<<<<<<<<
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
          __Pyx_XGOTREF(__pyx_t_14);
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_16);
          /*try:*/ {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":215
 *                 for ls in font_letters:
 *                     try:
 *                         x = font_letters[yr].index(l)             # <<<<<<<<<<<<<<
 *                         y = yr
 *                     except:pass
 */
            __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font_letters, __pyx_v_yr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 215, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 215, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = NULL;
            __pyx_t_5 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_4)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_4);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
                __pyx_t_5 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_l};
              __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 215, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            }
            __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_6);
            __pyx_t_6 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":216
 *                     try:
 *                         x = font_letters[yr].index(l)
 *                         y = yr             # <<<<<<<<<<<<<<
 *                     except:pass
 *                     yr+=1
 */
            __Pyx_INCREF(__pyx_v_yr);
            __Pyx_DECREF_SET(__pyx_v_y, __pyx_v_yr);

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":214
 *                     add_boldnext=0
 *                 for ls in font_letters:
 *                     try:             # <<<<<<<<<<<<<<
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 */
          }
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          goto __pyx_L20_try_end;
          __pyx_L13_error:;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":217
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 *                     except:pass             # <<<<<<<<<<<<<<
 *                     yr+=1
 *                 x=-x
 */
          /*except:*/ {
            __Pyx_ErrRestore(0,0,0);
            goto __pyx_L14_exception_handled;
          }
          __pyx_L14_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_XGIVEREF(__pyx_t_15);
          __Pyx_XGIVEREF(__pyx_t_16);
          __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
          __pyx_L20_try_end:;
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":218
 *                         y = yr
 *                     except:pass
 *                     yr+=1             # <<<<<<<<<<<<<<
 *                 x=-x
 *                 y=-y-1
 */
        __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_yr, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 218, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":213
 *                     l='[b]'+l
 *                     add_boldnext=0
 *                 for ls in font_letters:             # <<<<<<<<<<<<<<
 *                     try:
 *                         x = font_letters[yr].index(l)
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":219
 *                     except:pass
 *                     yr+=1
 *                 x=-x             # <<<<<<<<<<<<<<
 *                 y=-y-1
 *                 spacing+=spacing_addx
 */
      __pyx_t_3 = PyNumber_Negative(__pyx_v_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 219, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":220
 *                     yr+=1
 *                 x=-x
 *                 y=-y-1             # <<<<<<<<<<<<<<
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 */
      __pyx_t_3 = PyNumber_Negative(__pyx_v_y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 220, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":221
 *                 x=-x
 *                 y=-y-1
 *                 spacing+=spacing_addx             # <<<<<<<<<<<<<<
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))
 */
      __pyx_t_6 = PyNumber_InPlaceAdd(__pyx_v_spacing, __pyx_v_spacing_addx); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 221, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_spacing, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":222
 *                 y=-y-1
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]             # <<<<<<<<<<<<<<
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self._cords_to_ratio(cords_[0],cords_[1])
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PyNumber_Add(__pyx_t_6, __pyx_v_spacing); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_v_spacing_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = PyNumber_Add(__pyx_t_6, __pyx_v_size_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyNumber_Add(__pyx_t_4, __pyx_v_spacing); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = PyNumber_Add(__pyx_t_4, __pyx_v_size_y); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(__pyx_t_7, __pyx_v_spacing_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 222, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_3);
      PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_2);
      PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_6);
      PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyList_SET_ITEM(__pyx_t_7, 3, __pyx_t_4);
      __pyx_t_3 = 0;
      __pyx_t_2 = 0;
      __pyx_t_6 = 0;
      __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords_, ((PyObject*)__pyx_t_7));
      __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":223
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))             # <<<<<<<<<<<<<<
 *                 tr1 = self._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self._cords_to_ratio(cords_[2]-self.nx,cords_[3]-self.ny)
 */
      __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      PyList_SET_ITEM(__pyx_t_7, 0, __pyx_v_x);
      __Pyx_INCREF(__pyx_v_y);
      __Pyx_GIVEREF(__pyx_v_y);
      PyList_SET_ITEM(__pyx_t_7, 1, __pyx_v_y);
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_config, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_config, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_config, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
      __pyx_t_6 = 0;
      __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 223, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_3);
      __pyx_t_7 = 0;
      __pyx_t_4 = 0;
      __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_textn, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":224
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self._cords_to_ratio(cords_[0],cords_[1])             # <<<<<<<<<<<<<<
 *                 tr2 = self._cords_to_ratio(cords_[2]-self.nx,cords_[3]-self.ny)
 *                 txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_cords_, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_cords_, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_4, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_tr1, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":225
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self._cords_to_ratio(cords_[2]-self.nx,cords_[3]-self.ny)             # <<<<<<<<<<<<<<
 *                 txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])
 * 
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_cords_, 2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = PyNumber_Subtract(__pyx_t_7, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_GetItemInt_List(__pyx_v_cords_, 3, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ny); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_17 = PyNumber_Subtract(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 225, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_6, __pyx_t_17};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 225, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_tr2, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":226
 *                 tr1 = self._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self._cords_to_ratio(cords_[2]-self.nx,cords_[3]-self.ny)
 *                 txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])             # <<<<<<<<<<<<<<
 * 
 *                 GL.glTexCoord2f(txn[0][0], txn[1][1])
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tex_arrayn_translate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 226, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_17 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 226, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 226, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 226, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_17, __pyx_t_6, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 226, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_txn, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":228
 *                 txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])
 * 
 *                 GL.glTexCoord2f(txn[0][0], txn[1][1])             # <<<<<<<<<<<<<<
 *                 GL.glVertex2f(tr2[0],tr1[1])
 *                 GL.glTexCoord2f(txn[0][0], txn[0][1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_6, __pyx_t_17};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":229
 * 
 *                 GL.glTexCoord2f(txn[0][0], txn[1][1])
 *                 GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *                 GL.glTexCoord2f(txn[0][0], txn[0][1])
 *                 GL.glVertex2f(tr2[0], tr2[1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 229, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_17))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_17);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_17, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_7, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":230
 *                 GL.glTexCoord2f(txn[0][0], txn[1][1])
 *                 GL.glVertex2f(tr2[0],tr1[1])
 *                 GL.glTexCoord2f(txn[0][0], txn[0][1])             # <<<<<<<<<<<<<<
 *                 GL.glVertex2f(tr2[0], tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[0][1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_GL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_17, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_17, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_17, __pyx_t_7, __pyx_t_3};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":231
 *                 GL.glVertex2f(tr2[0],tr1[1])
 *                 GL.glTexCoord2f(txn[0][0], txn[0][1])
 *                 GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *                 GL.glTexCoord2f(txn[1][0], txn[0][1])
 *                 GL.glVertex2f(tr1[0],tr2[1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 231, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 231, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 231, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 231, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_17 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_17, __pyx_t_6, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 231, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":232
 *                 GL.glTexCoord2f(txn[0][0], txn[0][1])
 *                 GL.glVertex2f(tr2[0], tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[0][1])             # <<<<<<<<<<<<<<
 *                 GL.glVertex2f(tr1[0],tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[1][1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 232, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_6, __pyx_t_17};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 232, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":233
 *                 GL.glVertex2f(tr2[0], tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[0][1])
 *                 GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *                 GL.glTexCoord2f(txn[1][0], txn[1][1])
 *                 GL.glVertex2f(tr1[0], tr1[1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_17 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 233, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_17))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_17);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_17);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_17, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_7, __pyx_t_6};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_17, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 233, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":234
 *                 GL.glTexCoord2f(txn[1][0], txn[0][1])
 *                 GL.glVertex2f(tr1[0],tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[1][1])             # <<<<<<<<<<<<<<
 *                 GL.glVertex2f(tr1[0], tr1[1])
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_GL); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_17, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_17, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 234, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __pyx_t_17 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_17, __pyx_t_7, __pyx_t_3};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 234, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":235
 *                 GL.glVertex2f(tr1[0],tr2[1])
 *                 GL.glTexCoord2f(txn[1][0], txn[1][1])
 *                 GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 * 
 *         GL.glEnd()
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_17 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_17)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_17);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_17, __pyx_t_6, __pyx_t_7};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L5:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":195
 *         spacing_y=0
 *         add_boldnext=0
 *         for i in text:             # <<<<<<<<<<<<<<
 *             yr=0
 *             x=0
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":237
 *                 GL.glVertex2f(tr1[0], tr1[1])
 * 
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 *     def draw_quad_texture_array(self,cords=[],color=(),textr=None,textn=([0,0],32,[0,0])): #-------------------TO do logic of dividing textures -1 -1 to 1 1
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 237, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":179
 *         pass#DFPASS
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):             # <<<<<<<<<<<<<<
 *         color=color
 *         textr=font_texture
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_textr);
  __Pyx_XDECREF(__pyx_v_spacing);
  __Pyx_XDECREF(__pyx_v_spacing_addx);
  __Pyx_XDECREF(__pyx_v_spacing_addy);
  __Pyx_XDECREF(__pyx_v_size_x);
  __Pyx_XDECREF(__pyx_v_size_y);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_spacing_y);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_ls);
  __Pyx_XDECREF(__pyx_v_cords_);
  __Pyx_XDECREF(__pyx_v_textn);
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XDECREF(__pyx_v_txn);
  __Pyx_XDECREF(__pyx_v_color);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":239
 *         GL.glEnd()
 * 
 *     def draw_quad_texture_array(self,cords=[],color=(),textr=None,textn=([0,0],32,[0,0])): #-------------------TO do logic of dividing textures -1 -1 to 1 1             # <<<<<<<<<<<<<<
 *         '''textn - Texture split > [x , y [AS N] , [SizeOfOneSpirit], [texturesize x,y] '''
 *         #
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_46__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_cords);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_cords);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_cords);
  __Pyx_INCREF(((PyObject*)__pyx_empty_tuple));
  __Pyx_GIVEREF(((PyObject*)__pyx_empty_tuple));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)__pyx_empty_tuple));
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_textn);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_textn);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self)->__pyx_arg_textn);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_27draw_quad_texture_array(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_26draw_quad_texture_array, "textn - Texture split > [x , y [AS N] , [SizeOfOneSpirit], [texturesize x,y] ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_27draw_quad_texture_array = {"draw_quad_texture_array", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_27draw_quad_texture_array, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_26draw_quad_texture_array};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_27draw_quad_texture_array(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_textr = 0;
  PyObject *__pyx_v_textn = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_quad_texture_array (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_textr,&__pyx_n_s_textn,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_textr,&__pyx_n_s_textn,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    __pyx_defaults5 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_cords;
    values[2] = ((PyObject *)((PyObject*)__pyx_empty_tuple));
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = __pyx_dynamic_args->__pyx_arg_textn;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_textr);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_textn);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 239, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "draw_quad_texture_array") < 0)) __PYX_ERR(0, 239, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_textr = values[3];
    __pyx_v_textn = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("draw_quad_texture_array", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 239, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad_texture_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_26draw_quad_texture_array(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_color, __pyx_v_textr, __pyx_v_textn);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_26draw_quad_texture_array(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_textr, PyObject *__pyx_v_textn) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_v_txn = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw_quad_texture_array", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":244
 *         # textn > x  , y
 *         #
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":245
 *         #
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_2, __pyx_v_textr};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":246
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":247
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_2, __pyx_t_4, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":248
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_6, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 248, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":249
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)             # <<<<<<<<<<<<<<
 * 
 *         txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nx); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_4, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ny); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyNumber_Subtract(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":251
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx,cords[3]-self.ny)
 * 
 *         txn = self._tex_arrayn_translate(textn[0],textn[1],textn[2])             # <<<<<<<<<<<<<<
 * 
 *         #GL.glTexCoord2f(1,0)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tex_arrayn_translate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_textn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_textn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_textn, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_t_7, __pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_txn = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":254
 * 
 *         #GL.glTexCoord2f(1,0)
 *         GL.glTexCoord2f(txn[0][0], txn[1][1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         #GL.glTexCoord2f(1,1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_2, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":255
 *         #GL.glTexCoord2f(1,0)
 *         GL.glTexCoord2f(txn[0][0], txn[1][1])
 *         GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *         #GL.glTexCoord2f(1,1)
 *         GL.glTexCoord2f(txn[0][0], txn[0][1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":257
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         #GL.glTexCoord2f(1,1)
 *         GL.glTexCoord2f(txn[0][0], txn[0][1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         #GL.glTexCoord2f(0,1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":258
 *         #GL.glTexCoord2f(1,1)
 *         GL.glTexCoord2f(txn[0][0], txn[0][1])
 *         GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *         #GL.glTexCoord2f(0,1)
 *         GL.glTexCoord2f(txn[1][0], txn[0][1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":260
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         #GL.glTexCoord2f(0,1)
 *         GL.glTexCoord2f(txn[1][0], txn[0][1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         #GL.glTexCoord2f(0,0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_2, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":261
 *         #GL.glTexCoord2f(0,1)
 *         GL.glTexCoord2f(txn[1][0], txn[0][1])
 *         GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *         #GL.glTexCoord2f(0,0)
 *         GL.glTexCoord2f(txn[1][0], txn[1][1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 261, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":263
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         #GL.glTexCoord2f(0,0)
 *         GL.glTexCoord2f(txn[1][0], txn[1][1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0], tr1[1])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":264
 *         #GL.glTexCoord2f(0,0)
 *         GL.glTexCoord2f(txn[1][0], txn[1][1])
 *         GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":267
 * 
 * 
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":239
 *         GL.glEnd()
 * 
 *     def draw_quad_texture_array(self,cords=[],color=(),textr=None,textn=([0,0],32,[0,0])): #-------------------TO do logic of dividing textures -1 -1 to 1 1             # <<<<<<<<<<<<<<
 *         '''textn - Texture split > [x , y [AS N] , [SizeOfOneSpirit], [texturesize x,y] '''
 *         #
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Draw.draw_quad_texture_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XDECREF(__pyx_v_txn);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":270
 * 
 * 
 *     def add_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def update_animation():
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_29add_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_29add_animation = {"add_animation", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_29add_animation, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_29add_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_animation (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_28add_animation(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_28add_animation(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_animation", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":272
 *     def add_animation():
 *         pass#DFPASS
 *     def update_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def del_animation():
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_31update_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_31update_animation = {"update_animation", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_31update_animation, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_31update_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_animation (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_30update_animation(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_30update_animation(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_animation", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":274
 *     def update_animation():
 *         pass#DFPASS
 *     def del_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * #__init__ file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_33del_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_33del_animation = {"del_animation", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_33del_animation, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_33del_animation(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("del_animation (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_32del_animation(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_32del_animation(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("del_animation", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":279
 * #Some usefull animation events
 * # pre pepared (animation etc)
 * def change_color(object,from_,to_):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_5change_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_5change_color = {"change_color", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_5change_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_5change_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_object = 0;
  CYTHON_UNUSED PyObject *__pyx_v_from_ = 0;
  CYTHON_UNUSED PyObject *__pyx_v_to_ = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("change_color (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_object,&__pyx_n_s_from,&__pyx_n_s_to,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_object,&__pyx_n_s_from,&__pyx_n_s_to,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_from)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("change_color", 1, 3, 3, 1); __PYX_ERR(0, 279, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_to)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("change_color", 1, 3, 3, 2); __PYX_ERR(0, 279, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "change_color") < 0)) __PYX_ERR(0, 279, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_object = values[0];
    __pyx_v_from_ = values[1];
    __pyx_v_to_ = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("change_color", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 279, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.change_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_4change_color(__pyx_self, __pyx_v_object, __pyx_v_from_, __pyx_v_to_);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_4change_color(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_object, CYTHON_UNUSED PyObject *__pyx_v_from_, CYTHON_UNUSED PyObject *__pyx_v_to_) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("change_color", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":283
 * 
 * class D2DEvents:
 *     def __init__(self,cvroot):             # <<<<<<<<<<<<<<
 *         '''
 *         Event_Type -
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents___init__, "\n        Event_Type - \n            {0:'Button-1':'MouseLC'}\n            {1:'Button-2':'MouseRC'}\n            {2:'Button-3':'MouseMC'}\n            {3:'Motion':'MouseHover'}\n            {4:'KeyPress',:'OnKey'} \n        Event Action Start/End - \n            if None def _pas\n            Assing function\n        CORDS_NEEDED -\n            [FromX1,FromY1,\n            ToX2,ToY2]");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents___init__};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cvroot = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cvroot,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cvroot,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cvroot)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 283, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 283, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 283, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_cvroot = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 283, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents___init__(__pyx_self, __pyx_v_self, __pyx_v_cvroot);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cvroot) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":297
 *             [FromX1,FromY1,
 *             ToX2,ToY2]'''
 *         self.evt = {0:'Button-1',0:'MouseLC',             # <<<<<<<<<<<<<<
 *                1:'Button-3',0:'MouseRC',
 *                2:'Button-2',0:'MouseMC',
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_kp_s_Button_1) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_s_MouseLC) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_1, __pyx_kp_s_Button_3) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_s_MouseRC) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_2, __pyx_kp_s_Button_2) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_s_MouseMC) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_3, __pyx_n_s_Motion) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_s_MouseHover) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_4, __pyx_n_s_KeyPress) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_0, __pyx_n_s_OnKey) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_evt, __pyx_t_1) < 0) __PYX_ERR(0, 297, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":302
 *                3:'Motion',0:'MouseHover',
 *                4:'KeyPress',0:'OnKey'}
 *         self.master = cvroot             # <<<<<<<<<<<<<<
 * 
 *         self.hover_events    = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_master, __pyx_v_cvroot) < 0) __PYX_ERR(0, 302, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":304
 *         self.master = cvroot
 * 
 *         self.hover_events    = []             # <<<<<<<<<<<<<<
 *         self.rclick_events   = []
 *         self.lclick_events   = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_hover_events, __pyx_t_1) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":305
 * 
 *         self.hover_events    = []
 *         self.rclick_events   = []             # <<<<<<<<<<<<<<
 *         self.lclick_events   = []
 *         self.mclick_events   = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 305, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":306
 *         self.hover_events    = []
 *         self.rclick_events   = []
 *         self.lclick_events   = []             # <<<<<<<<<<<<<<
 *         self.mclick_events   = []
 *         self.keypress_events = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 306, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":307
 *         self.rclick_events   = []
 *         self.lclick_events   = []
 *         self.mclick_events   = []             # <<<<<<<<<<<<<<
 *         self.keypress_events = []
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 307, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":308
 *         self.lclick_events   = []
 *         self.mclick_events   = []
 *         self.keypress_events = []             # <<<<<<<<<<<<<<
 * 
 *         self.master.bind('<Motion>',self.checkmotion)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_keypress_events, __pyx_t_1) < 0) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":310
 *         self.keypress_events = []
 * 
 *         self.master.bind('<Motion>',self.checkmotion)             # <<<<<<<<<<<<<<
 *         self.master.bind('<Button-1>',self.checkrclick)
 *         self.master.bind('<Button-3>',self.checklclick)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_checkmotion); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Motion_2, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":311
 * 
 *         self.master.bind('<Motion>',self.checkmotion)
 *         self.master.bind('<Button-1>',self.checkrclick)             # <<<<<<<<<<<<<<
 *         self.master.bind('<Button-3>',self.checklclick)
 *         self.master.bind('<Button-2>',self.checkmclick)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_bind); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_checkrclick); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_1_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 311, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":312
 *         self.master.bind('<Motion>',self.checkmotion)
 *         self.master.bind('<Button-1>',self.checkrclick)
 *         self.master.bind('<Button-3>',self.checklclick)             # <<<<<<<<<<<<<<
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_checklclick); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_3_2, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 312, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":313
 *         self.master.bind('<Button-1>',self.checkrclick)
 *         self.master.bind('<Button-3>',self.checklclick)
 *         self.master.bind('<Button-2>',self.checkmclick)             # <<<<<<<<<<<<<<
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_bind); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_checkmclick); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_2_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":314
 *         self.master.bind('<Button-3>',self.checklclick)
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)             # <<<<<<<<<<<<<<
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_checkkeypress); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 314, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_KeyPress_2, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":283
 * 
 * class D2DEvents:
 *     def __init__(self,cvroot):             # <<<<<<<<<<<<<<
 *         '''
 *         Event_Type -
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":315
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):             # <<<<<<<<<<<<<<
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_3clear_events(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_3clear_events = {"clear_events", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_3clear_events, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_3clear_events(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_events (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_2clear_events(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_2clear_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear_events", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":316
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []             # <<<<<<<<<<<<<<
 *     def checkkeypress(self,ev):
 *         for i in self.keypress_events:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_hover_events, __pyx_t_1) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events, __pyx_t_1) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_keypress_events, __pyx_t_1) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":315
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):             # <<<<<<<<<<<<<<
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.clear_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":317
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):             # <<<<<<<<<<<<<<
 *         for i in self.keypress_events:
 *             i[0](ev)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_5checkkeypress(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_5checkkeypress = {"checkkeypress", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_5checkkeypress, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_5checkkeypress(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkkeypress (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 317, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 317, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("checkkeypress", 1, 2, 2, 1); __PYX_ERR(0, 317, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "checkkeypress") < 0)) __PYX_ERR(0, 317, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checkkeypress", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 317, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkkeypress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_4checkkeypress(__pyx_self, __pyx_v_self, __pyx_v_ev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_4checkkeypress(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkkeypress", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":318
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 *         for i in self.keypress_events:             # <<<<<<<<<<<<<<
 *             i[0](ev)
 *     def checkmclick(self,ev):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_keypress_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 318, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 318, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 318, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 318, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":319
 *     def checkkeypress(self,ev):
 *         for i in self.keypress_events:
 *             i[0](ev)             # <<<<<<<<<<<<<<
 *     def checkmclick(self,ev):
 *         c=0
 */
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 319, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_ev};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 319, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":318
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 *         for i in self.keypress_events:             # <<<<<<<<<<<<<<
 *             i[0](ev)
 *     def checkmclick(self,ev):
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":317
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):             # <<<<<<<<<<<<<<
 *         for i in self.keypress_events:
 *             i[0](ev)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkkeypress", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":320
 *         for i in self.keypress_events:
 *             i[0](ev)
 *     def checkmclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_7checkmclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_7checkmclick = {"checkmclick", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_7checkmclick, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_7checkmclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkmclick (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 320, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 320, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("checkmclick", 1, 2, 2, 1); __PYX_ERR(0, 320, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "checkmclick") < 0)) __PYX_ERR(0, 320, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checkmclick", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 320, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkmclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_6checkmclick(__pyx_self, __pyx_v_self, __pyx_v_ev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_6checkmclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev) {
  PyObject *__pyx_v_c = NULL;
  CYTHON_UNUSED int __pyx_v_t;
  PyObject *__pyx_v_event = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_v_launchev = NULL;
  PyObject *__pyx_v_previoev = NULL;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_delay = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkmclick", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":321
 *             i[0](ev)
 *     def checkmclick(self,ev):
 *         c=0             # <<<<<<<<<<<<<<
 *         t = False
 *         for event in self.mclick_events:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_c = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":322
 *     def checkmclick(self,ev):
 *         c=0
 *         t = False             # <<<<<<<<<<<<<<
 *         for event in self.mclick_events:
 *             x = ev.x
 */
  __pyx_v_t = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":323
 *         c=0
 *         t = False
 *         for event in self.mclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 323, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 323, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 323, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_event, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":324
 *         t = False
 *         for event in self.mclick_events:
 *             x = ev.x             # <<<<<<<<<<<<<<
 *             y = ev.y
 *             cords = event[1]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":325
 *         for event in self.mclick_events:
 *             x = ev.x
 *             y = ev.y             # <<<<<<<<<<<<<<
 *             cords = event[1]
 *             launchev = event[2]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 325, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":326
 *             x = ev.x
 *             y = ev.y
 *             cords = event[1]             # <<<<<<<<<<<<<<
 *             launchev = event[2]
 *             previoev = event[3]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 326, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_cords, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":327
 *             y = ev.y
 *             cords = event[1]
 *             launchev = event[2]             # <<<<<<<<<<<<<<
 *             previoev = event[3]
 *             state = event[4]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_launchev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":328
 *             cords = event[1]
 *             launchev = event[2]
 *             previoev = event[3]             # <<<<<<<<<<<<<<
 *             state = event[4]
 *             delay = event[5]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_previoev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":329
 *             launchev = event[2]
 *             previoev = event[3]
 *             state = event[4]             # <<<<<<<<<<<<<<
 *             delay = event[5]
 *             if x >= cords[0]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_state, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":330
 *             previoev = event[3]
 *             state = event[4]
 *             delay = event[5]             # <<<<<<<<<<<<<<
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 330, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_delay, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":331
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 331, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":332
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 332, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_6) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":333
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 333, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_6) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":334
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 334, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_6) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":335
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.mclick_events[c][4] = True
 */
            __pyx_t_1 = PyObject_RichCompare(__pyx_v_state, Py_True, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 335, __pyx_L1_error)
            __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 335, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (__pyx_t_6) {

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":336
 *                         if y <= cords[3]:
 *                             if state != True:
 *                                 launchev()             # <<<<<<<<<<<<<<
 *                             self.mclick_events[c][4] = True
 *             self.mclick_events[c][4] = False
 */
              __Pyx_INCREF(__pyx_v_launchev);
              __pyx_t_5 = __pyx_v_launchev; __pyx_t_7 = NULL;
              __pyx_t_8 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_8 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_7, };
                __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":335
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.mclick_events[c][4] = True
 */
            }

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":337
 *                             if state != True:
 *                                 launchev()
 *                             self.mclick_events[c][4] = True             # <<<<<<<<<<<<<<
 *             self.mclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 337, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 337, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(__Pyx_SetItemInt(__pyx_t_5, 4, Py_True, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 337, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":334
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":333
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":332
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":331
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":338
 *                                 launchev()
 *                             self.mclick_events[c][4] = True
 *             self.mclick_events[c][4] = False             # <<<<<<<<<<<<<<
 *             self.master.after(delay,previoev)
 *             c+=1
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_t_1, 4, Py_False, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 338, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":339
 *                             self.mclick_events[c][4] = True
 *             self.mclick_events[c][4] = False
 *             self.master.after(delay,previoev)             # <<<<<<<<<<<<<<
 *             c+=1
 *     def checklclick(self,ev):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_after); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_delay, __pyx_v_previoev};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":340
 *             self.mclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 *             c+=1             # <<<<<<<<<<<<<<
 *     def checklclick(self,ev):
 *         c=0
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_c, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":323
 *         c=0
 *         t = False
 *         for event in self.mclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":320
 *         for i in self.keypress_events:
 *             i[0](ev)
 *     def checkmclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkmclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_event);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XDECREF(__pyx_v_launchev);
  __Pyx_XDECREF(__pyx_v_previoev);
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_delay);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":341
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checklclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_9checklclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_9checklclick = {"checklclick", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_9checklclick, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_9checklclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checklclick (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 341, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 341, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("checklclick", 1, 2, 2, 1); __PYX_ERR(0, 341, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "checklclick") < 0)) __PYX_ERR(0, 341, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checklclick", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 341, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checklclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_8checklclick(__pyx_self, __pyx_v_self, __pyx_v_ev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_8checklclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev) {
  PyObject *__pyx_v_c = NULL;
  CYTHON_UNUSED int __pyx_v_t;
  PyObject *__pyx_v_event = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_v_launchev = NULL;
  PyObject *__pyx_v_previoev = NULL;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_delay = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checklclick", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":342
 *             c+=1
 *     def checklclick(self,ev):
 *         c=0             # <<<<<<<<<<<<<<
 *         t = False
 *         for event in self.lclick_events:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_c = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":343
 *     def checklclick(self,ev):
 *         c=0
 *         t = False             # <<<<<<<<<<<<<<
 *         for event in self.lclick_events:
 *             x = ev.x
 */
  __pyx_v_t = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":344
 *         c=0
 *         t = False
 *         for event in self.lclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 344, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 344, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 344, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 344, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_event, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":345
 *         t = False
 *         for event in self.lclick_events:
 *             x = ev.x             # <<<<<<<<<<<<<<
 *             y = ev.y
 *             cords = event[1]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":346
 *         for event in self.lclick_events:
 *             x = ev.x
 *             y = ev.y             # <<<<<<<<<<<<<<
 *             cords = event[1]
 *             launchev = event[2]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":347
 *             x = ev.x
 *             y = ev.y
 *             cords = event[1]             # <<<<<<<<<<<<<<
 *             launchev = event[2]
 *             previoev = event[3]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_cords, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":348
 *             y = ev.y
 *             cords = event[1]
 *             launchev = event[2]             # <<<<<<<<<<<<<<
 *             previoev = event[3]
 *             state = event[4]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_launchev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":349
 *             cords = event[1]
 *             launchev = event[2]
 *             previoev = event[3]             # <<<<<<<<<<<<<<
 *             state = event[4]
 *             delay = event[5]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_previoev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":350
 *             launchev = event[2]
 *             previoev = event[3]
 *             state = event[4]             # <<<<<<<<<<<<<<
 *             delay = event[5]
 *             if x >= cords[0]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_state, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":351
 *             previoev = event[3]
 *             state = event[4]
 *             delay = event[5]             # <<<<<<<<<<<<<<
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_delay, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":352
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 352, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 352, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":353
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 353, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 353, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 353, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_6) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":354
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 354, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_6) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":355
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 355, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 355, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_6) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":356
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.lclick_events[c][4] = True
 */
            __pyx_t_1 = PyObject_RichCompare(__pyx_v_state, Py_True, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 356, __pyx_L1_error)
            __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 356, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (__pyx_t_6) {

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":357
 *                         if y <= cords[3]:
 *                             if state != True:
 *                                 launchev()             # <<<<<<<<<<<<<<
 *                             self.lclick_events[c][4] = True
 *             self.lclick_events[c][4] = False
 */
              __Pyx_INCREF(__pyx_v_launchev);
              __pyx_t_5 = __pyx_v_launchev; __pyx_t_7 = NULL;
              __pyx_t_8 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_8 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_7, };
                __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 357, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":356
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.lclick_events[c][4] = True
 */
            }

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":358
 *                             if state != True:
 *                                 launchev()
 *                             self.lclick_events[c][4] = True             # <<<<<<<<<<<<<<
 *             self.lclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 358, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 358, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(__Pyx_SetItemInt(__pyx_t_5, 4, Py_True, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 358, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":355
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":354
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":353
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":352
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":359
 *                                 launchev()
 *                             self.lclick_events[c][4] = True
 *             self.lclick_events[c][4] = False             # <<<<<<<<<<<<<<
 *             self.master.after(delay,previoev)
 *             c+=1
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_t_1, 4, Py_False, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 359, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":360
 *                             self.lclick_events[c][4] = True
 *             self.lclick_events[c][4] = False
 *             self.master.after(delay,previoev)             # <<<<<<<<<<<<<<
 *             c+=1
 *     def checkrclick(self,ev):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_after); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_delay, __pyx_v_previoev};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":361
 *             self.lclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 *             c+=1             # <<<<<<<<<<<<<<
 *     def checkrclick(self,ev):
 *         c=0
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_c, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":344
 *         c=0
 *         t = False
 *         for event in self.lclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":341
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checklclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checklclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_event);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XDECREF(__pyx_v_launchev);
  __Pyx_XDECREF(__pyx_v_previoev);
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_delay);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":362
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkrclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_11checkrclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_11checkrclick = {"checkrclick", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_11checkrclick, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_11checkrclick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkrclick (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 362, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 362, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("checkrclick", 1, 2, 2, 1); __PYX_ERR(0, 362, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "checkrclick") < 0)) __PYX_ERR(0, 362, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checkrclick", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 362, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkrclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_10checkrclick(__pyx_self, __pyx_v_self, __pyx_v_ev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_10checkrclick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev) {
  PyObject *__pyx_v_c = NULL;
  CYTHON_UNUSED int __pyx_v_t;
  PyObject *__pyx_v_event = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_v_launchev = NULL;
  PyObject *__pyx_v_previoev = NULL;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_delay = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkrclick", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":363
 *             c+=1
 *     def checkrclick(self,ev):
 *         c=0             # <<<<<<<<<<<<<<
 *         t = False
 *         for event in self.rclick_events:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_c = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":364
 *     def checkrclick(self,ev):
 *         c=0
 *         t = False             # <<<<<<<<<<<<<<
 *         for event in self.rclick_events:
 *             x = ev.x
 */
  __pyx_v_t = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":365
 *         c=0
 *         t = False
 *         for event in self.rclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 365, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 365, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 365, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 365, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_event, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":366
 *         t = False
 *         for event in self.rclick_events:
 *             x = ev.x             # <<<<<<<<<<<<<<
 *             y = ev.y
 *             cords = event[1]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":367
 *         for event in self.rclick_events:
 *             x = ev.x
 *             y = ev.y             # <<<<<<<<<<<<<<
 *             cords = event[1]
 *             launchev = event[2]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":368
 *             x = ev.x
 *             y = ev.y
 *             cords = event[1]             # <<<<<<<<<<<<<<
 *             launchev = event[2]
 *             previoev = event[3]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_cords, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":369
 *             y = ev.y
 *             cords = event[1]
 *             launchev = event[2]             # <<<<<<<<<<<<<<
 *             previoev = event[3]
 *             state = event[4]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_launchev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":370
 *             cords = event[1]
 *             launchev = event[2]
 *             previoev = event[3]             # <<<<<<<<<<<<<<
 *             state = event[4]
 *             delay = event[5]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_previoev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":371
 *             launchev = event[2]
 *             previoev = event[3]
 *             state = event[4]             # <<<<<<<<<<<<<<
 *             delay = event[5]
 *             if x >= cords[0]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_state, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":372
 *             previoev = event[3]
 *             state = event[4]
 *             delay = event[5]             # <<<<<<<<<<<<<<
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_delay, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":373
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 373, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 373, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":374
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 374, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_6) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":375
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 375, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_6) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":376
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 376, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 376, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 376, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_6) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":377
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.rclick_events[c][4] = True
 */
            __pyx_t_1 = PyObject_RichCompare(__pyx_v_state, Py_True, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
            __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 377, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (__pyx_t_6) {

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":378
 *                         if y <= cords[3]:
 *                             if state != True:
 *                                 launchev()             # <<<<<<<<<<<<<<
 *                             self.rclick_events[c][4] = True
 *             self.rclick_events[c][4] = False
 */
              __Pyx_INCREF(__pyx_v_launchev);
              __pyx_t_5 = __pyx_v_launchev; __pyx_t_7 = NULL;
              __pyx_t_8 = 0;
              if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
                __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
                if (likely(__pyx_t_7)) {
                  PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                  __Pyx_INCREF(__pyx_t_7);
                  __Pyx_INCREF(function);
                  __Pyx_DECREF_SET(__pyx_t_5, function);
                  __pyx_t_8 = 1;
                }
              }
              {
                PyObject *__pyx_callargs[1] = {__pyx_t_7, };
                __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
                __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
                if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 378, __pyx_L1_error)
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
              }
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

              /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":377
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             if state != True:             # <<<<<<<<<<<<<<
 *                                 launchev()
 *                             self.rclick_events[c][4] = True
 */
            }

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":379
 *                             if state != True:
 *                                 launchev()
 *                             self.rclick_events[c][4] = True             # <<<<<<<<<<<<<<
 *             self.rclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(__Pyx_SetItemInt(__pyx_t_5, 4, Py_True, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 379, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":376
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             if state != True:
 *                                 launchev()
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":375
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             if state != True:
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":374
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":373
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":380
 *                                 launchev()
 *                             self.rclick_events[c][4] = True
 *             self.rclick_events[c][4] = False             # <<<<<<<<<<<<<<
 *             self.master.after(delay,previoev)
 *             c+=1
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_SetItemInt(__pyx_t_1, 4, Py_False, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 380, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":381
 *                             self.rclick_events[c][4] = True
 *             self.rclick_events[c][4] = False
 *             self.master.after(delay,previoev)             # <<<<<<<<<<<<<<
 *             c+=1
 *     def checkmotion(self,ev):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_after); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_delay, __pyx_v_previoev};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 381, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":382
 *             self.rclick_events[c][4] = False
 *             self.master.after(delay,previoev)
 *             c+=1             # <<<<<<<<<<<<<<
 *     def checkmotion(self,ev):
 *         c=0
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_c, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":365
 *         c=0
 *         t = False
 *         for event in self.rclick_events:             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":362
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkrclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkrclick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_event);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XDECREF(__pyx_v_launchev);
  __Pyx_XDECREF(__pyx_v_previoev);
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_delay);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":383
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkmotion(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_13checkmotion(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_13checkmotion = {"checkmotion", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_13checkmotion, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_13checkmotion(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("checkmotion (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("checkmotion", 1, 2, 2, 1); __PYX_ERR(0, 383, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "checkmotion") < 0)) __PYX_ERR(0, 383, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("checkmotion", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 383, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkmotion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_12checkmotion(__pyx_self, __pyx_v_self, __pyx_v_ev);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_12checkmotion(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev) {
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_event = NULL;
  int __pyx_v_t;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_v_launchev = NULL;
  PyObject *__pyx_v_previoev = NULL;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_delay = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("checkmotion", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":384
 *             c+=1
 *     def checkmotion(self,ev):
 *         c=0             # <<<<<<<<<<<<<<
 * 
 *         for event in self.hover_events:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_c = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":386
 *         c=0
 * 
 *         for event in self.hover_events:             # <<<<<<<<<<<<<<
 *             t = False
 *             x = ev.x
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_hover_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 386, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 386, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 386, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 386, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 386, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_event, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":387
 * 
 *         for event in self.hover_events:
 *             t = False             # <<<<<<<<<<<<<<
 *             x = ev.x
 *             y = ev.y
 */
    __pyx_v_t = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":388
 *         for event in self.hover_events:
 *             t = False
 *             x = ev.x             # <<<<<<<<<<<<<<
 *             y = ev.y
 *             cords = event[1]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":389
 *             t = False
 *             x = ev.x
 *             y = ev.y             # <<<<<<<<<<<<<<
 *             cords = event[1]
 *             launchev = event[2]
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":390
 *             x = ev.x
 *             y = ev.y
 *             cords = event[1]             # <<<<<<<<<<<<<<
 *             launchev = event[2]
 *             previoev = event[3]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_cords, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":391
 *             y = ev.y
 *             cords = event[1]
 *             launchev = event[2]             # <<<<<<<<<<<<<<
 *             previoev = event[3]
 *             state = event[4]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_launchev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":392
 *             cords = event[1]
 *             launchev = event[2]
 *             previoev = event[3]             # <<<<<<<<<<<<<<
 *             state = event[4]
 *             delay = event[5]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_previoev, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":393
 *             launchev = event[2]
 *             previoev = event[3]
 *             state = event[4]             # <<<<<<<<<<<<<<
 *             delay = event[5]
 *             if x >= cords[0]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_state, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":394
 *             previoev = event[3]
 *             state = event[4]
 *             delay = event[5]             # <<<<<<<<<<<<<<
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_event, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_delay, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":395
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 395, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 395, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":396
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 396, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 396, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_6) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":397
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             launchev()
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 397, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 397, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_6) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":398
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             launchev()
 *                             self.hover_events[c][4] = True
 */
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_5, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 398, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_6) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":399
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 *                             launchev()             # <<<<<<<<<<<<<<
 *                             self.hover_events[c][4] = True
 *                         else:t = True
 */
            __Pyx_INCREF(__pyx_v_launchev);
            __pyx_t_5 = __pyx_v_launchev; __pyx_t_7 = NULL;
            __pyx_t_8 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_7)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_7);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_8 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_7, };
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
              __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 399, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":400
 *                         if y <= cords[3]:
 *                             launchev()
 *                             self.hover_events[c][4] = True             # <<<<<<<<<<<<<<
 *                         else:t = True
 *                     else:t = True
 */
            __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_hover_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 400, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_c); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 400, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(__Pyx_SetItemInt(__pyx_t_5, 4, Py_True, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 400, __pyx_L1_error)
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":398
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:             # <<<<<<<<<<<<<<
 *                             launchev()
 *                             self.hover_events[c][4] = True
 */
            goto __pyx_L8;
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":401
 *                             launchev()
 *                             self.hover_events[c][4] = True
 *                         else:t = True             # <<<<<<<<<<<<<<
 *                     else:t = True
 *                 else:t = True
 */
          /*else*/ {
            __pyx_v_t = 1;
          }
          __pyx_L8:;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":397
 *             if x >= cords[0]:
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:             # <<<<<<<<<<<<<<
 *                         if y <= cords[3]:
 *                             launchev()
 */
          goto __pyx_L7;
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":402
 *                             self.hover_events[c][4] = True
 *                         else:t = True
 *                     else:t = True             # <<<<<<<<<<<<<<
 *                 else:t = True
 *             else:t = True
 */
        /*else*/ {
          __pyx_v_t = 1;
        }
        __pyx_L7:;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":396
 *             delay = event[5]
 *             if x >= cords[0]:
 *                 if y >= cords[1]:             # <<<<<<<<<<<<<<
 *                     if x <= cords[2]:
 *                         if y <= cords[3]:
 */
        goto __pyx_L6;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":403
 *                         else:t = True
 *                     else:t = True
 *                 else:t = True             # <<<<<<<<<<<<<<
 *             else:t = True
 *             if t == True:
 */
      /*else*/ {
        __pyx_v_t = 1;
      }
      __pyx_L6:;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":395
 *             state = event[4]
 *             delay = event[5]
 *             if x >= cords[0]:             # <<<<<<<<<<<<<<
 *                 if y >= cords[1]:
 *                     if x <= cords[2]:
 */
      goto __pyx_L5;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":404
 *                     else:t = True
 *                 else:t = True
 *             else:t = True             # <<<<<<<<<<<<<<
 *             if t == True:
 *                 if state == True:
 */
    /*else*/ {
      __pyx_v_t = 1;
    }
    __pyx_L5:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":405
 *                 else:t = True
 *             else:t = True
 *             if t == True:             # <<<<<<<<<<<<<<
 *                 if state == True:
 *                     self.hover_events[c][4] = False
 */
    __pyx_t_6 = ((__pyx_v_t == 1) != 0);
    if (__pyx_t_6) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":406
 *             else:t = True
 *             if t == True:
 *                 if state == True:             # <<<<<<<<<<<<<<
 *                     self.hover_events[c][4] = False
 *                     self.master.after(delay,previoev)
 */
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_state, Py_True, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 406, __pyx_L1_error)
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 406, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":407
 *             if t == True:
 *                 if state == True:
 *                     self.hover_events[c][4] = False             # <<<<<<<<<<<<<<
 *                     self.master.after(delay,previoev)
 * 
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_hover_events); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 407, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 407, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(__Pyx_SetItemInt(__pyx_t_1, 4, Py_False, long, 1, __Pyx_PyInt_From_long, 0, 0, 1) < 0)) __PYX_ERR(0, 407, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":408
 *                 if state == True:
 *                     self.hover_events[c][4] = False
 *                     self.master.after(delay,previoev)             # <<<<<<<<<<<<<<
 * 
 *             c+=1
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_master); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_after); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 408, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_delay, __pyx_v_previoev};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 408, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":406
 *             else:t = True
 *             if t == True:
 *                 if state == True:             # <<<<<<<<<<<<<<
 *                     self.hover_events[c][4] = False
 *                     self.master.after(delay,previoev)
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":405
 *                 else:t = True
 *             else:t = True
 *             if t == True:             # <<<<<<<<<<<<<<
 *                 if state == True:
 *                     self.hover_events[c][4] = False
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":410
 *                     self.master.after(delay,previoev)
 * 
 *             c+=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_c, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":386
 *         c=0
 * 
 *         for event in self.hover_events:             # <<<<<<<<<<<<<<
 *             t = False
 *             x = ev.x
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":383
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkmotion(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.checkmotion", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_event);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XDECREF(__pyx_v_launchev);
  __Pyx_XDECREF(__pyx_v_previoev);
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_delay);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":413
 * 
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):             # <<<<<<<<<<<<<<
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_15add_event(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_15add_event = {"add_event", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_15add_event, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_15add_event(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_EventType = 0;
  PyObject *__pyx_v_Cords = 0;
  PyObject *__pyx_v_EventOn = 0;
  PyObject *__pyx_v_EventOff = 0;
  PyObject *__pyx_v_EventDelay = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_event (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_EventType,&__pyx_n_s_Cords,&__pyx_n_s_EventOn,&__pyx_n_s_EventOff,&__pyx_n_s_EventDelay,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_EventType,&__pyx_n_s_Cords,&__pyx_n_s_EventOn,&__pyx_n_s_EventOff,&__pyx_n_s_EventDelay,0};
    #endif
    PyObject* values[6] = {0,0,0,0,0,0};
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = ((PyObject *)((PyObject *)Py_None));
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = ((PyObject *)((PyObject *)Py_None));
    values[5] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_EventType);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Cords);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_EventOn);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_EventOff);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_EventDelay);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 413, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "add_event") < 0)) __PYX_ERR(0, 413, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_EventType = values[1];
    __pyx_v_Cords = values[2];
    __pyx_v_EventOn = values[3];
    __pyx_v_EventOff = values[4];
    __pyx_v_EventDelay = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_event", 0, 1, 6, __pyx_nargs); __PYX_ERR(0, 413, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.add_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_14add_event(__pyx_self, __pyx_v_self, __pyx_v_EventType, __pyx_v_Cords, __pyx_v_EventOn, __pyx_v_EventOff, __pyx_v_EventDelay);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_14add_event(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_EventType, PyObject *__pyx_v_Cords, PyObject *__pyx_v_EventOn, PyObject *__pyx_v_EventOff, PyObject *__pyx_v_EventDelay) {
  PyObject *__pyx_v_dat = NULL;
  PyObject *__pyx_v_event = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_event", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":414
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):
 *         if type(EventType) is int:             # <<<<<<<<<<<<<<
 *             dat = self.evt.get(EventType)
 *         else:dat = EventType
 */
  __pyx_t_1 = (((PyObject *)Py_TYPE(__pyx_v_EventType)) == ((PyObject *)(&PyInt_Type)));
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":415
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)             # <<<<<<<<<<<<<<
 *         else:dat = EventType
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_evt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_get); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 415, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_EventType};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 415, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __pyx_v_dat = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":414
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):
 *         if type(EventType) is int:             # <<<<<<<<<<<<<<
 *             dat = self.evt.get(EventType)
 *         else:dat = EventType
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":416
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)
 *         else:dat = EventType             # <<<<<<<<<<<<<<
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':
 *             event = [0]
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_EventType);
    __pyx_v_dat = __pyx_v_EventType;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":417
 *             dat = self.evt.get(EventType)
 *         else:dat = EventType
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_Motion, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 417, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_Hover, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 417, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_MouseHover, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 417, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_1;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":418
 *         else:dat = EventType
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':
 *             event = [0]             # <<<<<<<<<<<<<<
 *             event.append(Cords)
 *             event.append(EventOn)
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_int_0);
    __pyx_v_event = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":419
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':
 *             event = [0]
 *             event.append(Cords)             # <<<<<<<<<<<<<<
 *             event.append(EventOn)
 *             event.append(EventOff)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_Cords); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 419, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":420
 *             event = [0]
 *             event.append(Cords)
 *             event.append(EventOn)             # <<<<<<<<<<<<<<
 *             event.append(EventOff)
 *             event.append(False)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOn); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 420, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":421
 *             event.append(Cords)
 *             event.append(EventOn)
 *             event.append(EventOff)             # <<<<<<<<<<<<<<
 *             event.append(False)
 *             event.append(EventDelay)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOff); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 421, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":422
 *             event.append(EventOn)
 *             event.append(EventOff)
 *             event.append(False)             # <<<<<<<<<<<<<<
 *             event.append(EventDelay)
 *             self.hover_events.append(event)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, Py_False); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 422, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":423
 *             event.append(EventOff)
 *             event.append(False)
 *             event.append(EventDelay)             # <<<<<<<<<<<<<<
 *             self.hover_events.append(event)
 *             return True
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventDelay); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 423, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":424
 *             event.append(False)
 *             event.append(EventDelay)
 *             self.hover_events.append(event)             # <<<<<<<<<<<<<<
 *             return True
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_hover_events); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_event); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 424, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":425
 *             event.append(EventDelay)
 *             self.hover_events.append(event)
 *             return True             # <<<<<<<<<<<<<<
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':
 *             event = [0]
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":417
 *             dat = self.evt.get(EventType)
 *         else:dat = EventType
 *         if dat == 'Motion' or dat == 'Hover' or dat == 'MouseHover':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":426
 *             self.hover_events.append(event)
 *             return True
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_kp_s_Button_1, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 426, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L9_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_MouseLC, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 426, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L9_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_LeftClick, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 426, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_1;
  __pyx_L9_bool_binop_done:;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":427
 *             return True
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':
 *             event = [0]             # <<<<<<<<<<<<<<
 *             event.append(Cords)
 *             event.append(EventOn)
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_int_0);
    __pyx_v_event = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":428
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':
 *             event = [0]
 *             event.append(Cords)             # <<<<<<<<<<<<<<
 *             event.append(EventOn)
 *             event.append(EventOff)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_Cords); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 428, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":429
 *             event = [0]
 *             event.append(Cords)
 *             event.append(EventOn)             # <<<<<<<<<<<<<<
 *             event.append(EventOff)
 *             event.append(False)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOn); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 429, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":430
 *             event.append(Cords)
 *             event.append(EventOn)
 *             event.append(EventOff)             # <<<<<<<<<<<<<<
 *             event.append(False)
 *             event.append(EventDelay)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOff); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 430, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":431
 *             event.append(EventOn)
 *             event.append(EventOff)
 *             event.append(False)             # <<<<<<<<<<<<<<
 *             event.append(EventDelay)
 *             self.rclick_events.append(event)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, Py_False); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 431, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":432
 *             event.append(EventOff)
 *             event.append(False)
 *             event.append(EventDelay)             # <<<<<<<<<<<<<<
 *             self.rclick_events.append(event)
 *             return True
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventDelay); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 432, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":433
 *             event.append(False)
 *             event.append(EventDelay)
 *             self.rclick_events.append(event)             # <<<<<<<<<<<<<<
 *             return True
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_rclick_events); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_event); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 433, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":434
 *             event.append(EventDelay)
 *             self.rclick_events.append(event)
 *             return True             # <<<<<<<<<<<<<<
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':
 *             event = [0]
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":426
 *             self.hover_events.append(event)
 *             return True
 *         if dat == 'Button-1' or dat == 'MouseLC' or dat == 'LeftClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":435
 *             self.rclick_events.append(event)
 *             return True
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_kp_s_Button_2, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L13_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_MouseRC, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L13_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_RightClick, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_1;
  __pyx_L13_bool_binop_done:;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":436
 *             return True
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':
 *             event = [0]             # <<<<<<<<<<<<<<
 *             event.append(Cords)
 *             event.append(EventOn)
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 436, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_int_0);
    __pyx_v_event = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":437
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':
 *             event = [0]
 *             event.append(Cords)             # <<<<<<<<<<<<<<
 *             event.append(EventOn)
 *             event.append(EventOff)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_Cords); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 437, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":438
 *             event = [0]
 *             event.append(Cords)
 *             event.append(EventOn)             # <<<<<<<<<<<<<<
 *             event.append(EventOff)
 *             event.append(False)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOn); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 438, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":439
 *             event.append(Cords)
 *             event.append(EventOn)
 *             event.append(EventOff)             # <<<<<<<<<<<<<<
 *             event.append(False)
 *             event.append(EventDelay)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOff); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 439, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":440
 *             event.append(EventOn)
 *             event.append(EventOff)
 *             event.append(False)             # <<<<<<<<<<<<<<
 *             event.append(EventDelay)
 *             self.lclick_events.append(event)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, Py_False); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 440, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":441
 *             event.append(EventOff)
 *             event.append(False)
 *             event.append(EventDelay)             # <<<<<<<<<<<<<<
 *             self.lclick_events.append(event)
 *             return True
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventDelay); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 441, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":442
 *             event.append(False)
 *             event.append(EventDelay)
 *             self.lclick_events.append(event)             # <<<<<<<<<<<<<<
 *             return True
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lclick_events); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_event); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":443
 *             event.append(EventDelay)
 *             self.lclick_events.append(event)
 *             return True             # <<<<<<<<<<<<<<
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':
 *             event = [0]
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":435
 *             self.rclick_events.append(event)
 *             return True
 *         if dat == 'Button-2' or dat == 'MouseRC' or dat == 'RightClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":444
 *             self.lclick_events.append(event)
 *             return True
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_kp_s_Button_3, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 444, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_MouseMC, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 444, __pyx_L1_error)
  if (!__pyx_t_1) {
  } else {
    __pyx_t_2 = __pyx_t_1;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_MiddleClick, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 444, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_1;
  __pyx_L17_bool_binop_done:;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":445
 *             return True
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':
 *             event = [0]             # <<<<<<<<<<<<<<
 *             event.append(Cords)
 *             event.append(EventOn)
 */
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 445, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_int_0);
    __pyx_v_event = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":446
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':
 *             event = [0]
 *             event.append(Cords)             # <<<<<<<<<<<<<<
 *             event.append(EventOn)
 *             event.append(EventOff)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_Cords); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 446, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":447
 *             event = [0]
 *             event.append(Cords)
 *             event.append(EventOn)             # <<<<<<<<<<<<<<
 *             event.append(EventOff)
 *             event.append(False)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOn); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 447, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":448
 *             event.append(Cords)
 *             event.append(EventOn)
 *             event.append(EventOff)             # <<<<<<<<<<<<<<
 *             event.append(False)
 *             event.append(EventDelay)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOff); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 448, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":449
 *             event.append(EventOn)
 *             event.append(EventOff)
 *             event.append(False)             # <<<<<<<<<<<<<<
 *             event.append(EventDelay)
 *             self.mclick_events.append(event)
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, Py_False); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 449, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":450
 *             event.append(EventOff)
 *             event.append(False)
 *             event.append(EventDelay)             # <<<<<<<<<<<<<<
 *             self.mclick_events.append(event)
 *             return True
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventDelay); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 450, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":451
 *             event.append(False)
 *             event.append(EventDelay)
 *             self.mclick_events.append(event)             # <<<<<<<<<<<<<<
 *             return True
 *         if dat == 'KeyPress':
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_mclick_events); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_event); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":452
 *             event.append(EventDelay)
 *             self.mclick_events.append(event)
 *             return True             # <<<<<<<<<<<<<<
 *         if dat == 'KeyPress':
 *             event = []
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":444
 *             self.lclick_events.append(event)
 *             return True
 *         if dat == 'Button-3' or dat == 'MouseMC' or dat == 'MiddleClick':             # <<<<<<<<<<<<<<
 *             event = [0]
 *             event.append(Cords)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":453
 *             self.mclick_events.append(event)
 *             return True
 *         if dat == 'KeyPress':             # <<<<<<<<<<<<<<
 *             event = []
 *             event.append(EventOn)
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_dat, __pyx_n_s_KeyPress, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 453, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":454
 *             return True
 *         if dat == 'KeyPress':
 *             event = []             # <<<<<<<<<<<<<<
 *             event.append(EventOn)
 *             self.keypress_events.append(event)
 */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_event = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":455
 *         if dat == 'KeyPress':
 *             event = []
 *             event.append(EventOn)             # <<<<<<<<<<<<<<
 *             self.keypress_events.append(event)
 *             return True
 */
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_event, __pyx_v_EventOn); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 455, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":456
 *             event = []
 *             event.append(EventOn)
 *             self.keypress_events.append(event)             # <<<<<<<<<<<<<<
 *             return True
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_keypress_events); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 456, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_event); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 456, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":457
 *             event.append(EventOn)
 *             self.keypress_events.append(event)
 *             return True             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_True);
    __pyx_r = Py_True;
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":453
 *             self.mclick_events.append(event)
 *             return True
 *         if dat == 'KeyPress':             # <<<<<<<<<<<<<<
 *             event = []
 *             event.append(EventOn)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":413
 * 
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):             # <<<<<<<<<<<<<<
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.add_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dat);
  __Pyx_XDECREF(__pyx_v_event);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":460
 * 
 * 
 *     def check(self,ev,lfg,lfm,lfe):             # <<<<<<<<<<<<<<
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_17check(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_17check = {"check", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_17check, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_17check(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_ev = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lfg = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lfm = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lfe = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,&__pyx_n_s_lfg,&__pyx_n_s_lfm,&__pyx_n_s_lfe,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_ev,&__pyx_n_s_lfg,&__pyx_n_s_lfm,&__pyx_n_s_lfe,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ev)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check", 1, 5, 5, 1); __PYX_ERR(0, 460, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lfg)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check", 1, 5, 5, 2); __PYX_ERR(0, 460, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lfm)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check", 1, 5, 5, 3); __PYX_ERR(0, 460, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lfe)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 460, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check", 1, 5, 5, 4); __PYX_ERR(0, 460, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "check") < 0)) __PYX_ERR(0, 460, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_ev = values[1];
    __pyx_v_lfg = values[2];
    __pyx_v_lfm = values[3];
    __pyx_v_lfe = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 460, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_16check(__pyx_self, __pyx_v_self, __pyx_v_ev, __pyx_v_lfg, __pyx_v_lfm, __pyx_v_lfe);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_16check(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_ev, CYTHON_UNUSED PyObject *__pyx_v_lfg, CYTHON_UNUSED PyObject *__pyx_v_lfm, CYTHON_UNUSED PyObject *__pyx_v_lfe) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":461
 * 
 *     def check(self,ev,lfg,lfm,lfe):
 *         if ev.x <= self.crd[0]:             # <<<<<<<<<<<<<<
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_crd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_LE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":462
 *     def check(self,ev,lfg,lfm,lfe):
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:             # <<<<<<<<<<<<<<
 *                 if ev.x >= self.crd[2]:
 *                     if ev.y >= self.crd[3]:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_crd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_LE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_4) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":463
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:             # <<<<<<<<<<<<<<
 *                     if ev.y >= self.crd[3]:
 *                         launch_function_beg()
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 463, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_crd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 463, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 463, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_4) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":464
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:
 *                     if ev.y >= self.crd[3]:             # <<<<<<<<<<<<<<
 *                         launch_function_beg()
 *                         launch_function_mid()
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_ev, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 464, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_crd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 464, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 464, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (__pyx_t_4) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":465
 *                 if ev.x >= self.crd[2]:
 *                     if ev.y >= self.crd[3]:
 *                         launch_function_beg()             # <<<<<<<<<<<<<<
 *                         launch_function_mid()
 *                         launch_function_end()
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_launch_function_beg); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 465, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          __pyx_t_5 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_5 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_1, };
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":466
 *                     if ev.y >= self.crd[3]:
 *                         launch_function_beg()
 *                         launch_function_mid()             # <<<<<<<<<<<<<<
 *                         launch_function_end()
 *     def _pas(self):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_launch_function_mid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 466, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          __pyx_t_5 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_5 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_1, };
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":467
 *                         launch_function_beg()
 *                         launch_function_mid()
 *                         launch_function_end()             # <<<<<<<<<<<<<<
 *     def _pas(self):
 *         pass#DFPASS  #._.
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_launch_function_end); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 467, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          __pyx_t_5 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
              __pyx_t_5 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_1, };
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
            __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 467, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":464
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:
 *                     if ev.y >= self.crd[3]:             # <<<<<<<<<<<<<<
 *                         launch_function_beg()
 *                         launch_function_mid()
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":463
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:             # <<<<<<<<<<<<<<
 *                     if ev.y >= self.crd[3]:
 *                         launch_function_beg()
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":462
 *     def check(self,ev,lfg,lfm,lfe):
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:             # <<<<<<<<<<<<<<
 *                 if ev.x >= self.crd[2]:
 *                     if ev.y >= self.crd[3]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":461
 * 
 *     def check(self,ev,lfg,lfm,lfe):
 *         if ev.x <= self.crd[0]:             # <<<<<<<<<<<<<<
 *             if ev.y <= self.crd[1]:
 *                 if ev.x >= self.crd[2]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":460
 * 
 * 
 *     def check(self,ev,lfg,lfm,lfe):             # <<<<<<<<<<<<<<
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DEvents.check", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":468
 *                         launch_function_mid()
 *                         launch_function_end()
 *     def _pas(self):             # <<<<<<<<<<<<<<
 *         pass#DFPASS  #._.
 * #__init__ file.
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_19_pas(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_19_pas = {"_pas", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_19_pas, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_19_pas(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_pas (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_18_pas(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_18_pas(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_pas", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":504
 *     """ Common code for windows/x11 """
 *     ## On cords
 *     def check_all_b1_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_B1:
 *             c = i[0]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_1check_all_b1_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_1check_all_b1_events = {"check_all_b1_events", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_1check_all_b1_events, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_1check_all_b1_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_all_b1_events (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_all_b1_events", 1, 2, 2, 1); __PYX_ERR(0, 504, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "check_all_b1_events") < 0)) __PYX_ERR(0, 504, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_all_b1_events", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 504, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_b1_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_check_all_b1_events(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_check_all_b1_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check_all_b1_events", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":505
 *     ## On cords
 *     def check_all_b1_events(self,event):
 *         for i in self.events_B1:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_B1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 505, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 505, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 505, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 505, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":506
 *     def check_all_b1_events(self,event):
 *         for i in self.events_B1:
 *             c = i[0]             # <<<<<<<<<<<<<<
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":507
 *         for i in self.events_B1:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":508
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 508, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_7) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":509
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 509, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_7) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":510
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def check_all_brelase_events(self,event):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 510, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_7) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":511
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 *                             i[1]()             # <<<<<<<<<<<<<<
 *     def check_all_brelase_events(self,event):
 *         for i in self.events_BR:
 */
            __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 511, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            __pyx_t_8 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_8 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 511, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":510
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def check_all_brelase_events(self,event):
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":509
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":508
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":507
 *         for i in self.events_B1:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":505
 *     ## On cords
 *     def check_all_b1_events(self,event):
 *         for i in self.events_B1:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":504
 *     """ Common code for windows/x11 """
 *     ## On cords
 *     def check_all_b1_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_B1:
 *             c = i[0]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_b1_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":512
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_brelase_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BR:
 *             c = i[0]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_3check_all_brelase_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_3check_all_brelase_events = {"check_all_brelase_events", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_3check_all_brelase_events, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_3check_all_brelase_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_all_brelase_events (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 512, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 512, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_all_brelase_events", 1, 2, 2, 1); __PYX_ERR(0, 512, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "check_all_brelase_events") < 0)) __PYX_ERR(0, 512, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_all_brelase_events", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 512, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_brelase_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_2check_all_brelase_events(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_2check_all_brelase_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check_all_brelase_events", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":513
 *                             i[1]()
 *     def check_all_brelase_events(self,event):
 *         for i in self.events_BR:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_BR); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 513, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 513, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 513, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 513, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 513, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 513, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":514
 *     def check_all_brelase_events(self,event):
 *         for i in self.events_BR:
 *             c = i[0]             # <<<<<<<<<<<<<<
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":515
 *         for i in self.events_BR:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 515, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 515, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":516
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 516, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 516, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 516, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 516, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_7) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":517
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 517, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_7) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":518
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def check_all_bpress_events(self,event):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 518, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 518, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 518, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 518, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_7) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":519
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 *                             i[1]()             # <<<<<<<<<<<<<<
 *     def check_all_bpress_events(self,event):
 *         for i in self.events_BP:
 */
            __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 519, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            __pyx_t_8 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_8 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 519, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":518
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def check_all_bpress_events(self,event):
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":517
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":516
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":515
 *         for i in self.events_BR:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":513
 *                             i[1]()
 *     def check_all_brelase_events(self,event):
 *         for i in self.events_BR:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":512
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_brelase_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BR:
 *             c = i[0]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_brelase_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":520
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_bpress_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BP:
 *             c = i[0]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_5check_all_bpress_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_5check_all_bpress_events = {"check_all_bpress_events", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_5check_all_bpress_events, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_5check_all_bpress_events(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_all_bpress_events (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 520, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_all_bpress_events", 1, 2, 2, 1); __PYX_ERR(0, 520, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "check_all_bpress_events") < 0)) __PYX_ERR(0, 520, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_all_bpress_events", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 520, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_bpress_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_4check_all_bpress_events(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_4check_all_bpress_events(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check_all_bpress_events", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":521
 *                             i[1]()
 *     def check_all_bpress_events(self,event):
 *         for i in self.events_BP:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_BP); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 521, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 521, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 521, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 521, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 521, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 521, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":522
 *     def check_all_bpress_events(self,event):
 *         for i in self.events_BP:
 *             c = i[0]             # <<<<<<<<<<<<<<
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":523
 *         for i in self.events_BP:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 523, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 523, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":524
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 524, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 524, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 524, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 524, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_7) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":525
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 525, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 525, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 525, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 525, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_7) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":526
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_c, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 526, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (__pyx_t_7) {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":527
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 *                             i[1]()             # <<<<<<<<<<<<<<
 *     def create_event(self,cords,launch_func,event_type):
 *         if event_type is self.ev_type[0]:
 */
            __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 527, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            __pyx_t_8 = 0;
            if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_8 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[1] = {__pyx_t_6, };
              __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":526
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:             # <<<<<<<<<<<<<<
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):
 */
          }

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":525
 *             if event.x > c[0]:
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                         if event.y < c[3]:
 *                             i[1]()
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":524
 *             c = i[0]
 *             if event.x > c[0]:
 *                 if event.x < c[2]:             # <<<<<<<<<<<<<<
 *                     if event.y > c[1]:
 *                         if event.y < c[3]:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":523
 *         for i in self.events_BP:
 *             c = i[0]
 *             if event.x > c[0]:             # <<<<<<<<<<<<<<
 *                 if event.x < c[2]:
 *                     if event.y > c[1]:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":521
 *                             i[1]()
 *     def check_all_bpress_events(self,event):
 *         for i in self.events_BP:             # <<<<<<<<<<<<<<
 *             c = i[0]
 *             if event.x > c[0]:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":520
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_bpress_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BP:
 *             c = i[0]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_all_bpress_events", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":528
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_7create_event(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_7create_event = {"create_event", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_7create_event, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_7create_event(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_launch_func = 0;
  PyObject *__pyx_v_event_type = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_event (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_launch_func,&__pyx_n_s_event_type,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_launch_func,&__pyx_n_s_event_type,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_event", 1, 4, 4, 1); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_launch_func)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_event", 1, 4, 4, 2); __PYX_ERR(0, 528, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event_type)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_event", 1, 4, 4, 3); __PYX_ERR(0, 528, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_event") < 0)) __PYX_ERR(0, 528, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_launch_func = values[2];
    __pyx_v_event_type = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_event", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 528, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.create_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_6create_event(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_launch_func, __pyx_v_event_type);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_6create_event(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_launch_func, PyObject *__pyx_v_event_type) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_event", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":529
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):
 *         if event_type is self.ev_type[0]:             # <<<<<<<<<<<<<<
 *            self.events_B1.append([cords, launch_func])
 *         if event_type is self.ev_type[1]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 529, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":530
 *     def create_event(self,cords,launch_func,event_type):
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[1]:
 *            self.events_B2.append([cords, launch_func])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_B1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 530, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 530, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 530, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":529
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):
 *         if event_type is self.ev_type[0]:             # <<<<<<<<<<<<<<
 *            self.events_B1.append([cords, launch_func])
 *         if event_type is self.ev_type[1]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":531
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 *         if event_type is self.ev_type[1]:             # <<<<<<<<<<<<<<
 *            self.events_B2.append([cords, launch_func])
 *         if event_type is self.ev_type[2]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":532
 *            self.events_B1.append([cords, launch_func])
 *         if event_type is self.ev_type[1]:
 *            self.events_B2.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[2]:
 *            self.events_B3.append([cords, launch_func])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_B2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 532, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":531
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 *         if event_type is self.ev_type[1]:             # <<<<<<<<<<<<<<
 *            self.events_B2.append([cords, launch_func])
 *         if event_type is self.ev_type[2]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":533
 *         if event_type is self.ev_type[1]:
 *            self.events_B2.append([cords, launch_func])
 *         if event_type is self.ev_type[2]:             # <<<<<<<<<<<<<<
 *            self.events_B3.append([cords, launch_func])
 *         if event_type is self.ev_type[3]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":534
 *            self.events_B2.append([cords, launch_func])
 *         if event_type is self.ev_type[2]:
 *            self.events_B3.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[3]:
 *            self.events_MN.append([cords, launch_func])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_B3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 534, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":533
 *         if event_type is self.ev_type[1]:
 *            self.events_B2.append([cords, launch_func])
 *         if event_type is self.ev_type[2]:             # <<<<<<<<<<<<<<
 *            self.events_B3.append([cords, launch_func])
 *         if event_type is self.ev_type[3]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":535
 *         if event_type is self.ev_type[2]:
 *            self.events_B3.append([cords, launch_func])
 *         if event_type is self.ev_type[3]:             # <<<<<<<<<<<<<<
 *            self.events_MN.append([cords, launch_func])
 *         if event_type is self.ev_type[4]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":536
 *            self.events_B3.append([cords, launch_func])
 *         if event_type is self.ev_type[3]:
 *            self.events_MN.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[4]:
 *            self.events_BR.append([cords, launch_func])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_MN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 536, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 536, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 536, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":535
 *         if event_type is self.ev_type[2]:
 *            self.events_B3.append([cords, launch_func])
 *         if event_type is self.ev_type[3]:             # <<<<<<<<<<<<<<
 *            self.events_MN.append([cords, launch_func])
 *         if event_type is self.ev_type[4]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":537
 *         if event_type is self.ev_type[3]:
 *            self.events_MN.append([cords, launch_func])
 *         if event_type is self.ev_type[4]:             # <<<<<<<<<<<<<<
 *            self.events_BR.append([cords, launch_func])
 *         if event_type is self.ev_type[5]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":538
 *            self.events_MN.append([cords, launch_func])
 *         if event_type is self.ev_type[4]:
 *            self.events_BR.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_BR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 538, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":537
 *         if event_type is self.ev_type[3]:
 *            self.events_MN.append([cords, launch_func])
 *         if event_type is self.ev_type[4]:             # <<<<<<<<<<<<<<
 *            self.events_BR.append([cords, launch_func])
 *         if event_type is self.ev_type[5]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":539
 *         if event_type is self.ev_type[4]:
 *            self.events_BR.append([cords, launch_func])
 *         if event_type is self.ev_type[5]:             # <<<<<<<<<<<<<<
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ev_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__pyx_v_event_type == __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":540
 *            self.events_BR.append([cords, launch_func])
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])             # <<<<<<<<<<<<<<
 *     def check_event_button_1(self,event,c,func):
 *         if event.x > c[0]:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_events_BP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_cords);
    __Pyx_GIVEREF(__pyx_v_cords);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords);
    __Pyx_INCREF(__pyx_v_launch_func);
    __Pyx_GIVEREF(__pyx_v_launch_func);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_launch_func);
    __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 540, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":539
 *         if event_type is self.ev_type[4]:
 *            self.events_BR.append([cords, launch_func])
 *         if event_type is self.ev_type[5]:             # <<<<<<<<<<<<<<
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":528
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.create_event", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":541
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):             # <<<<<<<<<<<<<<
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_9check_event_button_1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_9check_event_button_1 = {"check_event_button_1", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_9check_event_button_1, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_9check_event_button_1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  PyObject *__pyx_v_c = 0;
  PyObject *__pyx_v_func = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("check_event_button_1 (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,&__pyx_n_s_c,&__pyx_n_s_func,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,&__pyx_n_s_c,&__pyx_n_s_func,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_event_button_1", 1, 4, 4, 1); __PYX_ERR(0, 541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_c)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_event_button_1", 1, 4, 4, 2); __PYX_ERR(0, 541, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_func)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("check_event_button_1", 1, 4, 4, 3); __PYX_ERR(0, 541, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "check_event_button_1") < 0)) __PYX_ERR(0, 541, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
    __pyx_v_c = values[2];
    __pyx_v_func = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("check_event_button_1", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 541, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_event_button_1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_8check_event_button_1(__pyx_self, __pyx_v_self, __pyx_v_event, __pyx_v_c, __pyx_v_func);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_8check_event_button_1(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_event, PyObject *__pyx_v_c, PyObject *__pyx_v_func) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("check_event_button_1", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":542
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):
 *         if event.x > c[0]:             # <<<<<<<<<<<<<<
 *             if c[2] > event.x:
 *                 if event.y > c[1]:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_c, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":543
 *     def check_event_button_1(self,event,c,func):
 *         if event.x > c[0]:
 *             if c[2] > event.x:             # <<<<<<<<<<<<<<
 *                 if event.y > c[1]:
 *                     if c[2] > event.y:
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 543, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_4) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":544
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 *                 if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                     if c[2] > event.y:
 *                         func()
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 544, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_c, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 544, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 544, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 544, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_4) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":545
 *             if c[2] > event.x:
 *                 if event.y > c[1]:
 *                     if c[2] > event.y:             # <<<<<<<<<<<<<<
 *                         func()
 * 
 */
        __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 545, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__pyx_t_4) {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":546
 *                 if event.y > c[1]:
 *                     if c[2] > event.y:
 *                         func()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kw):
 */
          __Pyx_INCREF(__pyx_v_func);
          __pyx_t_2 = __pyx_v_func; __pyx_t_3 = NULL;
          __pyx_t_5 = 0;
          if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_5 = 1;
            }
          }
          {
            PyObject *__pyx_callargs[1] = {__pyx_t_3, };
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 546, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":545
 *             if c[2] > event.x:
 *                 if event.y > c[1]:
 *                     if c[2] > event.y:             # <<<<<<<<<<<<<<
 *                         func()
 * 
 */
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":544
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 *                 if event.y > c[1]:             # <<<<<<<<<<<<<<
 *                     if c[2] > event.y:
 *                         func()
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":543
 *     def check_event_button_1(self,event,c,func):
 *         if event.x > c[0]:
 *             if c[2] > event.x:             # <<<<<<<<<<<<<<
 *                 if event.y > c[1]:
 *                     if c[2] > event.y:
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":542
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):
 *         if event.x > c[0]:             # <<<<<<<<<<<<<<
 *             if c[2] > event.x:
 *                 if event.y > c[1]:
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":541
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):             # <<<<<<<<<<<<<<
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.check_event_button_1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":548
 *                         func()
 * 
 *     def __init__(self, *args, **kw):             # <<<<<<<<<<<<<<
 *         # Set background to empty string to avoid
 *         # flickering overdraw by Tk
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_11__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_11__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_11__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_11__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kw = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  __pyx_v_args = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 548, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kw, values + 0, used_pos_args, "__init__") < 0)) __PYX_ERR(0, 548, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 548, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_10__init__(__pyx_self, __pyx_v_self, __pyx_v_args, __pyx_v_kw);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_10__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":551
 *         # Set background to empty string to avoid
 *         # flickering overdraw by Tk
 *         kw['bg'] =""             # <<<<<<<<<<<<<<
 *         tk.Frame.__init__( self, *args, **kw )
 *         self.bind('<Map>', self.tkMap )
 */
  if (unlikely(PyDict_SetItem(__pyx_v_kw, __pyx_n_s_bg, __pyx_kp_s__9) < 0)) __PYX_ERR(0, 551, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":552
 *         # flickering overdraw by Tk
 *         kw['bg'] =""
 *         tk.Frame.__init__( self, *args, **kw )             # <<<<<<<<<<<<<<
 *         self.bind('<Map>', self.tkMap )
 *         self.bind('<Configure>', self.tkResize )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tk); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Frame); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_args); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_v_kw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":553
 *         kw['bg'] =""
 *         tk.Frame.__init__( self, *args, **kw )
 *         self.bind('<Map>', self.tkMap )             # <<<<<<<<<<<<<<
 *         self.bind('<Configure>', self.tkResize )
 *         self.bind('<Expose>', self.tkExpose )
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkMap); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Map, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":554
 *         tk.Frame.__init__( self, *args, **kw )
 *         self.bind('<Map>', self.tkMap )
 *         self.bind('<Configure>', self.tkResize )             # <<<<<<<<<<<<<<
 *         self.bind('<Expose>', self.tkExpose )
 *         self.bind('<Button-1>',self.check_all_b1_events)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkResize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Configure, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 554, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":555
 *         self.bind('<Map>', self.tkMap )
 *         self.bind('<Configure>', self.tkResize )
 *         self.bind('<Expose>', self.tkExpose )             # <<<<<<<<<<<<<<
 *         self.bind('<Button-1>',self.check_all_b1_events)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkExpose); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Expose, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":556
 *         self.bind('<Configure>', self.tkResize )
 *         self.bind('<Expose>', self.tkExpose )
 *         self.bind('<Button-1>',self.check_all_b1_events)             # <<<<<<<<<<<<<<
 * 
 *         #self.bind('<ButtonPress>',self.check_all_bpress_events)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_check_all_b1_events); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_1_2, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":561
 *         #self.bind('<ButtonRelease>',self.check_all_brelase_events)
 * 
 *         self.animate = 0             # <<<<<<<<<<<<<<
 *         self.cb = None
 *         self.freecalc_update = 1
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_animate, __pyx_int_0) < 0) __PYX_ERR(0, 561, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":562
 * 
 *         self.animate = 0
 *         self.cb = None             # <<<<<<<<<<<<<<
 *         self.freecalc_update = 1
 *         self.ev_list = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_cb, Py_None) < 0) __PYX_ERR(0, 562, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":563
 *         self.animate = 0
 *         self.cb = None
 *         self.freecalc_update = 1             # <<<<<<<<<<<<<<
 *         self.ev_list = []
 *         self.events_B1 = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_freecalc_update, __pyx_int_1) < 0) __PYX_ERR(0, 563, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":564
 *         self.cb = None
 *         self.freecalc_update = 1
 *         self.ev_list = []             # <<<<<<<<<<<<<<
 *         self.events_B1 = []
 *         self.events_B2 = []
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ev_list, __pyx_t_2) < 0) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":565
 *         self.freecalc_update = 1
 *         self.ev_list = []
 *         self.events_B1 = []             # <<<<<<<<<<<<<<
 *         self.events_B2 = []
 *         self.events_B3 = []
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_B1, __pyx_t_2) < 0) __PYX_ERR(0, 565, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":566
 *         self.ev_list = []
 *         self.events_B1 = []
 *         self.events_B2 = []             # <<<<<<<<<<<<<<
 *         self.events_B3 = []
 *         self.events_MN = []
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_B2, __pyx_t_2) < 0) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":567
 *         self.events_B1 = []
 *         self.events_B2 = []
 *         self.events_B3 = []             # <<<<<<<<<<<<<<
 *         self.events_MN = []
 *         self.events_BR = []
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_B3, __pyx_t_2) < 0) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":568
 *         self.events_B2 = []
 *         self.events_B3 = []
 *         self.events_MN = []             # <<<<<<<<<<<<<<
 *         self.events_BR = []
 *         self.events_BP = []
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_MN, __pyx_t_2) < 0) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":569
 *         self.events_B3 = []
 *         self.events_MN = []
 *         self.events_BR = []             # <<<<<<<<<<<<<<
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_BR, __pyx_t_2) < 0) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":570
 *         self.events_MN = []
 *         self.events_BR = []
 *         self.events_BP = []             # <<<<<<<<<<<<<<
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 *     def tkMap( self, evt ):
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_events_BP, __pyx_t_2) < 0) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":571
 *         self.events_BR = []
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion             # <<<<<<<<<<<<<<
 *     def tkMap( self, evt ):
 *         """" Called when frame goes onto the screen """
 */
  __pyx_t_2 = PyList_New(6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_B1);
  __Pyx_GIVEREF(__pyx_n_s_B1);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_B1);
  __Pyx_INCREF(__pyx_n_s_B2);
  __Pyx_GIVEREF(__pyx_n_s_B2);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_B2);
  __Pyx_INCREF(__pyx_n_s_B3);
  __Pyx_GIVEREF(__pyx_n_s_B3);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_B3);
  __Pyx_INCREF(__pyx_n_s_MN);
  __Pyx_GIVEREF(__pyx_n_s_MN);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_MN);
  __Pyx_INCREF(__pyx_n_s_BR);
  __Pyx_GIVEREF(__pyx_n_s_BR);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_BR);
  __Pyx_INCREF(__pyx_n_s_BP);
  __Pyx_GIVEREF(__pyx_n_s_BP);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_BP);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ev_type, __pyx_t_2) < 0) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":548
 *                         func()
 * 
 *     def __init__(self, *args, **kw):             # <<<<<<<<<<<<<<
 *         # Set background to empty string to avoid
 *         # flickering overdraw by Tk
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":572
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 *     def tkMap( self, evt ):             # <<<<<<<<<<<<<<
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_13tkMap(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_12tkMap, "\" Called when frame goes onto the screen ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_13tkMap = {"tkMap", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_13tkMap, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_12tkMap};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_13tkMap(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_evt = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkMap (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_evt)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 572, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkMap", 1, 2, 2, 1); __PYX_ERR(0, 572, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkMap") < 0)) __PYX_ERR(0, 572, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_evt = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkMap", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 572, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkMap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_12tkMap(__pyx_self, __pyx_v_self, __pyx_v_evt);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_12tkMap(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_evt) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkMap", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":574
 *     def tkMap( self, evt ):
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()             # <<<<<<<<<<<<<<
 *         self.tkCreateContext( )
 *         self.initgl()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_wid, __pyx_t_1) < 0) __PYX_ERR(0, 574, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":575
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()
 *         self.tkCreateContext( )             # <<<<<<<<<<<<<<
 *         self.initgl()
 *     def printContext(self, extns=False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkCreateContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":576
 *         self._wid = self.winfo_id()
 *         self.tkCreateContext( )
 *         self.initgl()             # <<<<<<<<<<<<<<
 *     def printContext(self, extns=False):
 *         """ For debugging """
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_initgl); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":572
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 *     def tkMap( self, evt ):             # <<<<<<<<<<<<<<
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkMap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":577
 *         self.tkCreateContext( )
 *         self.initgl()
 *     def printContext(self, extns=False):             # <<<<<<<<<<<<<<
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_15printContext(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_14printContext, " For debugging ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_15printContext = {"printContext", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_15printContext, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_14printContext};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_15printContext(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_extns = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("printContext (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_extns,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_extns,0};
    #endif
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 577, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_extns);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 577, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "printContext") < 0)) __PYX_ERR(0, 577, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_extns = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("printContext", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 577, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.printContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_14printContext(__pyx_self, __pyx_v_self, __pyx_v_extns);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_14printContext(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_extns) {
  PyObject *__pyx_v_exts = NULL;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_v_msk = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("printContext", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":579
 *     def printContext(self, extns=False):
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)             # <<<<<<<<<<<<<<
 *         if extns:
 *             print("Extension list:")
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGetString); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_EXTENSIONS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_exts = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":580
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 *         if extns:             # <<<<<<<<<<<<<<
 *             print("Extension list:")
 *             for e in sorted(exts.split()):
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_extns); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 580, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":581
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 *         if extns:
 *             print("Extension list:")             # <<<<<<<<<<<<<<
 *             for e in sorted(exts.split()):
 *                 print(  "\t", e )
 */
    if (__Pyx_PrintOne(0, __pyx_kp_s_Extension_list) < 0) __PYX_ERR(0, 581, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":582
 *         if extns:
 *             print("Extension list:")
 *             for e in sorted(exts.split()):             # <<<<<<<<<<<<<<
 *                 print(  "\t", e )
 *         else:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_exts, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 582, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_2, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 582, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_4 = PySequence_List(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 582, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_1 = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_7 = PyList_Sort(__pyx_t_1); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 582, __pyx_L1_error)
    __pyx_t_4 = __pyx_t_1; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 582, __pyx_L1_error)
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 582, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_e, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":583
 *             print("Extension list:")
 *             for e in sorted(exts.split()):
 *                 print(  "\t", e )             # <<<<<<<<<<<<<<
 *         else:
 *             print("Number of extensions:",len(exts.split()))
 */
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 583, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_kp_s__10);
      __Pyx_GIVEREF(__pyx_kp_s__10);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s__10);
      __Pyx_INCREF(__pyx_v_e);
      __Pyx_GIVEREF(__pyx_v_e);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_e);
      if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 583, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":582
 *         if extns:
 *             print("Extension list:")
 *             for e in sorted(exts.split()):             # <<<<<<<<<<<<<<
 *                 print(  "\t", e )
 *         else:
 */
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":580
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 *         if extns:             # <<<<<<<<<<<<<<
 *             print("Extension list:")
 *             for e in sorted(exts.split()):
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":585
 *                 print(  "\t", e )
 *         else:
 *             print("Number of extensions:",len(exts.split()))             # <<<<<<<<<<<<<<
 *         print( "GL_VENDOR  :",GL.glGetString(GL.GL_VENDOR))
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_exts, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_3, };
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 585, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_8 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_kp_s_Number_of_extensions);
    __Pyx_GIVEREF(__pyx_kp_s_Number_of_extensions);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_Number_of_extensions);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
    __pyx_t_4 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":586
 *         else:
 *             print("Number of extensions:",len(exts.split()))
 *         print( "GL_VENDOR  :",GL.glGetString(GL.GL_VENDOR))             # <<<<<<<<<<<<<<
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glGetString); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_VENDOR_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_GL_VENDOR);
  __Pyx_GIVEREF(__pyx_kp_s_GL_VENDOR);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_GL_VENDOR);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 586, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":587
 *             print("Number of extensions:",len(exts.split()))
 *         print( "GL_VENDOR  :",GL.glGetString(GL.GL_VENDOR))
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))             # <<<<<<<<<<<<<<
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 *         try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glGetString); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GL_RENDERER_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_GL_RENDERER);
  __Pyx_GIVEREF(__pyx_kp_s_GL_RENDERER);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_GL_RENDERER);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":588
 *         print( "GL_VENDOR  :",GL.glGetString(GL.GL_VENDOR))
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))             # <<<<<<<<<<<<<<
 *         try:
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glGetString); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_VERSION_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 588, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_kp_s_GL_VERSION);
  __Pyx_GIVEREF(__pyx_kp_s_GL_VERSION);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_GL_VERSION);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 588, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":589
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 *         try:             # <<<<<<<<<<<<<<
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_11);
    /*try:*/ {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":590
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 *         try:
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))             # <<<<<<<<<<<<<<
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 *             print(" GL_SHADING_LANGUAGE_VERSION :",
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGetIntegerv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_MAJOR_VERSION_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 590, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_kp_s_GL_MAJOR_VERSION);
      __Pyx_GIVEREF(__pyx_kp_s_GL_MAJOR_VERSION);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_GL_MAJOR_VERSION);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_4);
      __pyx_t_4 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 590, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":591
 *         try:
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))             # <<<<<<<<<<<<<<
 *             print(" GL_SHADING_LANGUAGE_VERSION :",
 *                     GL.glGetString(GL.GL_SHADING_LANGUAGE_VERSION))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glGetIntegerv); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_MINOR_VERSION_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 591, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_kp_s_GL_MINOR_VERSION);
      __Pyx_GIVEREF(__pyx_kp_s_GL_MINOR_VERSION);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_GL_MINOR_VERSION);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 591, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":593
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 *             print(" GL_SHADING_LANGUAGE_VERSION :",
 *                     GL.glGetString(GL.GL_SHADING_LANGUAGE_VERSION))             # <<<<<<<<<<<<<<
 *             msk = GL.glGetIntegerv(GL.GL_CONTEXT_PROFILE_MASK)
 *             print(" GL_CONTEXT_CORE_PROFILE_BIT :",
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 593, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glGetString); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 593, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 593, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":592
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 *             print(" GL_SHADING_LANGUAGE_VERSION :",             # <<<<<<<<<<<<<<
 *                     GL.glGetString(GL.GL_SHADING_LANGUAGE_VERSION))
 *             msk = GL.glGetIntegerv(GL.GL_CONTEXT_PROFILE_MASK)
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION);
      __Pyx_GIVEREF(__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_GL_SHADING_LANGUAGE_VERSION);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
      __pyx_t_3 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 592, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":594
 *             print(" GL_SHADING_LANGUAGE_VERSION :",
 *                     GL.glGetString(GL.GL_SHADING_LANGUAGE_VERSION))
 *             msk = GL.glGetIntegerv(GL.GL_CONTEXT_PROFILE_MASK)             # <<<<<<<<<<<<<<
 *             print(" GL_CONTEXT_CORE_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_CORE_PROFILE_BIT) )
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glGetIntegerv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 594, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 594, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_CONTEXT_PROFILE_MASK); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 594, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_1};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 594, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_v_msk = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":596
 *             msk = GL.glGetIntegerv(GL.GL_CONTEXT_PROFILE_MASK)
 *             print(" GL_CONTEXT_CORE_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_CORE_PROFILE_BIT) )             # <<<<<<<<<<<<<<
 *             print(" GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT) )
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 596, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 596, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_And(__pyx_v_msk, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 596, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 596, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyBool_FromLong((!(!__pyx_t_6))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 596, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":595
 *                     GL.glGetString(GL.GL_SHADING_LANGUAGE_VERSION))
 *             msk = GL.glGetIntegerv(GL.GL_CONTEXT_PROFILE_MASK)
 *             print(" GL_CONTEXT_CORE_PROFILE_BIT :",             # <<<<<<<<<<<<<<
 *                    bool( msk & GL.GL_CONTEXT_CORE_PROFILE_BIT) )
 *             print(" GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :",
 */
      __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT);
      __Pyx_GIVEREF(__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
      __pyx_t_2 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) __PYX_ERR(0, 595, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":598
 *                    bool( msk & GL.GL_CONTEXT_CORE_PROFILE_BIT) )
 *             print(" GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT) )             # <<<<<<<<<<<<<<
 *         except:
 *             print("Old context errors arose")
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 598, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 598, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_And(__pyx_v_msk, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 598, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 598, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyBool_FromLong((!(!__pyx_t_6))); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 598, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_4);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":597
 *             print(" GL_CONTEXT_CORE_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_CORE_PROFILE_BIT) )
 *             print(" GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :",             # <<<<<<<<<<<<<<
 *                    bool( msk & GL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT) )
 *         except:
 */
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 597, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL);
      __Pyx_GIVEREF(__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
      __pyx_t_4 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 597, __pyx_L6_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":589
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 *         try:             # <<<<<<<<<<<<<<
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 */
    }
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    goto __pyx_L11_try_end;
    __pyx_L6_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":599
 *             print(" GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :",
 *                    bool( msk & GL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT) )
 *         except:             # <<<<<<<<<<<<<<
 *             print("Old context errors arose")
 *             # raise
 */
    /*except:*/ {
      __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.printContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_4, &__pyx_t_1) < 0) __PYX_ERR(0, 599, __pyx_L8_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_1);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":600
 *                    bool( msk & GL.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT) )
 *         except:
 *             print("Old context errors arose")             # <<<<<<<<<<<<<<
 *             # raise
 *     def tkCreateContext( self ):
 */
      if (__Pyx_PrintOne(0, __pyx_kp_s_Old_context_errors_arose) < 0) __PYX_ERR(0, 600, __pyx_L8_except_error)
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L7_exception_handled;
    }
    __pyx_L8_except_error:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":589
 *         print( "GL_RENDERER:",GL.glGetString(GL.GL_RENDERER))
 *         print( "GL_VERSION :",GL.glGetString(GL.GL_VERSION))
 *         try:             # <<<<<<<<<<<<<<
 *             print(" GL_MAJOR_VERSION:", GL.glGetIntegerv( GL.GL_MAJOR_VERSION ))
 *             print(" GL_MINOR_VERSION:", GL.glGetIntegerv( GL.GL_MINOR_VERSION ))
 */
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    goto __pyx_L1_error;
    __pyx_L7_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    __pyx_L11_try_end:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":577
 *         self.tkCreateContext( )
 *         self.initgl()
 *     def printContext(self, extns=False):             # <<<<<<<<<<<<<<
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.printContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_exts);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_v_msk);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":602
 *             print("Old context errors arose")
 *             # raise
 *     def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_17tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_17tkCreateContext = {"tkCreateContext", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_17tkCreateContext, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_17tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkCreateContext (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_16tkCreateContext(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_16tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkCreateContext", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":604
 *     def tkCreateContext( self ):
 *         # Platform dependent part
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def tkMakeCurrent( self ):
 *         # Platform dependent part
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 604, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":602
 *             print("Old context errors arose")
 *             # raise
 *     def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkCreateContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":605
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_19tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_19tkMakeCurrent = {"tkMakeCurrent", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_19tkMakeCurrent, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_19tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkMakeCurrent (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_18tkMakeCurrent(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_18tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkMakeCurrent", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":607
 *     def tkMakeCurrent( self ):
 *         # Platform dependent part
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def tkSwapBuffers( self ):
 *         # Platform dependent part
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 607, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":605
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkMakeCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":608
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_21tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_21tkSwapBuffers = {"tkSwapBuffers", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_21tkSwapBuffers, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_21tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkSwapBuffers (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_20tkSwapBuffers(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_20tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkSwapBuffers", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":610
 *     def tkSwapBuffers( self ):
 *         # Platform dependent part
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def tkExpose( self, evt):
 *         if self.cb:
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 610, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":608
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkSwapBuffers", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":611
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkExpose( self, evt):             # <<<<<<<<<<<<<<
 *         if self.cb:
 *             self.after_cancel(self.cb)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_23tkExpose(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_23tkExpose = {"tkExpose", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_23tkExpose, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_23tkExpose(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_evt = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkExpose (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 611, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_evt)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 611, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkExpose", 1, 2, 2, 1); __PYX_ERR(0, 611, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkExpose") < 0)) __PYX_ERR(0, 611, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_evt = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkExpose", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 611, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkExpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_22tkExpose(__pyx_self, __pyx_v_self, __pyx_v_evt);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_22tkExpose(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_evt) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkExpose", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":612
 *         raise NotImplementedError
 *     def tkExpose( self, evt):
 *         if self.cb:             # <<<<<<<<<<<<<<
 *             self.after_cancel(self.cb)
 *         self._display()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cb); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":613
 *     def tkExpose( self, evt):
 *         if self.cb:
 *             self.after_cancel(self.cb)             # <<<<<<<<<<<<<<
 *         self._display()
 *     def tkResize( self, evt ):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_after_cancel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cb); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_4};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 613, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":612
 *         raise NotImplementedError
 *     def tkExpose( self, evt):
 *         if self.cb:             # <<<<<<<<<<<<<<
 *             self.after_cancel(self.cb)
 *         self._display()
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":614
 *         if self.cb:
 *             self.after_cancel(self.cb)
 *         self._display()             # <<<<<<<<<<<<<<
 *     def tkResize( self, evt ):
 *         """
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_display); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 614, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":611
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkExpose( self, evt):             # <<<<<<<<<<<<<<
 *         if self.cb:
 *             self.after_cancel(self.cb)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkExpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":615
 *             self.after_cancel(self.cb)
 *         self._display()
 *     def tkResize( self, evt ):             # <<<<<<<<<<<<<<
 *         """
 *         Things to do on window resize:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_25tkResize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_24tkResize, "\n        Things to do on window resize:\n        Adjust viewport:\n            glViewPort(0,0, width, height)\n        Adjust projection matrix:\n            glFrustum(left * ratio, right * ratio, bottom, top, nearClip,farClip)\n        or\n            glOrtho(left * ratio, right * ratio, bottom, top, nearClip,farClip)\n        or\n            gluOrtho2D(left * ratio, right * ratio, bottom, top)\n        (assuming that left, right, bottom and top are all equal and\n         ratio=width/height)\n        ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_25tkResize = {"tkResize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_25tkResize, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_24tkResize};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_25tkResize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_evt = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkResize (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_evt,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_evt)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 615, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkResize", 1, 2, 2, 1); __PYX_ERR(0, 615, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkResize") < 0)) __PYX_ERR(0, 615, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_evt = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkResize", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 615, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkResize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_24tkResize(__pyx_self, __pyx_v_self, __pyx_v_evt);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_24tkResize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_evt) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkResize", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":629
 *          ratio=width/height)
 *         """
 *         self.width, self.height = evt.width, evt.height             # <<<<<<<<<<<<<<
 *         if self.winfo_ismapped():
 *             GL.glViewport( 0, 0, self.width, self.height )
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_evt, __pyx_n_s_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_evt, __pyx_n_s_height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_width, __pyx_t_1) < 0) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_height, __pyx_t_2) < 0) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":630
 *         """
 *         self.width, self.height = evt.width, evt.height
 *         if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *             GL.glViewport( 0, 0, self.width, self.height )
 *             self.initgl()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_ismapped); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 630, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_5) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":631
 *         self.width, self.height = evt.width, evt.height
 *         if self.winfo_ismapped():
 *             GL.glViewport( 0, 0, self.width, self.height )             # <<<<<<<<<<<<<<
 *             self.initgl()
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glViewport); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_height); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 631, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_7, __pyx_int_0, __pyx_int_0, __pyx_t_1, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 4+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 631, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":632
 *         if self.winfo_ismapped():
 *             GL.glViewport( 0, 0, self.width, self.height )
 *             self.initgl()             # <<<<<<<<<<<<<<
 * 
 *     def _display(self):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_initgl); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 632, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_6, };
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 632, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":630
 *         """
 *         self.width, self.height = evt.width, evt.height
 *         if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *             GL.glViewport( 0, 0, self.width, self.height )
 *             self.initgl()
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":615
 *             self.after_cancel(self.cb)
 *         self._display()
 *     def tkResize( self, evt ):             # <<<<<<<<<<<<<<
 *         """
 *         Things to do on window resize:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.tkResize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":634
 *             self.initgl()
 * 
 *     def _display(self):             # <<<<<<<<<<<<<<
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_27_display(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_27_display = {"_display", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_27_display, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_27_display(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_display (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_26_display(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_26_display(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_display", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":635
 * 
 *     def _display(self):
 *         if self.freecalc_update is 1:             # <<<<<<<<<<<<<<
 *             self.freecalc_update=0
 *             th.start_new_thread(self.freecalc,())
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_freecalc_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 == __pyx_int_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":636
 *     def _display(self):
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0             # <<<<<<<<<<<<<<
 *             th.start_new_thread(self.freecalc,())
 *         self.update_idletasks()
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_freecalc_update, __pyx_int_0) < 0) __PYX_ERR(0, 636, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":637
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0
 *             th.start_new_thread(self.freecalc,())             # <<<<<<<<<<<<<<
 *         self.update_idletasks()
 *         self.tkMakeCurrent()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_th); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_start_new_thread); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_freecalc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_4, __pyx_empty_tuple};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 637, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":635
 * 
 *     def _display(self):
 *         if self.freecalc_update is 1:             # <<<<<<<<<<<<<<
 *             self.freecalc_update=0
 *             th.start_new_thread(self.freecalc,())
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":638
 *             self.freecalc_update=0
 *             th.start_new_thread(self.freecalc,())
 *         self.update_idletasks()             # <<<<<<<<<<<<<<
 *         self.tkMakeCurrent()
 *         self.redraw()
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_idletasks); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 638, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":639
 *             th.start_new_thread(self.freecalc,())
 *         self.update_idletasks()
 *         self.tkMakeCurrent()             # <<<<<<<<<<<<<<
 *         self.redraw()
 *         if self.animate > 0:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkMakeCurrent); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":640
 *         self.update_idletasks()
 *         self.tkMakeCurrent()
 *         self.redraw()             # <<<<<<<<<<<<<<
 *         if self.animate > 0:
 *             self.cb = self.after(self.animate, self._display )
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_redraw); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":641
 *         self.tkMakeCurrent()
 *         self.redraw()
 *         if self.animate > 0:             # <<<<<<<<<<<<<<
 *             self.cb = self.after(self.animate, self._display )
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_animate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":642
 *         self.redraw()
 *         if self.animate > 0:
 *             self.cb = self.after(self.animate, self._display )             # <<<<<<<<<<<<<<
 * 
 *     def initgl(self):
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_after); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_animate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_display); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_8, __pyx_t_4, __pyx_t_6};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 642, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_cb, __pyx_t_5) < 0) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":641
 *         self.tkMakeCurrent()
 *         self.redraw()
 *         if self.animate > 0:             # <<<<<<<<<<<<<<
 *             self.cb = self.after(self.animate, self._display )
 * 
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":634
 *             self.initgl()
 * 
 *     def _display(self):             # <<<<<<<<<<<<<<
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame._display", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":644
 *             self.cb = self.after(self.animate, self._display )
 * 
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_29initgl(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_29initgl = {"initgl", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_29initgl, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_29initgl(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initgl (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_28initgl(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_28initgl(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initgl", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":646
 *     def initgl(self):
 *         # For the user code
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def freecalc(self):
 *         #for user code 2
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 646, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":644
 *             self.cb = self.after(self.animate, self._display )
 * 
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.initgl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":647
 *         # For the user code
 *         raise NotImplementedError
 *     def freecalc(self):             # <<<<<<<<<<<<<<
 *         #for user code 2
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_31freecalc(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_31freecalc = {"freecalc", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_31freecalc, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_31freecalc(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("freecalc (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_30freecalc(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_30freecalc(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("freecalc", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":649
 *     def freecalc(self):
 *         #for user code 2
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def redraw(self):
 *         # For the user code
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 649, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":647
 *         # For the user code
 *         raise NotImplementedError
 *     def freecalc(self):             # <<<<<<<<<<<<<<
 *         #for user code 2
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.freecalc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":650
 *         #for user code 2
 *         raise NotImplementedError
 *     def redraw(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_33redraw(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_33redraw = {"redraw", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_33redraw, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_33redraw(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("redraw (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_32redraw(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_32redraw(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("redraw", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":652
 *     def redraw(self):
 *         # For the user code
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 *     def wait(self,t):
 *         time.sleep(t)
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 652, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":650
 *         #for user code 2
 *         raise NotImplementedError
 *     def redraw(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.redraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":653
 *         # For the user code
 *         raise NotImplementedError
 *     def wait(self,t):             # <<<<<<<<<<<<<<
 *         time.sleep(t)
 *     def free_calc_update(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_35wait(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_35wait = {"wait", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_35wait, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_35wait(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_t = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wait (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_t,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_t,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 653, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_t)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 653, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("wait", 1, 2, 2, 1); __PYX_ERR(0, 653, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "wait") < 0)) __PYX_ERR(0, 653, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_t = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("wait", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 653, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_34wait(__pyx_self, __pyx_v_self, __pyx_v_t);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_34wait(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_t) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wait", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":654
 *         raise NotImplementedError
 *     def wait(self,t):
 *         time.sleep(t)             # <<<<<<<<<<<<<<
 *     def free_calc_update(self):
 *         self.freecalc_update = 1
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sleep); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_t};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 654, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":653
 *         # For the user code
 *         raise NotImplementedError
 *     def wait(self,t):             # <<<<<<<<<<<<<<
 *         time.sleep(t)
 *     def free_calc_update(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":655
 *     def wait(self,t):
 *         time.sleep(t)
 *     def free_calc_update(self):             # <<<<<<<<<<<<<<
 *         self.freecalc_update = 1
 * ###############################################################################
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_37free_calc_update(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_37free_calc_update = {"free_calc_update", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_37free_calc_update, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_37free_calc_update(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("free_calc_update (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_36free_calc_update(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_36free_calc_update(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("free_calc_update", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":656
 *         time.sleep(t)
 *     def free_calc_update(self):
 *         self.freecalc_update = 1             # <<<<<<<<<<<<<<
 * ###############################################################################
 * # Windows specific code here:
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_freecalc_update, __pyx_int_1) < 0) __PYX_ERR(0, 656, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":655
 *     def wait(self,t):
 *         time.sleep(t)
 *     def free_calc_update(self):             # <<<<<<<<<<<<<<
 *         self.freecalc_update = 1
 * ###############################################################################
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.baseOpenGLFrame.free_calc_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":682
 *     class OpenGLFrame( baseOpenGLFrame ):
 * 
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_1tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_1tkCreateContext = {"tkCreateContext", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_1tkCreateContext, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_1tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkCreateContext (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_tkCreateContext(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_pixelformat = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkCreateContext", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":683
 * 
 *         def tkCreateContext( self ):
 *             self.__window = GetDC(self.winfo_id())             # <<<<<<<<<<<<<<
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 *             SetPixelFormat(self.__window, pixelformat, pfd)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GetDC); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_id); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window, __pyx_t_1) < 0) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":684
 *         def tkCreateContext( self ):
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)             # <<<<<<<<<<<<<<
 *             SetPixelFormat(self.__window, pixelformat, pfd)
 *             self.__context = wglCreateContext(self.__window)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ChoosePixelFormat); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pfd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 684, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_pixelformat = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":685
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 *             SetPixelFormat(self.__window, pixelformat, pfd)             # <<<<<<<<<<<<<<
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SetPixelFormat); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pfd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_t_4, __pyx_v_pixelformat, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 685, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":686
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 *             SetPixelFormat(self.__window, pixelformat, pfd)
 *             self.__context = wglCreateContext(self.__window)             # <<<<<<<<<<<<<<
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_wglCreateContext); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 686, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context, __pyx_t_1) < 0) __PYX_ERR(0, 686, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":687
 *             SetPixelFormat(self.__window, pixelformat, pfd)
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)             # <<<<<<<<<<<<<<
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_wglMakeCurrent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 687, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":682
 *     class OpenGLFrame( baseOpenGLFrame ):
 * 
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkCreateContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pixelformat);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":688
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 wglMakeCurrent( self.__window, self.__context)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_3tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_3tkMakeCurrent = {"tkMakeCurrent", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_3tkMakeCurrent, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_3tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkMakeCurrent (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_2tkMakeCurrent(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_2tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkMakeCurrent", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":689
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_ismapped); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 689, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":690
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():
 *                 wglMakeCurrent( self.__window, self.__context)             # <<<<<<<<<<<<<<
 * 
 *         def tkSwapBuffers( self ):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_wglMakeCurrent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_3, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 690, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":689
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":688
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 wglMakeCurrent( self.__window, self.__context)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkMakeCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":692
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 SwapBuffers(self.__window)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_5tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_5tkSwapBuffers = {"tkSwapBuffers", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_5tkSwapBuffers, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_5tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkSwapBuffers (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_4tkSwapBuffers(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_4tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkSwapBuffers", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":693
 * 
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 SwapBuffers(self.__window)
 * # END Windows specific code
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_ismapped); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":694
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():
 *                 SwapBuffers(self.__window)             # <<<<<<<<<<<<<<
 * # END Windows specific code
 * ###############################################################################
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SwapBuffers); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 694, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":693
 * 
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 SwapBuffers(self.__window)
 * # END Windows specific code
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":692
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 SwapBuffers(self.__window)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkSwapBuffers", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":733
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 *             # Check glx version:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_7tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_7tkCreateContext = {"tkCreateContext", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_7tkCreateContext, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_7tkCreateContext(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkCreateContext (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_6tkCreateContext(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_6tkCreateContext(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_major = NULL;
  PyObject *__pyx_v_minor = NULL;
  PyObject *__pyx_v_visual = NULL;
  PyObject *__pyx_v_XDefaultScreen = NULL;
  PyObject *__pyx_v_screen = NULL;
  PyObject *__pyx_v_ncfg = NULL;
  PyObject *__pyx_v_cfgs = NULL;
  PyObject *__pyx_v_ideal = NULL;
  PyObject *__pyx_v_best = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_vis = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_extensions = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkCreateContext", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":734
 *     class OpenGLFrame( baseOpenGLFrame ):
 *         def tkCreateContext( self ):
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))             # <<<<<<<<<<<<<<
 *             # Check glx version:
 *             major = c_int(0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_XOpenDisplay); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 734, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_screen); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_6, };
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_encode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 734, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_kp_s_utf_8};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window, __pyx_t_1) < 0) __PYX_ERR(0, 734, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":736
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 *             # Check glx version:
 *             major = c_int(0)             # <<<<<<<<<<<<<<
 *             minor = c_int(0)
 *             GLX.glXQueryVersion( self.__window, major, minor )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_c_int); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 736, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_major = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":737
 *             # Check glx version:
 *             major = c_int(0)
 *             minor = c_int(0)             # <<<<<<<<<<<<<<
 *             GLX.glXQueryVersion( self.__window, major, minor )
 *             print("GLX version: %d.%d"%(major.value,minor.value))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_c_int); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 737, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_minor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":738
 *             major = c_int(0)
 *             minor = c_int(0)
 *             GLX.glXQueryVersion( self.__window, major, minor )             # <<<<<<<<<<<<<<
 *             print("GLX version: %d.%d"%(major.value,minor.value))
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLX); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glXQueryVersion); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_t_2, __pyx_v_major, __pyx_v_minor};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 738, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":739
 *             minor = c_int(0)
 *             GLX.glXQueryVersion( self.__window, major, minor )
 *             print("GLX version: %d.%d"%(major.value,minor.value))             # <<<<<<<<<<<<<<
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down
 *                 visual = GLX.glXChooseVisual( self.__window, 0,
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_major, __pyx_n_s_value); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_minor, __pyx_n_s_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_GLX_version_d_d, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":740
 *             GLX.glXQueryVersion( self.__window, major, minor )
 *             print("GLX version: %d.%d"%(major.value,minor.value))
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down             # <<<<<<<<<<<<<<
 *                 visual = GLX.glXChooseVisual( self.__window, 0,
 *                                               (GL.GLint * len(att))(* att) )
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_major, __pyx_n_s_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_3, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_9) {
  } else {
    __pyx_t_8 = __pyx_t_9;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_minor, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_3, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_8 = __pyx_t_9;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_8) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":741
 *             print("GLX version: %d.%d"%(major.value,minor.value))
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down
 *                 visual = GLX.glXChooseVisual( self.__window, 0,             # <<<<<<<<<<<<<<
 *                                               (GL.GLint * len(att))(* att) )
 *                 if not visual:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLX); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glXChooseVisual); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":742
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down
 *                 visual = GLX.glXChooseVisual( self.__window, 0,
 *                                               (GL.GLint * len(att))(* att) )             # <<<<<<<<<<<<<<
 *                 if not visual:
 *                     pass
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GLint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_att); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_att); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PySequence_Tuple(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_2, __pyx_int_0, __pyx_t_5};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 741, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_v_visual = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":743
 *                 visual = GLX.glXChooseVisual( self.__window, 0,
 *                                               (GL.GLint * len(att))(* att) )
 *                 if not visual:             # <<<<<<<<<<<<<<
 *                     pass
 *                 self.__context = GLX.glXCreateContext(self.__window,
 */
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_visual); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 743, __pyx_L1_error)
    __pyx_t_9 = ((!__pyx_t_8) != 0);
    if (__pyx_t_9) {
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":745
 *                 if not visual:
 *                     pass
 *                 self.__context = GLX.glXCreateContext(self.__window,             # <<<<<<<<<<<<<<
 *                                                       visual,
 *                                                       None,
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GLX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glXCreateContext); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":748
 *                                                       visual,
 *                                                       None,
 *                                                       GL.GL_TRUE)             # <<<<<<<<<<<<<<
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *                 return # OUT HERE FOR 1.2 and less
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TRUE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_1, __pyx_v_visual, Py_None, __pyx_t_4};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 745, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":745
 *                 if not visual:
 *                     pass
 *                 self.__context = GLX.glXCreateContext(self.__window,             # <<<<<<<<<<<<<<
 *                                                       visual,
 *                                                       None,
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context, __pyx_t_3) < 0) __PYX_ERR(0, 745, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":749
 *                                                       None,
 *                                                       GL.GL_TRUE)
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)             # <<<<<<<<<<<<<<
 *                 return # OUT HERE FOR 1.2 and less
 *             else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GLX); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glXMakeCurrent); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_wid); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 749, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_t_5, __pyx_t_1, __pyx_t_2};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 749, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":750
 *                                                       GL.GL_TRUE)
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *                 return # OUT HERE FOR 1.2 and less             # <<<<<<<<<<<<<<
 *             else:
 *                 XDefaultScreen = _x11lib.XDefaultScreen
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":740
 *             GLX.glXQueryVersion( self.__window, major, minor )
 *             print("GLX version: %d.%d"%(major.value,minor.value))
 *             if major.value == 1 and minor.value < 3: # e.g. 1.2 and down             # <<<<<<<<<<<<<<
 *                 visual = GLX.glXChooseVisual( self.__window, 0,
 *                                               (GL.GLint * len(att))(* att) )
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":752
 *                 return # OUT HERE FOR 1.2 and less
 *             else:
 *                 XDefaultScreen = _x11lib.XDefaultScreen             # <<<<<<<<<<<<<<
 *                 XDefaultScreen.argtypes = [POINTER(Display)]
 *                 XDefaultScreen.restype = c_int
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_x11lib); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_XDefaultScreen); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_XDefaultScreen = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":753
 *             else:
 *                 XDefaultScreen = _x11lib.XDefaultScreen
 *                 XDefaultScreen.argtypes = [POINTER(Display)]             # <<<<<<<<<<<<<<
 *                 XDefaultScreen.restype = c_int
 *                 screen = XDefaultScreen( self.__window )
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_POINTER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Display); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_2};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 753, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __pyx_t_4 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_XDefaultScreen, __pyx_n_s_argtypes, __pyx_t_3) < 0) __PYX_ERR(0, 753, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":754
 *                 XDefaultScreen = _x11lib.XDefaultScreen
 *                 XDefaultScreen.argtypes = [POINTER(Display)]
 *                 XDefaultScreen.restype = c_int             # <<<<<<<<<<<<<<
 *                 screen = XDefaultScreen( self.__window )
 *                 print("Screen is ",screen)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_c_int); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 754, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_XDefaultScreen, __pyx_n_s_restype, __pyx_t_3) < 0) __PYX_ERR(0, 754, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":755
 *                 XDefaultScreen.argtypes = [POINTER(Display)]
 *                 XDefaultScreen.restype = c_int
 *                 screen = XDefaultScreen( self.__window )             # <<<<<<<<<<<<<<
 *                 print("Screen is ",screen)
 *                 # Look at framebuffer configs
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 755, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_XDefaultScreen);
    __pyx_t_2 = __pyx_v_XDefaultScreen; __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_4};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 755, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_v_screen = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":756
 *                 XDefaultScreen.restype = c_int
 *                 screen = XDefaultScreen( self.__window )
 *                 print("Screen is ",screen)             # <<<<<<<<<<<<<<
 *                 # Look at framebuffer configs
 *                 ncfg  = GL.GLint(0)
 */
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_kp_s_Screen_is);
    __Pyx_GIVEREF(__pyx_kp_s_Screen_is);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_Screen_is);
    __Pyx_INCREF(__pyx_v_screen);
    __Pyx_GIVEREF(__pyx_v_screen);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_screen);
    if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 756, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":758
 *                 print("Screen is ",screen)
 *                 # Look at framebuffer configs
 *                 ncfg  = GL.GLint(0)             # <<<<<<<<<<<<<<
 *                 cfgs = GLX.glXChooseFBConfig( self.__window,
 *                                              screen,
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GLint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_int_0};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 758, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_v_ncfg = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":759
 *                 # Look at framebuffer configs
 *                 ncfg  = GL.GLint(0)
 *                 cfgs = GLX.glXChooseFBConfig( self.__window,             # <<<<<<<<<<<<<<
 *                                              screen,
 *                                              (GL.GLint * len(fbatt))(* fbatt),
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glXChooseFBConfig); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":761
 *                 cfgs = GLX.glXChooseFBConfig( self.__window,
 *                                              screen,
 *                                              (GL.GLint * len(fbatt))(* fbatt),             # <<<<<<<<<<<<<<
 *                                              ncfg )
 *                 print( "Number of FBconfigs",ncfg.value )
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GLint); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fbatt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyNumber_Multiply(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_fbatt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":762
 *                                              screen,
 *                                              (GL.GLint * len(fbatt))(* fbatt),
 *                                              ncfg )             # <<<<<<<<<<<<<<
 *                 print( "Number of FBconfigs",ncfg.value )
 *                 #
 */
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_5, __pyx_t_4, __pyx_v_screen, __pyx_t_1, __pyx_v_ncfg};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 759, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_v_cfgs = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":763
 *                                              (GL.GLint * len(fbatt))(* fbatt),
 *                                              ncfg )
 *                 print( "Number of FBconfigs",ncfg.value )             # <<<<<<<<<<<<<<
 *                 #
 *                 # Try to match to the current window
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_ncfg, __pyx_n_s_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 763, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 763, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_kp_s_Number_of_FBconfigs);
    __Pyx_GIVEREF(__pyx_kp_s_Number_of_FBconfigs);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_Number_of_FBconfigs);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 763, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":768
 *                 # ... might also be possible to set this for the frame
 *                 # ... but for now we just take what Tk gave us
 *                 ideal = int(self.winfo_visualid(), 16) # convert from hex             # <<<<<<<<<<<<<<
 *                 best = -1
 *                 for i in range(ncfg.value):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_visualid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_1, };
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __Pyx_INCREF(__pyx_int_16);
    __Pyx_GIVEREF(__pyx_int_16);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_16);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 768, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_ideal = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":769
 *                 # ... but for now we just take what Tk gave us
 *                 ideal = int(self.winfo_visualid(), 16) # convert from hex
 *                 best = -1             # <<<<<<<<<<<<<<
 *                 for i in range(ncfg.value):
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 */
    __Pyx_INCREF(__pyx_int_neg_1);
    __pyx_v_best = __pyx_int_neg_1;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":770
 *                 ideal = int(self.winfo_visualid(), 16) # convert from hex
 *                 best = -1
 *                 for i in range(ncfg.value):             # <<<<<<<<<<<<<<
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 *                     if ideal == vis.contents.visualid:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_ncfg, __pyx_n_s_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 770, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 770, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_10 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 770, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 770, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 770, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 770, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 770, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 770, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_11(__pyx_t_2);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 770, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":771
 *                 best = -1
 *                 for i in range(ncfg.value):
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])             # <<<<<<<<<<<<<<
 *                     if ideal == vis.contents.visualid:
 *                         best = i
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GLX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glXGetVisualFromFBConfig); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_cfgs, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 771, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_1, __pyx_t_5};
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 771, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_vis, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":772
 *                 for i in range(ncfg.value):
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 *                     if ideal == vis.contents.visualid:             # <<<<<<<<<<<<<<
 *                         best = i
 *                         print("Got a matching visual: index %d %d xid %s"%(
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_vis, __pyx_n_s_contents); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 772, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_visualid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 772, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_ideal, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 772, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 772, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_9) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":773
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 *                     if ideal == vis.contents.visualid:
 *                         best = i             # <<<<<<<<<<<<<<
 *                         print("Got a matching visual: index %d %d xid %s"%(
 *                             best,vis.contents.visualid,hex(ideal) ))
 */
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_DECREF_SET(__pyx_v_best, __pyx_v_i);

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":775
 *                         best = i
 *                         print("Got a matching visual: index %d %d xid %s"%(
 *                             best,vis.contents.visualid,hex(ideal) ))             # <<<<<<<<<<<<<<
 *                 if best < 0:
 *                     print("oh dear - visual does not match" )
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_vis, __pyx_n_s_contents); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_visualid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 775, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_hex, __pyx_v_ideal); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 775, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_v_best);
        __Pyx_GIVEREF(__pyx_v_best);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_best);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
        __pyx_t_4 = 0;
        __pyx_t_3 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":774
 *                     if ideal == vis.contents.visualid:
 *                         best = i
 *                         print("Got a matching visual: index %d %d xid %s"%(             # <<<<<<<<<<<<<<
 *                             best,vis.contents.visualid,hex(ideal) ))
 *                 if best < 0:
 */
        __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_Got_a_matching_visual_index_d_d, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 774, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 774, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":772
 *                 for i in range(ncfg.value):
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 *                     if ideal == vis.contents.visualid:             # <<<<<<<<<<<<<<
 *                         best = i
 *                         print("Got a matching visual: index %d %d xid %s"%(
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":770
 *                 ideal = int(self.winfo_visualid(), 16) # convert from hex
 *                 best = -1
 *                 for i in range(ncfg.value):             # <<<<<<<<<<<<<<
 *                     vis = GLX.glXGetVisualFromFBConfig(self.__window,  cfgs[i])
 *                     if ideal == vis.contents.visualid:
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":776
 *                         print("Got a matching visual: index %d %d xid %s"%(
 *                             best,vis.contents.visualid,hex(ideal) ))
 *                 if best < 0:             # <<<<<<<<<<<<<<
 *                     print("oh dear - visual does not match" )
 *                     # Take the first in the list (should be another I guess)
 */
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_best, __pyx_int_0, Py_LT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 776, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 776, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_9) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":777
 *                             best,vis.contents.visualid,hex(ideal) ))
 *                 if best < 0:
 *                     print("oh dear - visual does not match" )             # <<<<<<<<<<<<<<
 *                     # Take the first in the list (should be another I guess)
 *                     best=0
 */
      if (__Pyx_PrintOne(0, __pyx_kp_s_oh_dear_visual_does_not_match) < 0) __PYX_ERR(0, 777, __pyx_L1_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":779
 *                     print("oh dear - visual does not match" )
 *                     # Take the first in the list (should be another I guess)
 *                     best=0             # <<<<<<<<<<<<<<
 *                 # Here we insist on RGBA - but didn't check earlier
 *                 self.__context = GLX.glXCreateNewContext(self.__window,
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_DECREF_SET(__pyx_v_best, __pyx_int_0);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":776
 *                         print("Got a matching visual: index %d %d xid %s"%(
 *                             best,vis.contents.visualid,hex(ideal) ))
 *                 if best < 0:             # <<<<<<<<<<<<<<
 *                     print("oh dear - visual does not match" )
 *                     # Take the first in the list (should be another I guess)
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":781
 *                     best=0
 *                 # Here we insist on RGBA - but didn't check earlier
 *                 self.__context = GLX.glXCreateNewContext(self.__window,             # <<<<<<<<<<<<<<
 *                                                          cfgs[best],
 *                                                          GLX.GLX_RGBA_TYPE,
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GLX); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glXCreateNewContext); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":782
 *                 # Here we insist on RGBA - but didn't check earlier
 *                 self.__context = GLX.glXCreateNewContext(self.__window,
 *                                                          cfgs[best],             # <<<<<<<<<<<<<<
 *                                                          GLX.GLX_RGBA_TYPE,
 *                                                          None, # share list
 */
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_cfgs, __pyx_v_best); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 782, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":783
 *                 self.__context = GLX.glXCreateNewContext(self.__window,
 *                                                          cfgs[best],
 *                                                          GLX.GLX_RGBA_TYPE,             # <<<<<<<<<<<<<<
 *                                                          None, # share list
 *                                                          GL.GL_TRUE) # direct
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GLX); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GLX_RGBA_TYPE); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":785
 *                                                          GLX.GLX_RGBA_TYPE,
 *                                                          None, # share list
 *                                                          GL.GL_TRUE) # direct             # <<<<<<<<<<<<<<
 *                 print("Is Direct?: ", GLX.glXIsDirect( self.__window, self.__context ))
 *                 # Not creating another window ... some tutorials do
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GL_TRUE); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[6] = {__pyx_t_1, __pyx_t_3, __pyx_t_4, __pyx_t_6, Py_None, __pyx_t_12};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 5+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 781, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":781
 *                     best=0
 *                 # Here we insist on RGBA - but didn't check earlier
 *                 self.__context = GLX.glXCreateNewContext(self.__window,             # <<<<<<<<<<<<<<
 *                                                          cfgs[best],
 *                                                          GLX.GLX_RGBA_TYPE,
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context, __pyx_t_2) < 0) __PYX_ERR(0, 781, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":786
 *                                                          None, # share list
 *                                                          GL.GL_TRUE) # direct
 *                 print("Is Direct?: ", GLX.glXIsDirect( self.__window, self.__context ))             # <<<<<<<<<<<<<<
 *                 # Not creating another window ... some tutorials do
 * #                print("wid: ",self._wid)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GLX); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glXIsDirect); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_5, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 786, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_INCREF(__pyx_kp_s_Is_Direct);
    __Pyx_GIVEREF(__pyx_kp_s_Is_Direct);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_kp_s_Is_Direct);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_2);
    __pyx_t_2 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_12) < 0) __PYX_ERR(0, 786, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":791
 * #                self._wid = GLX.glXCreateWindow( self.__window, cfgs[best], self._wid, None)
 * #                print("wid: ",self._wid)
 *                 GLX.glXMakeContextCurrent( self.__window, self._wid, self._wid,             # <<<<<<<<<<<<<<
 *                                            self.__context )
 *                 print("Done making a first context")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLX); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glXMakeContextCurrent); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_wid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_wid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":792
 * #                print("wid: ",self._wid)
 *                 GLX.glXMakeContextCurrent( self.__window, self._wid, self._wid,
 *                                            self.__context )             # <<<<<<<<<<<<<<
 *                 print("Done making a first context")
 *                 extensions = GLX.glXQueryExtensionsString(self.__window, screen)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 792, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_1, __pyx_t_2, __pyx_t_5, __pyx_t_4, __pyx_t_3};
      __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 791, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":793
 *                 GLX.glXMakeContextCurrent( self.__window, self._wid, self._wid,
 *                                            self.__context )
 *                 print("Done making a first context")             # <<<<<<<<<<<<<<
 *                 extensions = GLX.glXQueryExtensionsString(self.__window, screen)
 *                 # Here we quit - getting a modern context needs further work below
 */
    if (__Pyx_PrintOne(0, __pyx_kp_s_Done_making_a_first_context) < 0) __PYX_ERR(0, 793, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":794
 *                                            self.__context )
 *                 print("Done making a first context")
 *                 extensions = GLX.glXQueryExtensionsString(self.__window, screen)             # <<<<<<<<<<<<<<
 *                 # Here we quit - getting a modern context needs further work below
 *                 return
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GLX); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glXQueryExtensionsString); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_v_screen};
      __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 794, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_extensions = __pyx_t_12;
    __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":796
 *                 extensions = GLX.glXQueryExtensionsString(self.__window, screen)
 *                 # Here we quit - getting a modern context needs further work below
 *                 return             # <<<<<<<<<<<<<<
 *                 if "GLX_ARB_create_context" in extensions:
 *                     # We can try to upgrade it ??
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":733
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 *             # Check glx version:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkCreateContext", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_major);
  __Pyx_XDECREF(__pyx_v_minor);
  __Pyx_XDECREF(__pyx_v_visual);
  __Pyx_XDECREF(__pyx_v_XDefaultScreen);
  __Pyx_XDECREF(__pyx_v_screen);
  __Pyx_XDECREF(__pyx_v_ncfg);
  __Pyx_XDECREF(__pyx_v_cfgs);
  __Pyx_XDECREF(__pyx_v_ideal);
  __Pyx_XDECREF(__pyx_v_best);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_vis);
  __Pyx_XDECREF(__pyx_v_extensions);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":828
 *                                         (GL.GLint * len(arb_attrs))(* arb_attrs) )
 * 
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_9tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_9tkMakeCurrent = {"tkMakeCurrent", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_9tkMakeCurrent, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_9tkMakeCurrent(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkMakeCurrent (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_8tkMakeCurrent(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_8tkMakeCurrent(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkMakeCurrent", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":829
 * 
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_ismapped); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 829, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 829, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":830
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)             # <<<<<<<<<<<<<<
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLX); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glXMakeCurrent); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_wid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__context); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_8, __pyx_t_2, __pyx_t_6, __pyx_t_7};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 830, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":829
 * 
 *         def tkMakeCurrent( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":828
 *                                         (GL.GLint * len(arb_attrs))(* arb_attrs) )
 * 
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkMakeCurrent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":831
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_11tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_11tkSwapBuffers = {"tkSwapBuffers", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_11tkSwapBuffers, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_11tkSwapBuffers(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkSwapBuffers (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_10tkSwapBuffers(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_10tkSwapBuffers(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkSwapBuffers", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":832
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 * # Linux/X11 specific code ends
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_ismapped); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 832, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 832, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":833
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():
 *                 GLX.glXSwapBuffers( self.__window, self._wid)             # <<<<<<<<<<<<<<
 * # Linux/X11 specific code ends
 * ###############################################################################
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLX); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glXSwapBuffers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_OpenGLFrame__window); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_wid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_2, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 833, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":832
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):
 *             if self.winfo_ismapped():             # <<<<<<<<<<<<<<
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 * # Linux/X11 specific code ends
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":831
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.OpenGLFrame.tkSwapBuffers", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":846
 * # University of York, UK
 * 
 * def v3distsq(a,b):             # <<<<<<<<<<<<<<
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7v3distsq(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7v3distsq = {"v3distsq", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7v3distsq, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7v3distsq(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_a = 0;
  PyObject *__pyx_v_b = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("v3distsq (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_b,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_a)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 846, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 846, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("v3distsq", 1, 2, 2, 1); __PYX_ERR(0, 846, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "v3distsq") < 0)) __PYX_ERR(0, 846, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_a = values[0];
    __pyx_v_b = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("v3distsq", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 846, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.v3distsq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6v3distsq(__pyx_self, __pyx_v_a, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6v3distsq(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("v3distsq", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":847
 * 
 * def v3distsq(a,b):
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )             # <<<<<<<<<<<<<<
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_a, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_b, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_5);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_d = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":848
 * def v3distsq(a,b):
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]             # <<<<<<<<<<<<<<
 * 
 * class RawOpengl( OpenGLFrame ):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_d, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":846
 * # University of York, UK
 * 
 * def v3distsq(a,b):             # <<<<<<<<<<<<<<
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.v3distsq", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":853
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_48__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults6, __pyx_self)->__pyx_arg_cnf);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults6, __pyx_self)->__pyx_arg_cnf);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults6, __pyx_self)->__pyx_arg_cnf);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_master = 0;
  PyObject *__pyx_v_cnf = 0;
  PyObject *__pyx_v_kw = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_master,&__pyx_n_s_cnf,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_master,&__pyx_n_s_cnf,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults6 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults6, __pyx_self);
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = __pyx_dynamic_args->__pyx_arg_cnf;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_master);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cnf);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 853, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kw, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 853, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_master = values[1];
    __pyx_v_cnf = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 853, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.RawOpengl.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl___init__(__pyx_self, __pyx_v_self, __pyx_v_master, __pyx_v_cnf, __pyx_v_kw);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_master, PyObject *__pyx_v_cnf, PyObject *__pyx_v_kw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":854
 *     by Tom Schwaller"""
 *     def __init__(self, master=None, cnf={}, **kw):
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)             # <<<<<<<<<<<<<<
 *     # replaces our _display method
 *     def tkRedraw(self, *dummy):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_OpenGLFrame); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
  __Pyx_INCREF(__pyx_v_master);
  __Pyx_GIVEREF(__pyx_v_master);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_master);
  __Pyx_INCREF(__pyx_v_cnf);
  __Pyx_GIVEREF(__pyx_v_cnf);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_cnf);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_v_kw); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":853
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.RawOpengl.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":856
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         # This must be outside of a pushmatrix, since a resize event
 *         # will call redraw recursively.
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_3tkRedraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_3tkRedraw = {"tkRedraw", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_3tkRedraw, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_3tkRedraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dummy = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkRedraw (wrapper)", 0);
  __pyx_v_dummy = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_dummy)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_dummy);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 856, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, used_pos_args, "tkRedraw") < 0)) __PYX_ERR(0, 856, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkRedraw", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 856, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_dummy); __pyx_v_dummy = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.RawOpengl.tkRedraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_2tkRedraw(__pyx_self, __pyx_v_self, __pyx_v_dummy);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_dummy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_2tkRedraw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy) {
  CYTHON_UNUSED PyObject *__pyx_v__mode = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkRedraw", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":859
 *         # This must be outside of a pushmatrix, since a resize event
 *         # will call redraw recursively.
 *         self.update_idletasks()             # <<<<<<<<<<<<<<
 *         self.tkMakeCurrent()
 *         _mode = GL.glGetDoublev(GL.GL_MATRIX_MODE)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_idletasks); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":860
 *         # will call redraw recursively.
 *         self.update_idletasks()
 *         self.tkMakeCurrent()             # <<<<<<<<<<<<<<
 *         _mode = GL.glGetDoublev(GL.GL_MATRIX_MODE)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkMakeCurrent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 860, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":861
 *         self.update_idletasks()
 *         self.tkMakeCurrent()
 *         _mode = GL.glGetDoublev(GL.GL_MATRIX_MODE)             # <<<<<<<<<<<<<<
 * 
 * class Opengl(RawOpengl):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGetDoublev); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_MATRIX_MODE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 861, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v__mode = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":856
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         # This must be outside of a pushmatrix, since a resize event
 *         # will call redraw recursively.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.RawOpengl.tkRedraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__mode);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":871
 *     http://www.yorvic.york.ac.uk/~mjh/
 *     """
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         """\
 *         Create an opengl widget.
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_50__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults7, __pyx_self)->__pyx_arg_cnf);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults7, __pyx_self)->__pyx_arg_cnf);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults7, __pyx_self)->__pyx_arg_cnf);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl___init__, "        Create an opengl widget.\n        Arrange for redraws when the window is exposed or when\n        it changes size.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl___init__};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_master = 0;
  PyObject *__pyx_v_cnf = 0;
  PyObject *__pyx_v_kw = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_master,&__pyx_n_s_cnf,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_master,&__pyx_n_s_cnf,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults7 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults7, __pyx_self);
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = __pyx_dynamic_args->__pyx_arg_cnf;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_master);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cnf);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 871, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kw, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 871, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_master = values[1];
    __pyx_v_cnf = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 871, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kw); __pyx_v_kw = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl___init__(__pyx_self, __pyx_v_self, __pyx_v_master, __pyx_v_cnf, __pyx_v_kw);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_master, PyObject *__pyx_v_cnf, PyObject *__pyx_v_kw) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":877
 *         it changes size."""
 *         #Widget.__init__(self, master, 'togl', cnf, kw)
 *         RawOpengl.__init__(*(self, master, cnf), **kw)             # <<<<<<<<<<<<<<
 *         self.initialised = 0
 *         # Current coordinates of the mouse.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RawOpengl); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
  __Pyx_INCREF(__pyx_v_master);
  __Pyx_GIVEREF(__pyx_v_master);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_master);
  __Pyx_INCREF(__pyx_v_cnf);
  __Pyx_GIVEREF(__pyx_v_cnf);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_cnf);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_v_kw); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":878
 *         #Widget.__init__(self, master, 'togl', cnf, kw)
 *         RawOpengl.__init__(*(self, master, cnf), **kw)
 *         self.initialised = 0             # <<<<<<<<<<<<<<
 *         # Current coordinates of the mouse.
 *         self.xmouse = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_initialised, __pyx_int_0) < 0) __PYX_ERR(0, 878, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":880
 *         self.initialised = 0
 *         # Current coordinates of the mouse.
 *         self.xmouse = 0             # <<<<<<<<<<<<<<
 *         self.ymouse = 0
 *         # Where we are centering.
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xmouse, __pyx_int_0) < 0) __PYX_ERR(0, 880, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":881
 *         # Current coordinates of the mouse.
 *         self.xmouse = 0
 *         self.ymouse = 0             # <<<<<<<<<<<<<<
 *         # Where we are centering.
 *         self.xcenter = 0.0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ymouse, __pyx_int_0) < 0) __PYX_ERR(0, 881, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":883
 *         self.ymouse = 0
 *         # Where we are centering.
 *         self.xcenter = 0.0             # <<<<<<<<<<<<<<
 *         self.ycenter = 0.0
 *         self.zcenter = 0.0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xcenter, __pyx_float_0_0) < 0) __PYX_ERR(0, 883, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":884
 *         # Where we are centering.
 *         self.xcenter = 0.0
 *         self.ycenter = 0.0             # <<<<<<<<<<<<<<
 *         self.zcenter = 0.0
 *         # The _back color
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ycenter, __pyx_float_0_0) < 0) __PYX_ERR(0, 884, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":885
 *         self.xcenter = 0.0
 *         self.ycenter = 0.0
 *         self.zcenter = 0.0             # <<<<<<<<<<<<<<
 *         # The _back color
 *         self.r_back = 1.
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_zcenter, __pyx_float_0_0) < 0) __PYX_ERR(0, 885, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":887
 *         self.zcenter = 0.0
 *         # The _back color
 *         self.r_back = 1.             # <<<<<<<<<<<<<<
 *         self.g_back = 0.
 *         self.b_back = 1.
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_r_back, __pyx_float_1_) < 0) __PYX_ERR(0, 887, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":888
 *         # The _back color
 *         self.r_back = 1.
 *         self.g_back = 0.             # <<<<<<<<<<<<<<
 *         self.b_back = 1.
 *         # Where the eye is
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_g_back, __pyx_float_0_) < 0) __PYX_ERR(0, 888, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":889
 *         self.r_back = 1.
 *         self.g_back = 0.
 *         self.b_back = 1.             # <<<<<<<<<<<<<<
 *         # Where the eye is
 *         self.distance = 10.0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_b_back, __pyx_float_1_) < 0) __PYX_ERR(0, 889, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":891
 *         self.b_back = 1.
 *         # Where the eye is
 *         self.distance = 10.0             # <<<<<<<<<<<<<<
 *         # Field of view in y direction
 *         self.fovy = 30.0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_distance, __pyx_float_10_0) < 0) __PYX_ERR(0, 891, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":893
 *         self.distance = 10.0
 *         # Field of view in y direction
 *         self.fovy = 30.0             # <<<<<<<<<<<<<<
 *         # Position of clipping planes.
 *         self.near = 0.1
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_fovy, __pyx_float_30_0) < 0) __PYX_ERR(0, 893, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":895
 *         self.fovy = 30.0
 *         # Position of clipping planes.
 *         self.near = 0.1             # <<<<<<<<<<<<<<
 *         self.far = 1000.0
 *         # Is the widget allowed to autospin?
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_near, __pyx_float_0_1) < 0) __PYX_ERR(0, 895, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":896
 *         # Position of clipping planes.
 *         self.near = 0.1
 *         self.far = 1000.0             # <<<<<<<<<<<<<<
 *         # Is the widget allowed to autospin?
 *         self.autospin_allowed = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_far, __pyx_float_1000_0) < 0) __PYX_ERR(0, 896, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":898
 *         self.far = 1000.0
 *         # Is the widget allowed to autospin?
 *         self.autospin_allowed = 0             # <<<<<<<<<<<<<<
 *         # Is the widget currently autospinning?
 *         self.autospin = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_autospin_allowed, __pyx_int_0) < 0) __PYX_ERR(0, 898, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":900
 *         self.autospin_allowed = 0
 *         # Is the widget currently autospinning?
 *         self.autospin = 0             # <<<<<<<<<<<<<<
 *         # Basic bindings for the virtual trackball
 *         self.bind('<Shift-Button-1>', self.tkHandlePick)
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_autospin, __pyx_int_0) < 0) __PYX_ERR(0, 900, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":902
 *         self.autospin = 0
 *         # Basic bindings for the virtual trackball
 *         self.bind('<Shift-Button-1>', self.tkHandlePick)             # <<<<<<<<<<<<<<
 *         #self.bind('<Button-1><ButtonRelease-1>', self.tkHandlePick)
 *         self.bind('<Button-1>', self.tkRecordMouse)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkHandlePick); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Shift_Button_1, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":904
 *         self.bind('<Shift-Button-1>', self.tkHandlePick)
 *         #self.bind('<Button-1><ButtonRelease-1>', self.tkHandlePick)
 *         self.bind('<Button-1>', self.tkRecordMouse)             # <<<<<<<<<<<<<<
 *         self.bind('<B1-Motion>', self.tkTranslate)
 *         self.bind('<Button-2>', self.StartRotate)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_1_2, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":905
 *         #self.bind('<Button-1><ButtonRelease-1>', self.tkHandlePick)
 *         self.bind('<Button-1>', self.tkRecordMouse)
 *         self.bind('<B1-Motion>', self.tkTranslate)             # <<<<<<<<<<<<<<
 *         self.bind('<Button-2>', self.StartRotate)
 *         self.bind('<B2-Motion>', self.tkRotate)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkTranslate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_B1_Motion, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":906
 *         self.bind('<Button-1>', self.tkRecordMouse)
 *         self.bind('<B1-Motion>', self.tkTranslate)
 *         self.bind('<Button-2>', self.StartRotate)             # <<<<<<<<<<<<<<
 *         self.bind('<B2-Motion>', self.tkRotate)
 *         self.bind('<ButtonRelease-2>', self.tkAutoSpin)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 906, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_StartRotate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 906, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_2_2, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":907
 *         self.bind('<B1-Motion>', self.tkTranslate)
 *         self.bind('<Button-2>', self.StartRotate)
 *         self.bind('<B2-Motion>', self.tkRotate)             # <<<<<<<<<<<<<<
 *         self.bind('<ButtonRelease-2>', self.tkAutoSpin)
 *         self.bind('<Button-3>', self.tkRecordMouse)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRotate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 907, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_B2_Motion, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 907, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":908
 *         self.bind('<Button-2>', self.StartRotate)
 *         self.bind('<B2-Motion>', self.tkRotate)
 *         self.bind('<ButtonRelease-2>', self.tkAutoSpin)             # <<<<<<<<<<<<<<
 *         self.bind('<Button-3>', self.tkRecordMouse)
 *         self.bind('<B3-Motion>', self.tkScale)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkAutoSpin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 908, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_ButtonRelease_2, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":909
 *         self.bind('<B2-Motion>', self.tkRotate)
 *         self.bind('<ButtonRelease-2>', self.tkAutoSpin)
 *         self.bind('<Button-3>', self.tkRecordMouse)             # <<<<<<<<<<<<<<
 *         self.bind('<B3-Motion>', self.tkScale)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 909, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 909, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_Button_3_2, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":910
 *         self.bind('<ButtonRelease-2>', self.tkAutoSpin)
 *         self.bind('<Button-3>', self.tkRecordMouse)
 *         self.bind('<B3-Motion>', self.tkScale)             # <<<<<<<<<<<<<<
 * 
 *     def help(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_bind); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 910, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkScale); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 910, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_kp_s_B3_Motion, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":871
 *     http://www.yorvic.york.ac.uk/~mjh/
 *     """
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         """\
 *         Create an opengl widget.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":912
 *         self.bind('<B3-Motion>', self.tkScale)
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_3help(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_2help, "Help for the widget.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_3help = {"help", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_3help, METH_O, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_2help};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_3help(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("help (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_2help(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_2help(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("help", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":914
 *     def help(self):
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {             # <<<<<<<<<<<<<<
 *             'title': 'Viewer help',
 *             'text': 'Button-1: Translate\n'
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_dialog); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_Dialog); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":915
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {
 *             'title': 'Viewer help',             # <<<<<<<<<<<<<<
 *             'text': 'Button-1: Translate\n'
 *                     'Button-2: Rotate\n'
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_title, __pyx_kp_s_Viewer_help) < 0) __PYX_ERR(0, 915, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_text, __pyx_kp_s_Button_1_Translate_Button_2_Rota) < 0) __PYX_ERR(0, 915, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_bitmap, __pyx_n_s_questhead) < 0) __PYX_ERR(0, 915, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_default, __pyx_int_0) < 0) __PYX_ERR(0, 915, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":922
 *             'bitmap': 'questhead',
 *             'default': 0,
 *             'strings': ('Done', 'Ok')})             # <<<<<<<<<<<<<<
 *         assert d
 *     def activate(self):
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_strings, __pyx_tuple__11) < 0) __PYX_ERR(0, 915, __pyx_L1_error)
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, Py_None, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 914, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_d = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":923
 *             'default': 0,
 *             'strings': ('Done', 'Ok')})
 *         assert d             # <<<<<<<<<<<<<<
 *     def activate(self):
 *         """Cause this Opengl widget to be the current destination for drawing."""
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_d); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 923, __pyx_L1_error)
    if (unlikely(!__pyx_t_6)) {
      __Pyx_Raise(__pyx_builtin_AssertionError, 0, 0, 0);
      __PYX_ERR(0, 923, __pyx_L1_error)
    }
  }
  #else
  if ((1)); else __PYX_ERR(0, 923, __pyx_L1_error)
  #endif

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":912
 *         self.bind('<B3-Motion>', self.tkScale)
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.help", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":924
 *             'strings': ('Done', 'Ok')})
 *         assert d
 *     def activate(self):             # <<<<<<<<<<<<<<
 *         """Cause this Opengl widget to be the current destination for drawing."""
 *         self.tkMakeCurrent()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_5activate(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_4activate, "Cause this Opengl widget to be the current destination for drawing.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_5activate = {"activate", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_5activate, METH_O, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_4activate};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_5activate(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("activate (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_4activate(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_4activate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("activate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":926
 *     def activate(self):
 *         """Cause this Opengl widget to be the current destination for drawing."""
 *         self.tkMakeCurrent()             # <<<<<<<<<<<<<<
 * 
 *     # This should almost certainly be part of some derived class.
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkMakeCurrent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":924
 *             'strings': ('Done', 'Ok')})
 *         assert d
 *     def activate(self):             # <<<<<<<<<<<<<<
 *         """Cause this Opengl widget to be the current destination for drawing."""
 *         self.tkMakeCurrent()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.activate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":930
 *     # This should almost certainly be part of some derived class.
 *     # But I have put it here for convenience.
 *     def basic_lighting(self):             # <<<<<<<<<<<<<<
 *         """\
 *         Set up some basic lighting (single infinite light source).
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_7basic_lighting(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_6basic_lighting, "        Set up some basic lighting (single infinite light source).\n        Also switch on the depth buffer.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_7basic_lighting = {"basic_lighting", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_7basic_lighting, METH_O, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_6basic_lighting};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_7basic_lighting(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("basic_lighting (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_6basic_lighting(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_6basic_lighting(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_light_position = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("basic_lighting", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":935
 *         Also switch on the depth buffer."""
 * 
 *         self.activate()             # <<<<<<<<<<<<<<
 *         light_position = (1, 1, 1, 0)
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 935, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 935, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":936
 * 
 *         self.activate()
 *         light_position = (1, 1, 1, 0)             # <<<<<<<<<<<<<<
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)
 *         GL.glEnable(GL.GL_LIGHTING)
 */
  __Pyx_INCREF(__pyx_tuple__12);
  __pyx_v_light_position = __pyx_tuple__12;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":937
 *         self.activate()
 *         light_position = (1, 1, 1, 0)
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_LIGHTING)
 *         GL.glEnable(GL.GL_LIGHT0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glLightfv); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_LIGHT0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_POSITION); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_5, __pyx_t_6, __pyx_v_light_position};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 937, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":938
 *         light_position = (1, 1, 1, 0)
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)
 *         GL.glEnable(GL.GL_LIGHTING)             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_LIGHT0)
 *         GL.glDepthFunc(GL.GL_LESS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_LIGHTING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":939
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)
 *         GL.glEnable(GL.GL_LIGHTING)
 *         GL.glEnable(GL.GL_LIGHT0)             # <<<<<<<<<<<<<<
 *         GL.glDepthFunc(GL.GL_LESS)
 *         GL.glEnable(GL.GL_DEPTH_TEST)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_LIGHT0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 939, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":940
 *         GL.glEnable(GL.GL_LIGHTING)
 *         GL.glEnable(GL.GL_LIGHT0)
 *         GL.glDepthFunc(GL.GL_LESS)             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_DEPTH_TEST)
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glDepthFunc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_LESS); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":941
 *         GL.glEnable(GL.GL_LIGHT0)
 *         GL.glDepthFunc(GL.GL_LESS)
 *         GL.glEnable(GL.GL_DEPTH_TEST)             # <<<<<<<<<<<<<<
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_DEPTH_TEST); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 941, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":942
 *         GL.glDepthFunc(GL.GL_LESS)
 *         GL.glEnable(GL.GL_DEPTH_TEST)
 *         GL.glMatrixMode(GL.GL_MODELVIEW)             # <<<<<<<<<<<<<<
 *         GL.glLoadIdentity()
 *     def initgl(self):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glMatrixMode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_MODELVIEW); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":943
 *         GL.glEnable(GL.GL_DEPTH_TEST)
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()             # <<<<<<<<<<<<<<
 *     def initgl(self):
 *         self.basic_lighting()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glLoadIdentity); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_5, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 943, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":930
 *     # This should almost certainly be part of some derived class.
 *     # But I have put it here for convenience.
 *     def basic_lighting(self):             # <<<<<<<<<<<<<<
 *         """\
 *         Set up some basic lighting (single infinite light source).
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.basic_lighting", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_light_position);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":944
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_9initgl(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_9initgl = {"initgl", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_9initgl, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_9initgl(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initgl (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_8initgl(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_8initgl(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initgl", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":945
 *         GL.glLoadIdentity()
 *     def initgl(self):
 *         self.basic_lighting()             # <<<<<<<<<<<<<<
 *     def set_background(self, r, g, b):
 *         """Change the background colour of the widget."""
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basic_lighting); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 945, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":944
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.initgl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":946
 *     def initgl(self):
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):             # <<<<<<<<<<<<<<
 *         """Change the background colour of the widget."""
 *         self.r_back = r
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_11set_background(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_10set_background, "Change the background colour of the widget.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_11set_background = {"set_background", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_11set_background, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_10set_background};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_11set_background(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_r = 0;
  PyObject *__pyx_v_g = 0;
  PyObject *__pyx_v_b = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_background (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_r,&__pyx_n_s_g,&__pyx_n_s_b,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_r)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_background", 1, 4, 4, 1); __PYX_ERR(0, 946, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_g)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_background", 1, 4, 4, 2); __PYX_ERR(0, 946, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 946, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_background", 1, 4, 4, 3); __PYX_ERR(0, 946, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_background") < 0)) __PYX_ERR(0, 946, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_r = values[1];
    __pyx_v_g = values[2];
    __pyx_v_b = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_background", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 946, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_10set_background(__pyx_self, __pyx_v_self, __pyx_v_r, __pyx_v_g, __pyx_v_b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_10set_background(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_r, PyObject *__pyx_v_g, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_background", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":948
 *     def set_background(self, r, g, b):
 *         """Change the background colour of the widget."""
 *         self.r_back = r             # <<<<<<<<<<<<<<
 *         self.g_back = g
 *         self.b_back = b
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_r_back, __pyx_v_r) < 0) __PYX_ERR(0, 948, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":949
 *         """Change the background colour of the widget."""
 *         self.r_back = r
 *         self.g_back = g             # <<<<<<<<<<<<<<
 *         self.b_back = b
 *         self.tkRedraw()
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_g_back, __pyx_v_g) < 0) __PYX_ERR(0, 949, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":950
 *         self.r_back = r
 *         self.g_back = g
 *         self.b_back = b             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_b_back, __pyx_v_b) < 0) __PYX_ERR(0, 950, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":951
 *         self.g_back = g
 *         self.b_back = b
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def set_centerpoint(self, x, y, z):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 951, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":946
 *     def initgl(self):
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):             # <<<<<<<<<<<<<<
 *         """Change the background colour of the widget."""
 *         self.r_back = r
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":953
 *         self.tkRedraw()
 * 
 *     def set_centerpoint(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """Set the new center point for the model.
 *         This is where we are looking."""
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_13set_centerpoint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_12set_centerpoint, "Set the new center point for the model.\n        This is where we are looking.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_13set_centerpoint = {"set_centerpoint", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_13set_centerpoint, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_12set_centerpoint};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_13set_centerpoint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_centerpoint (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_centerpoint", 1, 4, 4, 1); __PYX_ERR(0, 953, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_centerpoint", 1, 4, 4, 2); __PYX_ERR(0, 953, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_z)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 953, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_centerpoint", 1, 4, 4, 3); __PYX_ERR(0, 953, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_centerpoint") < 0)) __PYX_ERR(0, 953, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
    __pyx_v_z = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_centerpoint", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 953, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_centerpoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_12set_centerpoint(__pyx_self, __pyx_v_self, __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_12set_centerpoint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_z) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_centerpoint", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":956
 *         """Set the new center point for the model.
 *         This is where we are looking."""
 *         self.xcenter = x             # <<<<<<<<<<<<<<
 *         self.ycenter = y
 *         self.zcenter = z
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xcenter, __pyx_v_x) < 0) __PYX_ERR(0, 956, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":957
 *         This is where we are looking."""
 *         self.xcenter = x
 *         self.ycenter = y             # <<<<<<<<<<<<<<
 *         self.zcenter = z
 *         self.tkRedraw()
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ycenter, __pyx_v_y) < 0) __PYX_ERR(0, 957, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":958
 *         self.xcenter = x
 *         self.ycenter = y
 *         self.zcenter = z             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_zcenter, __pyx_v_z) < 0) __PYX_ERR(0, 958, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":959
 *         self.ycenter = y
 *         self.zcenter = z
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def set_eyepoint(self, distance):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":953
 *         self.tkRedraw()
 * 
 *     def set_centerpoint(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """Set the new center point for the model.
 *         This is where we are looking."""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_centerpoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":961
 *         self.tkRedraw()
 * 
 *     def set_eyepoint(self, distance):             # <<<<<<<<<<<<<<
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_15set_eyepoint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_14set_eyepoint, "Set how far the eye is from the position we are looking.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_15set_eyepoint = {"set_eyepoint", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_15set_eyepoint, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_14set_eyepoint};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_15set_eyepoint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_distance = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_eyepoint (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_distance,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_distance,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 961, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_distance)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 961, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_eyepoint", 1, 2, 2, 1); __PYX_ERR(0, 961, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_eyepoint") < 0)) __PYX_ERR(0, 961, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_distance = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_eyepoint", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 961, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_eyepoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_14set_eyepoint(__pyx_self, __pyx_v_self, __pyx_v_distance);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_14set_eyepoint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_distance) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_eyepoint", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":963
 *     def set_eyepoint(self, distance):
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_distance, __pyx_v_distance) < 0) __PYX_ERR(0, 963, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":964
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":961
 *         self.tkRedraw()
 * 
 *     def set_eyepoint(self, distance):             # <<<<<<<<<<<<<<
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.set_eyepoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":966
 *         self.tkRedraw()
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_17reset(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_16reset, "Reset rotation matrix for this widget.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_17reset = {"reset", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_17reset, METH_O, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_16reset};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_17reset(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_16reset(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_16reset(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("reset", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":968
 *     def reset(self):
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)             # <<<<<<<<<<<<<<
 *         GL.glLoadIdentity()
 *         self.tkRedraw()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glMatrixMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_MODELVIEW); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":969
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 969, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glLoadIdentity); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 969, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":970
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def tkHandlePick(self, event):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 970, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":966
 *         self.tkRedraw()
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":972
 *         self.tkRedraw()
 * 
 *     def tkHandlePick(self, event):             # <<<<<<<<<<<<<<
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_19tkHandlePick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_18tkHandlePick, "Handle a pick on the scene.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_19tkHandlePick = {"tkHandlePick", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_19tkHandlePick, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_18tkHandlePick};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_19tkHandlePick(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkHandlePick (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkHandlePick", 1, 2, 2, 1); __PYX_ERR(0, 972, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkHandlePick") < 0)) __PYX_ERR(0, 972, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkHandlePick", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 972, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkHandlePick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_18tkHandlePick(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_18tkHandlePick(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_realy = NULL;
  PyObject *__pyx_v_p1 = NULL;
  PyObject *__pyx_v_p2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkHandlePick", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":974
 *     def tkHandlePick(self, event):
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):             # <<<<<<<<<<<<<<
 *             # here we need to use glu.UnProject
 *             # Tk and X have their origin top left,
 */
  __pyx_t_1 = __Pyx_HasAttr(__pyx_v_self, __pyx_n_s_pick); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 974, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":980
 *             # So we need to subtract y from the window height to get
 *             # the proper pick position for Opengl
 *             realy = self.winfo_height() - event.y             # <<<<<<<<<<<<<<
 *             p1 = GLU.gluUnProject(event.x, realy, 0.)
 *             p2 = GLU.gluUnProject(event.x, realy, 1.)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_height); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_5, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 980, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 980, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 980, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_realy = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":981
 *             # the proper pick position for Opengl
 *             realy = self.winfo_height() - event.y
 *             p1 = GLU.gluUnProject(event.x, realy, 0.)             # <<<<<<<<<<<<<<
 *             p2 = GLU.gluUnProject(event.x, realy, 1.)
 *             if self.pick(self, p1, p2):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLU); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_gluUnProject); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 981, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_4, __pyx_v_realy, __pyx_float_0_};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 981, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_p1 = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":982
 *             realy = self.winfo_height() - event.y
 *             p1 = GLU.gluUnProject(event.x, realy, 0.)
 *             p2 = GLU.gluUnProject(event.x, realy, 1.)             # <<<<<<<<<<<<<<
 *             if self.pick(self, p1, p2):
 *                 """If the pick method returns true we redraw the scene."""
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GLU); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_gluUnProject); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 982, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_3, __pyx_v_realy, __pyx_float_1_};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 982, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_v_p2 = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":983
 *             p1 = GLU.gluUnProject(event.x, realy, 0.)
 *             p2 = GLU.gluUnProject(event.x, realy, 1.)
 *             if self.pick(self, p1, p2):             # <<<<<<<<<<<<<<
 *                 """If the pick method returns true we redraw the scene."""
 *                 self.tkRedraw()
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_pick); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 983, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_self, __pyx_v_p1, __pyx_v_p2};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 983, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 983, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":985
 *             if self.pick(self, p1, p2):
 *                 """If the pick method returns true we redraw the scene."""
 *                 self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def tkRecordMouse(self, event):
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 985, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_3, };
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 985, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":983
 *             p1 = GLU.gluUnProject(event.x, realy, 0.)
 *             p2 = GLU.gluUnProject(event.x, realy, 1.)
 *             if self.pick(self, p1, p2):             # <<<<<<<<<<<<<<
 *                 """If the pick method returns true we redraw the scene."""
 *                 self.tkRedraw()
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":974
 *     def tkHandlePick(self, event):
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):             # <<<<<<<<<<<<<<
 *             # here we need to use glu.UnProject
 *             # Tk and X have their origin top left,
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":972
 *         self.tkRedraw()
 * 
 *     def tkHandlePick(self, event):             # <<<<<<<<<<<<<<
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkHandlePick", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_realy);
  __Pyx_XDECREF(__pyx_v_p1);
  __Pyx_XDECREF(__pyx_v_p2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":987
 *                 self.tkRedraw()
 * 
 *     def tkRecordMouse(self, event):             # <<<<<<<<<<<<<<
 *         """Record the current mouse position."""
 *         self.xmouse = event.x
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_21tkRecordMouse(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_20tkRecordMouse, "Record the current mouse position.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_21tkRecordMouse = {"tkRecordMouse", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_21tkRecordMouse, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_20tkRecordMouse};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_21tkRecordMouse(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkRecordMouse (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkRecordMouse", 1, 2, 2, 1); __PYX_ERR(0, 987, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkRecordMouse") < 0)) __PYX_ERR(0, 987, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkRecordMouse", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 987, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRecordMouse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_20tkRecordMouse(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_20tkRecordMouse(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkRecordMouse", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":989
 *     def tkRecordMouse(self, event):
 *         """Record the current mouse position."""
 *         self.xmouse = event.x             # <<<<<<<<<<<<<<
 *         self.ymouse = event.y
 *         print(event.x,event.y)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xmouse, __pyx_t_1) < 0) __PYX_ERR(0, 989, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":990
 *         """Record the current mouse position."""
 *         self.xmouse = event.x
 *         self.ymouse = event.y             # <<<<<<<<<<<<<<
 *         print(event.x,event.y)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_ymouse, __pyx_t_1) < 0) __PYX_ERR(0, 990, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":991
 *         self.xmouse = event.x
 *         self.ymouse = event.y
 *         print(event.x,event.y)             # <<<<<<<<<<<<<<
 * 
 *     def StartRotate(self, event):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (__Pyx_PrintOne(0, __pyx_t_3) < 0) __PYX_ERR(0, 991, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":987
 *                 self.tkRedraw()
 * 
 *     def tkRecordMouse(self, event):             # <<<<<<<<<<<<<<
 *         """Record the current mouse position."""
 *         self.xmouse = event.x
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRecordMouse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":993
 *         print(event.x,event.y)
 * 
 *     def StartRotate(self, event):             # <<<<<<<<<<<<<<
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_23StartRotate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_23StartRotate = {"StartRotate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_23StartRotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_23StartRotate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("StartRotate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("StartRotate", 1, 2, 2, 1); __PYX_ERR(0, 993, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "StartRotate") < 0)) __PYX_ERR(0, 993, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("StartRotate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 993, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.StartRotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_22StartRotate(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_22StartRotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("StartRotate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":995
 *     def StartRotate(self, event):
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0             # <<<<<<<<<<<<<<
 *         self.tkRecordMouse(event)
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_autospin, __pyx_int_0) < 0) __PYX_ERR(0, 995, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":996
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0
 *         self.tkRecordMouse(event)             # <<<<<<<<<<<<<<
 * 
 *     def tkScale(self, event):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_event};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 996, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":993
 *         print(event.x,event.y)
 * 
 *     def StartRotate(self, event):             # <<<<<<<<<<<<<<
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.StartRotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":998
 *         self.tkRecordMouse(event)
 * 
 *     def tkScale(self, event):             # <<<<<<<<<<<<<<
 *         """Scale the scene.  Achieved by moving the eye position.
 *         Dragging up zooms in, while dragging down zooms out
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_25tkScale(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_24tkScale, "Scale the scene.  Achieved by moving the eye position.\n        Dragging up zooms in, while dragging down zooms out\n        ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_25tkScale = {"tkScale", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_25tkScale, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_24tkScale};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_25tkScale(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkScale (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 998, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 998, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkScale", 1, 2, 2, 1); __PYX_ERR(0, 998, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkScale") < 0)) __PYX_ERR(0, 998, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkScale", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 998, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkScale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_24tkScale(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_24tkScale(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_scale = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkScale", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1002
 *         Dragging up zooms in, while dragging down zooms out
 *         """
 *         scale = 1 - 0.01 * (event.y - self.ymouse)             # <<<<<<<<<<<<<<
 *         # do some sanity checks, scale no more than
 *         # 1:1000 on any given click+drag
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ymouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_0_01, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_t_2, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_scale = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1005
 *         # do some sanity checks, scale no more than
 *         # 1:1000 on any given click+drag
 *         if scale < 0.001:             # <<<<<<<<<<<<<<
 *             scale = 0.001
 *         elif scale > 1000:
 */
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_scale, __pyx_float_0_001, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1005, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1005, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1006
 *         # 1:1000 on any given click+drag
 *         if scale < 0.001:
 *             scale = 0.001             # <<<<<<<<<<<<<<
 *         elif scale > 1000:
 *             scale = 1000
 */
    __Pyx_INCREF(__pyx_float_0_001);
    __Pyx_DECREF_SET(__pyx_v_scale, __pyx_float_0_001);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1005
 *         # do some sanity checks, scale no more than
 *         # 1:1000 on any given click+drag
 *         if scale < 0.001:             # <<<<<<<<<<<<<<
 *             scale = 0.001
 *         elif scale > 1000:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1007
 *         if scale < 0.001:
 *             scale = 0.001
 *         elif scale > 1000:             # <<<<<<<<<<<<<<
 *             scale = 1000
 *         self.distance = self.distance * scale
 */
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_scale, __pyx_int_1000, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1007, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 1007, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1008
 *             scale = 0.001
 *         elif scale > 1000:
 *             scale = 1000             # <<<<<<<<<<<<<<
 *         self.distance = self.distance * scale
 *         self.tkRedraw()
 */
    __Pyx_INCREF(__pyx_int_1000);
    __Pyx_DECREF_SET(__pyx_v_scale, __pyx_int_1000);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1007
 *         if scale < 0.001:
 *             scale = 0.001
 *         elif scale > 1000:             # <<<<<<<<<<<<<<
 *             scale = 1000
 *         self.distance = self.distance * scale
 */
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1009
 *         elif scale > 1000:
 *             scale = 1000
 *         self.distance = self.distance * scale             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_distance); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1009, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_v_scale); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1009, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_distance, __pyx_t_2) < 0) __PYX_ERR(0, 1009, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1010
 *             scale = 1000
 *         self.distance = self.distance * scale
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 *         self.tkRecordMouse(event)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1010, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_1, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1011
 *         self.distance = self.distance * scale
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)             # <<<<<<<<<<<<<<
 * 
 *     def do_AutoSpin(self):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1011, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_event};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1011, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":998
 *         self.tkRecordMouse(event)
 * 
 *     def tkScale(self, event):             # <<<<<<<<<<<<<<
 *         """Scale the scene.  Achieved by moving the eye position.
 *         Dragging up zooms in, while dragging down zooms out
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkScale", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1013
 *         self.tkRecordMouse(event)
 * 
 *     def do_AutoSpin(self):             # <<<<<<<<<<<<<<
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_27do_AutoSpin(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_27do_AutoSpin = {"do_AutoSpin", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_27do_AutoSpin, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_27do_AutoSpin(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("do_AutoSpin (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_26do_AutoSpin(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_26do_AutoSpin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("do_AutoSpin", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1014
 * 
 *     def do_AutoSpin(self):
 *         self.activate()             # <<<<<<<<<<<<<<
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 self.yspin, self.xspin, 0, 0)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1014, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1015
 *     def do_AutoSpin(self):
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,             # <<<<<<<<<<<<<<
 *                 self.yspin, self.xspin, 0, 0)
 *         self.tkRedraw()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glRotateScene); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xcenter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ycenter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_zcenter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1016
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 self.yspin, self.xspin, 0, 0)             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 *         if self.autospin:
 */
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_yspin); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1016, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xspin); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1016, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[9] = {__pyx_t_9, __pyx_float_0_5, __pyx_t_3, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_int_0, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 8+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1015, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1017
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 self.yspin, self.xspin, 0, 0)
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 *         if self.autospin:
 *             self.after(10, self.do_AutoSpin)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_8, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1017, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1018
 *                 self.yspin, self.xspin, 0, 0)
 *         self.tkRedraw()
 *         if self.autospin:             # <<<<<<<<<<<<<<
 *             self.after(10, self.do_AutoSpin)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_autospin); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 1018, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_10) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1019
 *         self.tkRedraw()
 *         if self.autospin:
 *             self.after(10, self.do_AutoSpin)             # <<<<<<<<<<<<<<
 * 
 *     def tkAutoSpin(self, event):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_after); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_do_AutoSpin); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_int_10, __pyx_t_8};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1019, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1018
 *                 self.yspin, self.xspin, 0, 0)
 *         self.tkRedraw()
 *         if self.autospin:             # <<<<<<<<<<<<<<
 *             self.after(10, self.do_AutoSpin)
 * 
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1013
 *         self.tkRecordMouse(event)
 * 
 *     def do_AutoSpin(self):             # <<<<<<<<<<<<<<
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.do_AutoSpin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1021
 *             self.after(10, self.do_AutoSpin)
 * 
 *     def tkAutoSpin(self, event):             # <<<<<<<<<<<<<<
 *         """Perform autospin of scene."""
 *         self.after(4)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_29tkAutoSpin(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_28tkAutoSpin, "Perform autospin of scene.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_29tkAutoSpin = {"tkAutoSpin", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_29tkAutoSpin, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_28tkAutoSpin};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_29tkAutoSpin(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkAutoSpin (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1021, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1021, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkAutoSpin", 1, 2, 2, 1); __PYX_ERR(0, 1021, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkAutoSpin") < 0)) __PYX_ERR(0, 1021, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkAutoSpin", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1021, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkAutoSpin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_28tkAutoSpin(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_28tkAutoSpin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkAutoSpin", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1023
 *     def tkAutoSpin(self, event):
 *         """Perform autospin of scene."""
 *         self.after(4)             # <<<<<<<<<<<<<<
 *         self.update_idletasks()
 *         # This could be done with one call to pointerxy but I'm not sure
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_after); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1023, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1023, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1024
 *         """Perform autospin of scene."""
 *         self.after(4)
 *         self.update_idletasks()             # <<<<<<<<<<<<<<
 *         # This could be done with one call to pointerxy but I'm not sure
 *         # it would any quicker as we would have to split up the resulting
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_idletasks); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1024, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1028
 *         # it would any quicker as we would have to split up the resulting
 *         # string and then conv
 *         x = self.tk.getint(self.tk.call('winfo', 'pointerx', self._w))             # <<<<<<<<<<<<<<
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))
 *         if self.autospin_allowed:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tk); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getint); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tk); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_call); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_w); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_n_s_winfo, __pyx_n_s_pointerx, __pyx_t_5};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_x = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1029
 *         # string and then conv
 *         x = self.tk.getint(self.tk.call('winfo', 'pointerx', self._w))
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))             # <<<<<<<<<<<<<<
 *         if self.autospin_allowed:
 *             if x != event.x_root and y != event.y_root:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tk); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_getint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tk); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_call); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_w); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_n_s_winfo, __pyx_n_s_pointery, __pyx_t_6};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_y = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1030
 *         x = self.tk.getint(self.tk.call('winfo', 'pointerx', self._w))
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))
 *         if self.autospin_allowed:             # <<<<<<<<<<<<<<
 *             if x != event.x_root and y != event.y_root:
 *                 self.autospin = 1
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_autospin_allowed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_8) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1031
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))
 *         if self.autospin_allowed:
 *             if x != event.x_root and y != event.y_root:             # <<<<<<<<<<<<<<
 *                 self.autospin = 1
 *         self.yspin = x - event.x_root
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x_root); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_x, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y_root); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_y, __pyx_t_2, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = __pyx_t_9;
    __pyx_L5_bool_binop_done:;
    if (__pyx_t_8) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1032
 *         if self.autospin_allowed:
 *             if x != event.x_root and y != event.y_root:
 *                 self.autospin = 1             # <<<<<<<<<<<<<<
 *         self.yspin = x - event.x_root
 *         self.xspin = y - event.y_root
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_autospin, __pyx_int_1) < 0) __PYX_ERR(0, 1032, __pyx_L1_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1031
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))
 *         if self.autospin_allowed:
 *             if x != event.x_root and y != event.y_root:             # <<<<<<<<<<<<<<
 *                 self.autospin = 1
 *         self.yspin = x - event.x_root
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1030
 *         x = self.tk.getint(self.tk.call('winfo', 'pointerx', self._w))
 *         y = self.tk.getint(self.tk.call('winfo', 'pointery', self._w))
 *         if self.autospin_allowed:             # <<<<<<<<<<<<<<
 *             if x != event.x_root and y != event.y_root:
 *                 self.autospin = 1
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1033
 *             if x != event.x_root and y != event.y_root:
 *                 self.autospin = 1
 *         self.yspin = x - event.x_root             # <<<<<<<<<<<<<<
 *         self.xspin = y - event.y_root
 *         self.after(10, self.do_AutoSpin)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x_root); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Subtract(__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_yspin, __pyx_t_2) < 0) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1034
 *                 self.autospin = 1
 *         self.yspin = x - event.x_root
 *         self.xspin = y - event.y_root             # <<<<<<<<<<<<<<
 *         self.after(10, self.do_AutoSpin)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y_root); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Subtract(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_xspin, __pyx_t_1) < 0) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1035
 *         self.yspin = x - event.x_root
 *         self.xspin = y - event.y_root
 *         self.after(10, self.do_AutoSpin)             # <<<<<<<<<<<<<<
 * 
 *     def tkRotate(self, event):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_after); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_do_AutoSpin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_int_10, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1021
 *             self.after(10, self.do_AutoSpin)
 * 
 *     def tkAutoSpin(self, event):             # <<<<<<<<<<<<<<
 *         """Perform autospin of scene."""
 *         self.after(4)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkAutoSpin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1037
 *         self.after(10, self.do_AutoSpin)
 * 
 *     def tkRotate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform rotation of scene."""
 *         self.activate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_31tkRotate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_30tkRotate, "Perform rotation of scene.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_31tkRotate = {"tkRotate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_31tkRotate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_30tkRotate};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_31tkRotate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkRotate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkRotate", 1, 2, 2, 1); __PYX_ERR(0, 1037, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkRotate") < 0)) __PYX_ERR(0, 1037, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkRotate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1037, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_30tkRotate(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_30tkRotate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkRotate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1039
 *     def tkRotate(self, event):
 *         """Perform rotation of scene."""
 *         self.activate()             # <<<<<<<<<<<<<<
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 event.x, event.y, self.xmouse, self.ymouse)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1040
 *         """Perform rotation of scene."""
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,             # <<<<<<<<<<<<<<
 *                 event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glRotateScene); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xcenter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ycenter); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_zcenter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1040, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1041
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 event.x, event.y, self.xmouse, self.ymouse)             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)
 */
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xmouse); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ymouse); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[9] = {__pyx_t_11, __pyx_float_0_5, __pyx_t_3, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 8+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1040, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1042
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 *                 event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 *         self.tkRecordMouse(event)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1042, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_10, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1043
 *                 event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)             # <<<<<<<<<<<<<<
 * 
 *     def tkTranslate(self, event):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_v_event};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1037
 *         self.after(10, self.do_AutoSpin)
 * 
 *     def tkRotate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform rotation of scene."""
 *         self.activate()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRotate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1045
 *         self.tkRecordMouse(event)
 * 
 *     def tkTranslate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform translation of scene."""
 *         self.activate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_33tkTranslate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_32tkTranslate, "Perform translation of scene.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_33tkTranslate = {"tkTranslate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_33tkTranslate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_32tkTranslate};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_33tkTranslate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_event = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkTranslate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_event,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1045, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_event)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1045, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkTranslate", 1, 2, 2, 1); __PYX_ERR(0, 1045, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkTranslate") < 0)) __PYX_ERR(0, 1045, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_event = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkTranslate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1045, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkTranslate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_32tkTranslate(__pyx_self, __pyx_v_self, __pyx_v_event);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_32tkTranslate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_event) {
  PyObject *__pyx_v_win_height = NULL;
  PyObject *__pyx_v_obj_c = NULL;
  PyObject *__pyx_v_win = NULL;
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_v_dist = NULL;
  PyObject *__pyx_v_scale = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  long __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkTranslate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1047
 *     def tkTranslate(self, event):
 *         """Perform translation of scene."""
 *         self.activate()             # <<<<<<<<<<<<<<
 *         # Scale mouse translations to object viewplane so object tracks with mouse
 *         win_height = max( 1,self.winfo_height() )
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1049
 *         self.activate()
 *         # Scale mouse translations to object viewplane so object tracks with mouse
 *         win_height = max( 1,self.winfo_height() )             # <<<<<<<<<<<<<<
 *         obj_c = ( self.xcenter, self.ycenter, self.zcenter )
 *         win = GLU.gluProject( obj_c[0], obj_c[1], obj_c[2])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_5 = 1;
  __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1049, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_7) {
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_6 = __Pyx_PyInt_From_long(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1049, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __pyx_t_6;
    __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_t_2;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_win_height = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1050
 *         # Scale mouse translations to object viewplane so object tracks with mouse
 *         win_height = max( 1,self.winfo_height() )
 *         obj_c = ( self.xcenter, self.ycenter, self.zcenter )             # <<<<<<<<<<<<<<
 *         win = GLU.gluProject( obj_c[0], obj_c[1], obj_c[2])
 *         obj = GLU.gluUnProject( win[0], win[1] + 0.5 * win_height, win[2])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xcenter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ycenter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_zcenter); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_6 = 0;
  __pyx_v_obj_c = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1051
 *         win_height = max( 1,self.winfo_height() )
 *         obj_c = ( self.xcenter, self.ycenter, self.zcenter )
 *         win = GLU.gluProject( obj_c[0], obj_c[1], obj_c[2])             # <<<<<<<<<<<<<<
 *         obj = GLU.gluUnProject( win[0], win[1] + 0.5 * win_height, win[2])
 *         dist = math.sqrt( v3distsq( obj, obj_c ) )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GLU); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_gluProject); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v_obj_c, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v_obj_c, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_GetItemInt_Tuple(__pyx_v_obj_c, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_9, __pyx_t_6, __pyx_t_1, __pyx_t_8};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1051, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_win = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1052
 *         obj_c = ( self.xcenter, self.ycenter, self.zcenter )
 *         win = GLU.gluProject( obj_c[0], obj_c[1], obj_c[2])
 *         obj = GLU.gluUnProject( win[0], win[1] + 0.5 * win_height, win[2])             # <<<<<<<<<<<<<<
 *         dist = math.sqrt( v3distsq( obj, obj_c ) )
 *         scale = abs( dist / ( 0.5 * win_height ) )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLU); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_gluUnProject); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_win, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_win, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = PyNumber_Multiply(__pyx_float_0_5, __pyx_v_win_height); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = PyNumber_Add(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_win, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1052, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_1, __pyx_t_2, __pyx_t_9, __pyx_t_6};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1052, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __pyx_v_obj = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1053
 *         win = GLU.gluProject( obj_c[0], obj_c[1], obj_c[2])
 *         obj = GLU.gluUnProject( win[0], win[1] + 0.5 * win_height, win[2])
 *         dist = math.sqrt( v3distsq( obj, obj_c ) )             # <<<<<<<<<<<<<<
 *         scale = abs( dist / ( 0.5 * win_height ) )
 *         glTranslateScene(scale, event.x, event.y, self.xmouse, self.ymouse)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_math); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_v3distsq); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_v_obj, __pyx_v_obj_c};
    __pyx_t_8 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_8};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_v_dist = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1054
 *         obj = GLU.gluUnProject( win[0], win[1] + 0.5 * win_height, win[2])
 *         dist = math.sqrt( v3distsq( obj, obj_c ) )
 *         scale = abs( dist / ( 0.5 * win_height ) )             # <<<<<<<<<<<<<<
 *         glTranslateScene(scale, event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()
 */
  __pyx_t_3 = PyNumber_Multiply(__pyx_float_0_5, __pyx_v_win_height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_v_dist, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyNumber_Absolute(__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_scale = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1055
 *         dist = math.sqrt( v3distsq( obj, obj_c ) )
 *         scale = abs( dist / ( 0.5 * win_height ) )
 *         glTranslateScene(scale, event.x, event.y, self.xmouse, self.ymouse)             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_glTranslateScene); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_x); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_event, __pyx_n_s_y); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xmouse); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ymouse); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[6] = {__pyx_t_10, __pyx_v_scale, __pyx_t_8, __pyx_t_9, __pyx_t_2, __pyx_t_1};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 5+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1055, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1056
 *         scale = abs( dist / ( 0.5 * win_height ) )
 *         glTranslateScene(scale, event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 *         self.tkRecordMouse(event)
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1056, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_1, };
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1056, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1057
 *         glTranslateScene(scale, event.x, event.y, self.xmouse, self.ymouse)
 *         self.tkRedraw()
 *         self.tkRecordMouse(event)             # <<<<<<<<<<<<<<
 * 
 *     def tkRedraw(self, *dummy):
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRecordMouse); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1057, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_event};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1057, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1045
 *         self.tkRecordMouse(event)
 * 
 *     def tkTranslate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform translation of scene."""
 *         self.activate()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkTranslate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_win_height);
  __Pyx_XDECREF(__pyx_v_obj_c);
  __Pyx_XDECREF(__pyx_v_win);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_dist);
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1059
 *         self.tkRecordMouse(event)
 * 
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_35tkRedraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_34tkRedraw, "Cause the opengl widget to redraw itself.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_35tkRedraw = {"tkRedraw", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_35tkRedraw, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_34tkRedraw};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_35tkRedraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dummy = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkRedraw (wrapper)", 0);
  __pyx_v_dummy = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_dummy)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_dummy);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1059, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, used_pos_args, "tkRedraw") < 0)) __PYX_ERR(0, 1059, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkRedraw", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 1059, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_dummy); __pyx_v_dummy = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRedraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_34tkRedraw(__pyx_self, __pyx_v_self, __pyx_v_dummy);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_dummy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_34tkRedraw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy) {
  PyObject *__pyx_v_w = NULL;
  PyObject *__pyx_v_h = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  double __pyx_t_8;
  double __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkRedraw", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1061
 *     def tkRedraw(self, *dummy):
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)             # <<<<<<<<<<<<<<
 *         if not self.initialised: return
 *         self.activate()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_freecalc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1061, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_self};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1061, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1062
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)
 *         if not self.initialised: return             # <<<<<<<<<<<<<<
 *         self.activate()
 *         self.update_idletasks()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_initialised); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1062, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = ((!__pyx_t_5) != 0);
  if (__pyx_t_6) {
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1063
 *         self.freecalc(self)
 *         if not self.initialised: return
 *         self.activate()             # <<<<<<<<<<<<<<
 *         self.update_idletasks()
 *         self.activate()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1063, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1063, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1064
 *         if not self.initialised: return
 *         self.activate()
 *         self.update_idletasks()             # <<<<<<<<<<<<<<
 *         self.activate()
 *         w = self.winfo_width()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_idletasks); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1065
 *         self.activate()
 *         self.update_idletasks()
 *         self.activate()             # <<<<<<<<<<<<<<
 *         w = self.winfo_width()
 *         h = self.winfo_height()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1065, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1066
 *         self.update_idletasks()
 *         self.activate()
 *         w = self.winfo_width()             # <<<<<<<<<<<<<<
 *         h = self.winfo_height()
 *         GL.glViewport(0, 0, w, h)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_width); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_w = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1067
 *         self.activate()
 *         w = self.winfo_width()
 *         h = self.winfo_height()             # <<<<<<<<<<<<<<
 *         GL.glViewport(0, 0, w, h)
 *         # Clear the background and depth buffer.
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_winfo_height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_h = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1068
 *         w = self.winfo_width()
 *         h = self.winfo_height()
 *         GL.glViewport(0, 0, w, h)             # <<<<<<<<<<<<<<
 *         # Clear the background and depth buffer.
 *         #GL.glClearColor(self.r_back, self.g_back, self.b_back, 0.)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1068, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glViewport); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1068, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_int_0, __pyx_int_0, __pyx_v_w, __pyx_v_h};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 4+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1068, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1072
 *         #GL.glClearColor(self.r_back, self.g_back, self.b_back, 0.)
 *         #GL.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT)
 *         GL.glMatrixMode(GL.GL_PROJECTION)             # <<<<<<<<<<<<<<
 *         GL.glLoadIdentity()
 *         GLU.gluPerspective(self.fovy, float(w)/float(h), self.near, self.far)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glMatrixMode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_PROJECTION); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1072, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1072, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1073
 *         #GL.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT)
 *         GL.glMatrixMode(GL.GL_PROJECTION)
 *         GL.glLoadIdentity()             # <<<<<<<<<<<<<<
 *         GLU.gluPerspective(self.fovy, float(w)/float(h), self.near, self.far)
 *         if 0:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glLoadIdentity); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1074
 *         GL.glMatrixMode(GL.GL_PROJECTION)
 *         GL.glLoadIdentity()
 *         GLU.gluPerspective(self.fovy, float(w)/float(h), self.near, self.far)             # <<<<<<<<<<<<<<
 *         if 0:
 *             # Now translate the scene origin away from the world origin
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GLU); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_gluPerspective); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_fovy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_AsDouble(__pyx_v_w); if (unlikely(__pyx_t_8 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyObject_AsDouble(__pyx_v_h); if (unlikely(__pyx_t_9 == ((double)((double)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1074, __pyx_L1_error)
  if (unlikely(__pyx_t_9 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1074, __pyx_L1_error)
  }
  __pyx_t_3 = PyFloat_FromDouble((__pyx_t_8 / __pyx_t_9)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_near); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_far); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_12 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_12)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_12);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_12, __pyx_t_7, __pyx_t_3, __pyx_t_10, __pyx_t_11};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 4+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1084
 *             glMultMatrixd(mat)
 *         else:
 *             GLU.gluLookAt(self.xcenter, self.ycenter, self.zcenter+self.distance,             # <<<<<<<<<<<<<<
 *                 self.xcenter, self.ycenter, self.zcenter,
 *                 0., 1., 0.)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GLU); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_gluLookAt); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xcenter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ycenter); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_zcenter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_distance); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_12 = PyNumber_Add(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1085
 *         else:
 *             GLU.gluLookAt(self.xcenter, self.ycenter, self.zcenter+self.distance,
 *                 self.xcenter, self.ycenter, self.zcenter,             # <<<<<<<<<<<<<<
 *                 0., 1., 0.)
 *             GL.glMatrixMode(GL.GL_MODELVIEW)
 */
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_xcenter); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ycenter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_zcenter); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_14 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
    __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_11);
    if (likely(__pyx_t_14)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
      __Pyx_INCREF(__pyx_t_14);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_11, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[10] = {__pyx_t_14, __pyx_t_2, __pyx_t_10, __pyx_t_12, __pyx_t_7, __pyx_t_3, __pyx_t_13, __pyx_float_0_, __pyx_float_1_, __pyx_float_0_};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_4, 9+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1087
 *                 self.xcenter, self.ycenter, self.zcenter,
 *                 0., 1., 0.)
 *             GL.glMatrixMode(GL.GL_MODELVIEW)             # <<<<<<<<<<<<<<
 * 
 *         # Call objects redraw method.
 */
  __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_glMatrixMode); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_MODELVIEW); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_t_11 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_13);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_13, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1087, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1090
 * 
 *         # Call objects redraw method.
 *         self.redraw(self)             # <<<<<<<<<<<<<<
 *     def freecalc( self, *args, **named ):
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 */
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_redraw); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_13);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_13, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_self};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1059
 *         self.tkRecordMouse(event)
 * 
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkRedraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_w);
  __Pyx_XDECREF(__pyx_v_h);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1091
 *         # Call objects redraw method.
 *         self.redraw(self)
 *     def freecalc( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_37freecalc(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_36freecalc, "Prevent access errors if user doesn't set redraw fast enough");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_37freecalc = {"freecalc", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_37freecalc, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_36freecalc};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_37freecalc(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_named = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("freecalc (wrapper)", 0);
  __pyx_v_named = PyDict_New(); if (unlikely(!__pyx_v_named)) return NULL;
  __Pyx_GOTREF(__pyx_v_named);
  __pyx_v_args = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_named); __pyx_v_named = 0;
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1091, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_named, values + 0, used_pos_args, "freecalc") < 0)) __PYX_ERR(0, 1091, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("freecalc", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 1091, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_named); __pyx_v_named = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.freecalc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_36freecalc(__pyx_self, __pyx_v_self, __pyx_v_args, __pyx_v_named);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_named);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_36freecalc(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_named) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("freecalc", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1093
 *     def freecalc( self, *args, **named ):
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_39redraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_38redraw, "Prevent access errors if user doesn't set redraw fast enough");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_39redraw = {"redraw", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_39redraw, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_38redraw};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_39redraw(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_named = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("redraw (wrapper)", 0);
  __pyx_v_named = PyDict_New(); if (unlikely(!__pyx_v_named)) return NULL;
  __Pyx_GOTREF(__pyx_v_named);
  __pyx_v_args = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_named); __pyx_v_named = 0;
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1093, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_named, values + 0, used_pos_args, "redraw") < 0)) __PYX_ERR(0, 1093, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("redraw", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 1093, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_named); __pyx_v_named = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.redraw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_38redraw(__pyx_self, __pyx_v_self, __pyx_v_args, __pyx_v_named);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_named);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_38redraw(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_named) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("redraw", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1096
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 *     def tkExpose(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Redraw the widget.
 *         Make it active, update tk events, call redraw procedure and
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_41tkExpose(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_40tkExpose, "Redraw the widget.\n        Make it active, update tk events, call redraw procedure and\n        swap the buffers.  Note: swapbuffers is clever enough to\n        only swap double buffered visuals.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_41tkExpose = {"tkExpose", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_41tkExpose, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_40tkExpose};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_41tkExpose(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_dummy = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkExpose (wrapper)", 0);
  __pyx_v_dummy = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_dummy)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_dummy);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    #endif
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1096, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, used_pos_args, "tkExpose") < 0)) __PYX_ERR(0, 1096, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkExpose", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 1096, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_dummy); __pyx_v_dummy = 0;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkExpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_40tkExpose(__pyx_self, __pyx_v_self, __pyx_v_dummy);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_dummy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_40tkExpose(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_dummy) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkExpose", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1101
 *         swap the buffers.  Note: swapbuffers is clever enough to
 *         only swap double buffered visuals."""
 *         self.activate()             # <<<<<<<<<<<<<<
 *         if not self.initialised:
 *             self.basic_lighting()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1102
 *         only swap double buffered visuals."""
 *         self.activate()
 *         if not self.initialised:             # <<<<<<<<<<<<<<
 *             self.basic_lighting()
 *             self.initialised = 1
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_initialised); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = ((!__pyx_t_5) != 0);
  if (__pyx_t_6) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1103
 *         self.activate()
 *         if not self.initialised:
 *             self.basic_lighting()             # <<<<<<<<<<<<<<
 *             self.initialised = 1
 *         self.tkRedraw()
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basic_lighting); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_3, };
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1103, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1104
 *         if not self.initialised:
 *             self.basic_lighting()
 *             self.initialised = 1             # <<<<<<<<<<<<<<
 *         self.tkRedraw()
 * 
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_initialised, __pyx_int_1) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1102
 *         only swap double buffered visuals."""
 *         self.activate()
 *         if not self.initialised:             # <<<<<<<<<<<<<<
 *             self.basic_lighting()
 *             self.initialised = 1
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1105
 *             self.basic_lighting()
 *             self.initialised = 1
 *         self.tkRedraw()             # <<<<<<<<<<<<<<
 * 
 *     def tkPrint(self, file):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_tkRedraw); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1096
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 *     def tkExpose(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Redraw the widget.
 *         Make it active, update tk events, call redraw procedure and
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkExpose", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1107
 *         self.tkRedraw()
 * 
 *     def tkPrint(self, file):             # <<<<<<<<<<<<<<
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_43tkPrint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_42tkPrint, "Turn the current scene into PostScript via the feedback buffer.");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_43tkPrint = {"tkPrint", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_43tkPrint, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_42tkPrint};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_43tkPrint(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_file = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tkPrint (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_file,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_file,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_file)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1107, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("tkPrint", 1, 2, 2, 1); __PYX_ERR(0, 1107, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tkPrint") < 0)) __PYX_ERR(0, 1107, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_file = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tkPrint", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1107, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkPrint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_42tkPrint(__pyx_self, __pyx_v_self, __pyx_v_file);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_42tkPrint(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_file) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tkPrint", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1109
 *     def tkPrint(self, file):
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()             # <<<<<<<<<<<<<<
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]
 *     def __init__(self,screen_res):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_activate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1107
 *         self.tkRedraw()
 * 
 *     def tkPrint(self, file):             # <<<<<<<<<<<<<<
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.Opengl.tkPrint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1111
 *         self.activate()
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_screen_res = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screen_res,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screen_res,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screen_res)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1111, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1111, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1111, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_screen_res = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1111, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender___init__(__pyx_self, __pyx_v_self, __pyx_v_screen_res);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_screen_res) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1114
 *         pass#DFPASS
 * 
 *     def prerender_quad(self_,cords,color):             # <<<<<<<<<<<<<<
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_3prerender_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_2prerender_quad, " Pre render quad ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_3prerender_quad = {"prerender_quad", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_3prerender_quad, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_2prerender_quad};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_3prerender_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self_ = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prerender_quad (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_color,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self_2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_quad", 1, 3, 3, 1); __PYX_ERR(0, 1114, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1114, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_quad", 1, 3, 3, 2); __PYX_ERR(0, 1114, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "prerender_quad") < 0)) __PYX_ERR(0, 1114, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self_ = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prerender_quad", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1114, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_2prerender_quad(__pyx_self, __pyx_v_self_, __pyx_v_cords, __pyx_v_color);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_2prerender_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_color) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prerender_quad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1116
 *     def prerender_quad(self_,cords,color):
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['quad',tr1,tr2,color]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1117
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)             # <<<<<<<<<<<<<<
 *         data = ['quad',tr1,tr2,color]
 *         return data
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_nx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_ny); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyNumber_Subtract(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_5, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1118
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['quad',tr1,tr2,color]             # <<<<<<<<<<<<<<
 *         return data
 * 
 */
  __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_quad);
  __Pyx_GIVEREF(__pyx_n_s_quad);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_quad);
  __Pyx_INCREF(__pyx_v_tr1);
  __Pyx_GIVEREF(__pyx_v_tr1);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_tr1);
  __Pyx_INCREF(__pyx_v_tr2);
  __Pyx_GIVEREF(__pyx_v_tr2);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_tr2);
  __Pyx_INCREF(__pyx_v_color);
  __Pyx_GIVEREF(__pyx_v_color);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_color);
  __pyx_v_data = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1119
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['quad',tr1,tr2,color]
 *         return data             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_data);
  __pyx_r = __pyx_v_data;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1114
 *         pass#DFPASS
 * 
 *     def prerender_quad(self_,cords,color):             # <<<<<<<<<<<<<<
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1125
 * 
 * 
 *     def prerender_texturequad(self_,cords,color,texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_5prerender_texturequad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_4prerender_texturequad, " Pre render Texture quad ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_5prerender_texturequad = {"prerender_texturequad", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_5prerender_texturequad, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_4prerender_texturequad};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_5prerender_texturequad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self_ = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_texture = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prerender_texturequad (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_texture,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_texture,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self_2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1125, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1125, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_texturequad", 1, 4, 4, 1); __PYX_ERR(0, 1125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1125, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_texturequad", 1, 4, 4, 2); __PYX_ERR(0, 1125, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texture)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1125, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_texturequad", 1, 4, 4, 3); __PYX_ERR(0, 1125, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "prerender_texturequad") < 0)) __PYX_ERR(0, 1125, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self_ = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_texture = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prerender_texturequad", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1125, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_texturequad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_4prerender_texturequad(__pyx_self, __pyx_v_self_, __pyx_v_cords, __pyx_v_color, __pyx_v_texture);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_4prerender_texturequad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_texture) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prerender_texturequad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1127
 *     def prerender_texturequad(self_,cords,color,texture):
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])             # <<<<<<<<<<<<<<
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['tquad',tr1,tr2,color,texture]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1128
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)             # <<<<<<<<<<<<<<
 *         data = ['tquad',tr1,tr2,color,texture]
 *         return data
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_nx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_ny); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyNumber_Subtract(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_5, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1129
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['tquad',tr1,tr2,color,texture]             # <<<<<<<<<<<<<<
 *         return data
 * 
 */
  __pyx_t_1 = PyList_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_tquad);
  __Pyx_GIVEREF(__pyx_n_s_tquad);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_tquad);
  __Pyx_INCREF(__pyx_v_tr1);
  __Pyx_GIVEREF(__pyx_v_tr1);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_tr1);
  __Pyx_INCREF(__pyx_v_tr2);
  __Pyx_GIVEREF(__pyx_v_tr2);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_tr2);
  __Pyx_INCREF(__pyx_v_color);
  __Pyx_GIVEREF(__pyx_v_color);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_color);
  __Pyx_INCREF(__pyx_v_texture);
  __Pyx_GIVEREF(__pyx_v_texture);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_texture);
  __pyx_v_data = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1130
 *         tr2 = self_._cords_to_ratio(cords[2]-self_.nx,cords[3]-self_.ny)
 *         data = ['tquad',tr1,tr2,color,texture]
 *         return data             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_data);
  __pyx_r = __pyx_v_data;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1125
 * 
 * 
 *     def prerender_texturequad(self_,cords,color,texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_texturequad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1139
 * 
 * 
 *     def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 *         face = Face(filename)
 *         face.set_char_size( size*64 )
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_7create_font(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_7create_font = {"create_font", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_7create_font, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_7create_font(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_size = 0;
  CYTHON_UNUSED PyObject *__pyx_v_base = 0;
  PyObject *__pyx_v_texid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_font (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_size,&__pyx_n_s_base,&__pyx_n_s_texid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_size,&__pyx_n_s_base,&__pyx_n_s_texid,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_filename)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 1); __PYX_ERR(0, 1139, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_base)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 2); __PYX_ERR(0, 1139, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texid)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 3); __PYX_ERR(0, 1139, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_font") < 0)) __PYX_ERR(0, 1139, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_filename = values[0];
    __pyx_v_size = values[1];
    __pyx_v_base = values[2];
    __pyx_v_texid = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1139, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.create_font", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_6create_font(__pyx_self, __pyx_v_filename, __pyx_v_size, __pyx_v_base, __pyx_v_texid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_6create_font(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_size, CYTHON_UNUSED PyObject *__pyx_v_base, PyObject *__pyx_v_texid) {
  PyObject *__pyx_v_face = NULL;
  PyObject *__pyx_v_width = NULL;
  PyObject *__pyx_v_height = NULL;
  PyObject *__pyx_v_ascender = NULL;
  PyObject *__pyx_v_descender = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_bitmap = NULL;
  PyObject *__pyx_v_Z = NULL;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_font = NULL;
  PyObject *__pyx_v_dx = NULL;
  PyObject *__pyx_v_dy = NULL;
  PyObject *__pyx_v_cords1 = NULL;
  PyObject *__pyx_v_texcords1 = NULL;
  PyObject *__pyx_v_cords2 = NULL;
  PyObject *__pyx_v_texcords2 = NULL;
  PyObject *__pyx_v_cords3 = NULL;
  PyObject *__pyx_v_texcords3 = NULL;
  PyObject *__pyx_v_cords4 = NULL;
  PyObject *__pyx_v_texcords4 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  long __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_font", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1140
 * 
 *     def create_font(filename, size,base,texid):
 *         face = Face(filename)             # <<<<<<<<<<<<<<
 *         face.set_char_size( size*64 )
 *         if not face.is_fixed_width:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Face); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_filename};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_face = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1141
 *     def create_font(filename, size,base,texid):
 *         face = Face(filename)
 *         face.set_char_size( size*64 )             # <<<<<<<<<<<<<<
 *         if not face.is_fixed_width:
 *             pass#raise 'Font is not monotype'
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_set_char_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_size, __pyx_int_64, 64, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1142
 *         face = Face(filename)
 *         face.set_char_size( size*64 )
 *         if not face.is_fixed_width:             # <<<<<<<<<<<<<<
 *             pass#raise 'Font is not monotype'
 *         width, height, ascender, descender = 0, 0, 0, 0
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_is_fixed_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1142, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!__pyx_t_6) != 0);
  if (__pyx_t_7) {
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1144
 *         if not face.is_fixed_width:
 *             pass#raise 'Font is not monotype'
 *         width, height, ascender, descender = 0, 0, 0, 0             # <<<<<<<<<<<<<<
 *         for c in range(32,128):
 *             face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 */
  __pyx_t_1 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_5);
  __pyx_v_width = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_height = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_ascender = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_descender = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1145
 *             pass#raise 'Font is not monotype'
 *         width, height, ascender, descender = 0, 0, 0, 0
 *         for c in range(32,128):             # <<<<<<<<<<<<<<
 *             face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap    = face.glyph.bitmap
 */
  for (__pyx_t_8 = 32; __pyx_t_8 < 0x80; __pyx_t_8+=1) {
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1146
 *         width, height, ascender, descender = 0, 0, 0, 0
 *         for c in range(32,128):
 *             face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )             # <<<<<<<<<<<<<<
 *             bitmap    = face.glyph.bitmap
 *             width     = max( width, bitmap.width )
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_load_char); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_v_c); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FT_LOAD_RENDER); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_FT_LOAD_FORCE_AUTOHINT); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyNumber_Or(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_t_2, __pyx_t_10};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1146, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1147
 *         for c in range(32,128):
 *             face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap    = face.glyph.bitmap             # <<<<<<<<<<<<<<
 *             width     = max( width, bitmap.width )
 *             ascender  = max( ascender, face.glyph.bitmap_top )
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_bitmap); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_bitmap, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1148
 *             face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap    = face.glyph.bitmap
 *             width     = max( width, bitmap.width )             # <<<<<<<<<<<<<<
 *             ascender  = max( ascender, face.glyph.bitmap_top )
 *             descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_width);
    __pyx_t_5 = __pyx_v_width;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1148, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1148, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_10 = __pyx_t_3;
    } else {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_t_5;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_t_10;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_width, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1149
 *             bitmap    = face.glyph.bitmap
 *             width     = max( width, bitmap.width )
 *             ascender  = max( ascender, face.glyph.bitmap_top )             # <<<<<<<<<<<<<<
 *             descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *         height = ascender+descender
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_v_ascender);
    __pyx_t_3 = __pyx_v_ascender;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_10, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1149, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1149, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_10);
      __pyx_t_5 = __pyx_t_10;
    } else {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_5 = __pyx_t_3;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __pyx_t_5;
    __Pyx_INCREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_ascender, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1150
 *             width     = max( width, bitmap.width )
 *             ascender  = max( ascender, face.glyph.bitmap_top )
 *             descender = max( descender, bitmap.rows-face.glyph.bitmap_top )             # <<<<<<<<<<<<<<
 *         height = ascender+descender
 *         Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 */
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_rows); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_10, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_v_descender);
    __pyx_t_3 = __pyx_v_descender;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1150, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_t_5;
    } else {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_10 = __pyx_t_3;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __pyx_t_10;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_descender, __pyx_t_5);
    __pyx_t_5 = 0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1151
 *             ascender  = max( ascender, face.glyph.bitmap_top )
 *             descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *         height = ascender+descender             # <<<<<<<<<<<<<<
 *         Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *         for j in range(6):
 */
  __pyx_t_5 = PyNumber_Add(__pyx_v_ascender, __pyx_v_descender); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF_SET(__pyx_v_height, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1152
 *             descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *         height = ascender+descender
 *         Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)             # <<<<<<<<<<<<<<
 *         for j in range(6):
 *             for i in range(16):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_numpy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyInt_MultiplyObjC(__pyx_v_height, __pyx_int_6, 6, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_width, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_5 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_numpy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ubyte); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_9) < 0) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Z = __pyx_t_9;
  __pyx_t_9 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1153
 *         height = ascender+descender
 *         Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *         for j in range(6):             # <<<<<<<<<<<<<<
 *             for i in range(16):
 *                 face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 */
  for (__pyx_t_8 = 0; __pyx_t_8 < 6; __pyx_t_8+=1) {
    __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1154
 *         Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *         for j in range(6):
 *             for i in range(16):             # <<<<<<<<<<<<<<
 *                 face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *                 bitmap = face.glyph.bitmap
 */
    for (__pyx_t_11 = 0; __pyx_t_11 < 16; __pyx_t_11+=1) {
      __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_t_11); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1155
 *         for j in range(6):
 *             for i in range(16):
 *                 face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )             # <<<<<<<<<<<<<<
 *                 bitmap = face.glyph.bitmap
 *                 x = i*width  + face.glyph.bitmap_left
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_load_char); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_j, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_PyInt_AddCObj(__pyx_int_32, __pyx_t_3, 32, 0, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Add(__pyx_t_10, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_FT_LOAD_RENDER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_FT_LOAD_FORCE_AUTOHINT); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyNumber_Or(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1155, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_10, __pyx_t_1};
        __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1155, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1156
 *             for i in range(16):
 *                 face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *                 bitmap = face.glyph.bitmap             # <<<<<<<<<<<<<<
 *                 x = i*width  + face.glyph.bitmap_left
 *                 y = j*height + ascender - face.glyph.bitmap_top
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1156, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF_SET(__pyx_v_bitmap, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1157
 *                 face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *                 bitmap = face.glyph.bitmap
 *                 x = i*width  + face.glyph.bitmap_left             # <<<<<<<<<<<<<<
 *                 y = j*height + ascender - face.glyph.bitmap_top
 *                 Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 */
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_i, __pyx_v_width); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap_left); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1157, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1158
 *                 bitmap = face.glyph.bitmap
 *                 x = i*width  + face.glyph.bitmap_left
 *                 y = j*height + ascender - face.glyph.bitmap_top             # <<<<<<<<<<<<<<
 *                 Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 *         # Bound texture
 */
      __pyx_t_9 = PyNumber_Multiply(__pyx_v_j, __pyx_v_height); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = PyNumber_Add(__pyx_t_9, __pyx_v_ascender); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1158, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1159
 *                 x = i*width  + face.glyph.bitmap_left
 *                 y = j*height + ascender - face.glyph.bitmap_top
 *                 Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer             # <<<<<<<<<<<<<<
 *         # Bound texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_buffer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_rows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyNumber_Add(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PySlice_New(__pyx_v_y, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = PyNumber_Add(__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PySlice_New(__pyx_v_x, __pyx_t_10, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_1);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_Z, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_flat, __pyx_t_9) < 0) __PYX_ERR(0, 1159, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1161
 *                 Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 *         # Bound texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         print('Before >',texid)
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1162
 *         # Bound texture
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         print('Before >',texid)             # <<<<<<<<<<<<<<
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *         GL.glGenTextures(1, texid)
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_kp_s_Before);
  __Pyx_GIVEREF(__pyx_kp_s_Before);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_Before);
  __Pyx_INCREF(__pyx_v_texid);
  __Pyx_GIVEREF(__pyx_v_texid);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_texid);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1163
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         print('Before >',texid)
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)             # <<<<<<<<<<<<<<
 *         GL.glGenTextures(1, texid)
 *         GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glPixelStorei); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_UNPACK_ALIGNMENT); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_9, __pyx_int_1};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1164
 *         print('Before >',texid)
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *         GL.glGenTextures(1, texid)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGenTextures); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_int_1, __pyx_v_texid};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1165
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *         GL.glGenTextures(1, texid)
 *         GL.glBindTexture( GL.GL_TEXTURE_2D, texid)             # <<<<<<<<<<<<<<
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_t_10, __pyx_v_texid};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1166
 *         GL.glGenTextures(1, texid)
 *         GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )             # <<<<<<<<<<<<<<
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_MAG_FILTER); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_NEAREST); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_9, __pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1167
 *         GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )             # <<<<<<<<<<<<<<
 * 
 *         GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_MIN_FILTER); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_NEAREST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_5, __pyx_t_9, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1169
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 * 
 *         GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,             # <<<<<<<<<<<<<<
 *                          GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 *         font = []
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_ALPHA); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1170
 * 
 *         GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 *                          GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )             # <<<<<<<<<<<<<<
 *         font = []
 *         print('Create >',texid)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_ALPHA); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[10] = {__pyx_t_3, __pyx_t_9, __pyx_int_0, __pyx_t_5, __pyx_t_10, __pyx_t_12, __pyx_int_0, __pyx_t_13, __pyx_t_14, __pyx_v_Z};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 9+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1171
 *         GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 *                          GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 *         font = []             # <<<<<<<<<<<<<<
 *         print('Create >',texid)
 *         # Generate display lists
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_font = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1172
 *                          GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 *         font = []
 *         print('Create >',texid)             # <<<<<<<<<<<<<<
 *         # Generate display lists
 *         dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_kp_s_Create);
  __Pyx_GIVEREF(__pyx_kp_s_Create);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_Create);
  __Pyx_INCREF(__pyx_v_texid);
  __Pyx_GIVEREF(__pyx_v_texid);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_texid);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 1172, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1174
 *         print('Create >',texid)
 *         # Generate display lists
 *         dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])             # <<<<<<<<<<<<<<
 *         for i in range(8*16):
 *             c = chr(i)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_v_width, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyNumber_Divide(__pyx_v_height, __pyx_t_1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_dx = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_dy = __pyx_t_14;
  __pyx_t_14 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1175
 *         # Generate display lists
 *         dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 *         for i in range(8*16):             # <<<<<<<<<<<<<<
 *             c = chr(i)
 *             x = i%16
 */
  for (__pyx_t_8 = 0; __pyx_t_8 < 0x80; __pyx_t_8+=1) {
    __pyx_t_14 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1175, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1176
 *         dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 *         for i in range(8*16):
 *             c = chr(i)             # <<<<<<<<<<<<<<
 *             x = i%16
 *             y = i//16-2
 */
    __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_v_i); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1177
 *         for i in range(8*16):
 *             c = chr(i)
 *             x = i%16             # <<<<<<<<<<<<<<
 *             y = i//16-2
 *             if (c == '\n'):
 */
    __pyx_t_14 = __Pyx_PyInt_RemainderObjC(__pyx_v_i, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1178
 *             c = chr(i)
 *             x = i%16
 *             y = i//16-2             # <<<<<<<<<<<<<<
 *             if (c == '\n'):
 *                 #GL.glTranslatef( 0, -height, 0 )
 */
    __pyx_t_14 = __Pyx_PyInt_FloorDivideObjC(__pyx_v_i, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_14, __pyx_int_2, 2, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1179
 *             x = i%16
 *             y = i//16-2
 *             if (c == '\n'):             # <<<<<<<<<<<<<<
 *                 #GL.glTranslatef( 0, -height, 0 )
 *                 font.append(['NEWLINE'])
 */
    __pyx_t_7 = (__Pyx_PyString_Equals(__pyx_v_c, __pyx_kp_s__13, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1179, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1181
 *             if (c == '\n'):
 *                 #GL.glTranslatef( 0, -height, 0 )
 *                 font.append(['NEWLINE'])             # <<<<<<<<<<<<<<
 *             elif (c == '\t'):
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1181, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_NEWLINE);
      __Pyx_GIVEREF(__pyx_n_s_NEWLINE);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_NEWLINE);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_2); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1181, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1179
 *             x = i%16
 *             y = i//16-2
 *             if (c == '\n'):             # <<<<<<<<<<<<<<
 *                 #GL.glTranslatef( 0, -height, 0 )
 *                 font.append(['NEWLINE'])
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1182
 *                 #GL.glTranslatef( 0, -height, 0 )
 *                 font.append(['NEWLINE'])
 *             elif (c == '\t'):             # <<<<<<<<<<<<<<
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 *                 font.append(['TAB'])
 */
    __pyx_t_7 = (__Pyx_PyString_Equals(__pyx_v_c, __pyx_kp_s__10, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1182, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1184
 *             elif (c == '\t'):
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 *                 font.append(['TAB'])             # <<<<<<<<<<<<<<
 *             elif (i >= 32):
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_TAB);
      __Pyx_GIVEREF(__pyx_n_s_TAB);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_TAB);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_2); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1184, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1182
 *                 #GL.glTranslatef( 0, -height, 0 )
 *                 font.append(['NEWLINE'])
 *             elif (c == '\t'):             # <<<<<<<<<<<<<<
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 *                 font.append(['TAB'])
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1185
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 *                 font.append(['TAB'])
 *             elif (i >= 32):             # <<<<<<<<<<<<<<
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 */
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_i, __pyx_int_32, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1185, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1185, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1186
 *                 font.append(['TAB'])
 *             elif (i >= 32):
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )             # <<<<<<<<<<<<<<
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *                 cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 */
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_x, __pyx_v_dx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_14, __pyx_v_dy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_1);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords1, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;
      __pyx_t_14 = PyNumber_Negative(__pyx_v_height); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_14);
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_texcords1, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1187
 *             elif (i >= 32):
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )             # <<<<<<<<<<<<<<
 *                 cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 *                 cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 */
      __pyx_t_1 = PyNumber_Multiply(__pyx_v_x, __pyx_v_dx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyNumber_Multiply(__pyx_v_y, __pyx_v_dy); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1187, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_14);
      __pyx_t_1 = 0;
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords2, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;
      __Pyx_INCREF(__pyx_tuple_);
      __Pyx_XDECREF_SET(__pyx_v_texcords2, __pyx_tuple_);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1188
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *                 cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )             # <<<<<<<<<<<<<<
 *                 cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 *                 #GL.glTranslatef( width, 0, 0 )
 */
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = PyNumber_Multiply(__pyx_t_2, __pyx_v_dx); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_y, __pyx_v_dy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
      __pyx_t_14 = 0;
      __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords3, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_width);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
      __Pyx_XDECREF_SET(__pyx_v_texcords3, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1189
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *                 cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 *                 cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )             # <<<<<<<<<<<<<<
 *                 #GL.glTranslatef( width, 0, 0 )
 *                 font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])
 */
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_dx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyNumber_Multiply(__pyx_t_1, __pyx_v_dy); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_14);
      __pyx_t_2 = 0;
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords4, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Negative(__pyx_v_height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_v_width);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_texcords4, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1191
 *                 cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 *                 #GL.glTranslatef( width, 0, 0 )
 *                 font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])             # <<<<<<<<<<<<<<
 *             else:
 *                 font.append([None])
 */
      __pyx_t_14 = PyList_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_v_cords1);
      __Pyx_GIVEREF(__pyx_v_cords1);
      PyList_SET_ITEM(__pyx_t_14, 0, __pyx_v_cords1);
      __Pyx_INCREF(__pyx_v_texcords1);
      __Pyx_GIVEREF(__pyx_v_texcords1);
      PyList_SET_ITEM(__pyx_t_14, 1, __pyx_v_texcords1);
      __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_cords2);
      __Pyx_GIVEREF(__pyx_v_cords2);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords2);
      __Pyx_INCREF(__pyx_v_texcords2);
      __Pyx_GIVEREF(__pyx_v_texcords2);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_texcords2);
      __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_cords3);
      __Pyx_GIVEREF(__pyx_v_cords3);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_v_cords3);
      __Pyx_INCREF(__pyx_v_texcords3);
      __Pyx_GIVEREF(__pyx_v_texcords3);
      PyList_SET_ITEM(__pyx_t_2, 1, __pyx_v_texcords3);
      __pyx_t_13 = PyList_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_INCREF(__pyx_v_cords4);
      __Pyx_GIVEREF(__pyx_v_cords4);
      PyList_SET_ITEM(__pyx_t_13, 0, __pyx_v_cords4);
      __Pyx_INCREF(__pyx_v_texcords4);
      __Pyx_GIVEREF(__pyx_v_texcords4);
      PyList_SET_ITEM(__pyx_t_13, 1, __pyx_v_texcords4);
      __pyx_t_12 = PyList_New(6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_12, 0, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_12, 1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_2);
      PyList_SET_ITEM(__pyx_t_12, 2, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_13);
      PyList_SET_ITEM(__pyx_t_12, 3, __pyx_t_13);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyList_SET_ITEM(__pyx_t_12, 4, __pyx_v_width);
      __Pyx_INCREF(__pyx_v_height);
      __Pyx_GIVEREF(__pyx_v_height);
      PyList_SET_ITEM(__pyx_t_12, 5, __pyx_v_height);
      __pyx_t_14 = 0;
      __pyx_t_1 = 0;
      __pyx_t_2 = 0;
      __pyx_t_13 = 0;
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_12); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1191, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1185
 *                 #GL.glTranslatef( 4*width, 0, 0 )
 *                 font.append(['TAB'])
 *             elif (i >= 32):             # <<<<<<<<<<<<<<
 *                 cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *                 cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1193
 *                 font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])
 *             else:
 *                 font.append([None])             # <<<<<<<<<<<<<<
 *         return font
 * 
 */
    /*else*/ {
      __pyx_t_12 = PyList_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_INCREF(Py_None);
      __Pyx_GIVEREF(Py_None);
      PyList_SET_ITEM(__pyx_t_12, 0, Py_None);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_12); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1193, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_L12:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1194
 *             else:
 *                 font.append([None])
 *         return font             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_font);
  __pyx_r = __pyx_v_font;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1139
 * 
 * 
 *     def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 *         face = Face(filename)
 *         face.set_char_size( size*64 )
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.create_font", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_face);
  __Pyx_XDECREF(__pyx_v_width);
  __Pyx_XDECREF(__pyx_v_height);
  __Pyx_XDECREF(__pyx_v_ascender);
  __Pyx_XDECREF(__pyx_v_descender);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_bitmap);
  __Pyx_XDECREF(__pyx_v_Z);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_font);
  __Pyx_XDECREF(__pyx_v_dx);
  __Pyx_XDECREF(__pyx_v_dy);
  __Pyx_XDECREF(__pyx_v_cords1);
  __Pyx_XDECREF(__pyx_v_texcords1);
  __Pyx_XDECREF(__pyx_v_cords2);
  __Pyx_XDECREF(__pyx_v_texcords2);
  __Pyx_XDECREF(__pyx_v_cords3);
  __Pyx_XDECREF(__pyx_v_texcords3);
  __Pyx_XDECREF(__pyx_v_cords4);
  __Pyx_XDECREF(__pyx_v_texcords4);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1202
 * 
 * 
 *     def prerender_text(self_,cords,text,font_letters,spacing_addx,spacing_addy,color,font_texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Text '''
 *         config=(256,256,8)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_9prerender_text(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_8prerender_text, " Pre render Text ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_9prerender_text = {"prerender_text", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_9prerender_text, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_8prerender_text};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_9prerender_text(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self_ = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_text = 0;
  PyObject *__pyx_v_font_letters = 0;
  PyObject *__pyx_v_spacing_addx = 0;
  PyObject *__pyx_v_spacing_addy = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_font_texture = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prerender_text (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_text,&__pyx_n_s_font_letters,&__pyx_n_s_spacing_addx,&__pyx_n_s_spacing_addy,&__pyx_n_s_color,&__pyx_n_s_font_texture,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self_2,&__pyx_n_s_cords,&__pyx_n_s_text,&__pyx_n_s_font_letters,&__pyx_n_s_spacing_addx,&__pyx_n_s_spacing_addy,&__pyx_n_s_color,&__pyx_n_s_font_texture,0};
    #endif
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  8: values[7] = __Pyx_Arg_FASTCALL(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self_2)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 1); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 2); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font_letters)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 3); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_spacing_addx)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 4); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_spacing_addy)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 5); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 6); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font_texture)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, 7); __PYX_ERR(0, 1202, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "prerender_text") < 0)) __PYX_ERR(0, 1202, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 8)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
      values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
      values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
      values[7] = __Pyx_Arg_FASTCALL(__pyx_args, 7);
    }
    __pyx_v_self_ = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_text = values[2];
    __pyx_v_font_letters = values[3];
    __pyx_v_spacing_addx = values[4];
    __pyx_v_spacing_addy = values[5];
    __pyx_v_color = values[6];
    __pyx_v_font_texture = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prerender_text", 1, 8, 8, __pyx_nargs); __PYX_ERR(0, 1202, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_8prerender_text(__pyx_self, __pyx_v_self_, __pyx_v_cords, __pyx_v_text, __pyx_v_font_letters, __pyx_v_spacing_addx, __pyx_v_spacing_addy, __pyx_v_color, __pyx_v_font_texture);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_8prerender_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self_, PyObject *__pyx_v_cords, PyObject *__pyx_v_text, PyObject *__pyx_v_font_letters, PyObject *__pyx_v_spacing_addx, PyObject *__pyx_v_spacing_addy, PyObject *__pyx_v_color, PyObject *__pyx_v_font_texture) {
  PyObject *__pyx_v_config = NULL;
  PyObject *__pyx_v_data_type = NULL;
  PyObject *__pyx_v_data_length = NULL;
  PyObject *__pyx_v_data_txn = NULL;
  PyObject *__pyx_v_data_tr1 = NULL;
  PyObject *__pyx_v_data_tr2 = NULL;
  PyObject *__pyx_v_spacing = NULL;
  PyObject *__pyx_v_size_x = NULL;
  PyObject *__pyx_v_size_y = NULL;
  long __pyx_v_r;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_spacing_y = NULL;
  long __pyx_v_add_boldnext;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_l = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_ls = NULL;
  PyObject *__pyx_v_cords_ = NULL;
  PyObject *__pyx_v_textn = NULL;
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_v_txn = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  int __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prerender_text", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1204
 *     def prerender_text(self_,cords,text,font_letters,spacing_addx,spacing_addy,color,font_texture):
 *         ''' Pre render Text '''
 *         config=(256,256,8)             # <<<<<<<<<<<<<<
 *         data_type = ['text']
 *         data_length = 0
 */
  __Pyx_INCREF(__pyx_tuple__6);
  __pyx_v_config = __pyx_tuple__6;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1205
 *         ''' Pre render Text '''
 *         config=(256,256,8)
 *         data_type = ['text']             # <<<<<<<<<<<<<<
 *         data_length = 0
 *         data_txn = []
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_text);
  __Pyx_GIVEREF(__pyx_n_s_text);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_text);
  __pyx_v_data_type = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1206
 *         config=(256,256,8)
 *         data_type = ['text']
 *         data_length = 0             # <<<<<<<<<<<<<<
 *         data_txn = []
 *         data_tr1 = []
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_data_length = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1207
 *         data_type = ['text']
 *         data_length = 0
 *         data_txn = []             # <<<<<<<<<<<<<<
 *         data_tr1 = []
 *         data_tr2 = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data_txn = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1208
 *         data_length = 0
 *         data_txn = []
 *         data_tr1 = []             # <<<<<<<<<<<<<<
 *         data_tr2 = []
 *         spacing = 0
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data_tr1 = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1209
 *         data_txn = []
 *         data_tr1 = []
 *         data_tr2 = []             # <<<<<<<<<<<<<<
 *         spacing = 0
 *         size_x = 16
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_data_tr2 = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1210
 *         data_tr1 = []
 *         data_tr2 = []
 *         spacing = 0             # <<<<<<<<<<<<<<
 *         size_x = 16
 *         size_y = 16
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_spacing = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1211
 *         data_tr2 = []
 *         spacing = 0
 *         size_x = 16             # <<<<<<<<<<<<<<
 *         size_y = 16
 *         r=0;y=0
 */
  __Pyx_INCREF(__pyx_int_16);
  __pyx_v_size_x = __pyx_int_16;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1212
 *         spacing = 0
 *         size_x = 16
 *         size_y = 16             # <<<<<<<<<<<<<<
 *         r=0;y=0
 *         spacing_y=0
 */
  __Pyx_INCREF(__pyx_int_16);
  __pyx_v_size_y = __pyx_int_16;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1213
 *         size_x = 16
 *         size_y = 16
 *         r=0;y=0             # <<<<<<<<<<<<<<
 *         spacing_y=0
 *         add_boldnext=0
 */
  __pyx_v_r = 0;
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_y = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1214
 *         size_y = 16
 *         r=0;y=0
 *         spacing_y=0             # <<<<<<<<<<<<<<
 *         add_boldnext=0
 *         for i in text:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_spacing_y = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1215
 *         r=0;y=0
 *         spacing_y=0
 *         add_boldnext=0             # <<<<<<<<<<<<<<
 *         for i in text:
 *             yr=0
 */
  __pyx_v_add_boldnext = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1216
 *         spacing_y=0
 *         add_boldnext=0
 *         for i in text:             # <<<<<<<<<<<<<<
 *             yr=0
 *             x=0
 */
  if (likely(PyList_CheckExact(__pyx_v_text)) || PyTuple_CheckExact(__pyx_v_text)) {
    __pyx_t_1 = __pyx_v_text; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_text); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1216, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1216, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1216, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1216, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1216, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1216, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1216, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1217
 *         add_boldnext=0
 *         for i in text:
 *             yr=0             # <<<<<<<<<<<<<<
 *             x=0
 *             l=i
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_yr, __pyx_int_0);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1218
 *         for i in text:
 *             yr=0
 *             x=0             # <<<<<<<<<<<<<<
 *             l=i
 *             if i == '/' or r == 1:
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_int_0);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1219
 *             yr=0
 *             x=0
 *             l=i             # <<<<<<<<<<<<<<
 *             if i == '/' or r == 1:
 *                 r=1
 */
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_XDECREF_SET(__pyx_v_l, __pyx_v_i);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1220
 *             x=0
 *             l=i
 *             if i == '/' or r == 1:             # <<<<<<<<<<<<<<
 *                 r=1
 *                 if i == 'n':
 */
    __pyx_t_6 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_kp_s__8, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1220, __pyx_L1_error)
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_6 = ((__pyx_v_r == 1) != 0);
    __pyx_t_5 = __pyx_t_6;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_5) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1221
 *             l=i
 *             if i == '/' or r == 1:
 *                 r=1             # <<<<<<<<<<<<<<
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy
 */
      __pyx_v_r = 1;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1222
 *             if i == '/' or r == 1:
 *                 r=1
 *                 if i == 'n':             # <<<<<<<<<<<<<<
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 */
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_n_s_n, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1222, __pyx_L1_error)
      if (__pyx_t_5) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1223
 *                 r=1
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy             # <<<<<<<<<<<<<<
 *                     spacing=0
 *                     r=0
 */
        __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_spacing_y, __pyx_v_spacing_addy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1223, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF_SET(__pyx_v_spacing_y, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1224
 *                 if i == 'n':
 *                     spacing_y+=spacing_addy
 *                     spacing=0             # <<<<<<<<<<<<<<
 *                     r=0
 *                 if i == 'b':
 */
        __Pyx_INCREF(__pyx_int_0);
        __Pyx_DECREF_SET(__pyx_v_spacing, __pyx_int_0);

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1225
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 *                     r=0             # <<<<<<<<<<<<<<
 *                 if i == 'b':
 *                     add_boldnext = 1
 */
        __pyx_v_r = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1222
 *             if i == '/' or r == 1:
 *                 r=1
 *                 if i == 'n':             # <<<<<<<<<<<<<<
 *                     spacing_y+=spacing_addy
 *                     spacing=0
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1226
 *                     spacing=0
 *                     r=0
 *                 if i == 'b':             # <<<<<<<<<<<<<<
 *                     add_boldnext = 1
 *                     r=0
 */
      __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_i, __pyx_n_s_b, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1226, __pyx_L1_error)
      if (__pyx_t_5) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1227
 *                     r=0
 *                 if i == 'b':
 *                     add_boldnext = 1             # <<<<<<<<<<<<<<
 *                     r=0
 *                 else:pass
 */
        __pyx_v_add_boldnext = 1;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1228
 *                 if i == 'b':
 *                     add_boldnext = 1
 *                     r=0             # <<<<<<<<<<<<<<
 *                 else:pass
 *             else:
 */
        __pyx_v_r = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1226
 *                     spacing=0
 *                     r=0
 *                 if i == 'b':             # <<<<<<<<<<<<<<
 *                     add_boldnext = 1
 *                     r=0
 */
        goto __pyx_L9;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1229
 *                     add_boldnext = 1
 *                     r=0
 *                 else:pass             # <<<<<<<<<<<<<<
 *             else:
 *                 if add_boldnext == 1:
 */
      /*else*/ {
      }
      __pyx_L9:;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1220
 *             x=0
 *             l=i
 *             if i == '/' or r == 1:             # <<<<<<<<<<<<<<
 *                 r=1
 *                 if i == 'n':
 */
      goto __pyx_L5;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1231
 *                 else:pass
 *             else:
 *                 if add_boldnext == 1:             # <<<<<<<<<<<<<<
 *                     l='[b]'+l
 *                     add_boldnext=0
 */
    /*else*/ {
      __pyx_t_5 = ((__pyx_v_add_boldnext == 1) != 0);
      if (__pyx_t_5) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1232
 *             else:
 *                 if add_boldnext == 1:
 *                     l='[b]'+l             # <<<<<<<<<<<<<<
 *                     add_boldnext=0
 *                 for ls in font_letters:
 */
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_b_2, __pyx_v_l); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1232, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF_SET(__pyx_v_l, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1233
 *                 if add_boldnext == 1:
 *                     l='[b]'+l
 *                     add_boldnext=0             # <<<<<<<<<<<<<<
 *                 for ls in font_letters:
 *                     try:
 */
        __pyx_v_add_boldnext = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1231
 *                 else:pass
 *             else:
 *                 if add_boldnext == 1:             # <<<<<<<<<<<<<<
 *                     l='[b]'+l
 *                     add_boldnext=0
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1234
 *                     l='[b]'+l
 *                     add_boldnext=0
 *                 for ls in font_letters:             # <<<<<<<<<<<<<<
 *                     try:
 *                         x = font_letters[yr].index(l)
 */
      if (likely(PyList_CheckExact(__pyx_v_font_letters)) || PyTuple_CheckExact(__pyx_v_font_letters)) {
        __pyx_t_4 = __pyx_v_font_letters; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_font_letters); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1234, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1234, __pyx_L1_error)
      }
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_9 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 1234, __pyx_L1_error)
            #else
            __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1234, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_9);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 1234, __pyx_L1_error)
            #else
            __pyx_t_9 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1234, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_9);
            #endif
          }
        } else {
          __pyx_t_9 = __pyx_t_8(__pyx_t_4);
          if (unlikely(!__pyx_t_9)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1234, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_9);
        }
        __Pyx_XDECREF_SET(__pyx_v_ls, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1235
 *                     add_boldnext=0
 *                 for ls in font_letters:
 *                     try:             # <<<<<<<<<<<<<<
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_11);
          __Pyx_XGOTREF(__pyx_t_12);
          /*try:*/ {

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1236
 *                 for ls in font_letters:
 *                     try:
 *                         x = font_letters[yr].index(l)             # <<<<<<<<<<<<<<
 *                         y = yr
 *                     except:pass
 */
            __pyx_t_13 = __Pyx_PyObject_GetItem(__pyx_v_font_letters, __pyx_v_yr); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1236, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_13);
            __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_index); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1236, __pyx_L13_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
            __pyx_t_13 = NULL;
            __pyx_t_15 = 0;
            if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_14))) {
              __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_14);
              if (likely(__pyx_t_13)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
                __Pyx_INCREF(__pyx_t_13);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_14, function);
                __pyx_t_15 = 1;
              }
            }
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_v_l};
              __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_15, 1+__pyx_t_15);
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1236, __pyx_L13_error)
              __Pyx_GOTREF(__pyx_t_9);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            }
            __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_9);
            __pyx_t_9 = 0;

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1237
 *                     try:
 *                         x = font_letters[yr].index(l)
 *                         y = yr             # <<<<<<<<<<<<<<
 *                     except:pass
 *                     yr+=1
 */
            __Pyx_INCREF(__pyx_v_yr);
            __Pyx_DECREF_SET(__pyx_v_y, __pyx_v_yr);

            /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1235
 *                     add_boldnext=0
 *                 for ls in font_letters:
 *                     try:             # <<<<<<<<<<<<<<
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 */
          }
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          goto __pyx_L20_try_end;
          __pyx_L13_error:;
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1238
 *                         x = font_letters[yr].index(l)
 *                         y = yr
 *                     except:pass             # <<<<<<<<<<<<<<
 *                     yr+=1
 *                 x=-x
 */
          /*except:*/ {
            __Pyx_ErrRestore(0,0,0);
            goto __pyx_L14_exception_handled;
          }
          __pyx_L14_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_10);
          __Pyx_XGIVEREF(__pyx_t_11);
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
          __pyx_L20_try_end:;
        }

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1239
 *                         y = yr
 *                     except:pass
 *                     yr+=1             # <<<<<<<<<<<<<<
 *                 x=-x
 *                 y=-y-1
 */
        __pyx_t_9 = __Pyx_PyInt_AddObjC(__pyx_v_yr, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1239, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_9);
        __pyx_t_9 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1234
 *                     l='[b]'+l
 *                     add_boldnext=0
 *                 for ls in font_letters:             # <<<<<<<<<<<<<<
 *                     try:
 *                         x = font_letters[yr].index(l)
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1240
 *                     except:pass
 *                     yr+=1
 *                 x=-x             # <<<<<<<<<<<<<<
 *                 y=-y-1
 *                 spacing+=spacing_addx
 */
      __pyx_t_4 = PyNumber_Negative(__pyx_v_x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1240, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1241
 *                     yr+=1
 *                 x=-x
 *                 y=-y-1             # <<<<<<<<<<<<<<
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 */
      __pyx_t_4 = PyNumber_Negative(__pyx_v_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1241, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF_SET(__pyx_v_y, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1242
 *                 x=-x
 *                 y=-y-1
 *                 spacing+=spacing_addx             # <<<<<<<<<<<<<<
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))
 */
      __pyx_t_9 = PyNumber_InPlaceAdd(__pyx_v_spacing, __pyx_v_spacing_addx); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1242, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF_SET(__pyx_v_spacing, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1243
 *                 y=-y-1
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]             # <<<<<<<<<<<<<<
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self_._cords_to_ratio(cords_[0],cords_[1])
 */
      __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = PyNumber_Add(__pyx_t_9, __pyx_v_spacing); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_14 = PyNumber_Add(__pyx_t_9, __pyx_v_spacing_y); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_13 = PyNumber_Add(__pyx_t_9, __pyx_v_size_x); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Add(__pyx_t_13, __pyx_v_spacing); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_16 = PyNumber_Add(__pyx_t_13, __pyx_v_size_y); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = PyNumber_Add(__pyx_t_16, __pyx_v_spacing_y); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_16 = PyList_New(4); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1243, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_GIVEREF(__pyx_t_4);
      PyList_SET_ITEM(__pyx_t_16, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_16, 1, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_9);
      PyList_SET_ITEM(__pyx_t_16, 2, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_13);
      PyList_SET_ITEM(__pyx_t_16, 3, __pyx_t_13);
      __pyx_t_4 = 0;
      __pyx_t_14 = 0;
      __pyx_t_9 = 0;
      __pyx_t_13 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords_, ((PyObject*)__pyx_t_16));
      __pyx_t_16 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1244
 *                 spacing+=spacing_addx
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))             # <<<<<<<<<<<<<<
 *                 tr1 = self_._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self_._cords_to_ratio(cords_[2]-self_.nx,cords_[3]-self_.ny)
 */
      __pyx_t_16 = PyList_New(2); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __Pyx_INCREF(__pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      PyList_SET_ITEM(__pyx_t_16, 0, __pyx_v_x);
      __Pyx_INCREF(__pyx_v_y);
      __Pyx_GIVEREF(__pyx_v_y);
      PyList_SET_ITEM(__pyx_t_16, 1, __pyx_v_y);
      __pyx_t_13 = __Pyx_GetItemInt(__pyx_v_config, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_config, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_14 = __Pyx_GetItemInt(__pyx_v_config, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_14);
      __pyx_t_9 = 0;
      __pyx_t_14 = 0;
      __pyx_t_14 = PyTuple_New(3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1244, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_16);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_16);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_13);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_14, 2, __pyx_t_4);
      __pyx_t_16 = 0;
      __pyx_t_13 = 0;
      __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_v_textn, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1245
 *                 cords_=[cords[0]+spacing,cords[1]+spacing_y,cords[0]+size_x+spacing,cords[1]+size_y+spacing_y]
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self_._cords_to_ratio(cords_[0],cords_[1])             # <<<<<<<<<<<<<<
 *                 tr2 = self_._cords_to_ratio(cords_[2]-self_.nx,cords_[3]-self_.ny)
 *                 txn = self_._tex_arrayn_translate(textn[0],textn[1],textn[2])
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1245, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_GetItemInt_List(__pyx_v_cords_, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1245, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_16 = __Pyx_GetItemInt_List(__pyx_v_cords_, 1, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1245, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_9 = NULL;
      __pyx_t_15 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_15 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_t_13, __pyx_t_16};
        __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_15, 2+__pyx_t_15);
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1245, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_tr1, __pyx_t_14);
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1246
 *                 textn=([x,y],config[2],(config[0],config[1]))
 *                 tr1 = self_._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self_._cords_to_ratio(cords_[2]-self_.nx,cords_[3]-self_.ny)             # <<<<<<<<<<<<<<
 *                 txn = self_._tex_arrayn_translate(textn[0],textn[1],textn[2])
 * 
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_16 = __Pyx_GetItemInt_List(__pyx_v_cords_, 2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_nx); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_9 = PyNumber_Subtract(__pyx_t_16, __pyx_t_13); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = __Pyx_GetItemInt_List(__pyx_v_cords_, 3, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_ny); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_17 = PyNumber_Subtract(__pyx_t_13, __pyx_t_16); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 1246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
      __pyx_t_16 = NULL;
      __pyx_t_15 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_16)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_16);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_15 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_16, __pyx_t_9, __pyx_t_17};
        __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_15, 2+__pyx_t_15);
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1246, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_tr2, __pyx_t_14);
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1247
 *                 tr1 = self_._cords_to_ratio(cords_[0],cords_[1])
 *                 tr2 = self_._cords_to_ratio(cords_[2]-self_.nx,cords_[3]-self_.ny)
 *                 txn = self_._tex_arrayn_translate(textn[0],textn[1],textn[2])             # <<<<<<<<<<<<<<
 * 
 *                 data_txn.append(txn)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self_, __pyx_n_s_tex_arrayn_translate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1247, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_17 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 1247, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_17);
      __pyx_t_9 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1247, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_16 = __Pyx_GetItemInt_Tuple(__pyx_v_textn, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1247, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_16);
      __pyx_t_13 = NULL;
      __pyx_t_15 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_15 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_13, __pyx_t_17, __pyx_t_9, __pyx_t_16};
        __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_15, 3+__pyx_t_15);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1247, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_txn, __pyx_t_14);
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1249
 *                 txn = self_._tex_arrayn_translate(textn[0],textn[1],textn[2])
 * 
 *                 data_txn.append(txn)             # <<<<<<<<<<<<<<
 *                 data_tr1.append(tr1)
 *                 data_tr2.append(tr2)
 */
      __pyx_t_18 = __Pyx_PyList_Append(__pyx_v_data_txn, __pyx_v_txn); if (unlikely(__pyx_t_18 == ((int)-1))) __PYX_ERR(0, 1249, __pyx_L1_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1250
 * 
 *                 data_txn.append(txn)
 *                 data_tr1.append(tr1)             # <<<<<<<<<<<<<<
 *                 data_tr2.append(tr2)
 *                 data_length+=1
 */
      __pyx_t_18 = __Pyx_PyList_Append(__pyx_v_data_tr1, __pyx_v_tr1); if (unlikely(__pyx_t_18 == ((int)-1))) __PYX_ERR(0, 1250, __pyx_L1_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1251
 *                 data_txn.append(txn)
 *                 data_tr1.append(tr1)
 *                 data_tr2.append(tr2)             # <<<<<<<<<<<<<<
 *                 data_length+=1
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]
 */
      __pyx_t_18 = __Pyx_PyList_Append(__pyx_v_data_tr2, __pyx_v_tr2); if (unlikely(__pyx_t_18 == ((int)-1))) __PYX_ERR(0, 1251, __pyx_L1_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1252
 *                 data_tr1.append(tr1)
 *                 data_tr2.append(tr2)
 *                 data_length+=1             # <<<<<<<<<<<<<<
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]
 *         return data
 */
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_v_data_length, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1252, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF_SET(__pyx_v_data_length, __pyx_t_14);
      __pyx_t_14 = 0;
    }
    __pyx_L5:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1216
 *         spacing_y=0
 *         add_boldnext=0
 *         for i in text:             # <<<<<<<<<<<<<<
 *             yr=0
 *             x=0
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1253
 *                 data_tr2.append(tr2)
 *                 data_length+=1
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]             # <<<<<<<<<<<<<<
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.
 */
  __pyx_t_1 = PyList_New(7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_data_type);
  __Pyx_GIVEREF(__pyx_v_data_type);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_data_type);
  __Pyx_INCREF(__pyx_v_data_length);
  __Pyx_GIVEREF(__pyx_v_data_length);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_data_length);
  __Pyx_INCREF(__pyx_v_data_txn);
  __Pyx_GIVEREF(__pyx_v_data_txn);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_data_txn);
  __Pyx_INCREF(__pyx_v_data_tr1);
  __Pyx_GIVEREF(__pyx_v_data_tr1);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_data_tr1);
  __Pyx_INCREF(__pyx_v_data_tr2);
  __Pyx_GIVEREF(__pyx_v_data_tr2);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_data_tr2);
  __Pyx_INCREF(__pyx_v_color);
  __Pyx_GIVEREF(__pyx_v_color);
  PyList_SET_ITEM(__pyx_t_1, 5, __pyx_v_color);
  __Pyx_INCREF(__pyx_v_font_texture);
  __Pyx_GIVEREF(__pyx_v_font_texture);
  PyList_SET_ITEM(__pyx_t_1, 6, __pyx_v_font_texture);
  __pyx_v_data = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1254
 *                 data_length+=1
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]
 *         return data             # <<<<<<<<<<<<<<
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_data);
  __pyx_r = __pyx_v_data;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1202
 * 
 * 
 *     def prerender_text(self_,cords,text,font_letters,spacing_addx,spacing_addy,color,font_texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Text '''
 *         config=(256,256,8)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2Dprerender.prerender_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_config);
  __Pyx_XDECREF(__pyx_v_data_type);
  __Pyx_XDECREF(__pyx_v_data_length);
  __Pyx_XDECREF(__pyx_v_data_txn);
  __Pyx_XDECREF(__pyx_v_data_tr1);
  __Pyx_XDECREF(__pyx_v_data_tr2);
  __Pyx_XDECREF(__pyx_v_spacing);
  __Pyx_XDECREF(__pyx_v_size_x);
  __Pyx_XDECREF(__pyx_v_size_y);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_spacing_y);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_ls);
  __Pyx_XDECREF(__pyx_v_cords_);
  __Pyx_XDECREF(__pyx_v_textn);
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XDECREF(__pyx_v_txn);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1256
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):             # <<<<<<<<<<<<<<
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_1render(PyObject *__pyx_self, PyObject *__pyx_v_prerenderedobj); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_1render = {"render", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_1render, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_1render(PyObject *__pyx_self, PyObject *__pyx_v_prerenderedobj) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_render(__pyx_self, ((PyObject *)__pyx_v_prerenderedobj));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_render(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_prerenderedobj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("render", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1257
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):
 *         if prerenderedobj[0] is 'text':             # <<<<<<<<<<<<<<
 *             D2DRENDER.render_text(prerenderedobj)
 *         if prerenderedobj[0] is 'quad':
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_prerenderedobj, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 == __pyx_n_s_text);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1258
 *     def render(prerenderedobj):
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)             # <<<<<<<<<<<<<<
 *         if prerenderedobj[0] is 'quad':
 *             D2DRENDER.render_quad(prerender_quad)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_D2DRENDER); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_render_text); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_prerenderedobj};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1257
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):
 *         if prerenderedobj[0] is 'text':             # <<<<<<<<<<<<<<
 *             D2DRENDER.render_text(prerenderedobj)
 *         if prerenderedobj[0] is 'quad':
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1259
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 *         if prerenderedobj[0] is 'quad':             # <<<<<<<<<<<<<<
 *             D2DRENDER.render_quad(prerender_quad)
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_prerenderedobj, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == __pyx_n_s_quad);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1260
 *             D2DRENDER.render_text(prerenderedobj)
 *         if prerenderedobj[0] is 'quad':
 *             D2DRENDER.render_quad(prerender_quad)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_D2DRENDER); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_render_quad); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_prerender_quad); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1260, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1259
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 *         if prerenderedobj[0] is 'quad':             # <<<<<<<<<<<<<<
 *             D2DRENDER.render_quad(prerender_quad)
 * 
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1256
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):             # <<<<<<<<<<<<<<
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1266
 * 
 * 
 *     def render_letter(D2Draw,cords,color,letter,font,texid):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         self = D2Draw
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_3render_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_3render_letter = {"render_letter", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_3render_letter, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_3render_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_D2Draw = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_letter = 0;
  PyObject *__pyx_v_font = 0;
  PyObject *__pyx_v_texid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render_letter (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_D2Draw,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_letter,&__pyx_n_s_font,&__pyx_n_s_texid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_D2Draw,&__pyx_n_s_cords,&__pyx_n_s_color,&__pyx_n_s_letter,&__pyx_n_s_font,&__pyx_n_s_texid,0};
    #endif
    PyObject* values[6] = {0,0,0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_D2Draw)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, 1); __PYX_ERR(0, 1266, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, 2); __PYX_ERR(0, 1266, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_letter)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, 3); __PYX_ERR(0, 1266, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, 4); __PYX_ERR(0, 1266, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texid)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, 5); __PYX_ERR(0, 1266, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "render_letter") < 0)) __PYX_ERR(0, 1266, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 6)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
      values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
    }
    __pyx_v_D2Draw = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_color = values[2];
    __pyx_v_letter = values[3];
    __pyx_v_font = values[4];
    __pyx_v_texid = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("render_letter", 1, 6, 6, __pyx_nargs); __PYX_ERR(0, 1266, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_2render_letter(__pyx_self, __pyx_v_D2Draw, __pyx_v_cords, __pyx_v_color, __pyx_v_letter, __pyx_v_font, __pyx_v_texid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_2render_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_D2Draw, PyObject *__pyx_v_cords, PyObject *__pyx_v_color, PyObject *__pyx_v_letter, PyObject *__pyx_v_font, PyObject *__pyx_v_texid) {
  PyObject *__pyx_v_ct = NULL;
  PyObject *__pyx_v_self = NULL;
  PyObject *__pyx_v_width = NULL;
  PyObject *__pyx_v_height = NULL;
  PyObject *__pyx_v_t1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c1 = NULL;
  PyObject *__pyx_v_t2 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c2 = NULL;
  PyObject *__pyx_v_t3 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c3 = NULL;
  PyObject *__pyx_v_t4 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c4 = NULL;
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("render_letter", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1267
 * 
 *     def render_letter(D2Draw,cords,color,letter,font,texid):
 *         ct = int(ord(letter))             # <<<<<<<<<<<<<<
 *         self = D2Draw
 *         width, height= (font[ct][4],font[ct][5])
 */
  __pyx_t_1 = __Pyx_PyObject_Ord(__pyx_v_letter); if (unlikely(__pyx_t_1 == ((long)(long)(Py_UCS4)-1))) __PYX_ERR(0, 1267, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyInt_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_ct = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1268
 *     def render_letter(D2Draw,cords,color,letter,font,texid):
 *         ct = int(ord(letter))
 *         self = D2Draw             # <<<<<<<<<<<<<<
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */
  __Pyx_INCREF(__pyx_v_D2Draw);
  __pyx_v_self = __pyx_v_D2Draw;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1269
 *         ct = int(ord(letter))
 *         self = D2Draw
 *         width, height= (font[ct][4],font[ct][5])             # <<<<<<<<<<<<<<
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_width = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_height = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1270
 *         self = D2Draw
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]             # <<<<<<<<<<<<<<
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 */
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t1 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c1 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1271
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]             # <<<<<<<<<<<<<<
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 */
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t2 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c2 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1272
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]             # <<<<<<<<<<<<<<
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t3 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c3 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1273
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, texid)
 */
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t4 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_4, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c4 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1274
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, texid)
 *         GL.glBegin(GL.GL_QUADS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1275
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, texid)             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_2, __pyx_v_texid};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1275, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1276
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, texid)
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1]-height)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1277
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, texid)
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1]-height)
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx+width,cords[3]-self.ny)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_color, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_color, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_color, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_8, __pyx_t_2, __pyx_t_5, __pyx_t_7};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1277, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1278
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1]-height)             # <<<<<<<<<<<<<<
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx+width,cords[3]-self.ny)
 *         GL.glTexCoord2f(t1[0], t1[1]);GL.glVertex2f(tr1[0],tr2[1]);
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_5, __pyx_v_height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_7, __pyx_t_2};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1278, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_tr1 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1279
 *         GL.glColor3f(color[0],color[1],color[2])
 *         tr1 = self._cords_to_ratio(cords[0],cords[1]-height)
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx+width,cords[3]-self.ny)             # <<<<<<<<<<<<<<
 *         GL.glTexCoord2f(t1[0], t1[1]);GL.glVertex2f(tr1[0],tr2[1]);
 *         GL.glTexCoord2f(t2[0], t2[1]);GL.glVertex2f(tr1[0],tr1[1]);
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_nx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_5 = PyNumber_Subtract(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Add(__pyx_t_5, __pyx_v_width); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_ny); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyNumber_Subtract(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_t_8};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_tr2 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1280
 *         tr1 = self._cords_to_ratio(cords[0],cords[1]-height)
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx+width,cords[3]-self.ny)
 *         GL.glTexCoord2f(t1[0], t1[1]);GL.glVertex2f(tr1[0],tr2[1]);             # <<<<<<<<<<<<<<
 *         GL.glTexCoord2f(t2[0], t2[1]);GL.glVertex2f(tr1[0],tr1[1]);
 *         GL.glTexCoord2f(t3[0], t3[1]);GL.glVertex2f(tr2[0],tr1[1]);
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_t1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_t1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_3, __pyx_t_7};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1280, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_8, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1280, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1281
 *         tr2 = self._cords_to_ratio(cords[2]-self.nx+width,cords[3]-self.ny)
 *         GL.glTexCoord2f(t1[0], t1[1]);GL.glVertex2f(tr1[0],tr2[1]);
 *         GL.glTexCoord2f(t2[0], t2[1]);GL.glVertex2f(tr1[0],tr1[1]);             # <<<<<<<<<<<<<<
 *         GL.glTexCoord2f(t3[0], t3[1]);GL.glVertex2f(tr2[0],tr1[1]);
 *         GL.glTexCoord2f(t4[0], t4[1]);GL.glVertex2f(tr2[0], tr2[1]);
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_t2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_t2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_t_8};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_3, __pyx_t_7};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1281, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1282
 *         GL.glTexCoord2f(t1[0], t1[1]);GL.glVertex2f(tr1[0],tr2[1]);
 *         GL.glTexCoord2f(t2[0], t2[1]);GL.glVertex2f(tr1[0],tr1[1]);
 *         GL.glTexCoord2f(t3[0], t3[1]);GL.glVertex2f(tr2[0],tr1[1]);             # <<<<<<<<<<<<<<
 *         GL.glTexCoord2f(t4[0], t4[1]);GL.glVertex2f(tr2[0], tr2[1]);
 *         GL.glEnd()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_t3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_t3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_8, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_t_8};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1283
 *         GL.glTexCoord2f(t2[0], t2[1]);GL.glVertex2f(tr1[0],tr1[1]);
 *         GL.glTexCoord2f(t3[0], t3[1]);GL.glVertex2f(tr2[0],tr1[1]);
 *         GL.glTexCoord2f(t4[0], t4[1]);GL.glVertex2f(tr2[0], tr2[1]);             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 *         GL.glDisable(GL.GL_TEXTURE_2D)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_t4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_t4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_3, __pyx_t_7};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1283, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_8, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1283, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1284
 *         GL.glTexCoord2f(t3[0], t3[1]);GL.glVertex2f(tr2[0],tr1[1]);
 *         GL.glTexCoord2f(t4[0], t4[1]);GL.glVertex2f(tr2[0], tr2[1]);
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 *         GL.glDisable(GL.GL_TEXTURE_2D)
 *         return width, height
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1284, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1285
 *         GL.glTexCoord2f(t4[0], t4[1]);GL.glVertex2f(tr2[0], tr2[1]);
 *         GL.glEnd()
 *         GL.glDisable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         return width, height
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glDisable); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_8};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1285, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1286
 *         GL.glEnd()
 *         GL.glDisable(GL.GL_TEXTURE_2D)
 *         return width, height             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_width);
  __Pyx_GIVEREF(__pyx_v_width);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_width);
  __Pyx_INCREF(__pyx_v_height);
  __Pyx_GIVEREF(__pyx_v_height);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_height);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1266
 * 
 * 
 *     def render_letter(D2Draw,cords,color,letter,font,texid):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         self = D2Draw
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ct);
  __Pyx_XDECREF(__pyx_v_self);
  __Pyx_XDECREF(__pyx_v_width);
  __Pyx_XDECREF(__pyx_v_height);
  __Pyx_XDECREF(__pyx_v_t1);
  __Pyx_XDECREF(__pyx_v_c1);
  __Pyx_XDECREF(__pyx_v_t2);
  __Pyx_XDECREF(__pyx_v_c2);
  __Pyx_XDECREF(__pyx_v_t3);
  __Pyx_XDECREF(__pyx_v_c3);
  __Pyx_XDECREF(__pyx_v_t4);
  __Pyx_XDECREF(__pyx_v_c4);
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1292
 * 
 * 
 *     def render_text(pretext):             # <<<<<<<<<<<<<<
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_5render_text(PyObject *__pyx_self, PyObject *__pyx_v_pretext); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_4render_text, " pretext - prerendered text ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_5render_text = {"render_text", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_5render_text, METH_O, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_4render_text};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_5render_text(PyObject *__pyx_self, PyObject *__pyx_v_pretext) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render_text (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_4render_text(__pyx_self, ((PyObject *)__pyx_v_pretext));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_4render_text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pretext) {
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_txn = NULL;
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("render_text", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1294
 *     def render_text(pretext):
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretext[6])
 *         GL.glBegin(GL.GL_QUADS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1295
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretext[6])             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretext, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1296
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretext[6])
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])
 *         for i in range(0,pretext[1]):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1297
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretext[6])
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])             # <<<<<<<<<<<<<<
 *         for i in range(0,pretext[1]):
 *             txn = pretext[2][i]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretext, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretext, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretext, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_t_4, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1297, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1298
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])
 *         for i in range(0,pretext[1]):             # <<<<<<<<<<<<<<
 *             txn = pretext[2][i]
 *             tr1 = pretext[3][i]
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_pretext, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1298, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 1298, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1298, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 1298, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1298, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_9(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1298, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1299
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])
 *         for i in range(0,pretext[1]):
 *             txn = pretext[2][i]             # <<<<<<<<<<<<<<
 *             tr1 = pretext[3][i]
 *             tr2 = pretext[4][i]
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_pretext, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_txn, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1300
 *         for i in range(0,pretext[1]):
 *             txn = pretext[2][i]
 *             tr1 = pretext[3][i]             # <<<<<<<<<<<<<<
 *             tr2 = pretext[4][i]
 *             GL.glTexCoord2f(txn[0][0], txn[1][1])
 */
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_pretext, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_7, __pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tr1, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1301
 *             txn = pretext[2][i]
 *             tr1 = pretext[3][i]
 *             tr2 = pretext[4][i]             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(txn[0][0], txn[1][1])
 *             GL.glVertex2f(tr2[0],tr1[1])
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_pretext, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_i); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1301, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tr2, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1302
 *             tr1 = pretext[3][i]
 *             tr2 = pretext[4][i]
 *             GL.glTexCoord2f(txn[0][0], txn[1][1])             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr2[0],tr1[1])
 *             GL.glTexCoord2f(txn[0][0], txn[0][1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1302, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_t_4, __pyx_t_3};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1302, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1303
 *             tr2 = pretext[4][i]
 *             GL.glTexCoord2f(txn[0][0], txn[1][1])
 *             GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(txn[0][0], txn[0][1])
 *             GL.glVertex2f(tr2[0], tr2[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_t_6, __pyx_t_4};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1303, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1304
 *             GL.glTexCoord2f(txn[0][0], txn[1][1])
 *             GL.glVertex2f(tr2[0],tr1[1])
 *             GL.glTexCoord2f(txn[0][0], txn[0][1])             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[0][1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_6, __pyx_t_1};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1305
 *             GL.glVertex2f(tr2[0],tr1[1])
 *             GL.glTexCoord2f(txn[0][0], txn[0][1])
 *             GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(txn[1][0], txn[0][1])
 *             GL.glVertex2f(tr1[0],tr2[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_6};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1305, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1306
 *             GL.glTexCoord2f(txn[0][0], txn[0][1])
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[0][1])             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[1][1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_txn, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1306, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_t_4, __pyx_t_3};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1306, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1307
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[0][1])
 *             GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(txn[1][0], txn[1][1])
 *             GL.glVertex2f(tr1[0], tr1[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1307, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_t_6, __pyx_t_4};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1307, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1308
 *             GL.glTexCoord2f(txn[1][0], txn[0][1])
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[1][1])             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glEnd()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_txn, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1308, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_6, __pyx_t_1};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1308, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1309
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(txn[1][0], txn[1][1])
 *             GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_4, __pyx_t_6};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1298
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(pretext[5][0],pretext[5][1],pretext[5][2])
 *         for i in range(0,pretext[1]):             # <<<<<<<<<<<<<<
 *             txn = pretext[2][i]
 *             tr1 = pretext[3][i]
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1310
 *             GL.glTexCoord2f(txn[1][0], txn[1][1])
 *             GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1292
 * 
 * 
 *     def render_text(pretext):             # <<<<<<<<<<<<<<
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_txn);
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1315
 * 
 * 
 *     def render_quad(prequad):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_7render_quad(PyObject *__pyx_self, PyObject *__pyx_v_prequad); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_7render_quad = {"render_quad", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_7render_quad, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_7render_quad(PyObject *__pyx_self, PyObject *__pyx_v_prequad) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render_quad (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_6render_quad(__pyx_self, ((PyObject *)__pyx_v_prequad));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_6render_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_prequad) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("render_quad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1316
 * 
 *     def render_quad(prequad):
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 *         tr1 = prequad[1]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1317
 *     def render_quad(prequad):
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])             # <<<<<<<<<<<<<<
 *         tr1 = prequad[1]
 *         tr2 = prequad[2]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_prequad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_prequad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_prequad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_t_2, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1318
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 *         tr1 = prequad[1]             # <<<<<<<<<<<<<<
 *         tr2 = prequad[2]
 *         GL.glVertex2f(tr1[0], tr1[1])
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_prequad, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1319
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 *         tr1 = prequad[1]
 *         tr2 = prequad[2]             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glVertex2f(tr1[0],tr2[1])
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_prequad, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1319, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1320
 *         tr1 = prequad[1]
 *         tr2 = prequad[2]
 *         GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1321
 *         tr2 = prequad[2]
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1321, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1322
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         GL.glEnd()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1323
 *         GL.glVertex2f(tr1[0],tr2[1])
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *         GL.glEnd()
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_4, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1324
 *         GL.glVertex2f(tr2[0], tr2[1])
 *         GL.glVertex2f(tr2[0],tr1[1])
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1324, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1324, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1315
 * 
 * 
 *     def render_quad(prequad):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1329
 * 
 * 
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_9render_texture_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_9render_texture_quad = {"render_texture_quad", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_9render_texture_quad, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_9render_texture_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_pretextquad = 0;
  PyObject *__pyx_v_texsize = 0;
  PyObject *__pyx_v_usecords = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("render_texture_quad (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pretextquad,&__pyx_n_s_texsize,&__pyx_n_s_usecords,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pretextquad,&__pyx_n_s_texsize,&__pyx_n_s_usecords,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)((PyObject *)Py_None));
    values[1] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[2] = ((PyObject *)((PyObject *)Py_True));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pretextquad);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1329, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texsize);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1329, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_usecords);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1329, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "render_texture_quad") < 0)) __PYX_ERR(0, 1329, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_pretextquad = values[0];
    __pyx_v_texsize = values[1];
    __pyx_v_usecords = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("render_texture_quad", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1329, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_texture_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_8render_texture_quad(__pyx_self, __pyx_v_pretextquad, __pyx_v_texsize, __pyx_v_usecords);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_8render_texture_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_pretextquad, PyObject *__pyx_v_texsize, PyObject *__pyx_v_usecords) {
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("render_texture_quad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1330
 * 
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):
 *         GL.glEnable(GL.GL_TEXTURE_2D)             # <<<<<<<<<<<<<<
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 *         GL.glBegin(GL.GL_QUADS)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glEnable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1330, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1330, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1331
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         tr1 = pretextquad[1]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretextquad, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1332
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 *         GL.glBegin(GL.GL_QUADS)             # <<<<<<<<<<<<<<
 *         tr1 = pretextquad[1]
 *         tr2 = pretextquad[2]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBegin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1332, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1332, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1333
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 *         GL.glBegin(GL.GL_QUADS)
 *         tr1 = pretextquad[1]             # <<<<<<<<<<<<<<
 *         tr2 = pretextquad[2]
 * 
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_pretextquad, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tr1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1334
 *         GL.glBegin(GL.GL_QUADS)
 *         tr1 = pretextquad[1]
 *         tr2 = pretextquad[2]             # <<<<<<<<<<<<<<
 * 
 *         GL.glColor3f(pretextquad[3][0],pretextquad[3][1],pretextquad[3][2])
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_pretextquad, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_tr2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1336
 *         tr2 = pretextquad[2]
 * 
 *         GL.glColor3f(pretextquad[3][0],pretextquad[3][1],pretextquad[3][2])             # <<<<<<<<<<<<<<
 *         if usecords is True:
 *             GL.glTexCoord2f(1, 1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glColor3f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretextquad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretextquad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_pretextquad, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_t_4, __pyx_t_6, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1337
 * 
 *         GL.glColor3f(pretextquad[3][0],pretextquad[3][1],pretextquad[3][2])
 *         if usecords is True:             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(tr2[0], tr2[1])
 */
  __pyx_t_8 = (__pyx_v_usecords == Py_True);
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1338
 *         GL.glColor3f(pretextquad[3][0],pretextquad[3][1],pretextquad[3][2])
 *         if usecords is True:
 *             GL.glTexCoord2f(1, 1)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(0-texsize, 1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1339
 *         if usecords is True:
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(tr2[0], tr2[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(tr1[0],tr2[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1340
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(0-texsize, 1)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_7, __pyx_int_1};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1340, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1341
 *             GL.glVertex2f(tr2[0], tr2[1])
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(tr1[0],tr2[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(tr1[0], tr1[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_t_2};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1341, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1342
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(0-texsize, 0-texsize)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr1[0], tr1[1])
 *             GL.glTexCoord2f(1, 0-texsize)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_7, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1343
 *             GL.glVertex2f(tr1[0],tr2[1])
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(tr1[0], tr1[1])             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(tr2[0],tr1[1])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_t_7};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1343, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1344
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(tr1[0], tr1[1])
 *             GL.glTexCoord2f(1, 0-texsize)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(tr2[0],tr1[1])
 *         else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1344, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_int_1, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1344, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1345
 *             GL.glVertex2f(tr1[0], tr1[1])
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(tr2[0],tr1[1])             # <<<<<<<<<<<<<<
 *         else:
 *             GL.glTexCoord2f(1, 1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1345, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_7, __pyx_t_2};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1345, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1337
 * 
 *         GL.glColor3f(pretextquad[3][0],pretextquad[3][1],pretextquad[3][2])
 *         if usecords is True:             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(tr2[0], tr2[1])
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1347
 *             GL.glVertex2f(tr2[0],tr1[1])
 *         else:
 *             GL.glTexCoord2f(1, 1)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(10, 10)
 *             GL.glTexCoord2f(0-texsize, 1)
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1347, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1348
 *         else:
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(10, 10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(-10,10)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1348, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1349
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(10, 10)
 *             GL.glTexCoord2f(0-texsize, 1)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(-10,10)
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_6, __pyx_int_1};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1349, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1350
 *             GL.glVertex2f(10, 10)
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(-10,10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(-10, -10)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1351
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(-10,10)
 *             GL.glTexCoord2f(0-texsize, 0-texsize)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(-10, -10)
 *             GL.glTexCoord2f(1, 0-texsize)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1351, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_t_7};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1351, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1352
 *             GL.glVertex2f(-10,10)
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(-10, -10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(10,-10)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1353
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(-10, -10)
 *             GL.glTexCoord2f(1, 0-texsize)             # <<<<<<<<<<<<<<
 *             GL.glVertex2f(10,-10)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexCoord2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_SubtractCObj(__pyx_int_0, __pyx_v_texsize, 0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_int_1, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1353, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1354
 *             GL.glVertex2f(-10, -10)
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(10,-10)             # <<<<<<<<<<<<<<
 * 
 *         GL.glEnd()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_glVertex2f); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1356
 *             GL.glVertex2f(10,-10)
 * 
 *         GL.glEnd()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glEnd); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1356, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1356, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1329
 * 
 * 
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.D2DRENDER.render_texture_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1383
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST
 * def load_texture_dp(dp_data,n,alpha=False):             # <<<<<<<<<<<<<<
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 *     global TEXTURE_DISPLAY_METHOD
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9load_texture_dp(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_8load_texture_dp, " Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9load_texture_dp = {"load_texture_dp", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9load_texture_dp, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_8load_texture_dp};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9load_texture_dp(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dp_data = 0;
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_alpha = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_texture_dp (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dp_data,&__pyx_n_s_n,&__pyx_n_s_alpha,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dp_data,&__pyx_n_s_n,&__pyx_n_s_alpha,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dp_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1383, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1383, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("load_texture_dp", 0, 2, 3, 1); __PYX_ERR(0, 1383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_alpha);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1383, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "load_texture_dp") < 0)) __PYX_ERR(0, 1383, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dp_data = values[0];
    __pyx_v_n = values[1];
    __pyx_v_alpha = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_texture_dp", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1383, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_dp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_8load_texture_dp(__pyx_self, __pyx_v_dp_data, __pyx_v_n, __pyx_v_alpha);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_8load_texture_dp(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_dp_data, PyObject *__pyx_v_n, PyObject *__pyx_v_alpha) {
  PyObject *__pyx_v_texture_data = NULL;
  PyObject *__pyx_v_realdata = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_textr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_texture_dp", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1386
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 *     global TEXTURE_DISPLAY_METHOD
 *     texture_data  = dp_data[1]             # <<<<<<<<<<<<<<
 *     realdata = []
 *     for i in texture_data:
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_dp_data, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_texture_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1387
 *     global TEXTURE_DISPLAY_METHOD
 *     texture_data  = dp_data[1]
 *     realdata = []             # <<<<<<<<<<<<<<
 *     for i in texture_data:
 *         realdata.append(int(i))
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_realdata = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1388
 *     texture_data  = dp_data[1]
 *     realdata = []
 *     for i in texture_data:             # <<<<<<<<<<<<<<
 *         realdata.append(int(i))
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_texture_data)) || PyTuple_CheckExact(__pyx_v_texture_data)) {
    __pyx_t_1 = __pyx_v_texture_data; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_texture_data); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1388, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1388, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1388, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1388, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1388, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1388, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1388, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1389
 *     realdata = []
 *     for i in texture_data:
 *         realdata.append(int(i))             # <<<<<<<<<<<<<<
 * 
 *     textr = GL.glGenTextures(n)
 */
    __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1389, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_realdata, __pyx_t_4); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 1389, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1388
 *     texture_data  = dp_data[1]
 *     realdata = []
 *     for i in texture_data:             # <<<<<<<<<<<<<<
 *         realdata.append(int(i))
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1391
 *         realdata.append(int(i))
 * 
 *     textr = GL.glGenTextures(n)             # <<<<<<<<<<<<<<
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glGenTextures); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_n};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_v_textr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1392
 * 
 *     textr = GL.glGenTextures(n)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)             # <<<<<<<<<<<<<<
 * 
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glPixelStorei); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_UNPACK_ALIGNMENT); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_8, __pyx_int_1};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1392, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1394
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 * 
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)             # <<<<<<<<<<<<<<
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_6, __pyx_v_textr};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1394, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1395
 * 
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )             # <<<<<<<<<<<<<<
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glTexParameterf); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_GL_TEXTURE_MAG_FILTER); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_TEXTURE_DISPLAY_METHOD); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_10 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_4, __pyx_t_9, __pyx_t_8};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1396
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )             # <<<<<<<<<<<<<<
 * 
 *     if alpha is True:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, realdata)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexParameterf); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_MIN_FILTER); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_TEXTURE_DISPLAY_METHOD); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_10 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_9, __pyx_t_4, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1398
 *     GL.glTexParameterf(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )
 * 
 *     if alpha is True:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, realdata)             # <<<<<<<<<<<<<<
 *     else:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, realdata)
 *     return textr
 */
  __pyx_t_11 = (__pyx_v_alpha == Py_True);
  __pyx_t_12 = (__pyx_t_11 != 0);
  if (__pyx_t_12) {
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_GL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_GL_RGBA); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_dp_data, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = __Pyx_GetItemInt(__pyx_t_8, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_10); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_dp_data, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_13 = __Pyx_GetItemInt(__pyx_t_10, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyNumber_Int(__pyx_t_13); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_GL_RGBA); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[10] = {__pyx_t_13, __pyx_t_4, __pyx_int_0, __pyx_t_9, __pyx_t_8, __pyx_t_10, __pyx_int_0, __pyx_t_14, __pyx_t_15, __pyx_v_realdata};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 9+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L5;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1399
 * 
 *     if alpha is True:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, realdata)
 *     else:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, realdata)             # <<<<<<<<<<<<<<
 *     return textr
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_dp_data, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_6, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_dp_data, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_GetItemInt(__pyx_t_8, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyNumber_Int(__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_15);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_15, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[10] = {__pyx_t_9, __pyx_t_14, __pyx_int_0, __pyx_t_10, __pyx_t_6, __pyx_t_8, __pyx_int_0, __pyx_t_4, __pyx_t_13, __pyx_v_realdata};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_7, 9+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1399, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L5:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1400
 *     if alpha is True:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, realdata)
 *     else:GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, int(dp_data[0][0]), int(dp_data[0][1]), 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, realdata)
 *     return textr             # <<<<<<<<<<<<<<
 * 
 * def load_texture_repeat(texture_=None,n=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_textr);
  __pyx_r = __pyx_v_textr;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1383
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST
 * def load_texture_dp(dp_data,n,alpha=False):             # <<<<<<<<<<<<<<
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 *     global TEXTURE_DISPLAY_METHOD
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_dp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_texture_data);
  __Pyx_XDECREF(__pyx_v_realdata);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_textr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1402
 *     return textr
 * 
 * def load_texture_repeat(texture_=None,n=None):             # <<<<<<<<<<<<<<
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11load_texture_repeat(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11load_texture_repeat = {"load_texture_repeat", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11load_texture_repeat, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11load_texture_repeat(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_texture_ = 0;
  PyObject *__pyx_v_n = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_texture_repeat (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_texture_2,&__pyx_n_s_n,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_texture_2,&__pyx_n_s_n,0};
    #endif
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)((PyObject *)Py_None));
    values[1] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texture_2);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1402, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "load_texture_repeat") < 0)) __PYX_ERR(0, 1402, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_texture_ = values[0];
    __pyx_v_n = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_texture_repeat", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 1402, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_repeat", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10load_texture_repeat(__pyx_self, __pyx_v_texture_, __pyx_v_n);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10load_texture_repeat(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_texture_, PyObject *__pyx_v_n) {
  PyObject *__pyx_v_texture = NULL;
  PyObject *__pyx_v_texture_data = NULL;
  PyObject *__pyx_v_textr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_texture_repeat", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1404
 * def load_texture_repeat(texture_=None,n=None):
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')             # <<<<<<<<<<<<<<
 *     texture_data  = numpy.array(list(texture.getdata()), numpy.uint8)
 *     textr = GL.glGenTextures(n)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Image); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_open); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_v_texture_, __pyx_n_s_r};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1404, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_texture = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1405
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')
 *     texture_data  = numpy.array(list(texture.getdata()), numpy.uint8)             # <<<<<<<<<<<<<<
 *     textr = GL.glGenTextures(n)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_numpy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_texture, __pyx_n_s_getdata); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_6, };
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = __Pyx_PySequence_ListKeepNew(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_numpy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_uint8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1405, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_texture_data = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1406
 *     texture = Image.open(texture_,'r')
 *     texture_data  = numpy.array(list(texture.getdata()), numpy.uint8)
 *     textr = GL.glGenTextures(n)             # <<<<<<<<<<<<<<
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGenTextures); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_n};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_v_textr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1407
 *     texture_data  = numpy.array(list(texture.getdata()), numpy.uint8)
 *     textr = GL.glGenTextures(n)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glPixelStorei); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_UNPACK_ALIGNMENT); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_t_5, __pyx_int_1};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1410
 * 
 * 
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)             # <<<<<<<<<<<<<<
 *     GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, texture.size[0], texture.size[1], 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_t_6, __pyx_v_textr};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1411
 * 
 *     GL.glBindTexture(GL.GL_TEXTURE_2D, textr)
 *     GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, texture.size[0], texture.size[1], 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)             # <<<<<<<<<<<<<<
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_texture, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_texture, __pyx_n_s_size); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1411, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[10] = {__pyx_t_5, __pyx_t_2, __pyx_int_0, __pyx_t_3, __pyx_t_7, __pyx_t_8, __pyx_int_0, __pyx_t_9, __pyx_t_10, __pyx_v_texture_data};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 9+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1411, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1413
 *     GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, texture.size[0], texture.size[1], 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )             # <<<<<<<<<<<<<<
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_MAG_FILTER); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_TEXTURE_DISPLAY_METHOD); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_9, __pyx_t_8, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1414
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, TEXTURE_DISPLAY_METHOD )
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )             # <<<<<<<<<<<<<<
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_MIN_FILTER); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_TEXTURE_DISPLAY_METHOD); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1414, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1416
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, TEXTURE_DISPLAY_METHOD )
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT )             # <<<<<<<<<<<<<<
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT )
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_WRAP_S); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_REPEAT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_t_9, __pyx_t_8, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1417
 * 
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT )
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT )             # <<<<<<<<<<<<<<
 * 
 *     return textr
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_WRAP_T); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_REPEAT); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_8, __pyx_t_9, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1417, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1419
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT )
 * 
 *     return textr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_textr);
  __pyx_r = __pyx_v_textr;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1402
 *     return textr
 * 
 * def load_texture_repeat(texture_=None,n=None):             # <<<<<<<<<<<<<<
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_repeat", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_texture);
  __Pyx_XDECREF(__pyx_v_texture_data);
  __Pyx_XDECREF(__pyx_v_textr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1424
 * 
 * 
 * def usingVIPSandShrink(f):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13usingVIPSandShrink(PyObject *__pyx_self, PyObject *__pyx_v_f); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13usingVIPSandShrink = {"usingVIPSandShrink", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13usingVIPSandShrink, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13usingVIPSandShrink(PyObject *__pyx_self, PyObject *__pyx_v_f) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("usingVIPSandShrink (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12usingVIPSandShrink(__pyx_self, ((PyObject *)__pyx_v_f));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12usingVIPSandShrink(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_v_image = NULL;
  PyObject *__pyx_v_mem_img = NULL;
  PyObject *__pyx_v_imgnp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("usingVIPSandShrink", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1425
 * 
 * def usingVIPSandShrink(f):
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)             # <<<<<<<<<<<<<<
 *     mem_img = image.write_to_memory()
 *     imgnp=np.frombuffer(mem_img, dtype=np.uint8).reshape(image.height, image.width, 3)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyvips); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Image); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_new_from_file); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_f);
  __Pyx_GIVEREF(__pyx_v_f);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_f);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_access, __pyx_n_s_sequential) < 0) __PYX_ERR(0, 1425, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shrink, __pyx_int_2) < 0) __PYX_ERR(0, 1425, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_image = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1426
 * def usingVIPSandShrink(f):
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()             # <<<<<<<<<<<<<<
 *     imgnp=np.frombuffer(mem_img, dtype=np.uint8).reshape(image.height, image.width, 3)
 *     return imgnp
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_write_to_memory); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_2, };
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1426, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_mem_img = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1427
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()
 *     imgnp=np.frombuffer(mem_img, dtype=np.uint8).reshape(image.height, image.width, 3)             # <<<<<<<<<<<<<<
 *     return imgnp
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_mem_img);
  __Pyx_GIVEREF(__pyx_v_mem_img);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_mem_img);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_uint8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_reshape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_7, __pyx_t_3, __pyx_int_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_imgnp = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1428
 *     mem_img = image.write_to_memory()
 *     imgnp=np.frombuffer(mem_img, dtype=np.uint8).reshape(image.height, image.width, 3)
 *     return imgnp             # <<<<<<<<<<<<<<
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_imgnp);
  __pyx_r = __pyx_v_imgnp;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1424
 * 
 * 
 * def usingVIPSandShrink(f):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.usingVIPSandShrink", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_image);
  __Pyx_XDECREF(__pyx_v_mem_img);
  __Pyx_XDECREF(__pyx_v_imgnp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1430
 *     return imgnp
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):             # <<<<<<<<<<<<<<
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15pure_pil_alpha_to_color_v2(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15pure_pil_alpha_to_color_v2 = {"pure_pil_alpha_to_color_v2", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15pure_pil_alpha_to_color_v2, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15pure_pil_alpha_to_color_v2(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_image = 0;
  PyObject *__pyx_v_color = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("pure_pil_alpha_to_color_v2 (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_image,&__pyx_n_s_color,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_image,&__pyx_n_s_color,0};
    #endif
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)((PyObject*)__pyx_tuple__5));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_image)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1430, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "pure_pil_alpha_to_color_v2") < 0)) __PYX_ERR(0, 1430, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_image = values[0];
    __pyx_v_color = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("pure_pil_alpha_to_color_v2", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1430, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.pure_pil_alpha_to_color_v2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_14pure_pil_alpha_to_color_v2(__pyx_self, __pyx_v_image, __pyx_v_color);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_14pure_pil_alpha_to_color_v2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_image, PyObject *__pyx_v_color) {
  PyObject *__pyx_v_background = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pure_pil_alpha_to_color_v2", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1431
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
 *     image.load()  # needed for split()             # <<<<<<<<<<<<<<
 *     background = Image.new('RGB', image.size, color)
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_load); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1431, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1432
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)             # <<<<<<<<<<<<<<
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Image); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_n_s_RGB, __pyx_t_2, __pyx_v_color};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_background = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1433
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel             # <<<<<<<<<<<<<<
 *     return background
 * def rgba2rgb(x):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_background, __pyx_n_s_paste); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_image);
  __Pyx_GIVEREF(__pyx_v_image);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_image);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_7, };
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_mask, __pyx_t_6) < 0) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1433, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1434
 *     background = Image.new('RGB', image.size, color)
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background             # <<<<<<<<<<<<<<
 * def rgba2rgb(x):
 *     x = x[::4]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_background);
  __pyx_r = __pyx_v_background;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1430
 *     return imgnp
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):             # <<<<<<<<<<<<<<
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.pure_pil_alpha_to_color_v2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_background);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1435
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background
 * def rgba2rgb(x):             # <<<<<<<<<<<<<<
 *     x = x[::4]
 *     return x
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_17rgba2rgb(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_17rgba2rgb = {"rgba2rgb", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_17rgba2rgb, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_17rgba2rgb(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rgba2rgb (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_16rgba2rgb(__pyx_self, ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_16rgba2rgb(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rgba2rgb", 0);
  __Pyx_INCREF(__pyx_v_x);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1436
 *     return background
 * def rgba2rgb(x):
 *     x = x[::4]             # <<<<<<<<<<<<<<
 *     return x
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_x, __pyx_slice__18); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1437
 * def rgba2rgb(x):
 *     x = x[::4]
 *     return x             # <<<<<<<<<<<<<<
 * 
 * def create_font(filename, size,base,texid):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_x);
  __pyx_r = __pyx_v_x;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1435
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background
 * def rgba2rgb(x):             # <<<<<<<<<<<<<<
 *     x = x[::4]
 *     return x
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.rgba2rgb", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1439
 *     return x
 * 
 * def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 * 
 *     face = Face(filename)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_19create_font(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_19create_font = {"create_font", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_19create_font, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_19create_font(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_size = 0;
  CYTHON_UNUSED PyObject *__pyx_v_base = 0;
  PyObject *__pyx_v_texid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_font (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_size,&__pyx_n_s_base,&__pyx_n_s_texid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_size,&__pyx_n_s_base,&__pyx_n_s_texid,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_filename)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 1); __PYX_ERR(0, 1439, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_base)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 2); __PYX_ERR(0, 1439, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texid)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1439, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, 3); __PYX_ERR(0, 1439, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_font") < 0)) __PYX_ERR(0, 1439, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_filename = values[0];
    __pyx_v_size = values[1];
    __pyx_v_base = values[2];
    __pyx_v_texid = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_font", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1439, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.create_font", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_18create_font(__pyx_self, __pyx_v_filename, __pyx_v_size, __pyx_v_base, __pyx_v_texid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_18create_font(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_size, CYTHON_UNUSED PyObject *__pyx_v_base, PyObject *__pyx_v_texid) {
  PyObject *__pyx_v_face = NULL;
  PyObject *__pyx_v_width = NULL;
  PyObject *__pyx_v_height = NULL;
  PyObject *__pyx_v_ascender = NULL;
  PyObject *__pyx_v_descender = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_bitmap = NULL;
  PyObject *__pyx_v_Z = NULL;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  PyObject *__pyx_v_font = NULL;
  PyObject *__pyx_v_dx = NULL;
  PyObject *__pyx_v_dy = NULL;
  PyObject *__pyx_v_cords1 = NULL;
  PyObject *__pyx_v_texcords1 = NULL;
  PyObject *__pyx_v_cords2 = NULL;
  PyObject *__pyx_v_texcords2 = NULL;
  PyObject *__pyx_v_cords3 = NULL;
  PyObject *__pyx_v_texcords3 = NULL;
  PyObject *__pyx_v_cords4 = NULL;
  PyObject *__pyx_v_texcords4 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  long __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_font", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1441
 * def create_font(filename, size,base,texid):
 * 
 *     face = Face(filename)             # <<<<<<<<<<<<<<
 *     face.set_char_size( size*64 )
 *     if not face.is_fixed_width:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Face); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_filename};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_face = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1442
 * 
 *     face = Face(filename)
 *     face.set_char_size( size*64 )             # <<<<<<<<<<<<<<
 *     if not face.is_fixed_width:
 *         pass#raise 'Font is not monotype'
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_set_char_size); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_size, __pyx_int_64, 64, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1443
 *     face = Face(filename)
 *     face.set_char_size( size*64 )
 *     if not face.is_fixed_width:             # <<<<<<<<<<<<<<
 *         pass#raise 'Font is not monotype'
 *     width, height, ascender, descender = 0, 0, 0, 0
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_is_fixed_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1443, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = ((!__pyx_t_6) != 0);
  if (__pyx_t_7) {
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1445
 *     if not face.is_fixed_width:
 *         pass#raise 'Font is not monotype'
 *     width, height, ascender, descender = 0, 0, 0, 0             # <<<<<<<<<<<<<<
 *     for c in range(32,128):
 *         face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 */
  __pyx_t_1 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_5 = __pyx_int_0;
  __Pyx_INCREF(__pyx_t_5);
  __pyx_v_width = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_height = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_ascender = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_v_descender = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1446
 *         pass#raise 'Font is not monotype'
 *     width, height, ascender, descender = 0, 0, 0, 0
 *     for c in range(32,128):             # <<<<<<<<<<<<<<
 *         face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *         bitmap    = face.glyph.bitmap
 */
  for (__pyx_t_8 = 32; __pyx_t_8 < 0x80; __pyx_t_8+=1) {
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1446, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1447
 *     width, height, ascender, descender = 0, 0, 0, 0
 *     for c in range(32,128):
 *         face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )             # <<<<<<<<<<<<<<
 *         bitmap    = face.glyph.bitmap
 *         width     = max( width, bitmap.width )
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_load_char); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_v_c); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FT_LOAD_RENDER); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_FT_LOAD_FORCE_AUTOHINT); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = PyNumber_Or(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_t_2, __pyx_t_10};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1447, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1448
 *     for c in range(32,128):
 *         face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *         bitmap    = face.glyph.bitmap             # <<<<<<<<<<<<<<
 *         width     = max( width, bitmap.width )
 *         ascender  = max( ascender, face.glyph.bitmap_top )
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_bitmap); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_bitmap, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1449
 *         face.load_char( chr(c), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *         bitmap    = face.glyph.bitmap
 *         width     = max( width, bitmap.width )             # <<<<<<<<<<<<<<
 *         ascender  = max( ascender, face.glyph.bitmap_top )
 *         descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_width);
    __pyx_t_5 = __pyx_v_width;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_t_5, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1449, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1449, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_10 = __pyx_t_3;
    } else {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_t_5;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_t_10;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_width, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1450
 *         bitmap    = face.glyph.bitmap
 *         width     = max( width, bitmap.width )
 *         ascender  = max( ascender, face.glyph.bitmap_top )             # <<<<<<<<<<<<<<
 *         descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *     height = ascender+descender
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_v_ascender);
    __pyx_t_3 = __pyx_v_ascender;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_10, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1450, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1450, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_10);
      __pyx_t_5 = __pyx_t_10;
    } else {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_5 = __pyx_t_3;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __pyx_t_5;
    __Pyx_INCREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_ascender, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1451
 *         width     = max( width, bitmap.width )
 *         ascender  = max( ascender, face.glyph.bitmap_top )
 *         descender = max( descender, bitmap.rows-face.glyph.bitmap_top )             # <<<<<<<<<<<<<<
 *     height = ascender+descender
 *     Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 */
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_rows); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_10, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_v_descender);
    __pyx_t_3 = __pyx_v_descender;
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {
      __Pyx_INCREF(__pyx_t_5);
      __pyx_t_10 = __pyx_t_5;
    } else {
      __Pyx_INCREF(__pyx_t_3);
      __pyx_t_10 = __pyx_t_3;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __pyx_t_10;
    __Pyx_INCREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF_SET(__pyx_v_descender, __pyx_t_5);
    __pyx_t_5 = 0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1452
 *         ascender  = max( ascender, face.glyph.bitmap_top )
 *         descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *     height = ascender+descender             # <<<<<<<<<<<<<<
 *     Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *     for j in range(6):
 */
  __pyx_t_5 = PyNumber_Add(__pyx_v_ascender, __pyx_v_descender); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF_SET(__pyx_v_height, __pyx_t_5);
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1453
 *         descender = max( descender, bitmap.rows-face.glyph.bitmap_top )
 *     height = ascender+descender
 *     Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)             # <<<<<<<<<<<<<<
 *     for j in range(6):
 *         for i in range(16):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_numpy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyInt_MultiplyObjC(__pyx_v_height, __pyx_int_6, 6, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_width, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_5 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_numpy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_ubyte); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_9) < 0) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Z = __pyx_t_9;
  __pyx_t_9 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1454
 *     height = ascender+descender
 *     Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *     for j in range(6):             # <<<<<<<<<<<<<<
 *         for i in range(16):
 *             face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 */
  for (__pyx_t_8 = 0; __pyx_t_8 < 6; __pyx_t_8+=1) {
    __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_XDECREF_SET(__pyx_v_j, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1455
 *     Z = numpy.zeros((height*6, width*16), dtype=numpy.ubyte)
 *     for j in range(6):
 *         for i in range(16):             # <<<<<<<<<<<<<<
 *             face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap = face.glyph.bitmap
 */
    for (__pyx_t_11 = 0; __pyx_t_11 < 16; __pyx_t_11+=1) {
      __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_t_11); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1455, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1456
 *     for j in range(6):
 *         for i in range(16):
 *             face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )             # <<<<<<<<<<<<<<
 *             bitmap = face.glyph.bitmap
 *             x = i*width  + face.glyph.bitmap_left
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_load_char); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_j, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_PyInt_AddCObj(__pyx_int_32, __pyx_t_3, 32, 0, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Add(__pyx_t_10, __pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_FT_LOAD_RENDER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_FT_LOAD_FORCE_AUTOHINT); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyNumber_Or(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1456, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_10, __pyx_t_1};
        __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1456, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1457
 *         for i in range(16):
 *             face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap = face.glyph.bitmap             # <<<<<<<<<<<<<<
 *             x = i*width  + face.glyph.bitmap_left
 *             y = j*height + ascender - face.glyph.bitmap_top
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1457, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1457, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF_SET(__pyx_v_bitmap, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1458
 *             face.load_char(chr(32+j*16+i), FT_LOAD_RENDER | FT_LOAD_FORCE_AUTOHINT )
 *             bitmap = face.glyph.bitmap
 *             x = i*width  + face.glyph.bitmap_left             # <<<<<<<<<<<<<<
 *             y = j*height + ascender - face.glyph.bitmap_top
 *             Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 */
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_i, __pyx_v_width); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap_left); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1459
 *             bitmap = face.glyph.bitmap
 *             x = i*width  + face.glyph.bitmap_left
 *             y = j*height + ascender - face.glyph.bitmap_top             # <<<<<<<<<<<<<<
 *             Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 *     # Bound texture
 */
      __pyx_t_9 = PyNumber_Multiply(__pyx_v_j, __pyx_v_height); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = PyNumber_Add(__pyx_t_9, __pyx_v_ascender); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_face, __pyx_n_s_glyph); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_bitmap_top); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1460
 *             x = i*width  + face.glyph.bitmap_left
 *             y = j*height + ascender - face.glyph.bitmap_top
 *             Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer             # <<<<<<<<<<<<<<
 *     # Bound texture
 *     print('Before >',texid)
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_buffer); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_rows); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyNumber_Add(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PySlice_New(__pyx_v_y, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_bitmap, __pyx_n_s_width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = PyNumber_Add(__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PySlice_New(__pyx_v_x, __pyx_t_10, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_1);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_Z, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_flat, __pyx_t_9) < 0) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1462
 *             Z[y:y+bitmap.rows,x:x+bitmap.width].flat = bitmap.buffer
 *     # Bound texture
 *     print('Before >',texid)             # <<<<<<<<<<<<<<
 *     GL.glGenTextures(1, texid)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1462, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_kp_s_Before);
  __Pyx_GIVEREF(__pyx_kp_s_Before);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_Before);
  __Pyx_INCREF(__pyx_v_texid);
  __Pyx_GIVEREF(__pyx_v_texid);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_texid);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 1462, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1463
 *     # Bound texture
 *     print('Before >',texid)
 *     GL.glGenTextures(1, texid)             # <<<<<<<<<<<<<<
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *     GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glGenTextures); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_int_1, __pyx_v_texid};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1464
 *     print('Before >',texid)
 *     GL.glGenTextures(1, texid)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)             # <<<<<<<<<<<<<<
 *     GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_LINEAR  )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glPixelStorei); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_UNPACK_ALIGNMENT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_2, __pyx_int_1};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1464, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1465
 *     GL.glGenTextures(1, texid)
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *     GL.glBindTexture( GL.GL_TEXTURE_2D, texid)             # <<<<<<<<<<<<<<
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_LINEAR  )
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_LINEAR  )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_GL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_9, __pyx_t_10, __pyx_v_texid};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1466
 *     GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 *     GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_LINEAR  )             # <<<<<<<<<<<<<<
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_LINEAR  )
 *     GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_TEXTURE_MAG_FILTER); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_GL_LINEAR); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_t_9, __pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1466, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1467
 *     GL.glBindTexture( GL.GL_TEXTURE_2D, texid)
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_LINEAR  )
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_LINEAR  )             # <<<<<<<<<<<<<<
 *     GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 *                      GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_MIN_FILTER); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_LINEAR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_5, __pyx_t_9, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1467, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1468
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_LINEAR  )
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_LINEAR  )
 *     GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,             # <<<<<<<<<<<<<<
 *                      GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_ALPHA); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1469
 *     GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_LINEAR  )
 *     GL.glTexImage2D( GL.GL_TEXTURE_2D, 0, GL.GL_ALPHA, Z.shape[1], Z.shape[0], 0,
 *                      GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )             # <<<<<<<<<<<<<<
 * 
 *     font = []
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_ALPHA); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[10] = {__pyx_t_3, __pyx_t_9, __pyx_int_0, __pyx_t_5, __pyx_t_10, __pyx_t_12, __pyx_int_0, __pyx_t_13, __pyx_t_14, __pyx_v_Z};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 9+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1471
 *                      GL.GL_ALPHA, GL.GL_UNSIGNED_BYTE, Z )
 * 
 *     font = []             # <<<<<<<<<<<<<<
 *     print('Create >',texid)
 *     # Generate display lists
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_font = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1472
 * 
 *     font = []
 *     print('Create >',texid)             # <<<<<<<<<<<<<<
 *     # Generate display lists
 *     dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_kp_s_Create);
  __Pyx_GIVEREF(__pyx_kp_s_Create);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_s_Create);
  __Pyx_INCREF(__pyx_v_texid);
  __Pyx_GIVEREF(__pyx_v_texid);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_texid);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1474
 *     print('Create >',texid)
 *     # Generate display lists
 *     dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])             # <<<<<<<<<<<<<<
 *     for i in range(8*16):
 *         c = chr(i)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_v_width, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_Z, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyNumber_Divide(__pyx_v_height, __pyx_t_1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_dx = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_dy = __pyx_t_14;
  __pyx_t_14 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1475
 *     # Generate display lists
 *     dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 *     for i in range(8*16):             # <<<<<<<<<<<<<<
 *         c = chr(i)
 *         x = i%16
 */
  for (__pyx_t_8 = 0; __pyx_t_8 < 0x80; __pyx_t_8+=1) {
    __pyx_t_14 = __Pyx_PyInt_From_long(__pyx_t_8); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1475, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1476
 *     dx, dy = width/float(Z.shape[1]), height/float(Z.shape[0])
 *     for i in range(8*16):
 *         c = chr(i)             # <<<<<<<<<<<<<<
 *         x = i%16
 *         y = i//16-2
 */
    __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_chr, __pyx_v_i); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1477
 *     for i in range(8*16):
 *         c = chr(i)
 *         x = i%16             # <<<<<<<<<<<<<<
 *         y = i//16-2
 *         if (c == '\n'):
 */
    __pyx_t_14 = __Pyx_PyInt_RemainderObjC(__pyx_v_i, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_14);
    __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1478
 *         c = chr(i)
 *         x = i%16
 *         y = i//16-2             # <<<<<<<<<<<<<<
 *         if (c == '\n'):
 *             #GL.glTranslatef( 0, -height, 0 )
 */
    __pyx_t_14 = __Pyx_PyInt_FloorDivideObjC(__pyx_v_i, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_t_14, __pyx_int_2, 2, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1478, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1479
 *         x = i%16
 *         y = i//16-2
 *         if (c == '\n'):             # <<<<<<<<<<<<<<
 *             #GL.glTranslatef( 0, -height, 0 )
 *             font.append(['NEWLINE'])
 */
    __pyx_t_7 = (__Pyx_PyString_Equals(__pyx_v_c, __pyx_kp_s__13, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1479, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1481
 *         if (c == '\n'):
 *             #GL.glTranslatef( 0, -height, 0 )
 *             font.append(['NEWLINE'])             # <<<<<<<<<<<<<<
 *         elif (c == '\t'):
 *             #GL.glTranslatef( 4*width, 0, 0 )
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_NEWLINE);
      __Pyx_GIVEREF(__pyx_n_s_NEWLINE);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_NEWLINE);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_2); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1481, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1479
 *         x = i%16
 *         y = i//16-2
 *         if (c == '\n'):             # <<<<<<<<<<<<<<
 *             #GL.glTranslatef( 0, -height, 0 )
 *             font.append(['NEWLINE'])
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1482
 *             #GL.glTranslatef( 0, -height, 0 )
 *             font.append(['NEWLINE'])
 *         elif (c == '\t'):             # <<<<<<<<<<<<<<
 *             #GL.glTranslatef( 4*width, 0, 0 )
 *             font.append(['TAB'])
 */
    __pyx_t_7 = (__Pyx_PyString_Equals(__pyx_v_c, __pyx_kp_s__10, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1482, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1484
 *         elif (c == '\t'):
 *             #GL.glTranslatef( 4*width, 0, 0 )
 *             font.append(['TAB'])             # <<<<<<<<<<<<<<
 *         elif (i >= 32):
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1484, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_TAB);
      __Pyx_GIVEREF(__pyx_n_s_TAB);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_TAB);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_2); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1484, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1482
 *             #GL.glTranslatef( 0, -height, 0 )
 *             font.append(['NEWLINE'])
 *         elif (c == '\t'):             # <<<<<<<<<<<<<<
 *             #GL.glTranslatef( 4*width, 0, 0 )
 *             font.append(['TAB'])
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1485
 *             #GL.glTranslatef( 4*width, 0, 0 )
 *             font.append(['TAB'])
 *         elif (i >= 32):             # <<<<<<<<<<<<<<
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 */
    __pyx_t_2 = PyObject_RichCompare(__pyx_v_i, __pyx_int_32, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1485, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1485, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_7) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1486
 *             font.append(['TAB'])
 *         elif (i >= 32):
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )             # <<<<<<<<<<<<<<
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *             cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 */
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_x, __pyx_v_dx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_14, __pyx_v_dy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_1);
      __pyx_t_2 = 0;
      __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords1, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;
      __pyx_t_14 = PyNumber_Negative(__pyx_v_height); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1486, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_0);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_14);
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_texcords1, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1487
 *         elif (i >= 32):
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )             # <<<<<<<<<<<<<<
 *             cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 *             cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 */
      __pyx_t_1 = PyNumber_Multiply(__pyx_v_x, __pyx_v_dx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1487, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyNumber_Multiply(__pyx_v_y, __pyx_v_dy); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1487, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1487, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_14);
      __pyx_t_1 = 0;
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords2, ((PyObject*)__pyx_t_2));
      __pyx_t_2 = 0;
      __Pyx_INCREF(__pyx_tuple_);
      __Pyx_XDECREF_SET(__pyx_v_texcords2, __pyx_tuple_);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1488
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *             cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )             # <<<<<<<<<<<<<<
 *             cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 *             #GL.glTranslatef( width, 0, 0 )
 */
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1488, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = PyNumber_Multiply(__pyx_t_2, __pyx_v_dx); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1488, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_Multiply(__pyx_v_y, __pyx_v_dy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1488, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1488, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
      __pyx_t_14 = 0;
      __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords3, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1488, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_width);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_0);
      __Pyx_XDECREF_SET(__pyx_v_texcords3, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1489
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 *             cords3 = ( (x+1)*dx, (y  )*dy ); texcords3 = ( width, 0 )
 *             cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )             # <<<<<<<<<<<<<<
 *             #GL.glTranslatef( width, 0, 0 )
 *             font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])
 */
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_dx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_y, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyNumber_Multiply(__pyx_t_1, __pyx_v_dy); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_14);
      __pyx_t_2 = 0;
      __pyx_t_14 = 0;
      __Pyx_XDECREF_SET(__pyx_v_cords4, ((PyObject*)__pyx_t_1));
      __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Negative(__pyx_v_height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1489, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_v_width);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_1);
      __pyx_t_1 = 0;
      __Pyx_XDECREF_SET(__pyx_v_texcords4, ((PyObject*)__pyx_t_14));
      __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1491
 *             cords4 = ( (x+1)*dx, (y+1)*dy ); texcords4 = ( width, -height )
 *             #GL.glTranslatef( width, 0, 0 )
 *             font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])             # <<<<<<<<<<<<<<
 *         else:
 *             font.append([None])
 */
      __pyx_t_14 = PyList_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_INCREF(__pyx_v_cords1);
      __Pyx_GIVEREF(__pyx_v_cords1);
      PyList_SET_ITEM(__pyx_t_14, 0, __pyx_v_cords1);
      __Pyx_INCREF(__pyx_v_texcords1);
      __Pyx_GIVEREF(__pyx_v_texcords1);
      PyList_SET_ITEM(__pyx_t_14, 1, __pyx_v_texcords1);
      __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_cords2);
      __Pyx_GIVEREF(__pyx_v_cords2);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cords2);
      __Pyx_INCREF(__pyx_v_texcords2);
      __Pyx_GIVEREF(__pyx_v_texcords2);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_texcords2);
      __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_cords3);
      __Pyx_GIVEREF(__pyx_v_cords3);
      PyList_SET_ITEM(__pyx_t_2, 0, __pyx_v_cords3);
      __Pyx_INCREF(__pyx_v_texcords3);
      __Pyx_GIVEREF(__pyx_v_texcords3);
      PyList_SET_ITEM(__pyx_t_2, 1, __pyx_v_texcords3);
      __pyx_t_13 = PyList_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_INCREF(__pyx_v_cords4);
      __Pyx_GIVEREF(__pyx_v_cords4);
      PyList_SET_ITEM(__pyx_t_13, 0, __pyx_v_cords4);
      __Pyx_INCREF(__pyx_v_texcords4);
      __Pyx_GIVEREF(__pyx_v_texcords4);
      PyList_SET_ITEM(__pyx_t_13, 1, __pyx_v_texcords4);
      __pyx_t_12 = PyList_New(6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_12, 0, __pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_12, 1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_2);
      PyList_SET_ITEM(__pyx_t_12, 2, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_13);
      PyList_SET_ITEM(__pyx_t_12, 3, __pyx_t_13);
      __Pyx_INCREF(__pyx_v_width);
      __Pyx_GIVEREF(__pyx_v_width);
      PyList_SET_ITEM(__pyx_t_12, 4, __pyx_v_width);
      __Pyx_INCREF(__pyx_v_height);
      __Pyx_GIVEREF(__pyx_v_height);
      PyList_SET_ITEM(__pyx_t_12, 5, __pyx_v_height);
      __pyx_t_14 = 0;
      __pyx_t_1 = 0;
      __pyx_t_2 = 0;
      __pyx_t_13 = 0;
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_12); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1485
 *             #GL.glTranslatef( 4*width, 0, 0 )
 *             font.append(['TAB'])
 *         elif (i >= 32):             # <<<<<<<<<<<<<<
 *             cords1 = ( (x  )*dx, (y+1)*dy ); texcords1 = ( 0,     -height )
 *             cords2 = ( (x  )*dx, (y  )*dy ); texcords2 = ( 0,     0 )
 */
      goto __pyx_L12;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1493
 *             font.append([[cords1,texcords1],[cords2,texcords2],[cords3,texcords3],[cords4,texcords4],width,height])
 *         else:
 *             font.append([None])             # <<<<<<<<<<<<<<
 * 
 *     return font
 */
    /*else*/ {
      __pyx_t_12 = PyList_New(1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1493, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_INCREF(Py_None);
      __Pyx_GIVEREF(Py_None);
      PyList_SET_ITEM(__pyx_t_12, 0, Py_None);
      __pyx_t_15 = __Pyx_PyList_Append(__pyx_v_font, __pyx_t_12); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 1493, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_L12:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1495
 *             font.append([None])
 * 
 *     return font             # <<<<<<<<<<<<<<
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_font);
  __pyx_r = __pyx_v_font;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1439
 *     return x
 * 
 * def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 * 
 *     face = Face(filename)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.create_font", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_face);
  __Pyx_XDECREF(__pyx_v_width);
  __Pyx_XDECREF(__pyx_v_height);
  __Pyx_XDECREF(__pyx_v_ascender);
  __Pyx_XDECREF(__pyx_v_descender);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_bitmap);
  __Pyx_XDECREF(__pyx_v_Z);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF(__pyx_v_font);
  __Pyx_XDECREF(__pyx_v_dx);
  __Pyx_XDECREF(__pyx_v_dy);
  __Pyx_XDECREF(__pyx_v_cords1);
  __Pyx_XDECREF(__pyx_v_texcords1);
  __Pyx_XDECREF(__pyx_v_cords2);
  __Pyx_XDECREF(__pyx_v_texcords2);
  __Pyx_XDECREF(__pyx_v_cords3);
  __Pyx_XDECREF(__pyx_v_texcords3);
  __Pyx_XDECREF(__pyx_v_cords4);
  __Pyx_XDECREF(__pyx_v_texcords4);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1496
 * 
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_21load_texture_sub(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_21load_texture_sub = {"load_texture_sub", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_21load_texture_sub, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_21load_texture_sub(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_Texture_unit = 0;
  PyObject *__pyx_v_New_Texture = 0;
  CYTHON_UNUSED PyObject *__pyx_v_Offests = 0;
  PyObject *__pyx_v_size = 0;
  PyObject *__pyx_v_buffmanager = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_texture_sub (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Texture_unit,&__pyx_n_s_New_Texture,&__pyx_n_s_Offests,&__pyx_n_s_size,&__pyx_n_s_buffmanager,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Texture_unit,&__pyx_n_s_New_Texture,&__pyx_n_s_Offests,&__pyx_n_s_size,&__pyx_n_s_buffmanager,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = ((PyObject *)((PyObject*)__pyx_tuple_));
    values[3] = ((PyObject *)((PyObject*)__pyx_tuple__19));
    values[4] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Texture_unit);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_New_Texture);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Offests);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_buffmanager);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1496, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "load_texture_sub") < 0)) __PYX_ERR(0, 1496, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_Texture_unit = values[0];
    __pyx_v_New_Texture = values[1];
    __pyx_v_Offests = values[2];
    __pyx_v_size = values[3];
    __pyx_v_buffmanager = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_texture_sub", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 1496, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_20load_texture_sub(__pyx_self, __pyx_v_Texture_unit, __pyx_v_New_Texture, __pyx_v_Offests, __pyx_v_size, __pyx_v_buffmanager);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_20load_texture_sub(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_Texture_unit, PyObject *__pyx_v_New_Texture, CYTHON_UNUSED PyObject *__pyx_v_Offests, PyObject *__pyx_v_size, PyObject *__pyx_v_buffmanager) {
  PyObject *__pyx_v_image = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_scaley = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_scalex = NULL;
  PyObject *__pyx_v_mem_img = NULL;
  PyObject *__pyx_v_imgnp = NULL;
  PyObject *__pyx_v_texture_data = NULL;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_texture_sub", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1497
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")             # <<<<<<<<<<<<<<
 *     scaley = (size[0]/image.width)
 *     scalex = (size[1]/image.height)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyvips); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Image); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_new_from_file); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_New_Texture);
  __Pyx_GIVEREF(__pyx_v_New_Texture);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_New_Texture);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_access, __pyx_n_s_sequential) < 0) __PYX_ERR(0, 1497, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_image = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1498
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)             # <<<<<<<<<<<<<<
 *     scalex = (size[1]/image.height)
 * 
 */
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_size, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_scaley = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1499
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 *     scalex = (size[1]/image.height)             # <<<<<<<<<<<<<<
 * 
 *     image = image.crop(0,0,size[0],size[1])
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_size, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_scalex = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1501
 *     scalex = (size[1]/image.height)
 * 
 *     image = image.crop(0,0,size[0],size[1])             # <<<<<<<<<<<<<<
 *     mem_img = image.write_to_memory()
 *     if image.bands == 3:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_crop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_size, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_size, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_5, __pyx_int_0, __pyx_int_0, __pyx_t_2, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF_SET(__pyx_v_image, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1502
 * 
 *     image = image.crop(0,0,size[0],size[1])
 *     mem_img = image.write_to_memory()             # <<<<<<<<<<<<<<
 *     if image.bands == 3:
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_write_to_memory); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_1, };
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1502, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_mem_img = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1503
 *     image = image.crop(0,0,size[0],size[1])
 *     mem_img = image.write_to_memory()
 *     if image.bands == 3:             # <<<<<<<<<<<<<<
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *     else:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_4, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1503, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_7) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1504
 *     mem_img = image.write_to_memory()
 *     if image.bands == 3:
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)             # <<<<<<<<<<<<<<
 *     else:
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_numpy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_mem_img);
    __Pyx_GIVEREF(__pyx_v_mem_img);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_mem_img);
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_numpy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uint8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_8) < 0) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_reshape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_1, __pyx_t_8, __pyx_t_4, __pyx_int_3};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1504, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_v_imgnp = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1503
 *     image = image.crop(0,0,size[0],size[1])
 *     mem_img = image.write_to_memory()
 *     if image.bands == 3:             # <<<<<<<<<<<<<<
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *     else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1506
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *     else:
 *         imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_numpy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_mem_img);
    __Pyx_GIVEREF(__pyx_v_mem_img);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_mem_img);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_numpy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_uint8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_1) < 0) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_imgnp = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1509
 * 
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         if image.bands == 3:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_11);
    /*try:*/ {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1510
 * 
 *     try:
 *         texture_data  = imgnp             # <<<<<<<<<<<<<<
 *         if image.bands == 3:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 */
      __Pyx_INCREF(__pyx_v_imgnp);
      __pyx_v_texture_data = __pyx_v_imgnp;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1511
 *     try:
 *         texture_data  = imgnp
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 *         if image.bands == 4:
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1511, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1511, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1511, __pyx_L4_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_7) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1512
 *         texture_data  = imgnp
 *         if image.bands == 3:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)             # <<<<<<<<<<<<<<
 *         if image.bands == 4:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,True)
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_buffmanager, __pyx_n_s_add_textureupdate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1512, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1512, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1512, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_8 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[7] = {__pyx_t_8, __pyx_v_Texture_unit, __pyx_v_imgnp, __pyx_t_3, __pyx_t_2, __pyx_v_texture_data, Py_False};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 6+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1512, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1511
 *     try:
 *         texture_data  = imgnp
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 *         if image.bands == 4:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1513
 *         if image.bands == 3:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 *         if image.bands == 4:             # <<<<<<<<<<<<<<
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,True)
 * 
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1513, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_t_4, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1513, __pyx_L4_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1513, __pyx_L4_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_7) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1514
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 *         if image.bands == 4:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,True)             # <<<<<<<<<<<<<<
 * 
 *     except Exception  as e:print(e,'wtf')
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_buffmanager, __pyx_n_s_add_textureupdate); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1514, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1514, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1514, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_8 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[7] = {__pyx_t_8, __pyx_v_Texture_unit, __pyx_v_imgnp, __pyx_t_2, __pyx_t_3, __pyx_v_texture_data, Py_True};
          __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 6+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1514, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1513
 *         if image.bands == 3:
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,False)
 *         if image.bands == 4:             # <<<<<<<<<<<<<<
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,True)
 * 
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1509
 * 
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         if image.bands == 3:
 */
    }
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    goto __pyx_L9_try_end;
    __pyx_L4_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1516
 *             buffmanager.add_textureupdate(Texture_unit,imgnp,image.width,image.height,texture_data,True)
 * 
 *     except Exception  as e:print(e,'wtf')             # <<<<<<<<<<<<<<
 * 
 *     return imgnp
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_6) {
      __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_4, &__pyx_t_3) < 0) __PYX_ERR(0, 1516, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __pyx_v_e = __pyx_t_4;
      __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1516, __pyx_L6_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_e);
      __Pyx_GIVEREF(__pyx_v_e);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_e);
      __Pyx_INCREF(__pyx_n_s_wtf);
      __Pyx_GIVEREF(__pyx_n_s_wtf);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_wtf);
      if (__Pyx_PrintOne(0, __pyx_t_2) < 0) __PYX_ERR(0, 1516, __pyx_L6_except_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L5_exception_handled;
    }
    goto __pyx_L6_except_error;
    __pyx_L6_except_error:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1509
 * 
 * 
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         if image.bands == 3:
 */
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    goto __pyx_L1_error;
    __pyx_L5_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_10, __pyx_t_11);
    __pyx_L9_try_end:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1518
 *     except Exception  as e:print(e,'wtf')
 * 
 *     return imgnp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_imgnp);
  __pyx_r = __pyx_v_imgnp;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1496
 * 
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture_sub", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_image);
  __Pyx_XDECREF(__pyx_v_scaley);
  __Pyx_XDECREF(__pyx_v_scalex);
  __Pyx_XDECREF(__pyx_v_mem_img);
  __Pyx_XDECREF(__pyx_v_imgnp);
  __Pyx_XDECREF(__pyx_v_texture_data);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1521
 * 
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):             # <<<<<<<<<<<<<<
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_52__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)Py_None));
  __Pyx_INCREF(((PyObject *)Py_False));
  __Pyx_GIVEREF(((PyObject *)Py_False));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_False));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults8, __pyx_self)->__pyx_arg_RAW_DATA);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults8, __pyx_self)->__pyx_arg_RAW_DATA);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __Pyx_CyFunction_Defaults(__pyx_defaults8, __pyx_self)->__pyx_arg_RAW_DATA);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_23load_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_23load_texture = {"load_texture", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_23load_texture, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_23load_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_texture_ = 0;
  PyObject *__pyx_v_nr = 0;
  CYTHON_UNUSED PyObject *__pyx_v_repeat = 0;
  PyObject *__pyx_v_RAW_DATA = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_texture (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_texture_2,&__pyx_n_s_nr,&__pyx_n_s_repeat,&__pyx_n_s_RAW_DATA,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_texture_2,&__pyx_n_s_nr,&__pyx_n_s_repeat,&__pyx_n_s_RAW_DATA,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    __pyx_defaults8 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults8, __pyx_self);
    values[0] = ((PyObject *)((PyObject *)Py_None));
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = ((PyObject *)((PyObject *)Py_False));
    values[3] = __pyx_dynamic_args->__pyx_arg_RAW_DATA;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texture_2);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1521, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_nr);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1521, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_repeat);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1521, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_RAW_DATA);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1521, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "load_texture") < 0)) __PYX_ERR(0, 1521, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_texture_ = values[0];
    __pyx_v_nr = values[1];
    __pyx_v_repeat = values[2];
    __pyx_v_RAW_DATA = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_texture", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 1521, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_22load_texture(__pyx_self, __pyx_v_texture_, __pyx_v_nr, __pyx_v_repeat, __pyx_v_RAW_DATA);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1532
 *         imgnp=texture_
 *         class image(object):
 *             def __init__(self):             # <<<<<<<<<<<<<<
 *                 self.bands = 0
 *                 self.width = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image_1__init__ = {"__init__", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image_1__init__, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image___init__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1533
 *         class image(object):
 *             def __init__(self):
 *                 self.bands = 0             # <<<<<<<<<<<<<<
 *                 self.width = 0
 *                 self.height = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_bands, __pyx_int_0) < 0) __PYX_ERR(0, 1533, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1534
 *             def __init__(self):
 *                 self.bands = 0
 *                 self.width = 0             # <<<<<<<<<<<<<<
 *                 self.height = 0
 *         image = image()
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_width, __pyx_int_0) < 0) __PYX_ERR(0, 1534, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1535
 *                 self.bands = 0
 *                 self.width = 0
 *                 self.height = 0             # <<<<<<<<<<<<<<
 *         image = image()
 *         image.bands = 3
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_height, __pyx_int_0) < 0) __PYX_ERR(0, 1535, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1532
 *         imgnp=texture_
 *         class image(object):
 *             def __init__(self):             # <<<<<<<<<<<<<<
 *                 self.bands = 0
 *                 self.width = 0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture.image.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1521
 * 
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):             # <<<<<<<<<<<<<<
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_22load_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_texture_, PyObject *__pyx_v_nr, CYTHON_UNUSED PyObject *__pyx_v_repeat, PyObject *__pyx_v_RAW_DATA) {
  PyObject *__pyx_v_image = NULL;
  PyObject *__pyx_v_mem_img = NULL;
  PyObject *__pyx_v_imgnp = NULL;
  PyObject *__pyx_v_texture_data = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_textr = NULL;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_texture", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1522
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):
 *     try:             # <<<<<<<<<<<<<<
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1523
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")             # <<<<<<<<<<<<<<
 *         mem_img = image.write_to_memory()
 *         if image.bands == 3:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyvips); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_Image); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_new_from_file); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_v_texture_);
      __Pyx_GIVEREF(__pyx_v_texture_);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_texture_);
      __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_access, __pyx_n_s_sequential) < 0) __PYX_ERR(0, 1523, __pyx_L3_error)
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_v_image = __pyx_t_7;
      __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1524
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()             # <<<<<<<<<<<<<<
 *         if image.bands == 3:
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_write_to_memory); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1524, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_5, };
        __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __pyx_v_mem_img = __pyx_t_7;
      __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1525
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *         else:
 */
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1525, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_7, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1525, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1525, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (__pyx_t_9) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1526
 *         mem_img = image.write_to_memory()
 *         if image.bands == 3:
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)             # <<<<<<<<<<<<<<
 *         else:
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_numpy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_INCREF(__pyx_v_mem_img);
        __Pyx_GIVEREF(__pyx_v_mem_img);
        PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_mem_img);
        __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_numpy); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_uint8); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_dtype, __pyx_t_11) < 0) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, __pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_reshape); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1526, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_t_11, __pyx_t_7, __pyx_int_3};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1526, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_v_imgnp = __pyx_t_6;
        __pyx_t_6 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1525
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *         else:
 */
        goto __pyx_L9;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1528
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8).reshape(image.height, image.width, 3)
 *         else:
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)             # <<<<<<<<<<<<<<
 *     except:
 *         imgnp=texture_
 */
      /*else*/ {
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_numpy); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_frombuffer); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_INCREF(__pyx_v_mem_img);
        __Pyx_GIVEREF(__pyx_v_mem_img);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_mem_img);
        __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_numpy); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_uint8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_v_imgnp = __pyx_t_5;
        __pyx_t_5 = 0;
      }
      __pyx_L9:;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1522
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):
 *     try:             # <<<<<<<<<<<<<<
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1529
 *         else:
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)
 *     except:             # <<<<<<<<<<<<<<
 *         imgnp=texture_
 *         class image(object):
 */
    /*except:*/ {
      __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(0, 1529, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GOTREF(__pyx_t_6);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1530
 *             imgnp=numpy.frombuffer(mem_img, dtype=numpy.uint8)
 *     except:
 *         imgnp=texture_             # <<<<<<<<<<<<<<
 *         class image(object):
 *             def __init__(self):
 */
      __Pyx_INCREF(__pyx_v_texture_);
      __Pyx_XDECREF_SET(__pyx_v_imgnp, __pyx_v_texture_);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1531
 *     except:
 *         imgnp=texture_
 *         class image(object):             # <<<<<<<<<<<<<<
 *             def __init__(self):
 *                 self.bands = 0
 */
      __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__20); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_tuple__20, __pyx_n_s_image, __pyx_n_s_load_texture_locals_image, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1532
 *         imgnp=texture_
 *         class image(object):
 *             def __init__(self):             # <<<<<<<<<<<<<<
 *                 self.bands = 0
 *                 self.width = 0
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_12 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1532, __pyx_L5_except_error)
      #else
      __pyx_t_12 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1532, __pyx_L5_except_error);
      #endif
      __pyx_t_10 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12load_texture_5image_1__init__, 0, __pyx_n_s_load_texture_locals_image___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_12, ((PyObject *)__pyx_codeobj__22)); __pyx_t_12 = NULL; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1532, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_SetNameInClass(__pyx_t_11, __pyx_n_s_init, __pyx_t_10) < 0) __PYX_ERR(0, 1532, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1531
 *     except:
 *         imgnp=texture_
 *         class image(object):             # <<<<<<<<<<<<<<
 *             def __init__(self):
 *                 self.bands = 0
 */
      __pyx_t_10 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_image, __pyx_tuple__20, __pyx_t_11, NULL, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_XDECREF_SET(__pyx_v_image, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1536
 *                 self.width = 0
 *                 self.height = 0
 *         image = image()             # <<<<<<<<<<<<<<
 *         image.bands = 3
 *         image.width = RAW_DATA[0]
 */
      __Pyx_INCREF(__pyx_v_image);
      __pyx_t_11 = __pyx_v_image; __pyx_t_10 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_10, };
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1536, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_image, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1537
 *                 self.height = 0
 *         image = image()
 *         image.bands = 3             # <<<<<<<<<<<<<<
 *         image.width = RAW_DATA[0]
 *         image.height = RAW_DATA[1]
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_image, __pyx_n_s_bands, __pyx_int_3) < 0) __PYX_ERR(0, 1537, __pyx_L5_except_error)

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1538
 *         image = image()
 *         image.bands = 3
 *         image.width = RAW_DATA[0]             # <<<<<<<<<<<<<<
 *         image.height = RAW_DATA[1]
 *     try:
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_RAW_DATA, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1538, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_image, __pyx_n_s_width, __pyx_t_4) < 0) __PYX_ERR(0, 1538, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1539
 *         image.bands = 3
 *         image.width = RAW_DATA[0]
 *         image.height = RAW_DATA[1]             # <<<<<<<<<<<<<<
 *     try:
 *         texture_data  = imgnp
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_RAW_DATA, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1539, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_image, __pyx_n_s_height, __pyx_t_4) < 0) __PYX_ERR(0, 1539, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1522
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):
 *     try:             # <<<<<<<<<<<<<<
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 *         mem_img = image.write_to_memory()
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1540
 *         image.width = RAW_DATA[0]
 *         image.height = RAW_DATA[1]
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         textr = GL.glGenTextures(1, nr)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_2, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1541
 *         image.height = RAW_DATA[1]
 *     try:
 *         texture_data  = imgnp             # <<<<<<<<<<<<<<
 *         textr = GL.glGenTextures(1, nr)
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 */
      __Pyx_INCREF(__pyx_v_imgnp);
      __pyx_v_texture_data = __pyx_v_imgnp;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1542
 *     try:
 *         texture_data  = imgnp
 *         textr = GL.glGenTextures(1, nr)             # <<<<<<<<<<<<<<
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1542, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glGenTextures); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1542, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_int_1, __pyx_v_nr};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1542, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_v_textr = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1543
 *         texture_data  = imgnp
 *         textr = GL.glGenTextures(1, nr)
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)             # <<<<<<<<<<<<<<
 * 
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, nr)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1543, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glPixelStorei); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1543, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1543, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_UNPACK_ALIGNMENT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1543, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_4, __pyx_int_1};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1543, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1545
 *         GL.glPixelStorei(GL.GL_UNPACK_ALIGNMENT,1)
 * 
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, nr)             # <<<<<<<<<<<<<<
 * 
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1545, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1545, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1545, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1545, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_5, __pyx_v_nr};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1545, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1547
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, nr)
 * 
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT)             # <<<<<<<<<<<<<<
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_WRAP_S); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_REPEAT); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1547, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_7, __pyx_t_11, __pyx_t_10};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1547, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1548
 * 
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT)             # <<<<<<<<<<<<<<
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_TEXTURE_WRAP_T); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_REPEAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1548, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_10);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_10, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_5, __pyx_t_11, __pyx_t_7, __pyx_t_4};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1548, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1549
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_REPEAT)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )             # <<<<<<<<<<<<<<
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_TEXTURE_MAG_FILTER); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_NEAREST); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1549, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_7, __pyx_t_11, __pyx_t_5};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1549, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1550
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_REPEAT)
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST  )
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )             # <<<<<<<<<<<<<<
 * 
 *         if image.bands == 3:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glTexParameteri); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_MIN_FILTER); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_NEAREST); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1550, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_11, __pyx_t_7, __pyx_t_10};
        __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 3+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1550, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1552
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 * 
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 *         if image.bands == 4:
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1552, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1552, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1552, __pyx_L12_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_9) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1553
 * 
 *         if image.bands == 3:
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)             # <<<<<<<<<<<<<<
 *         if image.bands == 4:
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, image.width, image.height, 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, texture_data)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_13);
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1553, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_13)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_13);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[10] = {__pyx_t_13, __pyx_t_7, __pyx_int_0, __pyx_t_11, __pyx_t_6, __pyx_t_4, __pyx_int_0, __pyx_t_14, __pyx_t_15, __pyx_v_texture_data};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_8, 9+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1553, __pyx_L12_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1552
 *         GL.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST )
 * 
 *         if image.bands == 3:             # <<<<<<<<<<<<<<
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 *         if image.bands == 4:
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1554
 *         if image.bands == 3:
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 *         if image.bands == 4:             # <<<<<<<<<<<<<<
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, image.width, image.height, 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, texture_data)
 * 
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_bands); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1554, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1554, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1554, __pyx_L12_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (__pyx_t_9) {

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1555
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 *         if image.bands == 4:
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, image.width, image.height, 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, texture_data)             # <<<<<<<<<<<<<<
 * 
 *     except Exception  as e:print(e,'wtf')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_glTexImage2D); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_GL_RGBA); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_width); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_image, __pyx_n_s_height); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_RGBA); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1555, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_15);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_15, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[10] = {__pyx_t_11, __pyx_t_14, __pyx_int_0, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_int_0, __pyx_t_7, __pyx_t_13, __pyx_v_texture_data};
          __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_8, 9+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1555, __pyx_L12_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1554
 *         if image.bands == 3:
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGB, image.width, image.height, 0, GL.GL_RGB, GL.GL_UNSIGNED_BYTE, texture_data)
 *         if image.bands == 4:             # <<<<<<<<<<<<<<
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, image.width, image.height, 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, texture_data)
 * 
 */
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1540
 *         image.width = RAW_DATA[0]
 *         image.height = RAW_DATA[1]
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         textr = GL.glGenTextures(1, nr)
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L17_try_end;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1557
 *             GL.glTexImage2D(GL.GL_TEXTURE_2D, 0, GL.GL_RGBA, image.width, image.height, 0, GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, texture_data)
 * 
 *     except Exception  as e:print(e,'wtf')             # <<<<<<<<<<<<<<
 *     return nr
 * 
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_8) {
      __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_15, &__pyx_t_13) < 0) __PYX_ERR(0, 1557, __pyx_L14_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_15);
      __pyx_v_e = __pyx_t_15;
      __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1557, __pyx_L14_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_v_e);
      __Pyx_GIVEREF(__pyx_v_e);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_e);
      __Pyx_INCREF(__pyx_n_s_wtf);
      __Pyx_GIVEREF(__pyx_n_s_wtf);
      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_n_s_wtf);
      if (__Pyx_PrintOne(0, __pyx_t_7) < 0) __PYX_ERR(0, 1557, __pyx_L14_except_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      goto __pyx_L13_exception_handled;
    }
    goto __pyx_L14_except_error;
    __pyx_L14_except_error:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1540
 *         image.width = RAW_DATA[0]
 *         image.height = RAW_DATA[1]
 *     try:             # <<<<<<<<<<<<<<
 *         texture_data  = imgnp
 *         textr = GL.glGenTextures(1, nr)
 */
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_2, __pyx_t_1);
    goto __pyx_L1_error;
    __pyx_L13_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_2, __pyx_t_1);
    __pyx_L17_try_end:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1558
 * 
 *     except Exception  as e:print(e,'wtf')
 *     return nr             # <<<<<<<<<<<<<<
 * 
 * #__init__ file.
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_nr);
  __pyx_r = __pyx_v_nr;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1521
 * 
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):             # <<<<<<<<<<<<<<
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.load_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_image);
  __Pyx_XDECREF(__pyx_v_mem_img);
  __Pyx_XDECREF(__pyx_v_imgnp);
  __Pyx_XDECREF(__pyx_v_texture_data);
  __Pyx_XDECREF(__pyx_v_textr);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1568
 * from array import array
 * class SHADER:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         pass
 * # Vbo v0.1 Vertex Buffer <Memory Buffer> <Vertex - Points>
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER_1__init__ = {"__init__", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER_1__init__, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER___init__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1574
 * #
 * #
 * def getsize(x): #Getsize of 1 type             # <<<<<<<<<<<<<<
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_25getsize(PyObject *__pyx_self, PyObject *__pyx_v_x); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_25getsize = {"getsize", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_25getsize, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_25getsize(PyObject *__pyx_self, PyObject *__pyx_v_x) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getsize (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_24getsize(__pyx_self, ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_24getsize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getsize", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1575
 * #
 * def getsize(x): #Getsize of 1 type
 *     return ctypes.sizeof(x)             # <<<<<<<<<<<<<<
 * def cfloat(x=None): #x is none for no arg
 *     if x != None:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_x};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1574
 * #
 * #
 * def getsize(x): #Getsize of 1 type             # <<<<<<<<<<<<<<
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.getsize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1576
 * def getsize(x): #Getsize of 1 type
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg             # <<<<<<<<<<<<<<
 *     if x != None:
 *         cf = ctypes.c_float(x)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_27cfloat(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_27cfloat = {"cfloat", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_27cfloat, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_27cfloat(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cfloat (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    #endif
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1576, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "cfloat") < 0)) __PYX_ERR(0, 1576, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cfloat", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1576, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.cfloat", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_26cfloat(__pyx_self, __pyx_v_x);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_26cfloat(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_v_cf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cfloat", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1577
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 *     if x != None:             # <<<<<<<<<<<<<<
 *         cf = ctypes.c_float(x)
 *     else:cf=ctypes.c_float()
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_x, Py_None, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1578
 * def cfloat(x=None): #x is none for no arg
 *     if x != None:
 *         cf = ctypes.c_float(x)             # <<<<<<<<<<<<<<
 *     else:cf=ctypes.c_float()
 *     return cf
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_c_float); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_x};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1578, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_v_cf = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1577
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 *     if x != None:             # <<<<<<<<<<<<<<
 *         cf = ctypes.c_float(x)
 *     else:cf=ctypes.c_float()
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1579
 *     if x != None:
 *         cf = ctypes.c_float(x)
 *     else:cf=ctypes.c_float()             # <<<<<<<<<<<<<<
 *     return cf
 * def cfloat_array(list):
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_c_float); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_4, };
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1579, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_cf = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1580
 *         cf = ctypes.c_float(x)
 *     else:cf=ctypes.c_float()
 *     return cf             # <<<<<<<<<<<<<<
 * def cfloat_array(list):
 *     return (ctypes.c_float * len(list))(*list)
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_cf);
  __pyx_r = __pyx_v_cf;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1576
 * def getsize(x): #Getsize of 1 type
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg             # <<<<<<<<<<<<<<
 *     if x != None:
 *         cf = ctypes.c_float(x)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.cfloat", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1581
 *     else:cf=ctypes.c_float()
 *     return cf
 * def cfloat_array(list):             # <<<<<<<<<<<<<<
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_29cfloat_array(PyObject *__pyx_self, PyObject *__pyx_v_list); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_29cfloat_array = {"cfloat_array", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_29cfloat_array, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_29cfloat_array(PyObject *__pyx_self, PyObject *__pyx_v_list) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cfloat_array (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_28cfloat_array(__pyx_self, ((PyObject *)__pyx_v_list));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_28cfloat_array(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_list) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("cfloat_array", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1582
 *     return cf
 * def cfloat_array(list):
 *     return (ctypes.c_float * len(list))(*list)             # <<<<<<<<<<<<<<
 * class VBO_OBJ:
 *     def __init__():
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_c_float); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = PyObject_Length(__pyx_v_list); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1582, __pyx_L1_error)
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_v_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1581
 *     else:cf=ctypes.c_float()
 *     return cf
 * def cfloat_array(list):             # <<<<<<<<<<<<<<
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.cfloat_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1584
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 *     def __init__():             # <<<<<<<<<<<<<<
 *         pass
 * class VBO: # Not Recommended just opengl :l
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ_1__init__(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ_1__init__ = {"__init__", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ_1__init__, METH_NOARGS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ_1__init__(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ___init__(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ___init__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1587
 *         pass
 * class VBO: # Not Recommended just opengl :l
 *     def __init__(self,shaderprogram=None):             # <<<<<<<<<<<<<<
 *         pass
 * class RENDER_VBO:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_shaderprogram = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_shaderprogram,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_shaderprogram,0};
    #endif
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1587, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_shaderprogram);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1587, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1587, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_shaderprogram = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1587, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.VBO.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO___init__(__pyx_self, __pyx_v_self, __pyx_v_shaderprogram);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_shaderprogram) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1590
 *         pass
 * class RENDER_VBO:
 *     def __init__(self,OBJECT):             # <<<<<<<<<<<<<<
 *         pass
 * class PRERENDER_VBO:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_OBJECT = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_OBJECT,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_OBJECT,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1590, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_OBJECT)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1590, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1590, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1590, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_OBJECT = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1590, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.RENDER_VBO.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO___init__(__pyx_self, __pyx_v_self, __pyx_v_OBJECT);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_OBJECT) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1593
 *         pass
 * class PRERENDER_VBO:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         bufferid = int(id)
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO_1__init__ = {"__init__", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO_1__init__, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO_1__init__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO___init__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO___init__(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_v_bufferid = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_buffer1 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1594
 * class PRERENDER_VBO:
 *     def __init__(self):
 *         bufferid = int(id)             # <<<<<<<<<<<<<<
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_builtin_id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_bufferid = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1595
 *     def __init__(self):
 *         bufferid = int(id)
 *         buffer1 = GL.glGenBuffers(1,bufferid)             # <<<<<<<<<<<<<<
 * 
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_glGenBuffers); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_int_1, __pyx_v_bufferid};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1595, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_buffer1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1593
 *         pass
 * class PRERENDER_VBO:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         bufferid = int(id)
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.PRERENDER_VBO.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bufferid);
  __Pyx_XDECREF(__pyx_v_buffer1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1597
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 * 
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_54__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_n);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_n);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_n);
  __Pyx_INCREF(((PyObject *)__pyx_int_0));
  __Pyx_GIVEREF(((PyObject *)__pyx_int_0));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_int_0));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_txs);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_txs);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self)->__pyx_arg_txs);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_31_tex_arrayn_translate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_30_tex_arrayn_translate, " n = x,y  s = size  txs - texturesize  ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_31_tex_arrayn_translate = {"_tex_arrayn_translate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_31_tex_arrayn_translate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_30_tex_arrayn_translate};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_31_tex_arrayn_translate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_n = 0;
  PyObject *__pyx_v_s = 0;
  PyObject *__pyx_v_txs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_tex_arrayn_translate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,&__pyx_n_s_s,&__pyx_n_s_txs,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,&__pyx_n_s_s,&__pyx_n_s_txs,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults9 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_self);
    values[0] = __pyx_dynamic_args->__pyx_arg_n;
    values[1] = ((PyObject *)((PyObject *)__pyx_int_0));
    values[2] = __pyx_dynamic_args->__pyx_arg_txs;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_s);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_txs);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1597, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_tex_arrayn_translate") < 0)) __PYX_ERR(0, 1597, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_n = values[0];
    __pyx_v_s = values[1];
    __pyx_v_txs = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_tex_arrayn_translate", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1597, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._tex_arrayn_translate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_30_tex_arrayn_translate(__pyx_self, __pyx_v_n, __pyx_v_s, __pyx_v_txs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_30_tex_arrayn_translate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_n, PyObject *__pyx_v_s, PyObject *__pyx_v_txs) {
  PyObject *__pyx_v_x1 = NULL;
  PyObject *__pyx_v_y1 = NULL;
  PyObject *__pyx_v_x2 = NULL;
  PyObject *__pyx_v_y2 = NULL;
  PyObject *__pyx_v__c1 = NULL;
  PyObject *__pyx_v__c2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_tex_arrayn_translate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1599
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s             # <<<<<<<<<<<<<<
 *     y1 = (n[1]*s)-s
 *     x2 = (n[0]*s)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_x1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1600
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s
 *     y1 = (n[1]*s)-s             # <<<<<<<<<<<<<<
 *     x2 = (n[0]*s)
 *     y2 = (n[1]*s)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1600, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1601
 *     x1 = (n[0]*s)-s
 *     y1 = (n[1]*s)-s
 *     x2 = (n[0]*s)             # <<<<<<<<<<<<<<
 *     y2 = (n[1]*s)
 *     _c1 =_texture_cords_to_ratio(x1,y1,txs)
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_n, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_s); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1601, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x2 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1602
 *     y1 = (n[1]*s)-s
 *     x2 = (n[0]*s)
 *     y2 = (n[1]*s)             # <<<<<<<<<<<<<<
 *     _c1 =_texture_cords_to_ratio(x1,y1,txs)
 *     _c2 =_texture_cords_to_ratio(x2,y2,txs)
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_n, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_v_s); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_y2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1603
 *     x2 = (n[0]*s)
 *     y2 = (n[1]*s)
 *     _c1 =_texture_cords_to_ratio(x1,y1,txs)             # <<<<<<<<<<<<<<
 *     _c2 =_texture_cords_to_ratio(x2,y2,txs)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_texture_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1603, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_x1, __pyx_v_y1, __pyx_v_txs};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v__c1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1604
 *     y2 = (n[1]*s)
 *     _c1 =_texture_cords_to_ratio(x1,y1,txs)
 *     _c2 =_texture_cords_to_ratio(x2,y2,txs)             # <<<<<<<<<<<<<<
 * 
 *     return _c1,_c2
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_texture_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_x2, __pyx_v_y2, __pyx_v_txs};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1604, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v__c2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1606
 *     _c2 =_texture_cords_to_ratio(x2,y2,txs)
 * 
 *     return _c1,_c2             # <<<<<<<<<<<<<<
 * def _cords_to_ratio(x,y,screenx,screeny):
 *     xr = x*(2/screenx)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v__c1);
  __Pyx_GIVEREF(__pyx_v__c1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__c1);
  __Pyx_INCREF(__pyx_v__c2);
  __Pyx_GIVEREF(__pyx_v__c2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v__c2);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1597
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 * 
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._tex_arrayn_translate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_x1);
  __Pyx_XDECREF(__pyx_v_y1);
  __Pyx_XDECREF(__pyx_v_x2);
  __Pyx_XDECREF(__pyx_v_y2);
  __Pyx_XDECREF(__pyx_v__c1);
  __Pyx_XDECREF(__pyx_v__c2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1607
 * 
 *     return _c1,_c2
 * def _cords_to_ratio(x,y,screenx,screeny):             # <<<<<<<<<<<<<<
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_33_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_33_cords_to_ratio = {"_cords_to_ratio", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_33_cords_to_ratio, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_33_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_screenx = 0;
  PyObject *__pyx_v_screeny = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_cords_to_ratio (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_screenx,&__pyx_n_s_screeny,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_screenx,&__pyx_n_s_screeny,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 4, 4, 1); __PYX_ERR(0, 1607, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screenx)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 4, 4, 2); __PYX_ERR(0, 1607, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screeny)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1607, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 4, 4, 3); __PYX_ERR(0, 1607, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_cords_to_ratio") < 0)) __PYX_ERR(0, 1607, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_screenx = values[2];
    __pyx_v_screeny = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_cords_to_ratio", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1607, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_32_cords_to_ratio(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_screenx, __pyx_v_screeny);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_32_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_screenx, PyObject *__pyx_v_screeny) {
  PyObject *__pyx_v_xr = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_cords_to_ratio", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1608
 *     return _c1,_c2
 * def _cords_to_ratio(x,y,screenx,screeny):
 *     xr = x*(2/screenx)             # <<<<<<<<<<<<<<
 *     yr = y*(2/screeny)
 *     if xr > 1:
 */
  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_v_screenx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_v_x, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_xr = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1609
 * def _cords_to_ratio(x,y,screenx,screeny):
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)             # <<<<<<<<<<<<<<
 *     if xr > 1:
 *         xr = xr-1
 */
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_v_screeny); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_yr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1610
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 *     if xr > 1:             # <<<<<<<<<<<<<<
 *         xr = xr-1
 *     else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_xr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1610, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1611
 *     yr = y*(2/screeny)
 *     if xr > 1:
 *         xr = xr-1             # <<<<<<<<<<<<<<
 *     else:
 *         xr = xr-1
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1610
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 *     if xr > 1:             # <<<<<<<<<<<<<<
 *         xr = xr-1
 *     else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1613
 *         xr = xr-1
 *     else:
 *         xr = xr-1             # <<<<<<<<<<<<<<
 *     if yr > 1:
 *         yr = 1-yr
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1613, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1614
 *     else:
 *         xr = xr-1
 *     if yr > 1:             # <<<<<<<<<<<<<<
 *         yr = 1-yr
 *     else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_yr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1614, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1614, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1615
 *         xr = xr-1
 *     if yr > 1:
 *         yr = 1-yr             # <<<<<<<<<<<<<<
 *     else:
 *         yr = 1-yr
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1614
 *     else:
 *         xr = xr-1
 *     if yr > 1:             # <<<<<<<<<<<<<<
 *         yr = 1-yr
 *     else:
 */
    goto __pyx_L4;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1617
 *         yr = 1-yr
 *     else:
 *         yr = 1-yr             # <<<<<<<<<<<<<<
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1617, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1618
 *     else:
 *         yr = 1-yr
 *     return xr,yr             # <<<<<<<<<<<<<<
 * def _texture_cords_to_ratio(x,y,size):
 *     xr = x*(2/size[0])
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_xr);
  __Pyx_GIVEREF(__pyx_v_xr);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_xr);
  __Pyx_INCREF(__pyx_v_yr);
  __Pyx_GIVEREF(__pyx_v_yr);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_yr);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1607
 * 
 *     return _c1,_c2
 * def _cords_to_ratio(x,y,screenx,screeny):             # <<<<<<<<<<<<<<
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xr);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1619
 *         yr = 1-yr
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):             # <<<<<<<<<<<<<<
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_35_texture_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_35_texture_cords_to_ratio = {"_texture_cords_to_ratio", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_35_texture_cords_to_ratio, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_35_texture_cords_to_ratio(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_size = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_texture_cords_to_ratio (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_size,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_size,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1619, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1619, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 3, 3, 1); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1619, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 3, 3, 2); __PYX_ERR(0, 1619, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_texture_cords_to_ratio") < 0)) __PYX_ERR(0, 1619, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_size = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_texture_cords_to_ratio", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1619, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._texture_cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_34_texture_cords_to_ratio(__pyx_self, __pyx_v_x, __pyx_v_y, __pyx_v_size);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_34_texture_cords_to_ratio(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, PyObject *__pyx_v_size) {
  PyObject *__pyx_v_xr = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_texture_cords_to_ratio", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1620
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):
 *     xr = x*(2/size[0])             # <<<<<<<<<<<<<<
 *     yr = y*(2/size[1])
 *     if xr > 1:
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_size, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_x, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_xr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1621
 * def _texture_cords_to_ratio(x,y,size):
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])             # <<<<<<<<<<<<<<
 *     if xr > 1:
 *         xr = xr-1
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_size, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_int_2, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_v_y, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_yr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1622
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 *     if xr > 1:             # <<<<<<<<<<<<<<
 *         xr = xr-1
 *     else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_xr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1622, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1622, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1623
 *     yr = y*(2/size[1])
 *     if xr > 1:
 *         xr = xr-1             # <<<<<<<<<<<<<<
 *     else:
 *         xr = -(1-xr)
 */
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_v_xr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1622
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 *     if xr > 1:             # <<<<<<<<<<<<<<
 *         xr = xr-1
 *     else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1625
 *         xr = xr-1
 *     else:
 *         xr = -(1-xr)             # <<<<<<<<<<<<<<
 *     if yr > 1:
 *         yr = (1-yr)
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_xr, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyNumber_Negative(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1625, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_xr, __pyx_t_2);
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1626
 *     else:
 *         xr = -(1-xr)
 *     if yr > 1:             # <<<<<<<<<<<<<<
 *         yr = (1-yr)
 *     else:
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_yr, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1627
 *         xr = -(1-xr)
 *     if yr > 1:
 *         yr = (1-yr)             # <<<<<<<<<<<<<<
 *     else:
 *         yr = -(yr-1)
 */
    __pyx_t_2 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_yr, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1627, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1626
 *     else:
 *         xr = -(1-xr)
 *     if yr > 1:             # <<<<<<<<<<<<<<
 *         yr = (1-yr)
 *     else:
 */
    goto __pyx_L4;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1629
 *         yr = (1-yr)
 *     else:
 *         yr = -(yr-1)             # <<<<<<<<<<<<<<
 *     return xr,yr
 * 
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyInt_SubtractObjC(__pyx_v_yr, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1629, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyNumber_Negative(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1629, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_yr, __pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L4:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1630
 *     else:
 *         yr = -(yr-1)
 *     return xr,yr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_xr);
  __Pyx_GIVEREF(__pyx_v_xr);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_xr);
  __Pyx_INCREF(__pyx_v_yr);
  __Pyx_GIVEREF(__pyx_v_yr);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_yr);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1619
 *         yr = 1-yr
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):             # <<<<<<<<<<<<<<
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine._texture_cords_to_ratio", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xr);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1635
 * 
 * class DragoObject:
 *     def get_shader(self):             # <<<<<<<<<<<<<<
 *         return self.basicshader
 *     def __docs__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_1get_shader(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_1get_shader = {"get_shader", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_1get_shader, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_1get_shader(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_shader (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_get_shader(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_get_shader(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_shader", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1636
 * class DragoObject:
 *     def get_shader(self):
 *         return self.basicshader             # <<<<<<<<<<<<<<
 *     def __docs__(self):
 *         self.__doc__ = """
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1635
 * 
 * class DragoObject:
 *     def get_shader(self):             # <<<<<<<<<<<<<<
 *         return self.basicshader
 *     def __docs__(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_shader", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1637
 *     def get_shader(self):
 *         return self.basicshader
 *     def __docs__(self):             # <<<<<<<<<<<<<<
 *         self.__doc__ = """
 *         Uniform/Layout/Matrix manipulation
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_3__docs__(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_3__docs__ = {"__docs__", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_3__docs__, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_3__docs__(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__docs__ (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_2__docs__(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_2__docs__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__docs__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1638
 *         return self.basicshader
 *     def __docs__(self):
 *         self.__doc__ = """             # <<<<<<<<<<<<<<
 *         Uniform/Layout/Matrix manipulation
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_doc, __pyx_kp_s_Uniform_Layout_Matrix_manipulat) < 0) __PYX_ERR(0, 1638, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1637
 *     def get_shader(self):
 *         return self.basicshader
 *     def __docs__(self):             # <<<<<<<<<<<<<<
 *         self.__doc__ = """
 *         Uniform/Layout/Matrix manipulation
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.__docs__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1647
 * 
 * 
 *     def serialize_to_obj(self,unload=False,eventmanager=None):             # <<<<<<<<<<<<<<
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_5serialize_to_obj(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_4serialize_to_obj, " Serialize scene (current objects and eventss) ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_5serialize_to_obj = {"serialize_to_obj", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_5serialize_to_obj, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_4serialize_to_obj};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_5serialize_to_obj(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_unload = 0;
  CYTHON_UNUSED PyObject *__pyx_v_eventmanager = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("serialize_to_obj (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_unload,&__pyx_n_s_eventmanager,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_unload,&__pyx_n_s_eventmanager,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)((PyObject *)Py_False));
    values[2] = ((PyObject *)((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_unload);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_eventmanager);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1647, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "serialize_to_obj") < 0)) __PYX_ERR(0, 1647, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_unload = values[1];
    __pyx_v_eventmanager = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("serialize_to_obj", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1647, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.serialize_to_obj", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_4serialize_to_obj(__pyx_self, __pyx_v_self, __pyx_v_unload, __pyx_v_eventmanager);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_4serialize_to_obj(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_unload, CYTHON_UNUSED PyObject *__pyx_v_eventmanager) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("serialize_to_obj", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1649
 *     def serialize_to_obj(self,unload=False,eventmanager=None):
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True             # <<<<<<<<<<<<<<
 *         self.serialization_current_object  = 'Do something to create this object'
 *         return self.serialization_current_object
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_serialization, Py_True) < 0) __PYX_ERR(0, 1649, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1650
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True
 *         self.serialization_current_object  = 'Do something to create this object'             # <<<<<<<<<<<<<<
 *         return self.serialization_current_object
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_serialization_current_object, __pyx_kp_s_Do_something_to_create_this_obje) < 0) __PYX_ERR(0, 1650, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1651
 *         self.serialization = True
 *         self.serialization_current_object  = 'Do something to create this object'
 *         return self.serialization_current_object             # <<<<<<<<<<<<<<
 * 
 *     def _load_scene(self,serialized_obj=None,overlay=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_serialization_current_object); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1651, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1647
 * 
 * 
 *     def serialize_to_obj(self,unload=False,eventmanager=None):             # <<<<<<<<<<<<<<
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.serialize_to_obj", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1653
 *         return self.serialization_current_object
 * 
 *     def _load_scene(self,serialized_obj=None,overlay=False):             # <<<<<<<<<<<<<<
 *         ''' If overlay is false unload previous scene '''
 *         pass
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_7_load_scene(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_6_load_scene, " If overlay is false unload previous scene ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_7_load_scene = {"_load_scene", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_7_load_scene, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_6_load_scene};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_7_load_scene(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_serialized_obj = 0;
  CYTHON_UNUSED PyObject *__pyx_v_overlay = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_load_scene (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_serialized_obj,&__pyx_n_s_overlay,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_serialized_obj,&__pyx_n_s_overlay,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = ((PyObject *)((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1653, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_serialized_obj);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1653, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_overlay);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1653, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_load_scene") < 0)) __PYX_ERR(0, 1653, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_serialized_obj = values[1];
    __pyx_v_overlay = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_load_scene", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1653, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject._load_scene", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_6_load_scene(__pyx_self, __pyx_v_self, __pyx_v_serialized_obj, __pyx_v_overlay);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_6_load_scene(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_serialized_obj, CYTHON_UNUSED PyObject *__pyx_v_overlay) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_load_scene", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1657
 *         pass
 * 
 *     def _is_serialized(self):             # <<<<<<<<<<<<<<
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_9_is_serialized(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_9_is_serialized = {"_is_serialized", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_9_is_serialized, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_9_is_serialized(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_is_serialized (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_8_is_serialized(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_8_is_serialized(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_is_serialized", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1658
 * 
 *     def _is_serialized(self):
 *         return self.serialization             # <<<<<<<<<<<<<<
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 *         if TEXTUREID not in self.textures:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_serialization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1657
 *         pass
 * 
 *     def _is_serialized(self):             # <<<<<<<<<<<<<<
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject._is_serialized", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1659
 *     def _is_serialized(self):
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):             # <<<<<<<<<<<<<<
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_56__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_START);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_START);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_START);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_SIZE);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_SIZE);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_BOX_SIZE);
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_COLOR);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_COLOR);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self)->__pyx_arg_COLOR);
  __Pyx_INCREF(((PyObject *)__pyx_int_0));
  __Pyx_GIVEREF(((PyObject *)__pyx_int_0));
  PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)__pyx_int_0));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_11create_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_11create_quad = {"create_quad", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_11create_quad, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_11create_quad(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_BOX_START = 0;
  PyObject *__pyx_v_BOX_SIZE = 0;
  PyObject *__pyx_v_COLOR = 0;
  PyObject *__pyx_v_TEXTUREID = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_quad (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_BOX_START,&__pyx_n_s_BOX_SIZE,&__pyx_n_s_COLOR,&__pyx_n_s_TEXTUREID,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_BOX_START,&__pyx_n_s_BOX_SIZE,&__pyx_n_s_COLOR,&__pyx_n_s_TEXTUREID,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    __pyx_defaults10 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_self);
    values[1] = __pyx_dynamic_args->__pyx_arg_BOX_START;
    values[2] = __pyx_dynamic_args->__pyx_arg_BOX_SIZE;
    values[3] = __pyx_dynamic_args->__pyx_arg_COLOR;
    values[4] = ((PyObject *)((PyObject *)__pyx_int_0));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_BOX_START);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_BOX_SIZE);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_COLOR);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_TEXTUREID);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1659, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_quad") < 0)) __PYX_ERR(0, 1659, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_BOX_START = values[1];
    __pyx_v_BOX_SIZE = values[2];
    __pyx_v_COLOR = values[3];
    __pyx_v_TEXTUREID = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_quad", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1659, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.create_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_10create_quad(__pyx_self, __pyx_v_self, __pyx_v_BOX_START, __pyx_v_BOX_SIZE, __pyx_v_COLOR, __pyx_v_TEXTUREID);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_10create_quad(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_BOX_START, PyObject *__pyx_v_BOX_SIZE, PyObject *__pyx_v_COLOR, PyObject *__pyx_v_TEXTUREID) {
  PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_v_TXC = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_xr = NULL;
  PyObject *__pyx_v_yr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *(*__pyx_t_13)(PyObject *);
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_quad", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1660
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 *         if TEXTUREID not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 *         cords = [
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_TEXTUREID, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1660, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1661
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)             # <<<<<<<<<<<<<<
 *         cords = [
 *         [BOX_START[0],
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_glBindTextureUnit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1661, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_TEXTUREID, __pyx_v_TEXTUREID};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1660
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 *         if TEXTUREID not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 *         cords = [
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1663
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 *         cords = [
 *         [BOX_START[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_BOX_START, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1664
 *         cords = [
 *         [BOX_START[0],
 *         BOX_START[1]],             # <<<<<<<<<<<<<<
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]],
 */
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_BOX_START, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1663
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 *         cords = [
 *         [BOX_START[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 */
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1665
 *         [BOX_START[0],
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 */
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_BOX_START, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_BOX_SIZE, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = PyNumber_Add(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1666
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]],             # <<<<<<<<<<<<<<
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]+BOX_SIZE[1]],
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_BOX_START, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1666, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1665
 *         [BOX_START[0],
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 */
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __pyx_t_7 = 0;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1667
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]+BOX_SIZE[1]],
 *         [BOX_START[0],
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_BOX_START, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_BOX_SIZE, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyNumber_Add(__pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1668
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]+BOX_SIZE[1]],             # <<<<<<<<<<<<<<
 *         [BOX_START[0],
 *         BOX_START[1]+BOX_SIZE[1]]
 */
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_BOX_START, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_BOX_SIZE, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = PyNumber_Add(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1667
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]],
 *         [BOX_START[0]+BOX_SIZE[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]+BOX_SIZE[1]],
 *         [BOX_START[0],
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_8);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_9);
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1669
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]+BOX_SIZE[1]],
 *         [BOX_START[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]+BOX_SIZE[1]]
 *         ,]
 */
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_BOX_START, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1670
 *         BOX_START[1]+BOX_SIZE[1]],
 *         [BOX_START[0],
 *         BOX_START[1]+BOX_SIZE[1]]             # <<<<<<<<<<<<<<
 *         ,]
 *         TXC = [[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]]
 */
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_BOX_START, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_BOX_SIZE, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_10 = PyNumber_Add(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1669
 *         [BOX_START[0]+BOX_SIZE[0],
 *         BOX_START[1]+BOX_SIZE[1]],
 *         [BOX_START[0],             # <<<<<<<<<<<<<<
 *         BOX_START[1]+BOX_SIZE[1]]
 *         ,]
 */
  __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_10);
  PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_10);
  __pyx_t_9 = 0;
  __pyx_t_10 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1662
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 *         cords = [             # <<<<<<<<<<<<<<
 *         [BOX_START[0],
 *         BOX_START[1]],
 */
  __pyx_t_10 = PyList_New(4); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_10, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_10, 3, __pyx_t_7);
  __pyx_t_5 = 0;
  __pyx_t_4 = 0;
  __pyx_t_1 = 0;
  __pyx_t_7 = 0;
  __pyx_v_cords = ((PyObject*)__pyx_t_10);
  __pyx_t_10 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1672
 *         BOX_START[1]+BOX_SIZE[1]]
 *         ,]
 *         TXC = [[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]]             # <<<<<<<<<<<<<<
 *         c=0
 *         for i in cords:
 */
  __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_INCREF(__pyx_float_0_0);
  __Pyx_GIVEREF(__pyx_float_0_0);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_float_0_0);
  __Pyx_INCREF(__pyx_float_0_0);
  __Pyx_GIVEREF(__pyx_float_0_0);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_float_0_0);
  __pyx_t_7 = PyList_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_INCREF(__pyx_float_1_0);
  __Pyx_GIVEREF(__pyx_float_1_0);
  PyList_SET_ITEM(__pyx_t_7, 0, __pyx_float_1_0);
  __Pyx_INCREF(__pyx_float_0_0);
  __Pyx_GIVEREF(__pyx_float_0_0);
  PyList_SET_ITEM(__pyx_t_7, 1, __pyx_float_0_0);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_float_1_0);
  __Pyx_GIVEREF(__pyx_float_1_0);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_float_1_0);
  __Pyx_INCREF(__pyx_float_1_0);
  __Pyx_GIVEREF(__pyx_float_1_0);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_float_1_0);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_float_0_0);
  __Pyx_GIVEREF(__pyx_float_0_0);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_float_0_0);
  __Pyx_INCREF(__pyx_float_1_0);
  __Pyx_GIVEREF(__pyx_float_1_0);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_float_1_0);
  __pyx_t_5 = PyList_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_10);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __pyx_t_10 = 0;
  __pyx_t_7 = 0;
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_v_TXC = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1673
 *         ,]
 *         TXC = [[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]]
 *         c=0             # <<<<<<<<<<<<<<
 *         for i in cords:
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_c = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1674
 *         TXC = [[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]]
 *         c=0
 *         for i in cords:             # <<<<<<<<<<<<<<
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)
 *             self.vertices.append(xr)
 */
  __pyx_t_5 = __pyx_v_cords; __Pyx_INCREF(__pyx_t_5); __pyx_t_11 = 0;
  for (;;) {
    if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_5)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_11); __Pyx_INCREF(__pyx_t_4); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1674, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1675
 *         c=0
 *         for i in cords:
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)             # <<<<<<<<<<<<<<
 *             self.vertices.append(xr)
 *             self.vertices.append(yr)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_i, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_i, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1675, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_12 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_12, __pyx_t_7, __pyx_t_10, __pyx_t_9, __pyx_t_8};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1675, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_9 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_13 = Py_TYPE(__pyx_t_9)->tp_iternext;
      index = 0; __pyx_t_1 = __pyx_t_13(__pyx_t_9); if (unlikely(!__pyx_t_1)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      index = 1; __pyx_t_8 = __pyx_t_13(__pyx_t_9); if (unlikely(!__pyx_t_8)) goto __pyx_L6_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_8);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_13(__pyx_t_9), 2) < 0) __PYX_ERR(0, 1675, __pyx_L1_error)
      __pyx_t_13 = NULL;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L7_unpacking_done;
      __pyx_L6_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_13 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1675, __pyx_L1_error)
      __pyx_L7_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_xr, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_yr, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1676
 *         for i in cords:
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)
 *             self.vertices.append(xr)             # <<<<<<<<<<<<<<
 *             self.vertices.append(yr)
 *             self.vertices.append(0)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1676, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_xr); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1676, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1677
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)
 *             self.vertices.append(xr)
 *             self.vertices.append(yr)             # <<<<<<<<<<<<<<
 *             self.vertices.append(0)
 *             self.vertices.extend(COLOR)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1677, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_yr); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1677, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1678
 *             self.vertices.append(xr)
 *             self.vertices.append(yr)
 *             self.vertices.append(0)             # <<<<<<<<<<<<<<
 *             self.vertices.extend(COLOR)
 *             self.vertices.append(TEXTUREID)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1678, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_int_0); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1678, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1679
 *             self.vertices.append(yr)
 *             self.vertices.append(0)
 *             self.vertices.extend(COLOR)             # <<<<<<<<<<<<<<
 *             self.vertices.append(TEXTUREID)
 *             if c == 4:
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_extend); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_v_COLOR};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1679, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1680
 *             self.vertices.append(0)
 *             self.vertices.extend(COLOR)
 *             self.vertices.append(TEXTUREID)             # <<<<<<<<<<<<<<
 *             if c == 4:
 *                 c=0
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1680, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_TEXTUREID); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1680, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1681
 *             self.vertices.extend(COLOR)
 *             self.vertices.append(TEXTUREID)
 *             if c == 4:             # <<<<<<<<<<<<<<
 *                 c=0
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])
 */
    __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_v_c, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1681, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1681, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_3) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1682
 *             self.vertices.append(TEXTUREID)
 *             if c == 4:
 *                 c=0             # <<<<<<<<<<<<<<
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])
 *             c+=1
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_DECREF_SET(__pyx_v_c, __pyx_int_0);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1681
 *             self.vertices.extend(COLOR)
 *             self.vertices.append(TEXTUREID)
 *             if c == 4:             # <<<<<<<<<<<<<<
 *                 c=0
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1683
 *             if c == 4:
 *                 c=0
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])             # <<<<<<<<<<<<<<
 *             c+=1
 *         self.object_count += 1
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_extend); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_TXC, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_TXC, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1683, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_9);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_10);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_10);
    __pyx_t_9 = 0;
    __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_t_1};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1683, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1684
 *                 c=0
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])
 *             c+=1             # <<<<<<<<<<<<<<
 *         self.object_count += 1
 *         self.object_indexes.append(self.object_count-1)
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_c, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1684, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF_SET(__pyx_v_c, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1674
 *         TXC = [[0.0,0.0],[1.0,0.0],[1.0,1.0],[0.0,1.0]]
 *         c=0
 *         for i in cords:             # <<<<<<<<<<<<<<
 *             (xr,yr) = _cords_to_ratio(i[0],i[1],self.sx,self.sy)
 *             self.vertices.append(xr)
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1685
 *             self.vertices.extend([TXC[c][0],TXC[c][1]])
 *             c+=1
 *         self.object_count += 1             # <<<<<<<<<<<<<<
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_count, __pyx_t_4) < 0) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1686
 *             c+=1
 *         self.object_count += 1
 *         self.object_indexes.append(self.object_count-1)             # <<<<<<<<<<<<<<
 *         self.vns = len(self.vertices)
 *         self.textured = True
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_t_8); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1686, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1687
 *         self.object_count += 1
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         self.textures.append(TEXTUREID)
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_11 = PyObject_Length(__pyx_t_8); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyInt_FromSsize_t(__pyx_t_11); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vns, __pyx_t_8) < 0) __PYX_ERR(0, 1687, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1688
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)
 *         self.textured = True             # <<<<<<<<<<<<<<
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_textured, Py_True) < 0) __PYX_ERR(0, 1688, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1689
 *         self.vns = len(self.vertices)
 *         self.textured = True
 *         self.textures.append(TEXTUREID)             # <<<<<<<<<<<<<<
 *         return self.object_count-1
 *     def get_objectindexes(self):
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_v_TEXTUREID); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 1689, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1690
 *         self.textured = True
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1             # <<<<<<<<<<<<<<
 *     def get_objectindexes(self):
 *         return self.object_indexes
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1659
 *     def _is_serialized(self):
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):             # <<<<<<<<<<<<<<
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.create_quad", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XDECREF(__pyx_v_TXC);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_xr);
  __Pyx_XDECREF(__pyx_v_yr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1691
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1
 *     def get_objectindexes(self):             # <<<<<<<<<<<<<<
 *         return self.object_indexes
 *     def move(self,x,y,object):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_13get_objectindexes(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_13get_objectindexes = {"get_objectindexes", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_13get_objectindexes, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_13get_objectindexes(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_objectindexes (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_12get_objectindexes(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_12get_objectindexes(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_objectindexes", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1692
 *         return self.object_count-1
 *     def get_objectindexes(self):
 *         return self.object_indexes             # <<<<<<<<<<<<<<
 *     def move(self,x,y,object):
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1691
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1
 *     def get_objectindexes(self):             # <<<<<<<<<<<<<<
 *         return self.object_indexes
 *     def move(self,x,y,object):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_objectindexes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1693
 *     def get_objectindexes(self):
 *         return self.object_indexes
 *     def move(self,x,y,object):             # <<<<<<<<<<<<<<
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_15move(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_15move = {"move", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_15move, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_15move(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  CYTHON_UNUSED PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_object,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1693, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1693, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 4, 4, 1); __PYX_ERR(0, 1693, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_y)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1693, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 4, 4, 2); __PYX_ERR(0, 1693, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1693, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("move", 1, 4, 4, 3); __PYX_ERR(0, 1693, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "move") < 0)) __PYX_ERR(0, 1693, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_x = values[1];
    __pyx_v_y = values[2];
    __pyx_v_object = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1693, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_14move(__pyx_self, __pyx_v_self, __pyx_v_x, __pyx_v_y, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_14move(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_x, PyObject *__pyx_v_y, CYTHON_UNUSED PyObject *__pyx_v_object) {
  CYTHON_UNUSED PyObject *__pyx_v_cords = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1694
 *         return self.object_indexes
 *     def move(self,x,y,object):
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)             # <<<<<<<<<<<<<<
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_5, __pyx_v_x, __pyx_v_y, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1694, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_cords = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1693
 *     def get_objectindexes(self):
 *         return self.object_indexes
 *     def move(self,x,y,object):             # <<<<<<<<<<<<<<
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cords);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1696
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         self.textures.append(txtid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_17use_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_17use_texture = {"use_texture", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_17use_texture, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_17use_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_txtid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("use_texture (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_txtid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_txtid,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1696, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_txtid)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1696, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("use_texture", 1, 2, 2, 1); __PYX_ERR(0, 1696, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "use_texture") < 0)) __PYX_ERR(0, 1696, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_txtid = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("use_texture", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1696, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.use_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_16use_texture(__pyx_self, __pyx_v_self, __pyx_v_txtid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_16use_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_txtid) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("use_texture", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1697
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):
 *         self.textured = True             # <<<<<<<<<<<<<<
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_textured, Py_True) < 0) __PYX_ERR(0, 1697, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1698
 *     def use_texture(self,txtid):
 *         self.textured = True
 *         self.textures.append(txtid)             # <<<<<<<<<<<<<<
 *     def create_letter(self,cords,font,letter,color,texid):
 *         if texid not in self.textures:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_v_txtid); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 1698, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1696
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         self.textures.append(txtid)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.use_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1699
 *         self.textured = True
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):             # <<<<<<<<<<<<<<
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_19create_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_19create_letter = {"create_letter", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_19create_letter, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_19create_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_cords = 0;
  PyObject *__pyx_v_font = 0;
  PyObject *__pyx_v_letter = 0;
  PyObject *__pyx_v_color = 0;
  PyObject *__pyx_v_texid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("create_letter (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_font,&__pyx_n_s_letter,&__pyx_n_s_color,&__pyx_n_s_texid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_cords,&__pyx_n_s_font,&__pyx_n_s_letter,&__pyx_n_s_color,&__pyx_n_s_texid,0};
    #endif
    PyObject* values[6] = {0,0,0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cords)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, 1); __PYX_ERR(0, 1699, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, 2); __PYX_ERR(0, 1699, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_letter)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, 3); __PYX_ERR(0, 1699, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_color)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, 4); __PYX_ERR(0, 1699, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texid)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1699, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, 5); __PYX_ERR(0, 1699, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "create_letter") < 0)) __PYX_ERR(0, 1699, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 6)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
      values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
    }
    __pyx_v_self = values[0];
    __pyx_v_cords = values[1];
    __pyx_v_font = values[2];
    __pyx_v_letter = values[3];
    __pyx_v_color = values[4];
    __pyx_v_texid = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_letter", 1, 6, 6, __pyx_nargs); __PYX_ERR(0, 1699, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.create_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_18create_letter(__pyx_self, __pyx_v_self, __pyx_v_cords, __pyx_v_font, __pyx_v_letter, __pyx_v_color, __pyx_v_texid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_18create_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_cords, PyObject *__pyx_v_font, PyObject *__pyx_v_letter, PyObject *__pyx_v_color, PyObject *__pyx_v_texid) {
  PyObject *__pyx_v_ct = NULL;
  PyObject *__pyx_v_width = NULL;
  PyObject *__pyx_v_height = NULL;
  PyObject *__pyx_v_t1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c1 = NULL;
  PyObject *__pyx_v_t2 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c2 = NULL;
  PyObject *__pyx_v_t3 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c3 = NULL;
  PyObject *__pyx_v_t4 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c4 = NULL;
  PyObject *__pyx_v_tr1 = NULL;
  PyObject *__pyx_v_tr2 = NULL;
  double __pyx_v_z;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  long __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("create_letter", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1700
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):
 *         if texid not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindTextureUnit(texid, texid)
 *         ct = int(ord(letter))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_texid, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1701
 *     def create_letter(self,cords,font,letter,color,texid):
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         width, height= (font[ct][4],font[ct][5])
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_glBindTextureUnit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1701, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_texid, __pyx_v_texid};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1701, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1700
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):
 *         if texid not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindTextureUnit(texid, texid)
 *         ct = int(ord(letter))
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1702
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)
 *         ct = int(ord(letter))             # <<<<<<<<<<<<<<
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */
  __pyx_t_7 = __Pyx_PyObject_Ord(__pyx_v_letter); if (unlikely(__pyx_t_7 == ((long)(long)(Py_UCS4)-1))) __PYX_ERR(0, 1702, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyInt_Type)), __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ct = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1703
 *             glBindTextureUnit(texid, texid)
 *         ct = int(ord(letter))
 *         width, height= (font[ct][4],font[ct][5])             # <<<<<<<<<<<<<<
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 */
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_4, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_width = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_height = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1704
 *         ct = int(ord(letter))
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]             # <<<<<<<<<<<<<<
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 */
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_t1 = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_c1 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1705
 *         width, height= (font[ct][4],font[ct][5])
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]             # <<<<<<<<<<<<<<
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 */
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_t2 = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_c2 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1706
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]             # <<<<<<<<<<<<<<
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_t3 = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_c3 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1707
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]             # <<<<<<<<<<<<<<
 * 
 *         tr1 = _cords_to_ratio(cords[0],cords[1]-height,self.sx,self.sy)
 */
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_t4 = __pyx_t_5;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_5, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_c4 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1709
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 * 
 *         tr1 = _cords_to_ratio(cords[0],cords[1]-height,self.sx,self.sy)             # <<<<<<<<<<<<<<
 *         tr2 = _cords_to_ratio(cords[2]+width,cords[3],self.sx,self.sy)
 *         z = 0.1
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_cords, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_cords, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyNumber_Subtract(__pyx_t_8, __pyx_v_height); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_11, __pyx_t_4, __pyx_t_9, __pyx_t_8, __pyx_t_10};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1709, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_tr1 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1710
 * 
 *         tr1 = _cords_to_ratio(cords[0],cords[1]-height,self.sx,self.sy)
 *         tr2 = _cords_to_ratio(cords[2]+width,cords[3],self.sx,self.sy)             # <<<<<<<<<<<<<<
 *         z = 0.1
 *         self.vertices.append(tr1[0])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_cords, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_8 = PyNumber_Add(__pyx_t_10, __pyx_v_width); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_cords, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_11 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_11, __pyx_t_8, __pyx_t_10, __pyx_t_9, __pyx_t_4};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_tr2 = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1711
 *         tr1 = _cords_to_ratio(cords[0],cords[1]-height,self.sx,self.sy)
 *         tr2 = _cords_to_ratio(cords[2]+width,cords[3],self.sx,self.sy)
 *         z = 0.1             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr1[0])
 *         self.vertices.append(tr2[1])
 */
  __pyx_v_z = 0.1;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1712
 *         tr2 = _cords_to_ratio(cords[2]+width,cords[3],self.sx,self.sy)
 *         z = 0.1
 *         self.vertices.append(tr1[0])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1712, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1713
 *         z = 0.1
 *         self.vertices.append(tr1[0])
 *         self.vertices.append(tr2[1])             # <<<<<<<<<<<<<<
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1713, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1714
 *         self.vertices.append(tr1[0])
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)             # <<<<<<<<<<<<<<
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1714, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1715
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)
 *         self.vertices.extend(color)             # <<<<<<<<<<<<<<
 *         self.vertices.append(texid)
 *         self.vertices.extend([t1[0], t1[1]])
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_extend); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_v_color};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1716
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)             # <<<<<<<<<<<<<<
 *         self.vertices.extend([t1[0], t1[1]])
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1716, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_v_texid); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1716, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1717
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 *         self.vertices.extend([t1[0], t1[1]])             # <<<<<<<<<<<<<<
 * 
 *         self.vertices.append(tr1[0])
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_extend); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_t1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_t1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_9);
  __pyx_t_4 = 0;
  __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_10};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1717, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1719
 *         self.vertices.extend([t1[0], t1[1]])
 * 
 *         self.vertices.append(tr1[0])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_tr1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1719, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1719, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1720
 * 
 *         self.vertices.append(tr1[0])
 *         self.vertices.append(tr1[1])             # <<<<<<<<<<<<<<
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1720, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1721
 *         self.vertices.append(tr1[0])
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)             # <<<<<<<<<<<<<<
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1721, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1722
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)
 *         self.vertices.extend(color)             # <<<<<<<<<<<<<<
 *         self.vertices.append(texid)
 *         self.vertices.extend([t2[0], t2[1]])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_extend); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_color};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1723
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)             # <<<<<<<<<<<<<<
 *         self.vertices.extend([t2[0], t2[1]])
 *         self.vertices.append(tr2[0])
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_v_texid); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1723, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1724
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 *         self.vertices.extend([t2[0], t2[1]])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr1[1])
 */
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_extend); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_t2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_t2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_10);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_9);
  __pyx_t_10 = 0;
  __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_4};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1724, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1725
 *         self.vertices.append(texid)
 *         self.vertices.extend([t2[0], t2[1]])
 *         self.vertices.append(tr2[0])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1725, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1725, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1725, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1726
 *         self.vertices.extend([t2[0], t2[1]])
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr1[1])             # <<<<<<<<<<<<<<
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1726, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_tr1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1726, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1726, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1727
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)             # <<<<<<<<<<<<<<
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1727, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1728
 *         self.vertices.append(tr1[1])
 *         self.vertices.append(z)
 *         self.vertices.extend(color)             # <<<<<<<<<<<<<<
 *         self.vertices.append(texid)
 *         self.vertices.extend([t3[0], t3[1]])
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_extend); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_v_color};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1728, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1729
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)             # <<<<<<<<<<<<<<
 *         self.vertices.extend([t3[0], t3[1]])
 *         self.vertices.append(tr2[0])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_v_texid); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1729, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1730
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 *         self.vertices.extend([t3[0], t3[1]])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr2[1])
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_extend); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_t3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_t3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = PyList_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_9);
  __pyx_t_4 = 0;
  __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_10};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1730, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1731
 *         self.vertices.append(texid)
 *         self.vertices.extend([t3[0], t3[1]])
 *         self.vertices.append(tr2[0])             # <<<<<<<<<<<<<<
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1731, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_tr2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1731, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1731, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1732
 *         self.vertices.extend([t3[0], t3[1]])
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr2[1])             # <<<<<<<<<<<<<<
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_tr2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_1); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1733
 *         self.vertices.append(tr2[0])
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)             # <<<<<<<<<<<<<<
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_5); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1733, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1734
 *         self.vertices.append(tr2[1])
 *         self.vertices.append(z)
 *         self.vertices.extend(color)             # <<<<<<<<<<<<<<
 *         self.vertices.append(texid)
 *         self.vertices.extend([t4[0], t4[1]])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1734, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_extend); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1734, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_color};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1734, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1735
 *         self.vertices.append(z)
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)             # <<<<<<<<<<<<<<
 *         self.vertices.extend([t4[0], t4[1]])
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_v_texid); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1735, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1736
 *         self.vertices.extend(color)
 *         self.vertices.append(texid)
 *         self.vertices.extend([t4[0], t4[1]])             # <<<<<<<<<<<<<<
 * 
 *         self.object_count+=1
 */
  __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_extend); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_t4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_t4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1736, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_10);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_9);
  __pyx_t_10 = 0;
  __pyx_t_9 = 0;
  __pyx_t_9 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_t_4};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1736, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1738
 *         self.vertices.extend([t4[0], t4[1]])
 * 
 *         self.object_count+=1             # <<<<<<<<<<<<<<
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_5, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_count, __pyx_t_1) < 0) __PYX_ERR(0, 1738, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1739
 * 
 *         self.object_count+=1
 *         self.object_indexes.append(self.object_count-1)             # <<<<<<<<<<<<<<
 *         self.vns = len(self.vertices)
 *         self.textured = True
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyInt_SubtractObjC(__pyx_t_5, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1739, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1740
 *         self.object_count+=1
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         if texid not in self.textures:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_13 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_13 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_13); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vns, __pyx_t_4) < 0) __PYX_ERR(0, 1740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1741
 *         self.object_indexes.append(self.object_count-1)
 *         self.vns = len(self.vertices)
 *         self.textured = True             # <<<<<<<<<<<<<<
 *         if texid not in self.textures:
 *             self.textures.append(texid)
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_textured, Py_True) < 0) __PYX_ERR(0, 1741, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1742
 *         self.vns = len(self.vertices)
 *         self.textured = True
 *         if texid not in self.textures:             # <<<<<<<<<<<<<<
 *             self.textures.append(texid)
 *         return self.object_count-1
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_v_texid, __pyx_t_4, Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1743
 *         self.textured = True
 *         if texid not in self.textures:
 *             self.textures.append(texid)             # <<<<<<<<<<<<<<
 *         return self.object_count-1
 *     def draw_text(self):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_texid); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1742
 *         self.vns = len(self.vertices)
 *         self.textured = True
 *         if texid not in self.textures:             # <<<<<<<<<<<<<<
 *             self.textures.append(texid)
 *         return self.object_count-1
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1744
 *         if texid not in self.textures:
 *             self.textures.append(texid)
 *         return self.object_count-1             # <<<<<<<<<<<<<<
 *     def draw_text(self):
 *         pass
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1699
 *         self.textured = True
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):             # <<<<<<<<<<<<<<
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.create_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ct);
  __Pyx_XDECREF(__pyx_v_width);
  __Pyx_XDECREF(__pyx_v_height);
  __Pyx_XDECREF(__pyx_v_t1);
  __Pyx_XDECREF(__pyx_v_c1);
  __Pyx_XDECREF(__pyx_v_t2);
  __Pyx_XDECREF(__pyx_v_c2);
  __Pyx_XDECREF(__pyx_v_t3);
  __Pyx_XDECREF(__pyx_v_c3);
  __Pyx_XDECREF(__pyx_v_t4);
  __Pyx_XDECREF(__pyx_v_c4);
  __Pyx_XDECREF(__pyx_v_tr1);
  __Pyx_XDECREF(__pyx_v_tr2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1745
 *             self.textures.append(texid)
 *         return self.object_count-1
 *     def draw_text(self):             # <<<<<<<<<<<<<<
 *         pass
 *     def move_up(self,object):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_21draw_text(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_21draw_text = {"draw_text", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_21draw_text, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_21draw_text(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_text (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_20draw_text(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_20draw_text(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw_text", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1747
 *     def draw_text(self):
 *         pass
 *     def move_up(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_23move_up(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_22move_up, " Move Object To front - Finally working ;-;");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_23move_up = {"move_up", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_23move_up, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_22move_up};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_23move_up(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_up (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1747, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("move_up", 1, 2, 2, 1); __PYX_ERR(0, 1747, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "move_up") < 0)) __PYX_ERR(0, 1747, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_up", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1747, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move_up", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_22move_up(__pyx_self, __pyx_v_self, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_22move_up(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object) {
  PyObject *__pyx_v_real_value = NULL;
  PyObject *__pyx_v_real_index = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_idx = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_sav_vert = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  long __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_up", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1749
 *     def move_up(self,object):
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]             # <<<<<<<<<<<<<<
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(real_value,len(self.object_indexes)):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_real_value = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1750
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)             # <<<<<<<<<<<<<<
 *         for i in range(real_value,len(self.object_indexes)):
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_real_value};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1750, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_real_index = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1751
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(real_value,len(self.object_indexes)):             # <<<<<<<<<<<<<<
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = len(self.object_indexes)-1
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_real_value);
  __Pyx_GIVEREF(__pyx_v_real_value);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_real_value);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1751, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1751, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1751, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1751, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1751, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1751, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1751, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_6(__pyx_t_3);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1751, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1752
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(real_value,len(self.object_indexes)):
 *             self.object_indexes[self.object_indexes.index(i)] -=1             # <<<<<<<<<<<<<<
 *         self.object_indexes[real_index] = len(self.object_indexes)-1
 *         x=0
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_i};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1752, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_t_1, __pyx_t_7) < 0)) __PYX_ERR(0, 1752, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1751
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(real_value,len(self.object_indexes)):             # <<<<<<<<<<<<<<
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = len(self.object_indexes)-1
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1753
 *         for i in range(real_value,len(self.object_indexes)):
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = len(self.object_indexes)-1             # <<<<<<<<<<<<<<
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1753, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t((__pyx_t_5 - 1)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_v_real_index, __pyx_t_3) < 0)) __PYX_ERR(0, 1753, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1754
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = len(self.object_indexes)-1
 *         x=0             # <<<<<<<<<<<<<<
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_x = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1755
 *         self.object_indexes[real_index] = len(self.object_indexes)-1
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))             # <<<<<<<<<<<<<<
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):
 */
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_v_real_value, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_3, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_idx = __pyx_t_3;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_nd = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1756
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]             # <<<<<<<<<<<<<<
 *         for i in range(0,40):
 *             self.vertices.pop(idx)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_idx, __pyx_int_40, 40, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_t_3, 0, 0, &__pyx_v_idx, &__pyx_t_2, NULL, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_sav_vert = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1757
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):             # <<<<<<<<<<<<<<
 *             self.vertices.pop(idx)
 *         self.vertices.extend(sav_vert)
 */
  for (__pyx_t_9 = 0; __pyx_t_9 < 40; __pyx_t_9+=1) {
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1757, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1758
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):
 *             self.vertices.pop(idx)             # <<<<<<<<<<<<<<
 *         self.vertices.extend(sav_vert)
 *         x+=1
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_pop); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_idx};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1758, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1759
 *         for i in range(0,40):
 *             self.vertices.pop(idx)
 *         self.vertices.extend(sav_vert)             # <<<<<<<<<<<<<<
 *         x+=1
 *         return object
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_extend); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1759, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_sav_vert};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1760
 *             self.vertices.pop(idx)
 *         self.vertices.extend(sav_vert)
 *         x+=1             # <<<<<<<<<<<<<<
 *         return object
 *     def move_down(self,object):
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1761
 *         self.vertices.extend(sav_vert)
 *         x+=1
 *         return object             # <<<<<<<<<<<<<<
 *     def move_down(self,object):
 *         ''' Move Object To Back - Finally working ;-;'''
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_object);
  __pyx_r = __pyx_v_object;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1747
 *     def draw_text(self):
 *         pass
 *     def move_up(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move_up", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_real_value);
  __Pyx_XDECREF(__pyx_v_real_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_sav_vert);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1762
 *         x+=1
 *         return object
 *     def move_down(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_25move_down(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_24move_down, " Move Object To Back - Finally working ;-;");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_25move_down = {"move_down", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_25move_down, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_24move_down};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_25move_down(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("move_down (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1762, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("move_down", 1, 2, 2, 1); __PYX_ERR(0, 1762, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "move_down") < 0)) __PYX_ERR(0, 1762, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("move_down", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1762, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move_down", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_24move_down(__pyx_self, __pyx_v_self, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_24move_down(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object) {
  PyObject *__pyx_v_real_value = NULL;
  PyObject *__pyx_v_real_index = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_idx = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_sav_vert = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  long __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("move_down", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1764
 *     def move_down(self,object):
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]             # <<<<<<<<<<<<<<
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(0,real_index):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_real_value = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1765
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)             # <<<<<<<<<<<<<<
 *         for i in range(0,real_index):
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_real_value};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1765, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_real_index = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1766
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(0,real_index):             # <<<<<<<<<<<<<<
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = 0
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_v_real_index);
  __Pyx_GIVEREF(__pyx_v_real_index);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_real_index);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1766, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1766, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1766, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1766, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_3); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 1766, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1766, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_6(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1766, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1767
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(0,real_index):
 *             self.object_indexes[self.object_indexes.index(i)] -=1             # <<<<<<<<<<<<<<
 *         self.object_indexes[real_index] = 0
 *         x=0
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_index); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_i};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __pyx_t_8 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_8, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_3, __pyx_t_1, __pyx_t_7) < 0)) __PYX_ERR(0, 1767, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1766
 *         real_value = self.object_indexes[object]
 *         real_index = self.object_indexes.index(real_value)
 *         for i in range(0,real_index):             # <<<<<<<<<<<<<<
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = 0
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1768
 *         for i in range(0,real_index):
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = 0             # <<<<<<<<<<<<<<
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(PyObject_SetItem(__pyx_t_2, __pyx_v_real_index, __pyx_int_0) < 0)) __PYX_ERR(0, 1768, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1769
 *             self.object_indexes[self.object_indexes.index(i)] -=1
 *         self.object_indexes[real_index] = 0
 *         x=0             # <<<<<<<<<<<<<<
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_x = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1770
 *         self.object_indexes[real_index] = 0
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))             # <<<<<<<<<<<<<<
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):
 */
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_v_real_value, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1770, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1770, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_3, 0, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1770, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_idx = __pyx_t_2;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_nd = __pyx_t_2;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1771
 *         x=0
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]             # <<<<<<<<<<<<<<
 *         for i in range(0,40):
 *             self.vertices.pop(idx)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_idx, __pyx_int_40, 40, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_t_2, 0, 0, &__pyx_v_idx, &__pyx_t_3, NULL, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_sav_vert = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1772
 *         idx = nd = (0+((real_value*4)*10))
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):             # <<<<<<<<<<<<<<
 *             self.vertices.pop(idx)
 *         self.vertices.insert(0,sav_vert)
 */
  for (__pyx_t_9 = 0; __pyx_t_9 < 40; __pyx_t_9+=1) {
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1772, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1773
 *         sav_vert = self.vertices[idx:idx+40]
 *         for i in range(0,40):
 *             self.vertices.pop(idx)             # <<<<<<<<<<<<<<
 *         self.vertices.insert(0,sav_vert)
 *         x+=1
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1773, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_pop); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1773, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_idx};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1773, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1774
 *         for i in range(0,40):
 *             self.vertices.pop(idx)
 *         self.vertices.insert(0,sav_vert)             # <<<<<<<<<<<<<<
 *         x+=1
 *         return object
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_insert); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_int_0, __pyx_v_sav_vert};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1774, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1775
 *             self.vertices.pop(idx)
 *         self.vertices.insert(0,sav_vert)
 *         x+=1             # <<<<<<<<<<<<<<
 *         return object
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_x, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_x, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1776
 *         self.vertices.insert(0,sav_vert)
 *         x+=1
 *         return object             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_object);
  __pyx_r = __pyx_v_object;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1762
 *         x+=1
 *         return object
 *     def move_down(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.move_down", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_real_value);
  __Pyx_XDECREF(__pyx_v_real_index);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_sav_vert);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1780
 * 
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_27get_vertices(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_27get_vertices = {"get_vertices", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_27get_vertices, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_27get_vertices(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_vertices (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_26get_vertices(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_26get_vertices(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_vertices", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1781
 * 
 *     def get_vertices(self):
 *         return self.vertices             # <<<<<<<<<<<<<<
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 *         if alpha:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1780
 * 
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_vertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1782
 *     def get_vertices(self):
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):             # <<<<<<<<<<<<<<
 *         if alpha:
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_29add_textureupdate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_29add_textureupdate = {"add_textureupdate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_29add_textureupdate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_29add_textureupdate(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_Texture_unit = 0;
  PyObject *__pyx_v_Imagenumpy = 0;
  PyObject *__pyx_v_width = 0;
  PyObject *__pyx_v_height = 0;
  PyObject *__pyx_v_texture_data = 0;
  PyObject *__pyx_v_alpha = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_textureupdate (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_Texture_unit,&__pyx_n_s_Imagenumpy,&__pyx_n_s_width,&__pyx_n_s_height,&__pyx_n_s_texture_data,&__pyx_n_s_alpha,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_Texture_unit,&__pyx_n_s_Imagenumpy,&__pyx_n_s_width,&__pyx_n_s_height,&__pyx_n_s_texture_data,&__pyx_n_s_alpha,0};
    #endif
    PyObject* values[7] = {0,0,0,0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  7: values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Texture_unit)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 1); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Imagenumpy)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 2); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_width)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 3); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_height)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 4); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_texture_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 5); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_alpha)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1782, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, 6); __PYX_ERR(0, 1782, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "add_textureupdate") < 0)) __PYX_ERR(0, 1782, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 7)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
      values[5] = __Pyx_Arg_FASTCALL(__pyx_args, 5);
      values[6] = __Pyx_Arg_FASTCALL(__pyx_args, 6);
    }
    __pyx_v_self = values[0];
    __pyx_v_Texture_unit = values[1];
    __pyx_v_Imagenumpy = values[2];
    __pyx_v_width = values[3];
    __pyx_v_height = values[4];
    __pyx_v_texture_data = values[5];
    __pyx_v_alpha = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("add_textureupdate", 1, 7, 7, __pyx_nargs); __PYX_ERR(0, 1782, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.add_textureupdate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_28add_textureupdate(__pyx_self, __pyx_v_self, __pyx_v_Texture_unit, __pyx_v_Imagenumpy, __pyx_v_width, __pyx_v_height, __pyx_v_texture_data, __pyx_v_alpha);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_28add_textureupdate(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_Texture_unit, PyObject *__pyx_v_Imagenumpy, PyObject *__pyx_v_width, PyObject *__pyx_v_height, PyObject *__pyx_v_texture_data, PyObject *__pyx_v_alpha) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_textureupdate", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1783
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 *         if alpha:             # <<<<<<<<<<<<<<
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_alpha); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 1783, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1784
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 *         if alpha:
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])             # <<<<<<<<<<<<<<
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyList_New(6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_n_s_tua);
    __Pyx_GIVEREF(__pyx_n_s_tua);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_tua);
    __Pyx_INCREF(__pyx_v_Texture_unit);
    __Pyx_GIVEREF(__pyx_v_Texture_unit);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_v_Texture_unit);
    __Pyx_INCREF(__pyx_v_Imagenumpy);
    __Pyx_GIVEREF(__pyx_v_Imagenumpy);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_Imagenumpy);
    __Pyx_INCREF(__pyx_v_width);
    __Pyx_GIVEREF(__pyx_v_width);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_width);
    __Pyx_INCREF(__pyx_v_height);
    __Pyx_GIVEREF(__pyx_v_height);
    PyList_SET_ITEM(__pyx_t_3, 4, __pyx_v_height);
    __Pyx_INCREF(__pyx_v_texture_data);
    __Pyx_GIVEREF(__pyx_v_texture_data);
    PyList_SET_ITEM(__pyx_t_3, 5, __pyx_v_texture_data);
    __pyx_t_4 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1784, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1783
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 *         if alpha:             # <<<<<<<<<<<<<<
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1786
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])             # <<<<<<<<<<<<<<
 *     def update(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyList_New(6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1786, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_tu);
    __Pyx_GIVEREF(__pyx_n_s_tu);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_tu);
    __Pyx_INCREF(__pyx_v_Texture_unit);
    __Pyx_GIVEREF(__pyx_v_Texture_unit);
    PyList_SET_ITEM(__pyx_t_2, 1, __pyx_v_Texture_unit);
    __Pyx_INCREF(__pyx_v_Imagenumpy);
    __Pyx_GIVEREF(__pyx_v_Imagenumpy);
    PyList_SET_ITEM(__pyx_t_2, 2, __pyx_v_Imagenumpy);
    __Pyx_INCREF(__pyx_v_width);
    __Pyx_GIVEREF(__pyx_v_width);
    PyList_SET_ITEM(__pyx_t_2, 3, __pyx_v_width);
    __Pyx_INCREF(__pyx_v_height);
    __Pyx_GIVEREF(__pyx_v_height);
    PyList_SET_ITEM(__pyx_t_2, 4, __pyx_v_height);
    __Pyx_INCREF(__pyx_v_texture_data);
    __Pyx_GIVEREF(__pyx_v_texture_data);
    PyList_SET_ITEM(__pyx_t_2, 5, __pyx_v_texture_data);
    __pyx_t_4 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_2); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1786, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1782
 *     def get_vertices(self):
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):             # <<<<<<<<<<<<<<
 *         if alpha:
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.add_textureupdate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1787
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 *     def update(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_31update(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_31update = {"update", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_31update, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_31update(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_30update(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_30update(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_updates = NULL;
  PyObject *__pyx_v_il = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1788
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 *     def update(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )             # <<<<<<<<<<<<<<
 *         updates = 0
 *         for il in self.update_list:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbo); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1788, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1789
 *     def update(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0             # <<<<<<<<<<<<<<
 *         for il in self.update_list:
 *             if il[0] == 'tu':
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_updates = __pyx_int_0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1790
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 *         for il in self.update_list:             # <<<<<<<<<<<<<<
 *             if il[0] == 'tu':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1790, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1790, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 1790, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1790, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 1790, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1790, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_8(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1790, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_il, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1791
 *         updates = 0
 *         for il in self.update_list:
 *             if il[0] == 'tu':             # <<<<<<<<<<<<<<
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_il, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1791, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_tu, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1791, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_9) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1792
 *         for il in self.update_list:
 *             if il[0] == 'tu':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])             # <<<<<<<<<<<<<<
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 *             elif il[0] == 'tua':
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1792, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1792, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1792, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1792, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_il, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1792, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_5, __pyx_t_4};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1792, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1793
 *             if il[0] == 'tu':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])             # <<<<<<<<<<<<<<
 *             elif il[0] == 'tua':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_glTexSubImage2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_il, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_il, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_RGB); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_il, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1793, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_14 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[10] = {__pyx_t_14, __pyx_t_5, __pyx_int_0, __pyx_int_0, __pyx_int_0, __pyx_t_3, __pyx_t_10, __pyx_t_12, __pyx_t_13, __pyx_t_11};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 9+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1793, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1791
 *         updates = 0
 *         for il in self.update_list:
 *             if il[0] == 'tu':             # <<<<<<<<<<<<<<
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 */
      goto __pyx_L5;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1794
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 *             elif il[0] == 'tua':             # <<<<<<<<<<<<<<
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, il[5])
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_il, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1794, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_tua, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1794, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_9) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1795
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 *             elif il[0] == 'tua':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])             # <<<<<<<<<<<<<<
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, il[5])
 *             else:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1795, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_glBindTexture); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1795, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1795, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1795, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_il, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1795, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_12 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_12)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_12);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_t_13, __pyx_t_4};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1795, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1796
 *             elif il[0] == 'tua':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, il[5])             # <<<<<<<<<<<<<<
 *             else:
 *                 glBufferSubData(GL_ARRAY_BUFFER,il[0]*4,4,ctypes.c_float(il[1]))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_glTexSubImage2D); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_GL_TEXTURE_2D); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_GetItemInt(__pyx_v_il, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_GetItemInt(__pyx_v_il, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_RGBA); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_GL_UNSIGNED_BYTE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_GetItemInt(__pyx_v_il, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1796, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_14 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[10] = {__pyx_t_14, __pyx_t_13, __pyx_int_0, __pyx_int_0, __pyx_int_0, __pyx_t_11, __pyx_t_12, __pyx_t_3, __pyx_t_5, __pyx_t_10};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 9+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1796, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1794
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGB, GL.GL_UNSIGNED_BYTE, il[5])
 *             elif il[0] == 'tua':             # <<<<<<<<<<<<<<
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, il[5])
 */
      goto __pyx_L5;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1798
 *                 GL.glTexSubImage2D(GL.GL_TEXTURE_2D, 0, 0, 0, il[3], il[4], GL.GL_RGBA, GL.GL_UNSIGNED_BYTE, il[5])
 *             else:
 *                 glBufferSubData(GL_ARRAY_BUFFER,il[0]*4,4,ctypes.c_float(il[1]))             # <<<<<<<<<<<<<<
 *             updates+=1
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )
 */
    /*else*/ {
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_glBufferSubData); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_il, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = __Pyx_PyInt_MultiplyObjC(__pyx_t_5, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_c_float); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_GetItemInt(__pyx_v_il, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1798, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_12};
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1798, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __pyx_t_11 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[5] = {__pyx_t_11, __pyx_t_10, __pyx_t_3, __pyx_int_4, __pyx_t_5};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1798, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_L5:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1799
 *             else:
 *                 glBufferSubData(GL_ARRAY_BUFFER,il[0]*4,4,ctypes.c_float(il[1]))
 *             updates+=1             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *         self.update_list = []
 */
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_updates, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1799, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_updates, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1790
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 *         for il in self.update_list:             # <<<<<<<<<<<<<<
 *             if il[0] == 'tu':
 *                 GL.glBindTexture(GL.GL_TEXTURE_2D, il[1])
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1800
 *                 glBufferSubData(GL_ARRAY_BUFFER,il[0]*4,4,ctypes.c_float(il[1]))
 *             updates+=1
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )             # <<<<<<<<<<<<<<
 *         self.update_list = []
 *         self.total_updates = updates
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_4, __pyx_int_0};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1801
 *             updates+=1
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *         self.update_list = []             # <<<<<<<<<<<<<<
 *         self.total_updates = updates
 *     def clear(self):
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_update_list, __pyx_t_2) < 0) __PYX_ERR(0, 1801, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1802
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *         self.update_list = []
 *         self.total_updates = updates             # <<<<<<<<<<<<<<
 *     def clear(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_total_updates, __pyx_v_updates) < 0) __PYX_ERR(0, 1802, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1787
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 *     def update(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_updates);
  __Pyx_XDECREF(__pyx_v_il);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1803
 *         self.update_list = []
 *         self.total_updates = updates
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_33clear(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_33clear = {"clear", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_33clear, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_33clear(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_32clear(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_32clear(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1804
 *         self.total_updates = updates
 *     def clear(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )             # <<<<<<<<<<<<<<
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbo); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1804, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1805
 *     def clear(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_pos(self,object):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBufferSubData); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_int_0};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __pyx_t_7 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_7, __pyx_t_4, __pyx_int_0, __pyx_int_12, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1806
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)             # <<<<<<<<<<<<<<
 *     def get_pos(self,object):
 *         """Gets positions (x,y,x2,y2) inside memory """
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_3, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1803
 *         self.update_list = []
 *         self.total_updates = updates
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1807
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_pos(self,object):             # <<<<<<<<<<<<<<
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_35get_pos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_34get_pos, "Gets positions (x,y,x2,y2) inside memory ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_35get_pos = {"get_pos", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_35get_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_34get_pos};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_35get_pos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pos (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1807, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1807, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("get_pos", 1, 2, 2, 1); __PYX_ERR(0, 1807, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_pos") < 0)) __PYX_ERR(0, 1807, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_pos", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1807, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_34get_pos(__pyx_self, __pyx_v_self, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_34get_pos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_x1 = NULL;
  PyObject *__pyx_v_x2 = NULL;
  PyObject *__pyx_v_y1 = NULL;
  PyObject *__pyx_v_y2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_pos", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1809
 *     def get_pos(self,object):
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 *         x1 = self.vertices[nd]
 *         x2 = self.vertices[nd+20]
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1810
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         x1 = self.vertices[nd]             # <<<<<<<<<<<<<<
 *         x2 = self.vertices[nd+20]
 *         y1 = self.vertices[nd+1]
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_nd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x1 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1811
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         x1 = self.vertices[nd]
 *         x2 = self.vertices[nd+20]             # <<<<<<<<<<<<<<
 *         y1 = self.vertices[nd+1]
 *         y2 = self.vertices[nd+21]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_20, 20, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1812
 *         x1 = self.vertices[nd]
 *         x2 = self.vertices[nd+20]
 *         y1 = self.vertices[nd+1]             # <<<<<<<<<<<<<<
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_y1 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1813
 *         x2 = self.vertices[nd+20]
 *         y1 = self.vertices[nd+1]
 *         y2 = self.vertices[nd+21]             # <<<<<<<<<<<<<<
 *         return [x1,x2,y1,y2]
 *     def get_color(self,object):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_21, 21, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_y2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1814
 *         y1 = self.vertices[nd+1]
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]             # <<<<<<<<<<<<<<
 *     def get_color(self,object):
 *         """ Gets colors (r, g, b, a) inside memory """
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyList_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_x1);
  __Pyx_GIVEREF(__pyx_v_x1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_x1);
  __Pyx_INCREF(__pyx_v_x2);
  __Pyx_GIVEREF(__pyx_v_x2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_v_x2);
  __Pyx_INCREF(__pyx_v_y1);
  __Pyx_GIVEREF(__pyx_v_y1);
  PyList_SET_ITEM(__pyx_t_3, 2, __pyx_v_y1);
  __Pyx_INCREF(__pyx_v_y2);
  __Pyx_GIVEREF(__pyx_v_y2);
  PyList_SET_ITEM(__pyx_t_3, 3, __pyx_v_y2);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1807
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_pos(self,object):             # <<<<<<<<<<<<<<
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_x1);
  __Pyx_XDECREF(__pyx_v_x2);
  __Pyx_XDECREF(__pyx_v_y1);
  __Pyx_XDECREF(__pyx_v_y2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1815
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]
 *     def get_color(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_37get_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_36get_color, " Gets colors (r, g, b, a) inside memory ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_37get_color = {"get_color", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_37get_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_36get_color};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_37get_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_color (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1815, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1815, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("get_color", 1, 2, 2, 1); __PYX_ERR(0, 1815, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_color") < 0)) __PYX_ERR(0, 1815, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_color", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1815, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_36get_color(__pyx_self, __pyx_v_self, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_36get_color(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_r_val = NULL;
  PyObject *__pyx_v_g_val = NULL;
  PyObject *__pyx_v_b_val = NULL;
  PyObject *__pyx_v_a_val = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_color", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1817
 *     def get_color(self,object):
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 *         r_val = self.vertices[nd+3]
 *         g_val = self.vertices[nd+4]
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1817, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1818
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         r_val = self.vertices[nd+3]             # <<<<<<<<<<<<<<
 *         g_val = self.vertices[nd+4]
 *         b_val = self.vertices[nd+5]
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_3, 3, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_r_val = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1819
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         r_val = self.vertices[nd+3]
 *         g_val = self.vertices[nd+4]             # <<<<<<<<<<<<<<
 *         b_val = self.vertices[nd+5]
 *         a_val = self.vertices[nd+6]
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_g_val = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1820
 *         r_val = self.vertices[nd+3]
 *         g_val = self.vertices[nd+4]
 *         b_val = self.vertices[nd+5]             # <<<<<<<<<<<<<<
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1820, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_5, 5, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1820, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1820, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_b_val = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1821
 *         g_val = self.vertices[nd+4]
 *         b_val = self.vertices[nd+5]
 *         a_val = self.vertices[nd+6]             # <<<<<<<<<<<<<<
 *         return r_val, g_val, b_val, a_val
 *     def get_texid(self,object):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_6, 6, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1821, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_a_val = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1822
 *         b_val = self.vertices[nd+5]
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val             # <<<<<<<<<<<<<<
 *     def get_texid(self,object):
 *         """ Gets texture id inside memory """
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1822, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_r_val);
  __Pyx_GIVEREF(__pyx_v_r_val);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_r_val);
  __Pyx_INCREF(__pyx_v_g_val);
  __Pyx_GIVEREF(__pyx_v_g_val);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_g_val);
  __Pyx_INCREF(__pyx_v_b_val);
  __Pyx_GIVEREF(__pyx_v_b_val);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_b_val);
  __Pyx_INCREF(__pyx_v_a_val);
  __Pyx_GIVEREF(__pyx_v_a_val);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_a_val);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1815
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]
 *     def get_color(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_r_val);
  __Pyx_XDECREF(__pyx_v_g_val);
  __Pyx_XDECREF(__pyx_v_b_val);
  __Pyx_XDECREF(__pyx_v_a_val);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1823
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val
 *     def get_texid(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_39get_texid(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_38get_texid, " Gets texture id inside memory ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_39get_texid = {"get_texid", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_39get_texid, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_38get_texid};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_39get_texid(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_texid (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1823, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("get_texid", 1, 2, 2, 1); __PYX_ERR(0, 1823, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_texid") < 0)) __PYX_ERR(0, 1823, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_texid", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1823, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_texid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_38get_texid(__pyx_self, __pyx_v_self, __pyx_v_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_38get_texid(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_textid = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_texid", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1825
 *     def get_texid(self,object):
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 *         textid = self.vertices[nd+7]
 *         return textid
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1826
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         textid = self.vertices[nd+7]             # <<<<<<<<<<<<<<
 *         return textid
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_7, 7, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1826, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_textid = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1827
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         textid = self.vertices[nd+7]
 *         return textid             # <<<<<<<<<<<<<<
 * 
 *     def edit_letter(self,object,font,letter):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_textid);
  __pyx_r = __pyx_v_textid;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1823
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val
 *     def get_texid(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_texid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_textid);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1829
 *         return textid
 * 
 *     def edit_letter(self,object,font,letter):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_41edit_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_41edit_letter = {"edit_letter", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_41edit_letter, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_41edit_letter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  PyObject *__pyx_v_font = 0;
  PyObject *__pyx_v_letter = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edit_letter (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_font,&__pyx_n_s_letter,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_font,&__pyx_n_s_letter,0};
    #endif
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1829, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1829, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("edit_letter", 1, 4, 4, 1); __PYX_ERR(0, 1829, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_font)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1829, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("edit_letter", 1, 4, 4, 2); __PYX_ERR(0, 1829, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_letter)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1829, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("edit_letter", 1, 4, 4, 3); __PYX_ERR(0, 1829, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "edit_letter") < 0)) __PYX_ERR(0, 1829, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
    __pyx_v_font = values[2];
    __pyx_v_letter = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("edit_letter", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1829, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_40edit_letter(__pyx_self, __pyx_v_self, __pyx_v_object, __pyx_v_font, __pyx_v_letter);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_40edit_letter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_font, PyObject *__pyx_v_letter) {
  PyObject *__pyx_v_ct = NULL;
  PyObject *__pyx_v_t1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c1 = NULL;
  PyObject *__pyx_v_t2 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c2 = NULL;
  PyObject *__pyx_v_t3 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c3 = NULL;
  PyObject *__pyx_v_t4 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_c4 = NULL;
  PyObject *__pyx_v_tlist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_letter", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1830
 * 
 *     def edit_letter(self,object,font,letter):
 *         ct = int(ord(letter))             # <<<<<<<<<<<<<<
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 */
  __pyx_t_1 = __Pyx_PyObject_Ord(__pyx_v_letter); if (unlikely(__pyx_t_1 == ((long)(long)(Py_UCS4)-1))) __PYX_ERR(0, 1830, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)(&PyInt_Type)), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_ct = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1831
 *     def edit_letter(self,object,font,letter):
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]             # <<<<<<<<<<<<<<
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t1 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c1 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1832
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]             # <<<<<<<<<<<<<<
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t2 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1832, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c2 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1833
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]             # <<<<<<<<<<<<<<
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t3 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c3 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1834
 *         t2=font[ct][1][0];c2=font[ct][1][1]
 *         t3=font[ct][2][0];c3=font[ct][2][1]
 *         t4=font[ct][3][0];c4=font[ct][3][1]             # <<<<<<<<<<<<<<
 * 
 *         tlist = [t1[0], t1[1], t2[0], t2[1], t3[0], t3[1], t4[0], t4[1]]
 */
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_t4 = __pyx_t_3;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_font, __pyx_v_ct); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_c4 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1836
 *         t4=font[ct][3][0];c4=font[ct][3][1]
 * 
 *         tlist = [t1[0], t1[1], t2[0], t2[1], t3[0], t3[1], t4[0], t4[1]]             # <<<<<<<<<<<<<<
 * 
 *         self.edit_tpos(object, tlist)
 */
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_t1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_t1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_t2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_t2, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_t3, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_t3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_t4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_t4, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = PyList_New(8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_10, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_10, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_10, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_10, 3, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_10, 4, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyList_SET_ITEM(__pyx_t_10, 5, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyList_SET_ITEM(__pyx_t_10, 6, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_9);
  PyList_SET_ITEM(__pyx_t_10, 7, __pyx_t_9);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_v_tlist = ((PyObject*)__pyx_t_10);
  __pyx_t_10 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1838
 *         tlist = [t1[0], t1[1], t2[0], t2[1], t3[0], t3[1], t4[0], t4[1]]
 * 
 *         self.edit_tpos(object, tlist)             # <<<<<<<<<<<<<<
 *     def edit_tpos(self,object=None,newtpos=[]):
 *         nd = 0+((self.object_indexes[object]*4)*10)
 */
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_edit_tpos); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_8 = NULL;
  __pyx_t_11 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
      __pyx_t_11 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_8, __pyx_v_object, __pyx_v_tlist};
    __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_11, 2+__pyx_t_11);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1829
 *         return textid
 * 
 *     def edit_letter(self,object,font,letter):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_letter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ct);
  __Pyx_XDECREF(__pyx_v_t1);
  __Pyx_XDECREF(__pyx_v_c1);
  __Pyx_XDECREF(__pyx_v_t2);
  __Pyx_XDECREF(__pyx_v_c2);
  __Pyx_XDECREF(__pyx_v_t3);
  __Pyx_XDECREF(__pyx_v_c3);
  __Pyx_XDECREF(__pyx_v_t4);
  __Pyx_XDECREF(__pyx_v_c4);
  __Pyx_XDECREF(__pyx_v_tlist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1839
 * 
 *         self.edit_tpos(object, tlist)
 *     def edit_tpos(self,object=None,newtpos=[]):             # <<<<<<<<<<<<<<
 *         nd = 0+((self.object_indexes[object]*4)*10)
 * 
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_58__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults11, __pyx_self)->__pyx_arg_newtpos);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults11, __pyx_self)->__pyx_arg_newtpos);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults11, __pyx_self)->__pyx_arg_newtpos);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_43edit_tpos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_43edit_tpos = {"edit_tpos", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_43edit_tpos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_43edit_tpos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  PyObject *__pyx_v_newtpos = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edit_tpos (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newtpos,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newtpos,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults11 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults11, __pyx_self);
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = __pyx_dynamic_args->__pyx_arg_newtpos;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1839, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1839, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_newtpos);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1839, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "edit_tpos") < 0)) __PYX_ERR(0, 1839, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
    __pyx_v_newtpos = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("edit_tpos", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1839, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_tpos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_42edit_tpos(__pyx_self, __pyx_v_self, __pyx_v_object, __pyx_v_newtpos);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_42edit_tpos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newtpos) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_ou = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_tpos", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1840
 *         self.edit_tpos(object, tlist)
 *     def edit_tpos(self,object=None,newtpos=[]):
 *         nd = 0+((self.object_indexes[object]*4)*10)             # <<<<<<<<<<<<<<
 * 
 *         ou = []
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1842
 *         nd = 0+((self.object_indexes[object]*4)*10)
 * 
 *         ou = []             # <<<<<<<<<<<<<<
 *         ou.append([nd+8, newtpos[0]])
 *         ou.append([nd+9, newtpos[1]])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ou = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1843
 * 
 *         ou = []
 *         ou.append([nd+8, newtpos[0]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+9, newtpos[1]])
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_8, 8, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1844
 *         ou = []
 *         ou.append([nd+8, newtpos[0]])
 *         ou.append([nd+9, newtpos[1]])             # <<<<<<<<<<<<<<
 * 
 *         ou.append([nd+18, newtpos[2]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_9, 9, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1844, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1846
 *         ou.append([nd+9, newtpos[1]])
 * 
 *         ou.append([nd+18, newtpos[2]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+19, newtpos[3]])
 *         ou.append([nd+28, newtpos[4]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_18, 18, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1847
 * 
 *         ou.append([nd+18, newtpos[2]])
 *         ou.append([nd+19, newtpos[3]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+28, newtpos[4]])
 *         ou.append([nd+29, newtpos[5]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_19, 19, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1847, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1848
 *         ou.append([nd+18, newtpos[2]])
 *         ou.append([nd+19, newtpos[3]])
 *         ou.append([nd+28, newtpos[4]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+29, newtpos[5]])
 *         ou.append([nd+38, newtpos[6]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_28, 28, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1849
 *         ou.append([nd+19, newtpos[3]])
 *         ou.append([nd+28, newtpos[4]])
 *         ou.append([nd+29, newtpos[5]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+38, newtpos[6]])
 *         ou.append([nd+39, newtpos[7]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_29, 29, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1849, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1850
 *         ou.append([nd+28, newtpos[4]])
 *         ou.append([nd+29, newtpos[5]])
 *         ou.append([nd+38, newtpos[6]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+39, newtpos[7]])
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_38, 38, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1850, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1851
 *         ou.append([nd+29, newtpos[5]])
 *         ou.append([nd+38, newtpos[6]])
 *         ou.append([nd+39, newtpos[7]])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_39, 39, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newtpos, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1851, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1854
 * 
 * 
 *         self.update_list.extend(ou)             # <<<<<<<<<<<<<<
 *     def edit_color(self,object=None,newcolor=[]):
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_extend); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1854, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_ou};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1854, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1839
 * 
 *         self.edit_tpos(object, tlist)
 *     def edit_tpos(self,object=None,newtpos=[]):             # <<<<<<<<<<<<<<
 *         nd = 0+((self.object_indexes[object]*4)*10)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_tpos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_ou);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1855
 * 
 *         self.update_list.extend(ou)
 *     def edit_color(self,object=None,newcolor=[]):             # <<<<<<<<<<<<<<
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_60__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1855, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults12, __pyx_self)->__pyx_arg_newcolor);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults12, __pyx_self)->__pyx_arg_newcolor);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults12, __pyx_self)->__pyx_arg_newcolor);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1855, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_45edit_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_45edit_color = {"edit_color", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_45edit_color, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_45edit_color(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  PyObject *__pyx_v_newcolor = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edit_color (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newcolor,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newcolor,0};
    #endif
    PyObject* values[3] = {0,0,0};
    __pyx_defaults12 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults12, __pyx_self);
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = __pyx_dynamic_args->__pyx_arg_newcolor;
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1855, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1855, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_newcolor);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1855, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "edit_color") < 0)) __PYX_ERR(0, 1855, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
    __pyx_v_newcolor = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("edit_color", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1855, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_44edit_color(__pyx_self, __pyx_v_self, __pyx_v_object, __pyx_v_newcolor);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_44edit_color(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newcolor) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_ou = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_color", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1856
 *         self.update_list.extend(ou)
 *     def edit_color(self,object=None,newcolor=[]):
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 *         ou = []
 *         ou.append([nd+3,newcolor[0]])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1857
 *     def edit_color(self,object=None,newcolor=[]):
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []             # <<<<<<<<<<<<<<
 *         ou.append([nd+3,newcolor[0]])
 *         ou.append([nd+4,newcolor[1]])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ou = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1858
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 *         ou.append([nd+3,newcolor[0]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+4,newcolor[1]])
 *         ou.append([nd+5,newcolor[2]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_3, 3, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1858, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1859
 *         ou = []
 *         ou.append([nd+3,newcolor[0]])
 *         ou.append([nd+4,newcolor[1]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+5,newcolor[2]])
 *         ou.append([nd+6,newcolor[3]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1859, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1860
 *         ou.append([nd+3,newcolor[0]])
 *         ou.append([nd+4,newcolor[1]])
 *         ou.append([nd+5,newcolor[2]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+6,newcolor[3]])
 *         ou.append([nd+13,newcolor[0]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_5, 5, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1860, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1861
 *         ou.append([nd+4,newcolor[1]])
 *         ou.append([nd+5,newcolor[2]])
 *         ou.append([nd+6,newcolor[3]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+13,newcolor[0]])
 *         ou.append([nd+14,newcolor[1]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_6, 6, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1861, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1862
 *         ou.append([nd+5,newcolor[2]])
 *         ou.append([nd+6,newcolor[3]])
 *         ou.append([nd+13,newcolor[0]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+14,newcolor[1]])
 *         ou.append([nd+15,newcolor[2]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_13, 13, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1862, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1863
 *         ou.append([nd+6,newcolor[3]])
 *         ou.append([nd+13,newcolor[0]])
 *         ou.append([nd+14,newcolor[1]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+15,newcolor[2]])
 *         ou.append([nd+16,newcolor[3]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_14, 14, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1863, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1863, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1863, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1863, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1864
 *         ou.append([nd+13,newcolor[0]])
 *         ou.append([nd+14,newcolor[1]])
 *         ou.append([nd+15,newcolor[2]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+16,newcolor[3]])
 *         ou.append([nd+23,newcolor[0]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_15, 15, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1864, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1865
 *         ou.append([nd+14,newcolor[1]])
 *         ou.append([nd+15,newcolor[2]])
 *         ou.append([nd+16,newcolor[3]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+23,newcolor[0]])
 *         ou.append([nd+24,newcolor[1]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_16, 16, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1865, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1866
 *         ou.append([nd+15,newcolor[2]])
 *         ou.append([nd+16,newcolor[3]])
 *         ou.append([nd+23,newcolor[0]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+24,newcolor[1]])
 *         ou.append([nd+25,newcolor[2]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_23, 23, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1866, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1867
 *         ou.append([nd+16,newcolor[3]])
 *         ou.append([nd+23,newcolor[0]])
 *         ou.append([nd+24,newcolor[1]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+25,newcolor[2]])
 *         ou.append([nd+26,newcolor[3]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_24, 24, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1867, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1868
 *         ou.append([nd+23,newcolor[0]])
 *         ou.append([nd+24,newcolor[1]])
 *         ou.append([nd+25,newcolor[2]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+26,newcolor[3]])
 *         ou.append([nd+33,newcolor[0]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_25, 25, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1869
 *         ou.append([nd+24,newcolor[1]])
 *         ou.append([nd+25,newcolor[2]])
 *         ou.append([nd+26,newcolor[3]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+33,newcolor[0]])
 *         ou.append([nd+34,newcolor[1]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_26, 26, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1869, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1870
 *         ou.append([nd+25,newcolor[2]])
 *         ou.append([nd+26,newcolor[3]])
 *         ou.append([nd+33,newcolor[0]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+34,newcolor[1]])
 *         ou.append([nd+35,newcolor[2]])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_33, 33, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1870, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1871
 *         ou.append([nd+26,newcolor[3]])
 *         ou.append([nd+33,newcolor[0]])
 *         ou.append([nd+34,newcolor[1]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+35,newcolor[2]])
 *         ou.append([nd+36,newcolor[3]])
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_34, 34, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1871, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1872
 *         ou.append([nd+33,newcolor[0]])
 *         ou.append([nd+34,newcolor[1]])
 *         ou.append([nd+35,newcolor[2]])             # <<<<<<<<<<<<<<
 *         ou.append([nd+36,newcolor[3]])
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_35, 35, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1873
 *         ou.append([nd+34,newcolor[1]])
 *         ou.append([nd+35,newcolor[2]])
 *         ou.append([nd+36,newcolor[3]])             # <<<<<<<<<<<<<<
 * 
 *         self.update_list.extend(ou)
 */
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_36, 36, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_newcolor, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_3 = 0;
  __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1873, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1875
 *         ou.append([nd+36,newcolor[3]])
 * 
 *         self.update_list.extend(ou)             # <<<<<<<<<<<<<<
 *     def delete_obj(self):
 *         self.vertices
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_extend); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_ou};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1855
 * 
 *         self.update_list.extend(ou)
 *     def edit_color(self,object=None,newcolor=[]):             # <<<<<<<<<<<<<<
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_color", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_ou);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1876
 * 
 *         self.update_list.extend(ou)
 *     def delete_obj(self):             # <<<<<<<<<<<<<<
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_47delete_obj(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_47delete_obj = {"delete_obj", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_47delete_obj, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_47delete_obj(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("delete_obj (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_46delete_obj(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_46delete_obj(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("delete_obj", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1877
 *         self.update_list.extend(ou)
 *     def delete_obj(self):
 *         self.vertices             # <<<<<<<<<<<<<<
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1876
 * 
 *         self.update_list.extend(ou)
 *     def delete_obj(self):             # <<<<<<<<<<<<<<
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.delete_obj", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1878
 *     def delete_obj(self):
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):             # <<<<<<<<<<<<<<
 * 
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_62__defaults__(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__defaults__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_None));
  __Pyx_INCREF(__Pyx_CyFunction_Defaults(__pyx_defaults13, __pyx_self)->__pyx_arg_newpos);
  __Pyx_GIVEREF(__Pyx_CyFunction_Defaults(__pyx_defaults13, __pyx_self)->__pyx_arg_newpos);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __Pyx_CyFunction_Defaults(__pyx_defaults13, __pyx_self)->__pyx_arg_newpos);
  __Pyx_INCREF(((PyObject *)Py_None));
  __Pyx_GIVEREF(((PyObject *)Py_None));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)Py_None));
  __Pyx_INCREF(((PyObject *)Py_False));
  __Pyx_GIVEREF(((PyObject *)Py_False));
  PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)Py_False));
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_2, 1, Py_None);
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.__defaults__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_49edit_pos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_49edit_pos = {"edit_pos", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_49edit_pos, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_49edit_pos(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  PyObject *__pyx_v_newpos = 0;
  PyObject *__pyx_v_size = 0;
  PyObject *__pyx_v_letter = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edit_pos (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newpos,&__pyx_n_s_size,&__pyx_n_s_letter,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_newpos,&__pyx_n_s_size,&__pyx_n_s_letter,0};
    #endif
    PyObject* values[5] = {0,0,0,0,0};
    __pyx_defaults13 *__pyx_dynamic_args = __Pyx_CyFunction_Defaults(__pyx_defaults13, __pyx_self);
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = __pyx_dynamic_args->__pyx_arg_newpos;
    values[3] = ((PyObject *)((PyObject *)Py_None));
    values[4] = ((PyObject *)((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_newpos);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_size);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_letter);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1878, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "edit_pos") < 0)) __PYX_ERR(0, 1878, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
    __pyx_v_newpos = values[2];
    __pyx_v_size = values[3];
    __pyx_v_letter = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("edit_pos", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1878, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_48edit_pos(__pyx_self, __pyx_v_self, __pyx_v_object, __pyx_v_newpos, __pyx_v_size, __pyx_v_letter);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_48edit_pos(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_newpos, PyObject *__pyx_v_size, PyObject *__pyx_v_letter) {
  PyObject *__pyx_v_nd = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_curpos = NULL;
  PyObject *__pyx_v_sizey = NULL;
  PyObject *__pyx_v_sizex = NULL;
  PyObject *__pyx_v_ou = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_pos", 0);
  __Pyx_INCREF(__pyx_v_newpos);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1880
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 * 
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 * 
 *         curpos = self.get_pos(self.object_indexes[object])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_2, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_2, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1882
 *         nd = (0+((self.object_indexes[object]*4)*10))
 * 
 *         curpos = self.get_pos(self.object_indexes[object])             # <<<<<<<<<<<<<<
 *         if size == None:
 *             sizey = self.vertices[nd+1] +self.vertices[nd+11]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_get_pos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_v_object); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1882, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_curpos = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1883
 * 
 *         curpos = self.get_pos(self.object_indexes[object])
 *         if size == None:             # <<<<<<<<<<<<<<
 *             sizey = self.vertices[nd+1] +self.vertices[nd+11]
 *             sizex = self.vertices[nd+10]-self.vertices[nd]
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_size, Py_None, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1884
 *         curpos = self.get_pos(self.object_indexes[object])
 *         if size == None:
 *             sizey = self.vertices[nd+1] +self.vertices[nd+11]             # <<<<<<<<<<<<<<
 *             sizex = self.vertices[nd+10]-self.vertices[nd]
 *         else:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_11, 11, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Add(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1884, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sizey = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1885
 *         if size == None:
 *             sizey = self.vertices[nd+1] +self.vertices[nd+11]
 *             sizex = self.vertices[nd+10]-self.vertices[nd]             # <<<<<<<<<<<<<<
 *         else:
 *             sizex, sizey = _cords_to_ratio(size[0],size[1],self.sx,self.sy)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_v_nd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1885, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_sizex = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1883
 * 
 *         curpos = self.get_pos(self.object_indexes[object])
 *         if size == None:             # <<<<<<<<<<<<<<
 *             sizey = self.vertices[nd+1] +self.vertices[nd+11]
 *             sizex = self.vertices[nd+10]-self.vertices[nd]
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1887
 *             sizex = self.vertices[nd+10]-self.vertices[nd]
 *         else:
 *             sizex, sizey = _cords_to_ratio(size[0],size[1],self.sx,self.sy)             # <<<<<<<<<<<<<<
 *             sizex = 1+sizex
 *             sizey = 1-sizey
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_size, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_size, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1887, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_9, __pyx_t_4, __pyx_t_2, __pyx_t_7, __pyx_t_8};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 4+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
      PyObject* sequence = __pyx_t_3;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1887, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1887, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_10 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_1 = __pyx_t_10(__pyx_t_7); if (unlikely(!__pyx_t_1)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      index = 1; __pyx_t_8 = __pyx_t_10(__pyx_t_7); if (unlikely(!__pyx_t_8)) goto __pyx_L4_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_8);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_7), 2) < 0) __PYX_ERR(0, 1887, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L5_unpacking_done;
      __pyx_L4_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1887, __pyx_L1_error)
      __pyx_L5_unpacking_done:;
    }
    __pyx_v_sizex = __pyx_t_1;
    __pyx_t_1 = 0;
    __pyx_v_sizey = __pyx_t_8;
    __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1888
 *         else:
 *             sizex, sizey = _cords_to_ratio(size[0],size[1],self.sx,self.sy)
 *             sizex = 1+sizex             # <<<<<<<<<<<<<<
 *             sizey = 1-sizey
 *         newpos = _cords_to_ratio(newpos[0],newpos[1],self.sx,self.sy)
 */
    __pyx_t_3 = __Pyx_PyInt_AddCObj(__pyx_int_1, __pyx_v_sizex, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1888, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_sizex, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1889
 *             sizex, sizey = _cords_to_ratio(size[0],size[1],self.sx,self.sy)
 *             sizex = 1+sizex
 *             sizey = 1-sizey             # <<<<<<<<<<<<<<
 *         newpos = _cords_to_ratio(newpos[0],newpos[1],self.sx,self.sy)
 * 
 */
    __pyx_t_3 = __Pyx_PyInt_SubtractCObj(__pyx_int_1, __pyx_v_sizey, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1889, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_sizey, __pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1890
 *             sizex = 1+sizex
 *             sizey = 1-sizey
 *         newpos = _cords_to_ratio(newpos[0],newpos[1],self.sx,self.sy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_cords_to_ratio); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_9, __pyx_t_1, __pyx_t_7, __pyx_t_2, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_5, 4+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1890, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF_SET(__pyx_v_newpos, __pyx_t_3);
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1893
 * 
 * 
 *         ou = []             # <<<<<<<<<<<<<<
 *         if letter is True:
 *             ou.append([nd+20,   newpos[0]])                # x1
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1893, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_ou = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1894
 * 
 *         ou = []
 *         if letter is True:             # <<<<<<<<<<<<<<
 *             ou.append([nd+20,   newpos[0]])                # x1
 *             ou.append([nd+21, newpos[1]])                # y1
 */
  __pyx_t_6 = (__pyx_v_letter == Py_True);
  __pyx_t_11 = (__pyx_t_6 != 0);
  if (__pyx_t_11) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1895
 *         ou = []
 *         if letter is True:
 *             ou.append([nd+20,   newpos[0]])                # x1             # <<<<<<<<<<<<<<
 *             ou.append([nd+21, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]-sizex])         # x2
 */
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_20, 20, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1895, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1896
 *         if letter is True:
 *             ou.append([nd+20,   newpos[0]])                # x1
 *             ou.append([nd+21, newpos[1]])                # y1             # <<<<<<<<<<<<<<
 *             ou.append([nd+10 ,newpos[0]-sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_21, 21, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_8);
    __pyx_t_4 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1897
 *             ou.append([nd+20,   newpos[0]])                # x1
 *             ou.append([nd+21, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]-sizex])         # x2             # <<<<<<<<<<<<<<
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+0 ,newpos[0]-sizex])         # x3
 */
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_8, __pyx_v_sizex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_8); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1898
 *             ou.append([nd+21, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]-sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2             # <<<<<<<<<<<<<<
 *             ou.append([nd+0 ,newpos[0]-sizex])         # x3
 *             ou.append([nd+1 ,newpos[1]-sizey] )        # y3
 */
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_11, 11, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
    __pyx_t_8 = 0;
    __pyx_t_4 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1899
 *             ou.append([nd+10 ,newpos[0]-sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+0 ,newpos[0]-sizex])         # x3             # <<<<<<<<<<<<<<
 *             ou.append([nd+1 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4
 */
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_0, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_4, __pyx_v_sizex); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1900
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+0 ,newpos[0]-sizex])         # x3
 *             ou.append([nd+1 ,newpos[1]-sizey] )        # y3             # <<<<<<<<<<<<<<
 *             ou.append([nd+30 ,newpos[0]])               # x4
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_8, __pyx_v_sizey); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_8); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1901
 *             ou.append([nd+0 ,newpos[0]-sizex])         # x3
 *             ou.append([nd+1 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4             # <<<<<<<<<<<<<<
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 *         else:
 */
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_30, 30, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __pyx_t_8 = 0;
    __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1902
 *             ou.append([nd+1 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4             # <<<<<<<<<<<<<<
 *         else:
 *             ou.append([nd+0,   newpos[0]])                # x1
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_31, 31, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_3, __pyx_v_sizey); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_8);
    __pyx_t_4 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1894
 * 
 *         ou = []
 *         if letter is True:             # <<<<<<<<<<<<<<
 *             ou.append([nd+20,   newpos[0]])                # x1
 *             ou.append([nd+21, newpos[1]])                # y1
 */
    goto __pyx_L6;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1904
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 *         else:
 *             ou.append([nd+0,   newpos[0]])                # x1             # <<<<<<<<<<<<<<
 *             ou.append([nd+1, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]+sizex])         # x2
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_0, 0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1904, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1905
 *         else:
 *             ou.append([nd+0,   newpos[0]])                # x1
 *             ou.append([nd+1, newpos[1]])                # y1             # <<<<<<<<<<<<<<
 *             ou.append([nd+10 ,newpos[0]+sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_8);
    __pyx_t_4 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1906
 *             ou.append([nd+0,   newpos[0]])                # x1
 *             ou.append([nd+1, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]+sizex])         # x2             # <<<<<<<<<<<<<<
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+20 ,newpos[0]+sizex])         # x3
 */
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = PyNumber_Add(__pyx_t_8, __pyx_v_sizex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_8); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1907
 *             ou.append([nd+1, newpos[1]])                # y1
 *             ou.append([nd+10 ,newpos[0]+sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2             # <<<<<<<<<<<<<<
 *             ou.append([nd+20 ,newpos[0]+sizex])         # x3
 *             ou.append([nd+21 ,newpos[1]-sizey] )        # y3
 */
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_11, 11, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1907, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1907, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1907, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
    __pyx_t_8 = 0;
    __pyx_t_4 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1907, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1908
 *             ou.append([nd+10 ,newpos[0]+sizex])         # x2
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+20 ,newpos[0]+sizex])         # x3             # <<<<<<<<<<<<<<
 *             ou.append([nd+21 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4
 */
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_20, 20, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_v_sizex); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_8);
    __pyx_t_3 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1908, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1909
 *             ou.append([nd+11 ,newpos[1]])               # y2
 *             ou.append([nd+20 ,newpos[0]+sizex])         # x3
 *             ou.append([nd+21 ,newpos[1]-sizey] )        # y3             # <<<<<<<<<<<<<<
 *             ou.append([nd+30 ,newpos[0]])               # x4
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_21, 21, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_8, __pyx_v_sizey); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __pyx_t_8 = PyList_New(2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_8, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_8, 1, __pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_8); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1910
 *             ou.append([nd+20 ,newpos[0]+sizex])         # x3
 *             ou.append([nd+21 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4             # <<<<<<<<<<<<<<
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 * 
 */
    __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_30, 30, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_newpos, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1910, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __pyx_t_8 = 0;
    __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1910, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1911
 *             ou.append([nd+21 ,newpos[1]-sizey] )        # y3
 *             ou.append([nd+30 ,newpos[0]])               # x4
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4             # <<<<<<<<<<<<<<
 * 
 *         self.update_list.extend(ou)
 */
    __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_31, 31, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_newpos, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = PyNumber_Subtract(__pyx_t_3, __pyx_v_sizey); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_8);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_8);
    __pyx_t_4 = 0;
    __pyx_t_8 = 0;
    __pyx_t_12 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 1911, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L6:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1913
 *             ou.append([nd+31 ,newpos[1]-sizey ])        # y4
 * 
 *         self.update_list.extend(ou)             # <<<<<<<<<<<<<<
 *     def edit_texture(self,object=None,txtid=0):
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1913, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_extend); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1913, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_v_ou};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1878
 *     def delete_obj(self):
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):             # <<<<<<<<<<<<<<
 * 
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_pos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_curpos);
  __Pyx_XDECREF(__pyx_v_sizey);
  __Pyx_XDECREF(__pyx_v_sizex);
  __Pyx_XDECREF(__pyx_v_ou);
  __Pyx_XDECREF(__pyx_v_newpos);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1914
 * 
 *         self.update_list.extend(ou)
 *     def edit_texture(self,object=None,txtid=0):             # <<<<<<<<<<<<<<
 * 
 *         if txtid not in self.textures:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_51edit_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_51edit_texture = {"edit_texture", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_51edit_texture, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_51edit_texture(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_object = 0;
  PyObject *__pyx_v_txtid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("edit_texture (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_txtid,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_object,&__pyx_n_s_txtid,0};
    #endif
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)((PyObject *)Py_None));
    values[2] = ((PyObject *)((PyObject *)__pyx_int_0));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1914, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_object);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1914, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_txtid);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1914, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "edit_texture") < 0)) __PYX_ERR(0, 1914, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_object = values[1];
    __pyx_v_txtid = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("edit_texture", 0, 1, 3, __pyx_nargs); __PYX_ERR(0, 1914, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_50edit_texture(__pyx_self, __pyx_v_self, __pyx_v_object, __pyx_v_txtid);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_50edit_texture(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_object, PyObject *__pyx_v_txtid) {
  PyObject *__pyx_v_nd = NULL;
  PyObject *__pyx_v_ou = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("edit_texture", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1916
 *     def edit_texture(self,object=None,txtid=0):
 * 
 *         if txtid not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *             glBindTextureUnit(txtid, txtid)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_v_txtid, __pyx_t_1, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1916, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1917
 * 
 *         if txtid not in self.textures:
 *             glBindBuffer(GL_ARRAY_BUFFER, self.vbo )             # <<<<<<<<<<<<<<
 *             glBindTextureUnit(txtid, txtid)
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1917, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1917, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbo); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1917, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_5, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1917, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1918
 *         if txtid not in self.textures:
 *             glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *             glBindTextureUnit(txtid, txtid)             # <<<<<<<<<<<<<<
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_glBindTextureUnit); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1918, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_v_txtid, __pyx_v_txtid};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1916
 *     def edit_texture(self,object=None,txtid=0):
 * 
 *         if txtid not in self.textures:             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *             glBindTextureUnit(txtid, txtid)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1919
 *             glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *             glBindTextureUnit(txtid, txtid)
 *         nd = (0+((self.object_indexes[object]*4)*10))             # <<<<<<<<<<<<<<
 *         ou = []
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_object); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_MultiplyObjC(__pyx_t_4, __pyx_int_4, 4, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyInt_MultiplyObjC(__pyx_t_1, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddCObj(__pyx_int_0, __pyx_t_4, 0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_nd = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1920
 *             glBindTextureUnit(txtid, txtid)
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1920, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ou = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1924
 * 
 * 
 *         ou.append([nd+7,float(txtid)])             # <<<<<<<<<<<<<<
 *         self.vertices[nd+7] = txtid
 *         ou.append([nd+17,float(txtid)])
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_7, 7, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_v_txtid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_6); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1924, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1925
 * 
 *         ou.append([nd+7,float(txtid)])
 *         self.vertices[nd+7] = txtid             # <<<<<<<<<<<<<<
 *         ou.append([nd+17,float(txtid)])
 *         self.vertices[nd+17] = txtid
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1925, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_7, 7, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1925, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(PyObject_SetItem(__pyx_t_6, __pyx_t_4, __pyx_v_txtid) < 0)) __PYX_ERR(0, 1925, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1926
 *         ou.append([nd+7,float(txtid)])
 *         self.vertices[nd+7] = txtid
 *         ou.append([nd+17,float(txtid)])             # <<<<<<<<<<<<<<
 *         self.vertices[nd+17] = txtid
 *         ou.append([nd+27,float(txtid)])
 */
  __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_17, 17, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyNumber_Float(__pyx_v_txtid); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_1); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1926, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1927
 *         self.vertices[nd+7] = txtid
 *         ou.append([nd+17,float(txtid)])
 *         self.vertices[nd+17] = txtid             # <<<<<<<<<<<<<<
 *         ou.append([nd+27,float(txtid)])
 *         self.vertices[nd+27] = txtid
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_17, 17, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_t_6, __pyx_v_txtid) < 0)) __PYX_ERR(0, 1927, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1928
 *         ou.append([nd+17,float(txtid)])
 *         self.vertices[nd+17] = txtid
 *         ou.append([nd+27,float(txtid)])             # <<<<<<<<<<<<<<
 *         self.vertices[nd+27] = txtid
 *         ou.append([nd+37,float(txtid)])
 */
  __pyx_t_6 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_27, 27, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_v_txtid); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __pyx_t_6 = 0;
  __pyx_t_1 = 0;
  __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_4); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1928, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1929
 *         self.vertices[nd+17] = txtid
 *         ou.append([nd+27,float(txtid)])
 *         self.vertices[nd+27] = txtid             # <<<<<<<<<<<<<<
 *         ou.append([nd+37,float(txtid)])
 *         self.vertices[nd+37] = txtid
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_27, 27, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyObject_SetItem(__pyx_t_4, __pyx_t_1, __pyx_v_txtid) < 0)) __PYX_ERR(0, 1929, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1930
 *         ou.append([nd+27,float(txtid)])
 *         self.vertices[nd+27] = txtid
 *         ou.append([nd+37,float(txtid)])             # <<<<<<<<<<<<<<
 *         self.vertices[nd+37] = txtid
 *         self.update_list.extend(ou)
 */
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_37, 37, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyNumber_Float(__pyx_v_txtid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_ou, __pyx_t_6); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1930, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1931
 *         self.vertices[nd+27] = txtid
 *         ou.append([nd+37,float(txtid)])
 *         self.vertices[nd+37] = txtid             # <<<<<<<<<<<<<<
 *         self.update_list.extend(ou)
 *         if txtid not in self.textures:
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_v_nd, __pyx_int_37, 37, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(PyObject_SetItem(__pyx_t_6, __pyx_t_4, __pyx_v_txtid) < 0)) __PYX_ERR(0, 1931, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1932
 *         ou.append([nd+37,float(txtid)])
 *         self.vertices[nd+37] = txtid
 *         self.update_list.extend(ou)             # <<<<<<<<<<<<<<
 *         if txtid not in self.textures:
 *             self.textures.append(txtid)
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_update_list); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_extend); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1932, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_ou};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1933
 *         self.vertices[nd+37] = txtid
 *         self.update_list.extend(ou)
 *         if txtid not in self.textures:             # <<<<<<<<<<<<<<
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_v_txtid, __pyx_t_4, Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1934
 *         self.update_list.extend(ou)
 *         if txtid not in self.textures:
 *             self.textures.append(txtid)             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textures); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_txtid); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1934, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1935
 *         if txtid not in self.textures:
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)             # <<<<<<<<<<<<<<
 *     def get_buffer(self):
 *         return self.vertices
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1935, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1935, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_6, __pyx_int_0};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1935, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1933
 *         self.vertices[nd+37] = txtid
 *         self.update_list.extend(ou)
 *         if txtid not in self.textures:             # <<<<<<<<<<<<<<
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 */
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1914
 * 
 *         self.update_list.extend(ou)
 *     def edit_texture(self,object=None,txtid=0):             # <<<<<<<<<<<<<<
 * 
 *         if txtid not in self.textures:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.edit_texture", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_nd);
  __Pyx_XDECREF(__pyx_v_ou);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1936
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def bind_buffer(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_53get_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_53get_buffer = {"get_buffer", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_53get_buffer, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_53get_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_buffer (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_52get_buffer(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_52get_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_buffer", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1937
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):
 *         return self.vertices             # <<<<<<<<<<<<<<
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1936
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def bind_buffer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.get_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1938
 *     def get_buffer(self):
 *         return self.vertices
 *     def bind_buffer(self):             # <<<<<<<<<<<<<<
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_55bind_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_55bind_buffer = {"bind_buffer", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_55bind_buffer, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_55bind_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bind_buffer (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_54bind_buffer(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_54bind_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bind_buffer", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1939
 *         return self.vertices
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)             # <<<<<<<<<<<<<<
 *     def switch(self,vbo):
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glUseProgram); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1939, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1939, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1938
 *     def get_buffer(self):
 *         return self.vertices
 *     def bind_buffer(self):             # <<<<<<<<<<<<<<
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.bind_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1940
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):             # <<<<<<<<<<<<<<
 * 
 *         try:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_57switch(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_57switch = {"switch", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_57switch, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_57switch(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_vbo = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("switch (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_vbo,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_vbo,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1940, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_vbo)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1940, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("switch", 1, 2, 2, 1); __PYX_ERR(0, 1940, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "switch") < 0)) __PYX_ERR(0, 1940, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_vbo = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("switch", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1940, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.switch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_56switch(__pyx_self, __pyx_v_self, __pyx_v_vbo);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_56switch(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_vbo) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("switch", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1942
 *     def switch(self,vbo):
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.vertices = self.vert_lists[vbo]
 *             self.object_count = self.object_counts[vbo]
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1943
 * 
 *         try:
 *             self.vertices = self.vert_lists[vbo]             # <<<<<<<<<<<<<<
 *             self.object_count = self.object_counts[vbo]
 *         except:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vert_lists); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1943, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_v_vbo); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1943, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vertices, __pyx_t_5) < 0) __PYX_ERR(0, 1943, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1944
 *         try:
 *             self.vertices = self.vert_lists[vbo]
 *             self.object_count = self.object_counts[vbo]             # <<<<<<<<<<<<<<
 *         except:
 *             self.vert_lists.append(self.vertices)
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_counts); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1944, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_5, __pyx_v_vbo); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1944, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_count, __pyx_t_4) < 0) __PYX_ERR(0, 1944, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1942
 *     def switch(self,vbo):
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.vertices = self.vert_lists[vbo]
 *             self.object_count = self.object_counts[vbo]
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1945
 *             self.vertices = self.vert_lists[vbo]
 *             self.object_count = self.object_counts[vbo]
 *         except:             # <<<<<<<<<<<<<<
 *             self.vert_lists.append(self.vertices)
 *             self.object_counts.append(self.object_count)
 */
    /*except:*/ {
      __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.switch", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6) < 0) __PYX_ERR(0, 1945, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1946
 *             self.object_count = self.object_counts[vbo]
 *         except:
 *             self.vert_lists.append(self.vertices)             # <<<<<<<<<<<<<<
 *             self.object_counts.append(self.object_count)
 *             self.vertices = []
 */
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vert_lists); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1946, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1946, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_8); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1946, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1947
 *         except:
 *             self.vert_lists.append(self.vertices)
 *             self.object_counts.append(self.object_count)             # <<<<<<<<<<<<<<
 *             self.vertices = []
 *             self.update_list = []
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_counts); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1947, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_object_count); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1947, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_9 = __Pyx_PyObject_Append(__pyx_t_8, __pyx_t_7); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1947, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1948
 *             self.vert_lists.append(self.vertices)
 *             self.object_counts.append(self.object_count)
 *             self.vertices = []             # <<<<<<<<<<<<<<
 *             self.update_list = []
 *         self.object_count=0
 */
      __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1948, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vertices, __pyx_t_7) < 0) __PYX_ERR(0, 1948, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1949
 *             self.object_counts.append(self.object_count)
 *             self.vertices = []
 *             self.update_list = []             # <<<<<<<<<<<<<<
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]
 */
      __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1949, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_update_list, __pyx_t_7) < 0) __PYX_ERR(0, 1949, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    __pyx_L5_except_error:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1942
 *     def switch(self,vbo):
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             self.vertices = self.vert_lists[vbo]
 *             self.object_count = self.object_counts[vbo]
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1950
 *             self.vertices = []
 *             self.update_list = []
 *         self.object_count=0             # <<<<<<<<<<<<<<
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_count, __pyx_int_0) < 0) __PYX_ERR(0, 1950, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1951
 *             self.update_list = []
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]             # <<<<<<<<<<<<<<
 *     def add_buffer(self):
 *         self.vbo = glGenBuffers(1)
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbos); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_vbo); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vbo, __pyx_t_5) < 0) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1940
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):             # <<<<<<<<<<<<<<
 * 
 *         try:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.switch", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1952
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):             # <<<<<<<<<<<<<<
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_59add_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_59add_buffer = {"add_buffer", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_59add_buffer, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_59add_buffer(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("add_buffer (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_58add_buffer(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_58add_buffer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("add_buffer", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1953
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):
 *         self.vbo = glGenBuffers(1)             # <<<<<<<<<<<<<<
 *         self.vbos.append(self.vbo)
 *         self.vb_count+=1
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glGenBuffers); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_1};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vbo, __pyx_t_1) < 0) __PYX_ERR(0, 1953, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1954
 *     def add_buffer(self):
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)             # <<<<<<<<<<<<<<
 *         self.vb_count+=1
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbo); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_2); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 1954, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1955
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)
 *         self.vb_count+=1             # <<<<<<<<<<<<<<
 * 
 *     def compile(self):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vb_count); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vb_count, __pyx_t_1) < 0) __PYX_ERR(0, 1955, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1952
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):             # <<<<<<<<<<<<<<
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.add_buffer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1957
 *         self.vb_count+=1
 * 
 *     def compile(self):             # <<<<<<<<<<<<<<
 *         for vbo in self.vbos:
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_61compile(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_61compile = {"compile", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_61compile, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_61compile(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compile (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_60compile(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_60compile(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_v_vbo = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compile", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1958
 * 
 *     def compile(self):
 *         for vbo in self.vbos:             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1958, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 1958, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 1958, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1958, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_vbo, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1959
 *     def compile(self):
 *         for vbo in self.vbos:
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )             # <<<<<<<<<<<<<<
 * 
 *             glBufferData(GL_ARRAY_BUFFER, len(self.vertices)*4, (ctypes.c_float*len(self.vertices))(*self.vertices), GL_DYNAMIC_DRAW)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_t_6, __pyx_v_vbo};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1959, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1961
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 * 
 *             glBufferData(GL_ARRAY_BUFFER, len(self.vertices)*4, (ctypes.c_float*len(self.vertices))(*self.vertices), GL_DYNAMIC_DRAW)             # <<<<<<<<<<<<<<
 * 
 *             glEnableVertexAttribArray(0)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glBufferData); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = PyObject_Length(__pyx_t_7); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyInt_FromSsize_t((__pyx_t_9 * 4)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_c_float); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_9 = PyObject_Length(__pyx_t_10); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_12 = PyNumber_Multiply(__pyx_t_11, __pyx_t_10); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vertices); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PySequence_Tuple(__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_11, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL_DYNAMIC_DRAW); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[5] = {__pyx_t_12, __pyx_t_6, __pyx_t_7, __pyx_t_10, __pyx_t_11};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 4+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1963
 *             glBufferData(GL_ARRAY_BUFFER, len(self.vertices)*4, (ctypes.c_float*len(self.vertices))(*self.vertices), GL_DYNAMIC_DRAW)
 * 
 *             glEnableVertexAttribArray(0)             # <<<<<<<<<<<<<<
 *             glVertexAttribPointer(0, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10, ctypes.c_void_p(0)) # 3 pos
 *             glEnableVertexAttribArray(1)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glEnableVertexAttribArray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_11 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_int_0};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1963, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1964
 * 
 *             glEnableVertexAttribArray(0)
 *             glVertexAttribPointer(0, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10, ctypes.c_void_p(0)) # 3 pos             # <<<<<<<<<<<<<<
 *             glEnableVertexAttribArray(1)
 *             glVertexAttribPointer(1, 4 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(12)) # 4 color
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glVertexAttribPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL_FLOAT); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL_FALSE); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_cfloat); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_14, };
      __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_12};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_t_6 = __Pyx_PyInt_MultiplyObjC(__pyx_t_7, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_int_0};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[7] = {__pyx_t_13, __pyx_int_0, __pyx_int_3, __pyx_t_11, __pyx_t_10, __pyx_t_6, __pyx_t_7};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 6+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1964, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1965
 *             glEnableVertexAttribArray(0)
 *             glVertexAttribPointer(0, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10, ctypes.c_void_p(0)) # 3 pos
 *             glEnableVertexAttribArray(1)             # <<<<<<<<<<<<<<
 *             glVertexAttribPointer(1, 4 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(12)) # 4 color
 *             glEnableVertexAttribArray(2)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glEnableVertexAttribArray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_int_1};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1965, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1966
 *             glVertexAttribPointer(0, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10, ctypes.c_void_p(0)) # 3 pos
 *             glEnableVertexAttribArray(1)
 *             glVertexAttribPointer(1, 4 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(12)) # 4 color             # <<<<<<<<<<<<<<
 *             glEnableVertexAttribArray(2)
 *             glVertexAttribPointer(2, 1 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(28)) # 4
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glVertexAttribPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL_FLOAT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL_FALSE); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_cfloat); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_14 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_14, };
      __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_13};
      __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __pyx_t_11 = __Pyx_PyInt_MultiplyObjC(__pyx_t_10, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_int_12};
      __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[7] = {__pyx_t_12, __pyx_int_1, __pyx_int_4, __pyx_t_7, __pyx_t_6, __pyx_t_11, __pyx_t_10};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 6+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1967
 *             glEnableVertexAttribArray(1)
 *             glVertexAttribPointer(1, 4 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(12)) # 4 color
 *             glEnableVertexAttribArray(2)             # <<<<<<<<<<<<<<
 *             glVertexAttribPointer(2, 1 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(28)) # 4
 *             glEnableVertexAttribArray(3)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glEnableVertexAttribArray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1967, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_int_2};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1967, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1968
 *             glVertexAttribPointer(1, 4 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(12)) # 4 color
 *             glEnableVertexAttribArray(2)
 *             glVertexAttribPointer(2, 1 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(28)) # 4             # <<<<<<<<<<<<<<
 *             glEnableVertexAttribArray(3)
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glVertexAttribPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_GL_FLOAT); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL_FALSE); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_cfloat); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_14, };
      __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_12};
      __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __pyx_t_7 = __Pyx_PyInt_MultiplyObjC(__pyx_t_6, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_int_28};
      __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[7] = {__pyx_t_13, __pyx_int_2, __pyx_int_1, __pyx_t_10, __pyx_t_11, __pyx_t_7, __pyx_t_6};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 6+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1968, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1969
 *             glEnableVertexAttribArray(2)
 *             glVertexAttribPointer(2, 1 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(28)) # 4
 *             glEnableVertexAttribArray(3)             # <<<<<<<<<<<<<<
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glEnableVertexAttribArray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_int_3};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1969, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1970
 *             glVertexAttribPointer(2, 1 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(28)) # 4
 *             glEnableVertexAttribArray(3)
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *     def queue_check():
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glVertexAttribPointer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_GL_FLOAT); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_GL_FALSE); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_cfloat); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_14 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_14)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_14);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_14, };
      __pyx_t_13 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_13};
      __pyx_t_11 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __pyx_t_10 = __Pyx_PyInt_MultiplyObjC(__pyx_t_11, __pyx_int_10, 10, 0, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_ctypes); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_int_32};
      __pyx_t_11 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[7] = {__pyx_t_12, __pyx_int_3, __pyx_int_3, __pyx_t_6, __pyx_t_7, __pyx_t_10, __pyx_t_11};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 6+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1970, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1971
 *             glEnableVertexAttribArray(3)
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )             # <<<<<<<<<<<<<<
 *     def queue_check():
 *         """check and execute queue """
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_10 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_11, __pyx_int_0};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1971, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1958
 * 
 *     def compile(self):
 *         for vbo in self.vbos:             # <<<<<<<<<<<<<<
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1957
 *         self.vb_count+=1
 * 
 *     def compile(self):             # <<<<<<<<<<<<<<
 *         for vbo in self.vbos:
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.compile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vbo);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1972
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *     def queue_check():             # <<<<<<<<<<<<<<
 *         """check and execute queue """
 *     def queue():
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_63queue_check(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_62queue_check, "check and execute queue ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_63queue_check = {"queue_check", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_63queue_check, METH_NOARGS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_62queue_check};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_63queue_check(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("queue_check (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_62queue_check(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_62queue_check(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("queue_check", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1974
 *     def queue_check():
 *         """check and execute queue """
 *     def queue():             # <<<<<<<<<<<<<<
 *         """
 *         (Input list ?, +delay)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_65queue(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
PyDoc_STRVAR(__pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_64queue, "\n        (Input list ?, +delay)\n        \n        Feature - [Looping queue ?] - as bool - loop = true \n        \n        Mandatory - \n            [Queue pointer ?] \n            [Queue list] - self.update_list_queued    < List of queued objects \n                Structure - \n                    [[EVENTS1,EVENTS2],delay,[CONFIG]] \n                    CONFIG -  \n                        loop,loopreverse,delete < bools \n                        loop_delay, delete_delay < int \n                        \n                    delay - \n                        single if list check if length is the same as events if it is applicate to each end. \n                    \n                    events (Function list to be executed) \n                        \n        ");
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_65queue = {"queue", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_65queue, METH_NOARGS, __pyx_doc_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_64queue};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_65queue(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("queue (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_64queue(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_64queue(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("queue", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1995
 * 
 *         """
 *     def __init__(self,screenx,screeny):             # <<<<<<<<<<<<<<
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_67__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_67__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_67__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_67__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_screenx = 0;
  PyObject *__pyx_v_screeny = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screenx,&__pyx_n_s_screeny,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_screenx,&__pyx_n_s_screeny,0};
    #endif
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1995, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screenx)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1995, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1995, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_screeny)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1995, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1995, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1995, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_screenx = values[1];
    __pyx_v_screeny = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1995, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_66__init__(__pyx_self, __pyx_v_self, __pyx_v_screenx, __pyx_v_screeny);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_66__init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_screenx, PyObject *__pyx_v_screeny) {
  PyObject *__pyx_v_vxshader = NULL;
  PyObject *__pyx_v_fgshader = NULL;
  PyObject *__pyx_v_VERTEX_SHADER = NULL;
  PyObject *__pyx_v_FRAGMENT_SHADER = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  long __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1996
 *         """
 *     def __init__(self,screenx,screeny):
 *         glEnableClientState(GL_VERTEX_ARRAY)             # <<<<<<<<<<<<<<
 *         self.sx =  screenx
 *         self.sy =   screeny
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glEnableClientState); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_VERTEX_ARRAY); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1996, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1997
 *     def __init__(self,screenx,screeny):
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx             # <<<<<<<<<<<<<<
 *         self.sy =   screeny
 *         self.serialization = False
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sx, __pyx_v_screenx) < 0) __PYX_ERR(0, 1997, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1998
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx
 *         self.sy =   screeny             # <<<<<<<<<<<<<<
 *         self.serialization = False
 *         self.serialization_current_object = None
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sy, __pyx_v_screeny) < 0) __PYX_ERR(0, 1998, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1999
 *         self.sx =  screenx
 *         self.sy =   screeny
 *         self.serialization = False             # <<<<<<<<<<<<<<
 *         self.serialization_current_object = None
 *         self.textured = False
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_serialization, Py_False) < 0) __PYX_ERR(0, 1999, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2000
 *         self.sy =   screeny
 *         self.serialization = False
 *         self.serialization_current_object = None             # <<<<<<<<<<<<<<
 *         self.textured = False
 *         self.texture_data = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_serialization_current_object, Py_None) < 0) __PYX_ERR(0, 2000, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2001
 *         self.serialization = False
 *         self.serialization_current_object = None
 *         self.textured = False             # <<<<<<<<<<<<<<
 *         self.texture_data = []
 *         self.textures = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_textured, Py_False) < 0) __PYX_ERR(0, 2001, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2002
 *         self.serialization_current_object = None
 *         self.textured = False
 *         self.texture_data = []             # <<<<<<<<<<<<<<
 *         self.textures = []
 *         self.total_updates = 0
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_texture_data, __pyx_t_1) < 0) __PYX_ERR(0, 2002, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2003
 *         self.textured = False
 *         self.texture_data = []
 *         self.textures = []             # <<<<<<<<<<<<<<
 *         self.total_updates = 0
 *         self.vertices = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_textures, __pyx_t_1) < 0) __PYX_ERR(0, 2003, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2004
 *         self.texture_data = []
 *         self.textures = []
 *         self.total_updates = 0             # <<<<<<<<<<<<<<
 *         self.vertices = []
 *         self.vbo = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_total_updates, __pyx_int_0) < 0) __PYX_ERR(0, 2004, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2005
 *         self.textures = []
 *         self.total_updates = 0
 *         self.vertices = []             # <<<<<<<<<<<<<<
 *         self.vbo = 0
 *         self.vbos = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2005, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vertices, __pyx_t_1) < 0) __PYX_ERR(0, 2005, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2006
 *         self.total_updates = 0
 *         self.vertices = []
 *         self.vbo = 0             # <<<<<<<<<<<<<<
 *         self.vbos = []
 *         self.vb_count = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vbo, __pyx_int_0) < 0) __PYX_ERR(0, 2006, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2007
 *         self.vertices = []
 *         self.vbo = 0
 *         self.vbos = []             # <<<<<<<<<<<<<<
 *         self.vb_count = 0
 *         self.object_count = 0
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2007, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vbos, __pyx_t_1) < 0) __PYX_ERR(0, 2007, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2008
 *         self.vbo = 0
 *         self.vbos = []
 *         self.vb_count = 0             # <<<<<<<<<<<<<<
 *         self.object_count = 0
 *         self.vns = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vb_count, __pyx_int_0) < 0) __PYX_ERR(0, 2008, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2009
 *         self.vbos = []
 *         self.vb_count = 0
 *         self.object_count = 0             # <<<<<<<<<<<<<<
 *         self.vns = 0
 *         self.oj = 0
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_count, __pyx_int_0) < 0) __PYX_ERR(0, 2009, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2010
 *         self.vb_count = 0
 *         self.object_count = 0
 *         self.vns = 0             # <<<<<<<<<<<<<<
 *         self.oj = 0
 *         self.vert_lists = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vns, __pyx_int_0) < 0) __PYX_ERR(0, 2010, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2011
 *         self.object_count = 0
 *         self.vns = 0
 *         self.oj = 0             # <<<<<<<<<<<<<<
 *         self.vert_lists = []
 *         self.object_counts = []
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_oj, __pyx_int_0) < 0) __PYX_ERR(0, 2011, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2012
 *         self.vns = 0
 *         self.oj = 0
 *         self.vert_lists = []             # <<<<<<<<<<<<<<
 *         self.object_counts = []
 *         self.update_list = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_vert_lists, __pyx_t_1) < 0) __PYX_ERR(0, 2012, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2013
 *         self.oj = 0
 *         self.vert_lists = []
 *         self.object_counts = []             # <<<<<<<<<<<<<<
 *         self.update_list = []
 *         self.object_moved = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2013, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_counts, __pyx_t_1) < 0) __PYX_ERR(0, 2013, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2014
 *         self.vert_lists = []
 *         self.object_counts = []
 *         self.update_list = []             # <<<<<<<<<<<<<<
 *         self.object_moved = []
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_update_list, __pyx_t_1) < 0) __PYX_ERR(0, 2014, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2015
 *         self.object_counts = []
 *         self.update_list = []
 *         self.object_moved = []             # <<<<<<<<<<<<<<
 * 
 *         self.object_indexes = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_moved, __pyx_t_1) < 0) __PYX_ERR(0, 2015, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2017
 *         self.object_moved = []
 * 
 *         self.object_indexes = []             # <<<<<<<<<<<<<<
 * 
 *         vxshader = '''
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2017, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_object_indexes, __pyx_t_1) < 0) __PYX_ERR(0, 2017, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2019
 *         self.object_indexes = []
 * 
 *         vxshader = '''             # <<<<<<<<<<<<<<
 * #version 330 core
 * layout(location = 0) in vec4 position;
 */
  __Pyx_INCREF(__pyx_kp_s_version_330_core_layout_locatio);
  __pyx_v_vxshader = __pyx_kp_s_version_330_core_layout_locatio;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2038
 * 
 *         '''
 *         fgshader = '''             # <<<<<<<<<<<<<<
 * #version 330 core
 * layout(location = 0) out vec4 out_color;
 */
  __Pyx_INCREF(__pyx_kp_s_version_330_core_layout_locatio_2);
  __pyx_v_fgshader = __pyx_kp_s_version_330_core_layout_locatio_2;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2078
 * 
 * }'''
 *         VERTEX_SHADER = shaders.compileShader(vxshader, GL_VERTEX_SHADER)             # <<<<<<<<<<<<<<
 *         #texture(TXTARRAY[index], in_TXTC)
 *         FRAGMENT_SHADER = shaders.compileShader(fgshader, GL_FRAGMENT_SHADER)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_shaders); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_compileShader); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GL_VERTEX_SHADER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_v_vxshader, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2078, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_VERTEX_SHADER = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2080
 *         VERTEX_SHADER = shaders.compileShader(vxshader, GL_VERTEX_SHADER)
 *         #texture(TXTARRAY[index], in_TXTC)
 *         FRAGMENT_SHADER = shaders.compileShader(fgshader, GL_FRAGMENT_SHADER)             # <<<<<<<<<<<<<<
 *         self.basicshader = shaders.compileProgram(VERTEX_SHADER,FRAGMENT_SHADER)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_shaders); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_compileShader); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_FRAGMENT_SHADER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2080, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_v_fgshader, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2080, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_FRAGMENT_SHADER = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2081
 *         #texture(TXTARRAY[index], in_TXTC)
 *         FRAGMENT_SHADER = shaders.compileShader(fgshader, GL_FRAGMENT_SHADER)
 *         self.basicshader = shaders.compileProgram(VERTEX_SHADER,FRAGMENT_SHADER)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_shaders); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_compileProgram); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_2, __pyx_v_VERTEX_SHADER, __pyx_v_FRAGMENT_SHADER};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_basicshader, __pyx_t_1) < 0) __PYX_ERR(0, 2081, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2085
 * 
 *         # 160 texture units
 *         self.texture_slots = []             # <<<<<<<<<<<<<<
 *         for i in range(0,160):
 *             self.texture_slots.append(i)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_texture_slots, __pyx_t_1) < 0) __PYX_ERR(0, 2085, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2086
 *         # 160 texture units
 *         self.texture_slots = []
 *         for i in range(0,160):             # <<<<<<<<<<<<<<
 *             self.texture_slots.append(i)
 *         glUseProgram(self.basicshader)
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 0xA0; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2087
 *         self.texture_slots = []
 *         for i in range(0,160):
 *             self.texture_slots.append(i)             # <<<<<<<<<<<<<<
 *         glUseProgram(self.basicshader)
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_texture_slots); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2087, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2087, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyObject_Append(__pyx_t_1, __pyx_t_3); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 2087, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2088
 *         for i in range(0,160):
 *             self.texture_slots.append(i)
 *         glUseProgram(self.basicshader)             # <<<<<<<<<<<<<<
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         self.TXTARRAY = glGetUniformLocation(self.basicshader, 'TXTARRAY')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glUseProgram); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2089
 *             self.texture_slots.append(i)
 *         glUseProgram(self.basicshader)
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')             # <<<<<<<<<<<<<<
 *         self.TXTARRAY = glGetUniformLocation(self.basicshader, 'TXTARRAY')
 *         glUniform1iv(self.TXTARRAY, len(self.texture_slots) ,self.texture_slots)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glGetUniformLocation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_DRAW_MODE};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_DRAWMODELOC, __pyx_t_3) < 0) __PYX_ERR(0, 2089, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2090
 *         glUseProgram(self.basicshader)
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         self.TXTARRAY = glGetUniformLocation(self.basicshader, 'TXTARRAY')             # <<<<<<<<<<<<<<
 *         glUniform1iv(self.TXTARRAY, len(self.texture_slots) ,self.texture_slots)
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glGetUniformLocation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_n_s_TXTARRAY};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_TXTARRAY, __pyx_t_3) < 0) __PYX_ERR(0, 2090, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2091
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         self.TXTARRAY = glGetUniformLocation(self.basicshader, 'TXTARRAY')
 *         glUniform1iv(self.TXTARRAY, len(self.texture_slots) ,self.texture_slots)             # <<<<<<<<<<<<<<
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glUniform1iv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_TXTARRAY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_texture_slots); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_texture_slots); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_10, __pyx_t_2, __pyx_t_4, __pyx_t_9};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2092
 *         self.TXTARRAY = glGetUniformLocation(self.basicshader, 'TXTARRAY')
 *         glUniform1iv(self.TXTARRAY, len(self.texture_slots) ,self.texture_slots)
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)             # <<<<<<<<<<<<<<
 *         glUseProgram(0)
 *     def set_mode(self,mode):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glUniform1iv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_DRAWMODELOC); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2092, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_9, __pyx_int_1, __pyx_int_0};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2092, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2093
 *         glUniform1iv(self.TXTARRAY, len(self.texture_slots) ,self.texture_slots)
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)             # <<<<<<<<<<<<<<
 *     def set_mode(self,mode):
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_glUseProgram); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_9, __pyx_int_0};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1995
 * 
 *         """
 *     def __init__(self,screenx,screeny):             # <<<<<<<<<<<<<<
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_vxshader);
  __Pyx_XDECREF(__pyx_v_fgshader);
  __Pyx_XDECREF(__pyx_v_VERTEX_SHADER);
  __Pyx_XDECREF(__pyx_v_FRAGMENT_SHADER);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2094
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)
 *     def set_mode(self,mode):             # <<<<<<<<<<<<<<
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_69set_mode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_69set_mode = {"set_mode", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_69set_mode, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_69set_mode(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_mode = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_mode (wrapper)", 0);
  {
    #if CYTHON_COMPILING_IN_LIMITED_API
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_mode,0};
    #else
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_mode,0};
    #endif
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2094, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_mode)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 2094, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_mode", 1, 2, 2, 1); __PYX_ERR(0, 2094, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_mode") < 0)) __PYX_ERR(0, 2094, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_mode = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_mode", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 2094, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.set_mode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_68set_mode(__pyx_self, __pyx_v_self, __pyx_v_mode);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_68set_mode(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_mode) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_mode", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2095
 *         glUseProgram(0)
 *     def set_mode(self,mode):
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')             # <<<<<<<<<<<<<<
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glGetUniformLocation); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_basicshader); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_3, __pyx_n_s_DRAW_MODE};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2095, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_DRAWMODELOC, __pyx_t_1) < 0) __PYX_ERR(0, 2095, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2096
 *     def set_mode(self,mode):
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)             # <<<<<<<<<<<<<<
 * 
 *     def draw(self):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glUniform1iv); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_DRAWMODELOC); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_3, __pyx_int_1, __pyx_v_mode};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2096, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2094
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)
 *     def set_mode(self,mode):             # <<<<<<<<<<<<<<
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.set_mode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2098
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 * 
 *     def draw(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:
 */

/* Python wrapper */
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_71draw(PyObject *__pyx_self, PyObject *__pyx_v_self); /*proto*/
static PyMethodDef __pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_71draw = {"draw", (PyCFunction)__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_71draw, METH_O, 0};
static PyObject *__pyx_pw_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_71draw(PyObject *__pyx_self, PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("draw (wrapper)", 0);
  __pyx_r = __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_70draw(__pyx_self, ((PyObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_70draw(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("draw", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2099
 * 
 *     def draw(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )             # <<<<<<<<<<<<<<
 *         if self.textured is False:
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vbo); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2099, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2100
 *     def draw(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:             # <<<<<<<<<<<<<<
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_textured); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = (__pyx_t_1 == Py_False);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2101
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))             # <<<<<<<<<<<<<<
 *         else:
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glDrawArrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vns); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2101, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_t_4, __pyx_int_0, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2100
 *     def draw(self):
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:             # <<<<<<<<<<<<<<
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2103
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 *         else:
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glDrawArrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_GL_QUADS); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_vns); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2103, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_t_5, __pyx_int_0, __pyx_t_3};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2103, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2104
 *         else:
 *             glDrawArrays(GL_QUADS, 0, int(self.vns))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0 )             # <<<<<<<<<<<<<<
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_glBindBuffer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_GL_ARRAY_BUFFER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_int_0};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2104, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2098
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 * 
 *     def draw(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine.DragoObject.draw", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

static int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {
  static const char* internal_type_names[] = {
    "__pyx_ctuple_double",
    "__pyx_ctuple_double_struct",
    "__pyx_ctuple_long",
    "__pyx_ctuple_long__and_long",
    "__pyx_ctuple_long__and_long__and_long",
    "__pyx_ctuple_long__and_long__and_long__and_long",
    "__pyx_ctuple_long__and_long__and_long__and_long_struct",
    "__pyx_ctuple_long__and_long__and_long_struct",
    "__pyx_ctuple_long__and_long_struct",
    "__pyx_ctuple_long_struct",
    0
  };
  const char** type_name = internal_type_names;
  while (*type_name) {
    if (__Pyx_StrEq(name, *type_name)) {
      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);
      goto bad;
    }
    type_name++;
  }
  if (0);
  else {
    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;
  }
  return 0;
  bad:
  return -1;
}

static int
__Pyx_import_all_from(PyObject *locals, PyObject *v)
{
    PyObject *all = PyObject_GetAttrString(v, "__all__");
    PyObject *dict, *name, *value;
    int skip_leading_underscores = 0;
    int pos, err;
    if (all == NULL) {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError))
            return -1;
        PyErr_Clear();
        dict = PyObject_GetAttrString(v, "__dict__");
        if (dict == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError))
                return -1;
            PyErr_SetString(PyExc_ImportError,
            "from-import-* object has no __dict__ and no __all__");
            return -1;
        }
#if PY_MAJOR_VERSION < 3
        all = PyObject_CallMethod(dict, (char *)"keys", NULL);
#else
        all = PyMapping_Keys(dict);
#endif
        Py_DECREF(dict);
        if (all == NULL)
            return -1;
        skip_leading_underscores = 1;
    }
    for (pos = 0, err = 0; ; pos++) {
        name = PySequence_GetItem(all, pos);
        if (name == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_IndexError))
                err = -1;
            else
                PyErr_Clear();
            break;
        }
        if (skip_leading_underscores &&
#if PY_MAJOR_VERSION < 3
            PyString_Check(name) &&
            PyString_AS_STRING(name)[0] == '_')
#else
            PyUnicode_Check(name) &&
            PyUnicode_AS_UNICODE(name)[0] == '_')
#endif
        {
            Py_DECREF(name);
            continue;
        }
        value = PyObject_GetAttr(v, name);
        if (value == NULL)
            err = -1;
        else if (PyDict_CheckExact(locals))
            err = PyDict_SetItem(locals, name, value);
        else
            err = PyObject_SetItem(locals, name, value);
        Py_DECREF(name);
        Py_XDECREF(value);
        if (err != 0)
            break;
    }
    Py_DECREF(all);
    return err;
}
static int __pyx_import_star(PyObject* m) {
    int i;
    int ret = -1;
    char* s;
    PyObject *locals = 0;
    PyObject *list = 0;
#if PY_MAJOR_VERSION >= 3
    PyObject *utf8_name = 0;
#endif
    PyObject *name;
    PyObject *item;
    locals = PyDict_New();              if (!locals) goto bad;
    if (__Pyx_import_all_from(locals, m) < 0) goto bad;
    list = PyDict_Items(locals);        if (!list) goto bad;
    for(i=0; i<PyList_GET_SIZE(list); i++) {
        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);
        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);
#if PY_MAJOR_VERSION >= 3
        utf8_name = PyUnicode_AsUTF8String(name);
        if (!utf8_name) goto bad;
        s = PyBytes_AS_STRING(utf8_name);
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
        Py_DECREF(utf8_name); utf8_name = 0;
#else
        s = PyString_AsString(name);
        if (!s) goto bad;
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
#endif
    }
    ret = 0;
bad:
    Py_XDECREF(locals);
    Py_XDECREF(list);
#if PY_MAJOR_VERSION >= 3
    Py_XDECREF(utf8_name);
#endif
    return ret;
}


#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  #if CYTHON_COMPILING_IN_LIMITED_API
  {0, __pyx_k_AssertionError, sizeof(__pyx_k_AssertionError), 0, 0, 1, 1},
  {0, __pyx_k_B1, sizeof(__pyx_k_B1), 0, 0, 1, 1},
  {0, __pyx_k_B1_Motion, sizeof(__pyx_k_B1_Motion), 0, 0, 1, 0},
  {0, __pyx_k_B2, sizeof(__pyx_k_B2), 0, 0, 1, 1},
  {0, __pyx_k_B2_Motion, sizeof(__pyx_k_B2_Motion), 0, 0, 1, 0},
  {0, __pyx_k_B3, sizeof(__pyx_k_B3), 0, 0, 1, 1},
  {0, __pyx_k_B3_Motion, sizeof(__pyx_k_B3_Motion), 0, 0, 1, 0},
  {0, __pyx_k_BOOL, sizeof(__pyx_k_BOOL), 0, 0, 1, 1},
  {0, __pyx_k_BOX_SIZE, sizeof(__pyx_k_BOX_SIZE), 0, 0, 1, 1},
  {0, __pyx_k_BOX_START, sizeof(__pyx_k_BOX_START), 0, 0, 1, 1},
  {0, __pyx_k_BP, sizeof(__pyx_k_BP), 0, 0, 1, 1},
  {0, __pyx_k_BR, sizeof(__pyx_k_BR), 0, 0, 1, 1},
  {0, __pyx_k_Before, sizeof(__pyx_k_Before), 0, 0, 1, 0},
  {0, __pyx_k_ButtonRelease_2, sizeof(__pyx_k_ButtonRelease_2), 0, 0, 1, 0},
  {0, __pyx_k_Button_1, sizeof(__pyx_k_Button_1), 0, 0, 1, 0},
  {0, __pyx_k_Button_1_2, sizeof(__pyx_k_Button_1_2), 0, 0, 1, 0},
  {0, __pyx_k_Button_1_Translate_Button_2_Rota, sizeof(__pyx_k_Button_1_Translate_Button_2_Rota), 0, 0, 1, 0},
  {0, __pyx_k_Button_2, sizeof(__pyx_k_Button_2), 0, 0, 1, 0},
  {0, __pyx_k_Button_2_2, sizeof(__pyx_k_Button_2_2), 0, 0, 1, 0},
  {0, __pyx_k_Button_3, sizeof(__pyx_k_Button_3), 0, 0, 1, 0},
  {0, __pyx_k_Button_3_2, sizeof(__pyx_k_Button_3_2), 0, 0, 1, 0},
  {0, __pyx_k_CFUNCTYPE, sizeof(__pyx_k_CFUNCTYPE), 0, 0, 1, 1},
  {0, __pyx_k_COLOR, sizeof(__pyx_k_COLOR), 0, 0, 1, 1},
  {0, __pyx_k_ChoosePixelFormat, sizeof(__pyx_k_ChoosePixelFormat), 0, 0, 1, 1},
  {0, __pyx_k_Colormap, sizeof(__pyx_k_Colormap), 0, 0, 1, 1},
  {0, __pyx_k_Common_code_for_windows_x11, sizeof(__pyx_k_Common_code_for_windows_x11), 0, 0, 1, 0},
  {0, __pyx_k_Configure, sizeof(__pyx_k_Configure), 0, 0, 1, 0},
  {0, __pyx_k_Cords, sizeof(__pyx_k_Cords), 0, 0, 1, 1},
  {0, __pyx_k_Create, sizeof(__pyx_k_Create), 0, 0, 1, 0},
  {0, __pyx_k_D2DEvents, sizeof(__pyx_k_D2DEvents), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents___init, sizeof(__pyx_k_D2DEvents___init), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents__pas, sizeof(__pyx_k_D2DEvents__pas), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_add_event, sizeof(__pyx_k_D2DEvents_add_event), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_check, sizeof(__pyx_k_D2DEvents_check), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_checkkeypress, sizeof(__pyx_k_D2DEvents_checkkeypress), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_checklclick, sizeof(__pyx_k_D2DEvents_checklclick), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_checkmclick, sizeof(__pyx_k_D2DEvents_checkmclick), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_checkmotion, sizeof(__pyx_k_D2DEvents_checkmotion), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_checkrclick, sizeof(__pyx_k_D2DEvents_checkrclick), 0, 0, 1, 1},
  {0, __pyx_k_D2DEvents_clear_events, sizeof(__pyx_k_D2DEvents_clear_events), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER, sizeof(__pyx_k_D2DRENDER), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER_render, sizeof(__pyx_k_D2DRENDER_render), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER_render_letter, sizeof(__pyx_k_D2DRENDER_render_letter), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER_render_quad, sizeof(__pyx_k_D2DRENDER_render_quad), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER_render_text, sizeof(__pyx_k_D2DRENDER_render_text), 0, 0, 1, 1},
  {0, __pyx_k_D2DRENDER_render_texture_quad, sizeof(__pyx_k_D2DRENDER_render_texture_quad), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender, sizeof(__pyx_k_D2Dprerender), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender___init, sizeof(__pyx_k_D2Dprerender___init), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender_create_font, sizeof(__pyx_k_D2Dprerender_create_font), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender_prerender_quad, sizeof(__pyx_k_D2Dprerender_prerender_quad), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender_prerender_text, sizeof(__pyx_k_D2Dprerender_prerender_text), 0, 0, 1, 1},
  {0, __pyx_k_D2Dprerender_prerender_texturequ, sizeof(__pyx_k_D2Dprerender_prerender_texturequ), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw, sizeof(__pyx_k_D2Draw), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw___init, sizeof(__pyx_k_D2Draw___init), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw__cords_to_ratio, sizeof(__pyx_k_D2Draw__cords_to_ratio), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw__resize, sizeof(__pyx_k_D2Draw__resize), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw__tex_arrayn_translate, sizeof(__pyx_k_D2Draw__tex_arrayn_translate), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw__texture_cords_to_ratio, sizeof(__pyx_k_D2Draw__texture_cords_to_ratio), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_add_animation, sizeof(__pyx_k_D2Draw_add_animation), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_del_animation, sizeof(__pyx_k_D2Draw_del_animation), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_line, sizeof(__pyx_k_D2Draw_draw_line), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_lines, sizeof(__pyx_k_D2Draw_draw_lines), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_point, sizeof(__pyx_k_D2Draw_draw_point), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_points, sizeof(__pyx_k_D2Draw_draw_points), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_quad, sizeof(__pyx_k_D2Draw_draw_quad), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_quad_texture, sizeof(__pyx_k_D2Draw_draw_quad_texture), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_quad_texture_array, sizeof(__pyx_k_D2Draw_draw_quad_texture_array), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_draw_text, sizeof(__pyx_k_D2Draw_draw_text), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_resize, sizeof(__pyx_k_D2Draw_resize), 0, 0, 1, 1},
  {0, __pyx_k_D2Draw_update_animation, sizeof(__pyx_k_D2Draw_update_animation), 0, 0, 1, 1},
  {0, __pyx_k_DRAWMODELOC, sizeof(__pyx_k_DRAWMODELOC), 0, 0, 1, 1},
  {0, __pyx_k_DRAW_MODE, sizeof(__pyx_k_DRAW_MODE), 0, 0, 1, 1},
  {0, __pyx_k_D_vips_dev_8_9_bin, sizeof(__pyx_k_D_vips_dev_8_9_bin), 0, 0, 1, 0},
  {0, __pyx_k_Dialog, sizeof(__pyx_k_Dialog), 0, 0, 1, 1},
  {0, __pyx_k_Display, sizeof(__pyx_k_Display), 0, 0, 1, 1},
  {0, __pyx_k_Do_something_to_create_this_obje, sizeof(__pyx_k_Do_something_to_create_this_obje), 0, 0, 1, 0},
  {0, __pyx_k_Done, sizeof(__pyx_k_Done), 0, 0, 1, 1},
  {0, __pyx_k_Done_making_a_first_context, sizeof(__pyx_k_Done_making_a_first_context), 0, 0, 1, 0},
  {0, __pyx_k_Drago2Dengine___versions___win32, sizeof(__pyx_k_Drago2Dengine___versions___win32), 0, 0, 1, 1},
  {0, __pyx_k_Drago2Dengine_py, sizeof(__pyx_k_Drago2Dengine_py), 0, 0, 1, 0},
  {0, __pyx_k_DragoObject, sizeof(__pyx_k_DragoObject), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject___docs, sizeof(__pyx_k_DragoObject___docs), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject___init, sizeof(__pyx_k_DragoObject___init), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject__is_serialized, sizeof(__pyx_k_DragoObject__is_serialized), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject__load_scene, sizeof(__pyx_k_DragoObject__load_scene), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_add_buffer, sizeof(__pyx_k_DragoObject_add_buffer), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_add_textureupdate, sizeof(__pyx_k_DragoObject_add_textureupdate), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_bind_buffer, sizeof(__pyx_k_DragoObject_bind_buffer), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_clear, sizeof(__pyx_k_DragoObject_clear), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_compile, sizeof(__pyx_k_DragoObject_compile), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_create_letter, sizeof(__pyx_k_DragoObject_create_letter), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_create_quad, sizeof(__pyx_k_DragoObject_create_quad), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_delete_obj, sizeof(__pyx_k_DragoObject_delete_obj), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_draw, sizeof(__pyx_k_DragoObject_draw), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_draw_text, sizeof(__pyx_k_DragoObject_draw_text), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_edit_color, sizeof(__pyx_k_DragoObject_edit_color), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_edit_letter, sizeof(__pyx_k_DragoObject_edit_letter), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_edit_pos, sizeof(__pyx_k_DragoObject_edit_pos), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_edit_texture, sizeof(__pyx_k_DragoObject_edit_texture), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_edit_tpos, sizeof(__pyx_k_DragoObject_edit_tpos), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_buffer, sizeof(__pyx_k_DragoObject_get_buffer), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_color, sizeof(__pyx_k_DragoObject_get_color), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_objectindexes, sizeof(__pyx_k_DragoObject_get_objectindexes), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_pos, sizeof(__pyx_k_DragoObject_get_pos), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_shader, sizeof(__pyx_k_DragoObject_get_shader), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_texid, sizeof(__pyx_k_DragoObject_get_texid), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_get_vertices, sizeof(__pyx_k_DragoObject_get_vertices), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_move, sizeof(__pyx_k_DragoObject_move), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_move_down, sizeof(__pyx_k_DragoObject_move_down), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_move_up, sizeof(__pyx_k_DragoObject_move_up), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_queue, sizeof(__pyx_k_DragoObject_queue), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_queue_check, sizeof(__pyx_k_DragoObject_queue_check), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_serialize_to_obj, sizeof(__pyx_k_DragoObject_serialize_to_obj), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_set_mode, sizeof(__pyx_k_DragoObject_set_mode), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_switch, sizeof(__pyx_k_DragoObject_switch), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_update, sizeof(__pyx_k_DragoObject_update), 0, 0, 1, 1},
  {0, __pyx_k_DragoObject_use_texture, sizeof(__pyx_k_DragoObject_use_texture), 0, 0, 1, 1},
  {0, __pyx_k_EventDelay, sizeof(__pyx_k_EventDelay), 0, 0, 1, 1},
  {0, __pyx_k_EventOff, sizeof(__pyx_k_EventOff), 0, 0, 1, 1},
  {0, __pyx_k_EventOn, sizeof(__pyx_k_EventOn), 0, 0, 1, 1},
  {0, __pyx_k_EventType, sizeof(__pyx_k_EventType), 0, 0, 1, 1},
  {0, __pyx_k_Expose, sizeof(__pyx_k_Expose), 0, 0, 1, 0},
  {0, __pyx_k_Extension_list, sizeof(__pyx_k_Extension_list), 0, 0, 1, 0},
  {0, __pyx_k_FRAGMENT_SHADER, sizeof(__pyx_k_FRAGMENT_SHADER), 0, 0, 1, 1},
  {0, __pyx_k_FT_LOAD_FORCE_AUTOHINT, sizeof(__pyx_k_FT_LOAD_FORCE_AUTOHINT), 0, 0, 1, 1},
  {0, __pyx_k_FT_LOAD_RENDER, sizeof(__pyx_k_FT_LOAD_RENDER), 0, 0, 1, 1},
  {0, __pyx_k_Face, sizeof(__pyx_k_Face), 0, 0, 1, 1},
  {0, __pyx_k_Frame, sizeof(__pyx_k_Frame), 0, 0, 1, 1},
  {0, __pyx_k_GL, sizeof(__pyx_k_GL), 0, 0, 1, 1},
  {0, __pyx_k_GLU, sizeof(__pyx_k_GLU), 0, 0, 1, 1},
  {0, __pyx_k_GLUT, sizeof(__pyx_k_GLUT), 0, 0, 1, 1},
  {0, __pyx_k_GLX, sizeof(__pyx_k_GLX), 0, 0, 1, 1},
  {0, __pyx_k_GLX_BLUE_SIZE, sizeof(__pyx_k_GLX_BLUE_SIZE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_DEPTH_SIZE, sizeof(__pyx_k_GLX_DEPTH_SIZE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_DOUBLEBUFFER, sizeof(__pyx_k_GLX_DOUBLEBUFFER), 0, 0, 1, 1},
  {0, __pyx_k_GLX_DRAWABLE_TYPE, sizeof(__pyx_k_GLX_DRAWABLE_TYPE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_GREEN_SIZE, sizeof(__pyx_k_GLX_GREEN_SIZE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_RED_SIZE, sizeof(__pyx_k_GLX_RED_SIZE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_RENDER_TYPE, sizeof(__pyx_k_GLX_RENDER_TYPE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_RGBA, sizeof(__pyx_k_GLX_RGBA), 0, 0, 1, 1},
  {0, __pyx_k_GLX_RGBA_BIT, sizeof(__pyx_k_GLX_RGBA_BIT), 0, 0, 1, 1},
  {0, __pyx_k_GLX_RGBA_TYPE, sizeof(__pyx_k_GLX_RGBA_TYPE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_WINDOW_BIT, sizeof(__pyx_k_GLX_WINDOW_BIT), 0, 0, 1, 1},
  {0, __pyx_k_GLX_X_RENDERABLE, sizeof(__pyx_k_GLX_X_RENDERABLE), 0, 0, 1, 1},
  {0, __pyx_k_GLX_version_d_d, sizeof(__pyx_k_GLX_version_d_d), 0, 0, 1, 0},
  {0, __pyx_k_GL_ALPHA, sizeof(__pyx_k_GL_ALPHA), 0, 0, 1, 1},
  {0, __pyx_k_GL_ARRAY_BUFFER, sizeof(__pyx_k_GL_ARRAY_BUFFER), 0, 0, 1, 1},
  {0, __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFIL, sizeof(__pyx_k_GL_CONTEXT_COMPATIBILITY_PROFIL), 0, 0, 1, 0},
  {0, __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFILE, sizeof(__pyx_k_GL_CONTEXT_COMPATIBILITY_PROFILE), 0, 0, 1, 1},
  {0, __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT, sizeof(__pyx_k_GL_CONTEXT_CORE_PROFILE_BIT), 0, 0, 1, 0},
  {0, __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT_2, sizeof(__pyx_k_GL_CONTEXT_CORE_PROFILE_BIT_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_CONTEXT_PROFILE_MASK, sizeof(__pyx_k_GL_CONTEXT_PROFILE_MASK), 0, 0, 1, 1},
  {0, __pyx_k_GL_DEPTH_TEST, sizeof(__pyx_k_GL_DEPTH_TEST), 0, 0, 1, 1},
  {0, __pyx_k_GL_DYNAMIC_DRAW, sizeof(__pyx_k_GL_DYNAMIC_DRAW), 0, 0, 1, 1},
  {0, __pyx_k_GL_EXTENSIONS, sizeof(__pyx_k_GL_EXTENSIONS), 0, 0, 1, 1},
  {0, __pyx_k_GL_FALSE, sizeof(__pyx_k_GL_FALSE), 0, 0, 1, 1},
  {0, __pyx_k_GL_FLOAT, sizeof(__pyx_k_GL_FLOAT), 0, 0, 1, 1},
  {0, __pyx_k_GL_FRAGMENT_SHADER, sizeof(__pyx_k_GL_FRAGMENT_SHADER), 0, 0, 1, 1},
  {0, __pyx_k_GL_LESS, sizeof(__pyx_k_GL_LESS), 0, 0, 1, 1},
  {0, __pyx_k_GL_LIGHT0, sizeof(__pyx_k_GL_LIGHT0), 0, 0, 1, 1},
  {0, __pyx_k_GL_LIGHTING, sizeof(__pyx_k_GL_LIGHTING), 0, 0, 1, 1},
  {0, __pyx_k_GL_LINEAR, sizeof(__pyx_k_GL_LINEAR), 0, 0, 1, 1},
  {0, __pyx_k_GL_MAJOR_VERSION, sizeof(__pyx_k_GL_MAJOR_VERSION), 0, 0, 1, 0},
  {0, __pyx_k_GL_MAJOR_VERSION_2, sizeof(__pyx_k_GL_MAJOR_VERSION_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_MATRIX_MODE, sizeof(__pyx_k_GL_MATRIX_MODE), 0, 0, 1, 1},
  {0, __pyx_k_GL_MINOR_VERSION, sizeof(__pyx_k_GL_MINOR_VERSION), 0, 0, 1, 0},
  {0, __pyx_k_GL_MINOR_VERSION_2, sizeof(__pyx_k_GL_MINOR_VERSION_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_MODELVIEW, sizeof(__pyx_k_GL_MODELVIEW), 0, 0, 1, 1},
  {0, __pyx_k_GL_NEAREST, sizeof(__pyx_k_GL_NEAREST), 0, 0, 1, 1},
  {0, __pyx_k_GL_POINTS, sizeof(__pyx_k_GL_POINTS), 0, 0, 1, 1},
  {0, __pyx_k_GL_POSITION, sizeof(__pyx_k_GL_POSITION), 0, 0, 1, 1},
  {0, __pyx_k_GL_PROJECTION, sizeof(__pyx_k_GL_PROJECTION), 0, 0, 1, 1},
  {0, __pyx_k_GL_QUADS, sizeof(__pyx_k_GL_QUADS), 0, 0, 1, 1},
  {0, __pyx_k_GL_RENDERER, sizeof(__pyx_k_GL_RENDERER), 0, 0, 1, 0},
  {0, __pyx_k_GL_RENDERER_2, sizeof(__pyx_k_GL_RENDERER_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_REPEAT, sizeof(__pyx_k_GL_REPEAT), 0, 0, 1, 1},
  {0, __pyx_k_GL_RGB, sizeof(__pyx_k_GL_RGB), 0, 0, 1, 1},
  {0, __pyx_k_GL_RGBA, sizeof(__pyx_k_GL_RGBA), 0, 0, 1, 1},
  {0, __pyx_k_GL_SHADING_LANGUAGE_VERSION, sizeof(__pyx_k_GL_SHADING_LANGUAGE_VERSION), 0, 0, 1, 0},
  {0, __pyx_k_GL_SHADING_LANGUAGE_VERSION_2, sizeof(__pyx_k_GL_SHADING_LANGUAGE_VERSION_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_TEXTURE_2D, sizeof(__pyx_k_GL_TEXTURE_2D), 0, 0, 1, 1},
  {0, __pyx_k_GL_TEXTURE_MAG_FILTER, sizeof(__pyx_k_GL_TEXTURE_MAG_FILTER), 0, 0, 1, 1},
  {0, __pyx_k_GL_TEXTURE_MIN_FILTER, sizeof(__pyx_k_GL_TEXTURE_MIN_FILTER), 0, 0, 1, 1},
  {0, __pyx_k_GL_TEXTURE_WRAP_S, sizeof(__pyx_k_GL_TEXTURE_WRAP_S), 0, 0, 1, 1},
  {0, __pyx_k_GL_TEXTURE_WRAP_T, sizeof(__pyx_k_GL_TEXTURE_WRAP_T), 0, 0, 1, 1},
  {0, __pyx_k_GL_TRUE, sizeof(__pyx_k_GL_TRUE), 0, 0, 1, 1},
  {0, __pyx_k_GL_UNPACK_ALIGNMENT, sizeof(__pyx_k_GL_UNPACK_ALIGNMENT), 0, 0, 1, 1},
  {0, __pyx_k_GL_UNSIGNED_BYTE, sizeof(__pyx_k_GL_UNSIGNED_BYTE), 0, 0, 1, 1},
  {0, __pyx_k_GL_VENDOR, sizeof(__pyx_k_GL_VENDOR), 0, 0, 1, 0},
  {0, __pyx_k_GL_VENDOR_2, sizeof(__pyx_k_GL_VENDOR_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_VERSION, sizeof(__pyx_k_GL_VERSION), 0, 0, 1, 0},
  {0, __pyx_k_GL_VERSION_2, sizeof(__pyx_k_GL_VERSION_2), 0, 0, 1, 1},
  {0, __pyx_k_GL_VERTEX_ARRAY, sizeof(__pyx_k_GL_VERTEX_ARRAY), 0, 0, 1, 1},
  {0, __pyx_k_GL_VERTEX_SHADER, sizeof(__pyx_k_GL_VERTEX_SHADER), 0, 0, 1, 1},
  {0, __pyx_k_GLint, sizeof(__pyx_k_GLint), 0, 0, 1, 1},
  {0, __pyx_k_GetDC, sizeof(__pyx_k_GetDC), 0, 0, 1, 1},
  {0, __pyx_k_Got_a_matching_visual_index_d_d, sizeof(__pyx_k_Got_a_matching_visual_index_d_d), 0, 0, 1, 0},
  {0, __pyx_k_HDC, sizeof(__pyx_k_HDC), 0, 0, 1, 1},
  {0, __pyx_k_Hover, sizeof(__pyx_k_Hover), 0, 0, 1, 1},
  {0, __pyx_k_Image, sizeof(__pyx_k_Image), 0, 0, 1, 1},
  {0, __pyx_k_Imagenumpy, sizeof(__pyx_k_Imagenumpy), 0, 0, 1, 1},
  {0, __pyx_k_Is_Direct, sizeof(__pyx_k_Is_Direct), 0, 0, 1, 0},
  {0, __pyx_k_KeyPress, sizeof(__pyx_k_KeyPress), 0, 0, 1, 1},
  {0, __pyx_k_KeyPress_2, sizeof(__pyx_k_KeyPress_2), 0, 0, 1, 0},
  {0, __pyx_k_LeftClick, sizeof(__pyx_k_LeftClick), 0, 0, 1, 1},
  {0, __pyx_k_LoadLibrary, sizeof(__pyx_k_LoadLibrary), 0, 0, 1, 1},
  {0, __pyx_k_MN, sizeof(__pyx_k_MN), 0, 0, 1, 1},
  {0, __pyx_k_Map, sizeof(__pyx_k_Map), 0, 0, 1, 0},
  {0, __pyx_k_MiddleClick, sizeof(__pyx_k_MiddleClick), 0, 0, 1, 1},
  {0, __pyx_k_Motion, sizeof(__pyx_k_Motion), 0, 0, 1, 1},
  {0, __pyx_k_Motion_2, sizeof(__pyx_k_Motion_2), 0, 0, 1, 0},
  {0, __pyx_k_MouseHover, sizeof(__pyx_k_MouseHover), 0, 0, 1, 1},
  {0, __pyx_k_MouseLC, sizeof(__pyx_k_MouseLC), 0, 0, 1, 1},
  {0, __pyx_k_MouseMC, sizeof(__pyx_k_MouseMC), 0, 0, 1, 1},
  {0, __pyx_k_MouseRC, sizeof(__pyx_k_MouseRC), 0, 0, 1, 1},
  {0, __pyx_k_NEWLINE, sizeof(__pyx_k_NEWLINE), 0, 0, 1, 1},
  {0, __pyx_k_NOENABLE, sizeof(__pyx_k_NOENABLE), 0, 0, 1, 1},
  {0, __pyx_k_New_Texture, sizeof(__pyx_k_New_Texture), 0, 0, 1, 1},
  {0, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {0, __pyx_k_Number_of_FBconfigs, sizeof(__pyx_k_Number_of_FBconfigs), 0, 0, 1, 0},
  {0, __pyx_k_Number_of_extensions, sizeof(__pyx_k_Number_of_extensions), 0, 0, 1, 0},
  {0, __pyx_k_OBJECT, sizeof(__pyx_k_OBJECT), 0, 0, 1, 1},
  {0, __pyx_k_Offests, sizeof(__pyx_k_Offests), 0, 0, 1, 1},
  {0, __pyx_k_Ok, sizeof(__pyx_k_Ok), 0, 0, 1, 1},
  {0, __pyx_k_Old_context_errors_arose, sizeof(__pyx_k_Old_context_errors_arose), 0, 0, 1, 0},
  {0, __pyx_k_OnKey, sizeof(__pyx_k_OnKey), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL, sizeof(__pyx_k_OpenGL), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame, sizeof(__pyx_k_OpenGLFrame), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame__context, sizeof(__pyx_k_OpenGLFrame__context), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame__window, sizeof(__pyx_k_OpenGLFrame__window), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame_tkCreateContext, sizeof(__pyx_k_OpenGLFrame_tkCreateContext), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame_tkMakeCurrent, sizeof(__pyx_k_OpenGLFrame_tkMakeCurrent), 0, 0, 1, 1},
  {0, __pyx_k_OpenGLFrame_tkSwapBuffers, sizeof(__pyx_k_OpenGLFrame_tkSwapBuffers), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL_GL, sizeof(__pyx_k_OpenGL_GL), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL_GL_shaders, sizeof(__pyx_k_OpenGL_GL_shaders), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL_WGL, sizeof(__pyx_k_OpenGL_WGL), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL_raw_GLX__types, sizeof(__pyx_k_OpenGL_raw_GLX__types), 0, 0, 1, 1},
  {0, __pyx_k_OpenGL_raw__GLX, sizeof(__pyx_k_OpenGL_raw__GLX), 0, 0, 1, 1},
  {0, __pyx_k_Opengl, sizeof(__pyx_k_Opengl), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_StartRotate, sizeof(__pyx_k_Opengl_StartRotate), 0, 0, 1, 1},
  {0, __pyx_k_Opengl___init, sizeof(__pyx_k_Opengl___init), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_activate, sizeof(__pyx_k_Opengl_activate), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_basic_lighting, sizeof(__pyx_k_Opengl_basic_lighting), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_do_AutoSpin, sizeof(__pyx_k_Opengl_do_AutoSpin), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_freecalc, sizeof(__pyx_k_Opengl_freecalc), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_help, sizeof(__pyx_k_Opengl_help), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_initgl, sizeof(__pyx_k_Opengl_initgl), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_redraw, sizeof(__pyx_k_Opengl_redraw), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_reset, sizeof(__pyx_k_Opengl_reset), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_set_background, sizeof(__pyx_k_Opengl_set_background), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_set_centerpoint, sizeof(__pyx_k_Opengl_set_centerpoint), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_set_eyepoint, sizeof(__pyx_k_Opengl_set_eyepoint), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkAutoSpin, sizeof(__pyx_k_Opengl_tkAutoSpin), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkExpose, sizeof(__pyx_k_Opengl_tkExpose), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkHandlePick, sizeof(__pyx_k_Opengl_tkHandlePick), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkPrint, sizeof(__pyx_k_Opengl_tkPrint), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkRecordMouse, sizeof(__pyx_k_Opengl_tkRecordMouse), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkRedraw, sizeof(__pyx_k_Opengl_tkRedraw), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkRotate, sizeof(__pyx_k_Opengl_tkRotate), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkScale, sizeof(__pyx_k_Opengl_tkScale), 0, 0, 1, 1},
  {0, __pyx_k_Opengl_tkTranslate, sizeof(__pyx_k_Opengl_tkTranslate), 0, 0, 1, 1},
  {0, __pyx_k_PATH, sizeof(__pyx_k_PATH), 0, 0, 1, 1},
  {0, __pyx_k_PFD_DOUBLEBUFFER, sizeof(__pyx_k_PFD_DOUBLEBUFFER), 0, 0, 1, 1},
  {0, __pyx_k_PFD_DRAW_TO_WINDOW, sizeof(__pyx_k_PFD_DRAW_TO_WINDOW), 0, 0, 1, 1},
  {0, __pyx_k_PFD_MAIN_PLANE, sizeof(__pyx_k_PFD_MAIN_PLANE), 0, 0, 1, 1},
  {0, __pyx_k_PFD_SUPPORT_OPENGL, sizeof(__pyx_k_PFD_SUPPORT_OPENGL), 0, 0, 1, 1},
  {0, __pyx_k_PFD_TYPE_RGBA, sizeof(__pyx_k_PFD_TYPE_RGBA), 0, 0, 1, 1},
  {0, __pyx_k_PIL, sizeof(__pyx_k_PIL), 0, 0, 1, 1},
  {0, __pyx_k_PIXELFORMATDESCRIPTOR, sizeof(__pyx_k_PIXELFORMATDESCRIPTOR), 0, 0, 1, 1},
  {0, __pyx_k_POINTER, sizeof(__pyx_k_POINTER), 0, 0, 1, 1},
  {0, __pyx_k_PRERENDER_VBO, sizeof(__pyx_k_PRERENDER_VBO), 0, 0, 1, 1},
  {0, __pyx_k_PRERENDER_VBO___init, sizeof(__pyx_k_PRERENDER_VBO___init), 0, 0, 1, 1},
  {0, __pyx_k_RAW_DATA, sizeof(__pyx_k_RAW_DATA), 0, 0, 1, 1},
  {0, __pyx_k_RENDER_VBO, sizeof(__pyx_k_RENDER_VBO), 0, 0, 1, 1},
  {0, __pyx_k_RENDER_VBO___init, sizeof(__pyx_k_RENDER_VBO___init), 0, 0, 1, 1},
  {0, __pyx_k_RGB, sizeof(__pyx_k_RGB), 0, 0, 1, 1},
  {0, __pyx_k_RawOpengl, sizeof(__pyx_k_RawOpengl), 0, 0, 1, 1},
  {0, __pyx_k_RawOpengl___init, sizeof(__pyx_k_RawOpengl___init), 0, 0, 1, 1},
  {0, __pyx_k_RawOpengl_tkRedraw, sizeof(__pyx_k_RawOpengl_tkRedraw), 0, 0, 1, 1},
  {0, __pyx_k_RightClick, sizeof(__pyx_k_RightClick), 0, 0, 1, 1},
  {0, __pyx_k_SHADER, sizeof(__pyx_k_SHADER), 0, 0, 1, 1},
  {0, __pyx_k_SHADER___init, sizeof(__pyx_k_SHADER___init), 0, 0, 1, 1},
  {0, __pyx_k_Screen_is, sizeof(__pyx_k_Screen_is), 0, 0, 1, 0},
  {0, __pyx_k_SetPixelFormat, sizeof(__pyx_k_SetPixelFormat), 0, 0, 1, 1},
  {0, __pyx_k_Shift_Button_1, sizeof(__pyx_k_Shift_Button_1), 0, 0, 1, 0},
  {0, __pyx_k_Spacing_add, sizeof(__pyx_k_Spacing_add), 0, 0, 1, 1},
  {0, __pyx_k_StartRotate, sizeof(__pyx_k_StartRotate), 0, 0, 1, 1},
  {0, __pyx_k_SwapBuffers, sizeof(__pyx_k_SwapBuffers), 0, 0, 1, 1},
  {0, __pyx_k_TAB, sizeof(__pyx_k_TAB), 0, 0, 1, 1},
  {0, __pyx_k_TEXTUREID, sizeof(__pyx_k_TEXTUREID), 0, 0, 1, 1},
  {0, __pyx_k_TEXTURE_DISPLAY_METHOD, sizeof(__pyx_k_TEXTURE_DISPLAY_METHOD), 0, 0, 1, 1},
  {0, __pyx_k_TXC, sizeof(__pyx_k_TXC), 0, 0, 1, 1},
  {0, __pyx_k_TXTARRAY, sizeof(__pyx_k_TXTARRAY), 0, 0, 1, 1},
  {0, __pyx_k_Texture_unit, sizeof(__pyx_k_Texture_unit), 0, 0, 1, 1},
  {0, __pyx_k_Tkinter, sizeof(__pyx_k_Tkinter), 0, 0, 1, 1},
  {0, __pyx_k_Tkinter_bindings_for_an_Opengl, sizeof(__pyx_k_Tkinter_bindings_for_an_Opengl), 0, 0, 1, 0},
  {0, __pyx_k_Uniform_Layout_Matrix_manipulat, sizeof(__pyx_k_Uniform_Layout_Matrix_manipulat), 0, 0, 1, 0},
  {0, __pyx_k_VBO, sizeof(__pyx_k_VBO), 0, 0, 1, 1},
  {0, __pyx_k_VBO_OBJ, sizeof(__pyx_k_VBO_OBJ), 0, 0, 1, 1},
  {0, __pyx_k_VBO_OBJ___init, sizeof(__pyx_k_VBO_OBJ___init), 0, 0, 1, 1},
  {0, __pyx_k_VBO___init, sizeof(__pyx_k_VBO___init), 0, 0, 1, 1},
  {0, __pyx_k_VERTEX_SHADER, sizeof(__pyx_k_VERTEX_SHADER), 0, 0, 1, 1},
  {0, __pyx_k_Viewer_help, sizeof(__pyx_k_Viewer_help), 0, 0, 1, 0},
  {0, __pyx_k_Widget_without_any_sophisticated, sizeof(__pyx_k_Widget_without_any_sophisticated), 0, 0, 1, 0},
  {0, __pyx_k_WinDLL, sizeof(__pyx_k_WinDLL), 0, 0, 1, 1},
  {0, __pyx_k_X11, sizeof(__pyx_k_X11), 0, 0, 1, 1},
  {0, __pyx_k_XDefaultScreen, sizeof(__pyx_k_XDefaultScreen), 0, 0, 1, 1},
  {0, __pyx_k_XOpenDisplay, sizeof(__pyx_k_XOpenDisplay), 0, 0, 1, 1},
  {0, __pyx_k_Z, sizeof(__pyx_k_Z), 0, 0, 1, 1},
  {0, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 0},
  {0, __pyx_k__13, sizeof(__pyx_k__13), 0, 0, 1, 0},
  {0, __pyx_k__207, sizeof(__pyx_k__207), 0, 0, 1, 0},
  {0, __pyx_k__8, sizeof(__pyx_k__8), 0, 0, 1, 0},
  {0, __pyx_k__80, sizeof(__pyx_k__80), 0, 0, 1, 1},
  {0, __pyx_k__9, sizeof(__pyx_k__9), 0, 0, 1, 0},
  {0, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {0, __pyx_k_a_val, sizeof(__pyx_k_a_val), 0, 0, 1, 1},
  {0, __pyx_k_abcdefgh, sizeof(__pyx_k_abcdefgh), 0, 0, 1, 1},
  {0, __pyx_k_access, sizeof(__pyx_k_access), 0, 0, 1, 1},
  {0, __pyx_k_activate, sizeof(__pyx_k_activate), 0, 0, 1, 1},
  {0, __pyx_k_add_animation, sizeof(__pyx_k_add_animation), 0, 0, 1, 1},
  {0, __pyx_k_add_boldnext, sizeof(__pyx_k_add_boldnext), 0, 0, 1, 1},
  {0, __pyx_k_add_buffer, sizeof(__pyx_k_add_buffer), 0, 0, 1, 1},
  {0, __pyx_k_add_event, sizeof(__pyx_k_add_event), 0, 0, 1, 1},
  {0, __pyx_k_add_textureupdate, sizeof(__pyx_k_add_textureupdate), 0, 0, 1, 1},
  {0, __pyx_k_after, sizeof(__pyx_k_after), 0, 0, 1, 1},
  {0, __pyx_k_after_cancel, sizeof(__pyx_k_after_cancel), 0, 0, 1, 1},
  {0, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {0, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {0, __pyx_k_animate, sizeof(__pyx_k_animate), 0, 0, 1, 1},
  {0, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {0, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {0, __pyx_k_argtypes, sizeof(__pyx_k_argtypes), 0, 0, 1, 1},
  {0, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {0, __pyx_k_ascender, sizeof(__pyx_k_ascender), 0, 0, 1, 1},
  {0, __pyx_k_att, sizeof(__pyx_k_att), 0, 0, 1, 1},
  {0, __pyx_k_autospin, sizeof(__pyx_k_autospin), 0, 0, 1, 1},
  {0, __pyx_k_autospin_allowed, sizeof(__pyx_k_autospin_allowed), 0, 0, 1, 1},
  {0, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {0, __pyx_k_b_2, sizeof(__pyx_k_b_2), 0, 0, 1, 0},
  {0, __pyx_k_b_back, sizeof(__pyx_k_b_back), 0, 0, 1, 1},
  {0, __pyx_k_b_val, sizeof(__pyx_k_b_val), 0, 0, 1, 1},
  {0, __pyx_k_background, sizeof(__pyx_k_background), 0, 0, 1, 1},
  {0, __pyx_k_bands, sizeof(__pyx_k_bands), 0, 0, 1, 1},
  {0, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame, sizeof(__pyx_k_baseOpenGLFrame), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame___init, sizeof(__pyx_k_baseOpenGLFrame___init), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame__display, sizeof(__pyx_k_baseOpenGLFrame__display), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_check_all_b1_eve, sizeof(__pyx_k_baseOpenGLFrame_check_all_b1_eve), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_check_all_bpress, sizeof(__pyx_k_baseOpenGLFrame_check_all_bpress), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_check_all_brelas, sizeof(__pyx_k_baseOpenGLFrame_check_all_brelas), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_check_event_butt, sizeof(__pyx_k_baseOpenGLFrame_check_event_butt), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_create_event, sizeof(__pyx_k_baseOpenGLFrame_create_event), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_free_calc_update, sizeof(__pyx_k_baseOpenGLFrame_free_calc_update), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_freecalc, sizeof(__pyx_k_baseOpenGLFrame_freecalc), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_initgl, sizeof(__pyx_k_baseOpenGLFrame_initgl), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_printContext, sizeof(__pyx_k_baseOpenGLFrame_printContext), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_redraw, sizeof(__pyx_k_baseOpenGLFrame_redraw), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkCreateContext, sizeof(__pyx_k_baseOpenGLFrame_tkCreateContext), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkExpose, sizeof(__pyx_k_baseOpenGLFrame_tkExpose), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkMakeCurrent, sizeof(__pyx_k_baseOpenGLFrame_tkMakeCurrent), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkMap, sizeof(__pyx_k_baseOpenGLFrame_tkMap), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkResize, sizeof(__pyx_k_baseOpenGLFrame_tkResize), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_tkSwapBuffers, sizeof(__pyx_k_baseOpenGLFrame_tkSwapBuffers), 0, 0, 1, 1},
  {0, __pyx_k_baseOpenGLFrame_wait, sizeof(__pyx_k_baseOpenGLFrame_wait), 0, 0, 1, 1},
  {0, __pyx_k_basic_lighting, sizeof(__pyx_k_basic_lighting), 0, 0, 1, 1},
  {0, __pyx_k_basicshader, sizeof(__pyx_k_basicshader), 0, 0, 1, 1},
  {0, __pyx_k_best, sizeof(__pyx_k_best), 0, 0, 1, 1},
  {0, __pyx_k_bg, sizeof(__pyx_k_bg), 0, 0, 1, 1},
  {0, __pyx_k_bind, sizeof(__pyx_k_bind), 0, 0, 1, 1},
  {0, __pyx_k_bind_buffer, sizeof(__pyx_k_bind_buffer), 0, 0, 1, 1},
  {0, __pyx_k_bitmap, sizeof(__pyx_k_bitmap), 0, 0, 1, 1},
  {0, __pyx_k_bitmap_left, sizeof(__pyx_k_bitmap_left), 0, 0, 1, 1},
  {0, __pyx_k_bitmap_top, sizeof(__pyx_k_bitmap_top), 0, 0, 1, 1},
  {0, __pyx_k_bresenham, sizeof(__pyx_k_bresenham), 0, 0, 1, 1},
  {0, __pyx_k_buffer, sizeof(__pyx_k_buffer), 0, 0, 1, 1},
  {0, __pyx_k_buffer1, sizeof(__pyx_k_buffer1), 0, 0, 1, 1},
  {0, __pyx_k_bufferid, sizeof(__pyx_k_bufferid), 0, 0, 1, 1},
  {0, __pyx_k_buffmanager, sizeof(__pyx_k_buffmanager), 0, 0, 1, 1},
  {0, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {0, __pyx_k_c1, sizeof(__pyx_k_c1), 0, 0, 1, 1},
  {0, __pyx_k_c1_2, sizeof(__pyx_k_c1_2), 0, 0, 1, 1},
  {0, __pyx_k_c2, sizeof(__pyx_k_c2), 0, 0, 1, 1},
  {0, __pyx_k_c2_2, sizeof(__pyx_k_c2_2), 0, 0, 1, 1},
  {0, __pyx_k_c3, sizeof(__pyx_k_c3), 0, 0, 1, 1},
  {0, __pyx_k_c4, sizeof(__pyx_k_c4), 0, 0, 1, 1},
  {0, __pyx_k_cColorBits, sizeof(__pyx_k_cColorBits), 0, 0, 1, 1},
  {0, __pyx_k_cDepthBits, sizeof(__pyx_k_cDepthBits), 0, 0, 1, 1},
  {0, __pyx_k_c_bool, sizeof(__pyx_k_c_bool), 0, 0, 1, 1},
  {0, __pyx_k_c_char_p, sizeof(__pyx_k_c_char_p), 0, 0, 1, 1},
  {0, __pyx_k_c_float, sizeof(__pyx_k_c_float), 0, 0, 1, 1},
  {0, __pyx_k_c_int, sizeof(__pyx_k_c_int), 0, 0, 1, 1},
  {0, __pyx_k_c_void_p, sizeof(__pyx_k_c_void_p), 0, 0, 1, 1},
  {0, __pyx_k_call, sizeof(__pyx_k_call), 0, 0, 1, 1},
  {0, __pyx_k_cb, sizeof(__pyx_k_cb), 0, 0, 1, 1},
  {0, __pyx_k_cdll, sizeof(__pyx_k_cdll), 0, 0, 1, 1},
  {0, __pyx_k_centre, sizeof(__pyx_k_centre), 0, 0, 1, 1},
  {0, __pyx_k_cf, sizeof(__pyx_k_cf), 0, 0, 1, 1},
  {0, __pyx_k_cfgs, sizeof(__pyx_k_cfgs), 0, 0, 1, 1},
  {0, __pyx_k_cfloat, sizeof(__pyx_k_cfloat), 0, 0, 1, 1},
  {0, __pyx_k_cfloat_array, sizeof(__pyx_k_cfloat_array), 0, 0, 1, 1},
  {0, __pyx_k_change_color, sizeof(__pyx_k_change_color), 0, 0, 1, 1},
  {0, __pyx_k_check, sizeof(__pyx_k_check), 0, 0, 1, 1},
  {0, __pyx_k_check_all_b1_events, sizeof(__pyx_k_check_all_b1_events), 0, 0, 1, 1},
  {0, __pyx_k_check_all_bpress_events, sizeof(__pyx_k_check_all_bpress_events), 0, 0, 1, 1},
  {0, __pyx_k_check_all_brelase_events, sizeof(__pyx_k_check_all_brelase_events), 0, 0, 1, 1},
  {0, __pyx_k_check_event_button_1, sizeof(__pyx_k_check_event_button_1), 0, 0, 1, 1},
  {0, __pyx_k_checkkeypress, sizeof(__pyx_k_checkkeypress), 0, 0, 1, 1},
  {0, __pyx_k_checklclick, sizeof(__pyx_k_checklclick), 0, 0, 1, 1},
  {0, __pyx_k_checkmclick, sizeof(__pyx_k_checkmclick), 0, 0, 1, 1},
  {0, __pyx_k_checkmotion, sizeof(__pyx_k_checkmotion), 0, 0, 1, 1},
  {0, __pyx_k_checkrclick, sizeof(__pyx_k_checkrclick), 0, 0, 1, 1},
  {0, __pyx_k_chr, sizeof(__pyx_k_chr), 0, 0, 1, 1},
  {0, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
  {0, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
  {0, __pyx_k_clear_events, sizeof(__pyx_k_clear_events), 0, 0, 1, 1},
  {0, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {0, __pyx_k_cnf, sizeof(__pyx_k_cnf), 0, 0, 1, 1},
  {0, __pyx_k_color, sizeof(__pyx_k_color), 0, 0, 1, 1},
  {0, __pyx_k_compile, sizeof(__pyx_k_compile), 0, 0, 1, 1},
  {0, __pyx_k_compileProgram, sizeof(__pyx_k_compileProgram), 0, 0, 1, 1},
  {0, __pyx_k_compileShader, sizeof(__pyx_k_compileShader), 0, 0, 1, 1},
  {0, __pyx_k_config, sizeof(__pyx_k_config), 0, 0, 1, 1},
  {0, __pyx_k_contents, sizeof(__pyx_k_contents), 0, 0, 1, 1},
  {0, __pyx_k_cords, sizeof(__pyx_k_cords), 0, 0, 1, 1},
  {0, __pyx_k_cords1, sizeof(__pyx_k_cords1), 0, 0, 1, 1},
  {0, __pyx_k_cords2, sizeof(__pyx_k_cords2), 0, 0, 1, 1},
  {0, __pyx_k_cords3, sizeof(__pyx_k_cords3), 0, 0, 1, 1},
  {0, __pyx_k_cords4, sizeof(__pyx_k_cords4), 0, 0, 1, 1},
  {0, __pyx_k_cords_2, sizeof(__pyx_k_cords_2), 0, 0, 1, 1},
  {0, __pyx_k_cords_to_ratio, sizeof(__pyx_k_cords_to_ratio), 0, 0, 1, 1},
  {0, __pyx_k_crd, sizeof(__pyx_k_crd), 0, 0, 1, 1},
  {0, __pyx_k_create_event, sizeof(__pyx_k_create_event), 0, 0, 1, 1},
  {0, __pyx_k_create_font, sizeof(__pyx_k_create_font), 0, 0, 1, 1},
  {0, __pyx_k_create_letter, sizeof(__pyx_k_create_letter), 0, 0, 1, 1},
  {0, __pyx_k_create_quad, sizeof(__pyx_k_create_quad), 0, 0, 1, 1},
  {0, __pyx_k_crop, sizeof(__pyx_k_crop), 0, 0, 1, 1},
  {0, __pyx_k_ct, sizeof(__pyx_k_ct), 0, 0, 1, 1},
  {0, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
  {0, __pyx_k_ctypes_wintypes, sizeof(__pyx_k_ctypes_wintypes), 0, 0, 1, 1},
  {0, __pyx_k_curpos, sizeof(__pyx_k_curpos), 0, 0, 1, 1},
  {0, __pyx_k_cvroot, sizeof(__pyx_k_cvroot), 0, 0, 1, 1},
  {0, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {0, __pyx_k_dat, sizeof(__pyx_k_dat), 0, 0, 1, 1},
  {0, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {0, __pyx_k_data_length, sizeof(__pyx_k_data_length), 0, 0, 1, 1},
  {0, __pyx_k_data_tr1, sizeof(__pyx_k_data_tr1), 0, 0, 1, 1},
  {0, __pyx_k_data_tr2, sizeof(__pyx_k_data_tr2), 0, 0, 1, 1},
  {0, __pyx_k_data_txn, sizeof(__pyx_k_data_txn), 0, 0, 1, 1},
  {0, __pyx_k_data_type, sizeof(__pyx_k_data_type), 0, 0, 1, 1},
  {0, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {0, __pyx_k_del_animation, sizeof(__pyx_k_del_animation), 0, 0, 1, 1},
  {0, __pyx_k_delay, sizeof(__pyx_k_delay), 0, 0, 1, 1},
  {0, __pyx_k_delete_obj, sizeof(__pyx_k_delete_obj), 0, 0, 1, 1},
  {0, __pyx_k_descender, sizeof(__pyx_k_descender), 0, 0, 1, 1},
  {0, __pyx_k_dialog, sizeof(__pyx_k_dialog), 0, 0, 1, 1},
  {0, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {0, __pyx_k_display, sizeof(__pyx_k_display), 0, 0, 1, 1},
  {0, __pyx_k_dist, sizeof(__pyx_k_dist), 0, 0, 1, 1},
  {0, __pyx_k_distance, sizeof(__pyx_k_distance), 0, 0, 1, 1},
  {0, __pyx_k_do_AutoSpin, sizeof(__pyx_k_do_AutoSpin), 0, 0, 1, 1},
  {0, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {0, __pyx_k_docs, sizeof(__pyx_k_docs), 0, 0, 1, 1},
  {0, __pyx_k_dp_data, sizeof(__pyx_k_dp_data), 0, 0, 1, 1},
  {0, __pyx_k_draw, sizeof(__pyx_k_draw), 0, 0, 1, 1},
  {0, __pyx_k_draw_line, sizeof(__pyx_k_draw_line), 0, 0, 1, 1},
  {0, __pyx_k_draw_lines, sizeof(__pyx_k_draw_lines), 0, 0, 1, 1},
  {0, __pyx_k_draw_point, sizeof(__pyx_k_draw_point), 0, 0, 1, 1},
  {0, __pyx_k_draw_points, sizeof(__pyx_k_draw_points), 0, 0, 1, 1},
  {0, __pyx_k_draw_quad, sizeof(__pyx_k_draw_quad), 0, 0, 1, 1},
  {0, __pyx_k_draw_quad_texture, sizeof(__pyx_k_draw_quad_texture), 0, 0, 1, 1},
  {0, __pyx_k_draw_quad_texture_array, sizeof(__pyx_k_draw_quad_texture_array), 0, 0, 1, 1},
  {0, __pyx_k_draw_text, sizeof(__pyx_k_draw_text), 0, 0, 1, 1},
  {0, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {0, __pyx_k_dummy, sizeof(__pyx_k_dummy), 0, 0, 1, 1},
  {0, __pyx_k_dwFlags, sizeof(__pyx_k_dwFlags), 0, 0, 1, 1},
  {0, __pyx_k_dx, sizeof(__pyx_k_dx), 0, 0, 1, 1},
  {0, __pyx_k_dy, sizeof(__pyx_k_dy), 0, 0, 1, 1},
  {0, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {0, __pyx_k_edit_color, sizeof(__pyx_k_edit_color), 0, 0, 1, 1},
  {0, __pyx_k_edit_letter, sizeof(__pyx_k_edit_letter), 0, 0, 1, 1},
  {0, __pyx_k_edit_pos, sizeof(__pyx_k_edit_pos), 0, 0, 1, 1},
  {0, __pyx_k_edit_texture, sizeof(__pyx_k_edit_texture), 0, 0, 1, 1},
  {0, __pyx_k_edit_tpos, sizeof(__pyx_k_edit_tpos), 0, 0, 1, 1},
  {0, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {0, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {0, __pyx_k_environ, sizeof(__pyx_k_environ), 0, 0, 1, 1},
  {0, __pyx_k_ev, sizeof(__pyx_k_ev), 0, 0, 1, 1},
  {0, __pyx_k_ev_list, sizeof(__pyx_k_ev_list), 0, 0, 1, 1},
  {0, __pyx_k_ev_type, sizeof(__pyx_k_ev_type), 0, 0, 1, 1},
  {0, __pyx_k_event, sizeof(__pyx_k_event), 0, 0, 1, 1},
  {0, __pyx_k_event_type, sizeof(__pyx_k_event_type), 0, 0, 1, 1},
  {0, __pyx_k_eventmanager, sizeof(__pyx_k_eventmanager), 0, 0, 1, 1},
  {0, __pyx_k_events_B1, sizeof(__pyx_k_events_B1), 0, 0, 1, 1},
  {0, __pyx_k_events_B2, sizeof(__pyx_k_events_B2), 0, 0, 1, 1},
  {0, __pyx_k_events_B3, sizeof(__pyx_k_events_B3), 0, 0, 1, 1},
  {0, __pyx_k_events_BP, sizeof(__pyx_k_events_BP), 0, 0, 1, 1},
  {0, __pyx_k_events_BR, sizeof(__pyx_k_events_BR), 0, 0, 1, 1},
  {0, __pyx_k_events_MN, sizeof(__pyx_k_events_MN), 0, 0, 1, 1},
  {0, __pyx_k_evt, sizeof(__pyx_k_evt), 0, 0, 1, 1},
  {0, __pyx_k_extend, sizeof(__pyx_k_extend), 0, 0, 1, 1},
  {0, __pyx_k_extensions, sizeof(__pyx_k_extensions), 0, 0, 1, 1},
  {0, __pyx_k_extns, sizeof(__pyx_k_extns), 0, 0, 1, 1},
  {0, __pyx_k_exts, sizeof(__pyx_k_exts), 0, 0, 1, 1},
  {0, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {0, __pyx_k_face, sizeof(__pyx_k_face), 0, 0, 1, 1},
  {0, __pyx_k_far, sizeof(__pyx_k_far), 0, 0, 1, 1},
  {0, __pyx_k_fbatt, sizeof(__pyx_k_fbatt), 0, 0, 1, 1},
  {0, __pyx_k_fgshader, sizeof(__pyx_k_fgshader), 0, 0, 1, 1},
  {0, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {0, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {0, __pyx_k_find_library, sizeof(__pyx_k_find_library), 0, 0, 1, 1},
  {0, __pyx_k_flat, sizeof(__pyx_k_flat), 0, 0, 1, 1},
  {0, __pyx_k_font, sizeof(__pyx_k_font), 0, 0, 1, 1},
  {0, __pyx_k_font_config, sizeof(__pyx_k_font_config), 0, 0, 1, 1},
  {0, __pyx_k_font_letters, sizeof(__pyx_k_font_letters), 0, 0, 1, 1},
  {0, __pyx_k_font_texture, sizeof(__pyx_k_font_texture), 0, 0, 1, 1},
  {0, __pyx_k_fovy, sizeof(__pyx_k_fovy), 0, 0, 1, 1},
  {0, __pyx_k_free_calc_update, sizeof(__pyx_k_free_calc_update), 0, 0, 1, 1},
  {0, __pyx_k_freecalc, sizeof(__pyx_k_freecalc), 0, 0, 1, 1},
  {0, __pyx_k_freecalc_update, sizeof(__pyx_k_freecalc_update), 0, 0, 1, 1},
  {0, __pyx_k_freetype, sizeof(__pyx_k_freetype), 0, 0, 1, 1},
  {0, __pyx_k_from, sizeof(__pyx_k_from), 0, 0, 1, 1},
  {0, __pyx_k_frombuffer, sizeof(__pyx_k_frombuffer), 0, 0, 1, 1},
  {0, __pyx_k_func, sizeof(__pyx_k_func), 0, 0, 1, 1},
  {0, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {0, __pyx_k_g_back, sizeof(__pyx_k_g_back), 0, 0, 1, 1},
  {0, __pyx_k_g_val, sizeof(__pyx_k_g_val), 0, 0, 1, 1},
  {0, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {0, __pyx_k_get_buffer, sizeof(__pyx_k_get_buffer), 0, 0, 1, 1},
  {0, __pyx_k_get_color, sizeof(__pyx_k_get_color), 0, 0, 1, 1},
  {0, __pyx_k_get_objectindexes, sizeof(__pyx_k_get_objectindexes), 0, 0, 1, 1},
  {0, __pyx_k_get_pos, sizeof(__pyx_k_get_pos), 0, 0, 1, 1},
  {0, __pyx_k_get_shader, sizeof(__pyx_k_get_shader), 0, 0, 1, 1},
  {0, __pyx_k_get_texid, sizeof(__pyx_k_get_texid), 0, 0, 1, 1},
  {0, __pyx_k_get_vertices, sizeof(__pyx_k_get_vertices), 0, 0, 1, 1},
  {0, __pyx_k_getdata, sizeof(__pyx_k_getdata), 0, 0, 1, 1},
  {0, __pyx_k_getint, sizeof(__pyx_k_getint), 0, 0, 1, 1},
  {0, __pyx_k_getsize, sizeof(__pyx_k_getsize), 0, 0, 1, 1},
  {0, __pyx_k_glBegin, sizeof(__pyx_k_glBegin), 0, 0, 1, 1},
  {0, __pyx_k_glBindBuffer, sizeof(__pyx_k_glBindBuffer), 0, 0, 1, 1},
  {0, __pyx_k_glBindTexture, sizeof(__pyx_k_glBindTexture), 0, 0, 1, 1},
  {0, __pyx_k_glBindTextureUnit, sizeof(__pyx_k_glBindTextureUnit), 0, 0, 1, 1},
  {0, __pyx_k_glBufferData, sizeof(__pyx_k_glBufferData), 0, 0, 1, 1},
  {0, __pyx_k_glBufferSubData, sizeof(__pyx_k_glBufferSubData), 0, 0, 1, 1},
  {0, __pyx_k_glColor3f, sizeof(__pyx_k_glColor3f), 0, 0, 1, 1},
  {0, __pyx_k_glColor4f, sizeof(__pyx_k_glColor4f), 0, 0, 1, 1},
  {0, __pyx_k_glDepthFunc, sizeof(__pyx_k_glDepthFunc), 0, 0, 1, 1},
  {0, __pyx_k_glDisable, sizeof(__pyx_k_glDisable), 0, 0, 1, 1},
  {0, __pyx_k_glDrawArrays, sizeof(__pyx_k_glDrawArrays), 0, 0, 1, 1},
  {0, __pyx_k_glEnable, sizeof(__pyx_k_glEnable), 0, 0, 1, 1},
  {0, __pyx_k_glEnableClientState, sizeof(__pyx_k_glEnableClientState), 0, 0, 1, 1},
  {0, __pyx_k_glEnableVertexAttribArray, sizeof(__pyx_k_glEnableVertexAttribArray), 0, 0, 1, 1},
  {0, __pyx_k_glEnd, sizeof(__pyx_k_glEnd), 0, 0, 1, 1},
  {0, __pyx_k_glGenBuffers, sizeof(__pyx_k_glGenBuffers), 0, 0, 1, 1},
  {0, __pyx_k_glGenTextures, sizeof(__pyx_k_glGenTextures), 0, 0, 1, 1},
  {0, __pyx_k_glGetDoublev, sizeof(__pyx_k_glGetDoublev), 0, 0, 1, 1},
  {0, __pyx_k_glGetIntegerv, sizeof(__pyx_k_glGetIntegerv), 0, 0, 1, 1},
  {0, __pyx_k_glGetString, sizeof(__pyx_k_glGetString), 0, 0, 1, 1},
  {0, __pyx_k_glGetUniformLocation, sizeof(__pyx_k_glGetUniformLocation), 0, 0, 1, 1},
  {0, __pyx_k_glLightfv, sizeof(__pyx_k_glLightfv), 0, 0, 1, 1},
  {0, __pyx_k_glLoadIdentity, sizeof(__pyx_k_glLoadIdentity), 0, 0, 1, 1},
  {0, __pyx_k_glMatrixMode, sizeof(__pyx_k_glMatrixMode), 0, 0, 1, 1},
  {0, __pyx_k_glPixelStorei, sizeof(__pyx_k_glPixelStorei), 0, 0, 1, 1},
  {0, __pyx_k_glRotateScene, sizeof(__pyx_k_glRotateScene), 0, 0, 1, 1},
  {0, __pyx_k_glTexCoord2f, sizeof(__pyx_k_glTexCoord2f), 0, 0, 1, 1},
  {0, __pyx_k_glTexImage2D, sizeof(__pyx_k_glTexImage2D), 0, 0, 1, 1},
  {0, __pyx_k_glTexParameterf, sizeof(__pyx_k_glTexParameterf), 0, 0, 1, 1},
  {0, __pyx_k_glTexParameteri, sizeof(__pyx_k_glTexParameteri), 0, 0, 1, 1},
  {0, __pyx_k_glTexSubImage2D, sizeof(__pyx_k_glTexSubImage2D), 0, 0, 1, 1},
  {0, __pyx_k_glTranslateScene, sizeof(__pyx_k_glTranslateScene), 0, 0, 1, 1},
  {0, __pyx_k_glUniform1iv, sizeof(__pyx_k_glUniform1iv), 0, 0, 1, 1},
  {0, __pyx_k_glUseProgram, sizeof(__pyx_k_glUseProgram), 0, 0, 1, 1},
  {0, __pyx_k_glVertex2f, sizeof(__pyx_k_glVertex2f), 0, 0, 1, 1},
  {0, __pyx_k_glVertexAttribPointer, sizeof(__pyx_k_glVertexAttribPointer), 0, 0, 1, 1},
  {0, __pyx_k_glViewport, sizeof(__pyx_k_glViewport), 0, 0, 1, 1},
  {0, __pyx_k_glXChooseFBConfig, sizeof(__pyx_k_glXChooseFBConfig), 0, 0, 1, 1},
  {0, __pyx_k_glXChooseVisual, sizeof(__pyx_k_glXChooseVisual), 0, 0, 1, 1},
  {0, __pyx_k_glXCreateContext, sizeof(__pyx_k_glXCreateContext), 0, 0, 1, 1},
  {0, __pyx_k_glXCreateNewContext, sizeof(__pyx_k_glXCreateNewContext), 0, 0, 1, 1},
  {0, __pyx_k_glXGetVisualFromFBConfig, sizeof(__pyx_k_glXGetVisualFromFBConfig), 0, 0, 1, 1},
  {0, __pyx_k_glXIsDirect, sizeof(__pyx_k_glXIsDirect), 0, 0, 1, 1},
  {0, __pyx_k_glXMakeContextCurrent, sizeof(__pyx_k_glXMakeContextCurrent), 0, 0, 1, 1},
  {0, __pyx_k_glXMakeCurrent, sizeof(__pyx_k_glXMakeCurrent), 0, 0, 1, 1},
  {0, __pyx_k_glXQueryExtensionsString, sizeof(__pyx_k_glXQueryExtensionsString), 0, 0, 1, 1},
  {0, __pyx_k_glXQueryVersion, sizeof(__pyx_k_glXQueryVersion), 0, 0, 1, 1},
  {0, __pyx_k_glXSwapBuffers, sizeof(__pyx_k_glXSwapBuffers), 0, 0, 1, 1},
  {0, __pyx_k_gluLookAt, sizeof(__pyx_k_gluLookAt), 0, 0, 1, 1},
  {0, __pyx_k_gluPerspective, sizeof(__pyx_k_gluPerspective), 0, 0, 1, 1},
  {0, __pyx_k_gluProject, sizeof(__pyx_k_gluProject), 0, 0, 1, 1},
  {0, __pyx_k_gluUnProject, sizeof(__pyx_k_gluUnProject), 0, 0, 1, 1},
  {0, __pyx_k_glyph, sizeof(__pyx_k_glyph), 0, 0, 1, 1},
  {0, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {0, __pyx_k_height, sizeof(__pyx_k_height), 0, 0, 1, 1},
  {0, __pyx_k_help, sizeof(__pyx_k_help), 0, 0, 1, 1},
  {0, __pyx_k_hex, sizeof(__pyx_k_hex), 0, 0, 1, 1},
  {0, __pyx_k_hover_events, sizeof(__pyx_k_hover_events), 0, 0, 1, 1},
  {0, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {0, __pyx_k_iLayerType, sizeof(__pyx_k_iLayerType), 0, 0, 1, 1},
  {0, __pyx_k_iPixelType, sizeof(__pyx_k_iPixelType), 0, 0, 1, 1},
  {0, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {0, __pyx_k_ideal, sizeof(__pyx_k_ideal), 0, 0, 1, 1},
  {0, __pyx_k_idx, sizeof(__pyx_k_idx), 0, 0, 1, 1},
  {0, __pyx_k_il, sizeof(__pyx_k_il), 0, 0, 1, 1},
  {0, __pyx_k_image, sizeof(__pyx_k_image), 0, 0, 1, 1},
  {0, __pyx_k_imgnp, sizeof(__pyx_k_imgnp), 0, 0, 1, 1},
  {0, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {0, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {0, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {0, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
  {0, __pyx_k_initgl, sizeof(__pyx_k_initgl), 0, 0, 1, 1},
  {0, __pyx_k_initialised, sizeof(__pyx_k_initialised), 0, 0, 1, 1},
  {0, __pyx_k_insert, sizeof(__pyx_k_insert), 0, 0, 1, 1},
  {0, __pyx_k_is_fixed_width, sizeof(__pyx_k_is_fixed_width), 0, 0, 1, 1},
  {0, __pyx_k_is_serialized, sizeof(__pyx_k_is_serialized), 0, 0, 1, 1},
  {0, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {0, __pyx_k_keypress_events, sizeof(__pyx_k_keypress_events), 0, 0, 1, 1},
  {0, __pyx_k_kw, sizeof(__pyx_k_kw), 0, 0, 1, 1},
  {0, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {0, __pyx_k_launch_func, sizeof(__pyx_k_launch_func), 0, 0, 1, 1},
  {0, __pyx_k_launch_function_beg, sizeof(__pyx_k_launch_function_beg), 0, 0, 1, 1},
  {0, __pyx_k_launch_function_end, sizeof(__pyx_k_launch_function_end), 0, 0, 1, 1},
  {0, __pyx_k_launch_function_mid, sizeof(__pyx_k_launch_function_mid), 0, 0, 1, 1},
  {0, __pyx_k_launchev, sizeof(__pyx_k_launchev), 0, 0, 1, 1},
  {0, __pyx_k_lclick_events, sizeof(__pyx_k_lclick_events), 0, 0, 1, 1},
  {0, __pyx_k_letter, sizeof(__pyx_k_letter), 0, 0, 1, 1},
  {0, __pyx_k_lfe, sizeof(__pyx_k_lfe), 0, 0, 1, 1},
  {0, __pyx_k_lfg, sizeof(__pyx_k_lfg), 0, 0, 1, 1},
  {0, __pyx_k_lfm, sizeof(__pyx_k_lfm), 0, 0, 1, 1},
  {0, __pyx_k_light_position, sizeof(__pyx_k_light_position), 0, 0, 1, 1},
  {0, __pyx_k_linux, sizeof(__pyx_k_linux), 0, 0, 1, 1},
  {0, __pyx_k_list, sizeof(__pyx_k_list), 0, 0, 1, 1},
  {0, __pyx_k_load, sizeof(__pyx_k_load), 0, 0, 1, 1},
  {0, __pyx_k_load_char, sizeof(__pyx_k_load_char), 0, 0, 1, 1},
  {0, __pyx_k_load_scene, sizeof(__pyx_k_load_scene), 0, 0, 1, 1},
  {0, __pyx_k_load_texture, sizeof(__pyx_k_load_texture), 0, 0, 1, 1},
  {0, __pyx_k_load_texture_dp, sizeof(__pyx_k_load_texture_dp), 0, 0, 1, 1},
  {0, __pyx_k_load_texture_locals_image, sizeof(__pyx_k_load_texture_locals_image), 0, 0, 1, 1},
  {0, __pyx_k_load_texture_locals_image___init, sizeof(__pyx_k_load_texture_locals_image___init), 0, 0, 1, 1},
  {0, __pyx_k_load_texture_repeat, sizeof(__pyx_k_load_texture_repeat), 0, 0, 1, 1},
  {0, __pyx_k_load_texture_sub, sizeof(__pyx_k_load_texture_sub), 0, 0, 1, 1},
  {0, __pyx_k_ls, sizeof(__pyx_k_ls), 0, 0, 1, 1},
  {0, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {0, __pyx_k_m_new, sizeof(__pyx_k_m_new), 0, 0, 1, 1},
  {0, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {0, __pyx_k_major, sizeof(__pyx_k_major), 0, 0, 1, 1},
  {0, __pyx_k_mask, sizeof(__pyx_k_mask), 0, 0, 1, 1},
  {0, __pyx_k_master, sizeof(__pyx_k_master), 0, 0, 1, 1},
  {0, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {0, __pyx_k_mclick_events, sizeof(__pyx_k_mclick_events), 0, 0, 1, 1},
  {0, __pyx_k_mem_img, sizeof(__pyx_k_mem_img), 0, 0, 1, 1},
  {0, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {0, __pyx_k_minor, sizeof(__pyx_k_minor), 0, 0, 1, 1},
  {0, __pyx_k_mmap, sizeof(__pyx_k_mmap), 0, 0, 1, 1},
  {0, __pyx_k_mode, sizeof(__pyx_k_mode), 0, 0, 1, 1},
  {0, __pyx_k_mode_2, sizeof(__pyx_k_mode_2), 0, 0, 1, 1},
  {0, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {0, __pyx_k_move, sizeof(__pyx_k_move), 0, 0, 1, 1},
  {0, __pyx_k_move_down, sizeof(__pyx_k_move_down), 0, 0, 1, 1},
  {0, __pyx_k_move_up, sizeof(__pyx_k_move_up), 0, 0, 1, 1},
  {0, __pyx_k_msk, sizeof(__pyx_k_msk), 0, 0, 1, 1},
  {0, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {0, __pyx_k_naiveline, sizeof(__pyx_k_naiveline), 0, 0, 1, 1},
  {0, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {0, __pyx_k_named, sizeof(__pyx_k_named), 0, 0, 1, 1},
  {0, __pyx_k_ncfg, sizeof(__pyx_k_ncfg), 0, 0, 1, 1},
  {0, __pyx_k_nd, sizeof(__pyx_k_nd), 0, 0, 1, 1},
  {0, __pyx_k_near, sizeof(__pyx_k_near), 0, 0, 1, 1},
  {0, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {0, __pyx_k_new_from_file, sizeof(__pyx_k_new_from_file), 0, 0, 1, 1},
  {0, __pyx_k_newcolor, sizeof(__pyx_k_newcolor), 0, 0, 1, 1},
  {0, __pyx_k_newpos, sizeof(__pyx_k_newpos), 0, 0, 1, 1},
  {0, __pyx_k_newsize, sizeof(__pyx_k_newsize), 0, 0, 1, 1},
  {0, __pyx_k_newtpos, sizeof(__pyx_k_newtpos), 0, 0, 1, 1},
  {0, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {0, __pyx_k_nr, sizeof(__pyx_k_nr), 0, 0, 1, 1},
  {0, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {0, __pyx_k_nx, sizeof(__pyx_k_nx), 0, 0, 1, 1},
  {0, __pyx_k_ny, sizeof(__pyx_k_ny), 0, 0, 1, 1},
  {0, __pyx_k_obj, sizeof(__pyx_k_obj), 0, 0, 1, 1},
  {0, __pyx_k_obj_c, sizeof(__pyx_k_obj_c), 0, 0, 1, 1},
  {0, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
  {0, __pyx_k_object_count, sizeof(__pyx_k_object_count), 0, 0, 1, 1},
  {0, __pyx_k_object_counts, sizeof(__pyx_k_object_counts), 0, 0, 1, 1},
  {0, __pyx_k_object_indexes, sizeof(__pyx_k_object_indexes), 0, 0, 1, 1},
  {0, __pyx_k_object_moved, sizeof(__pyx_k_object_moved), 0, 0, 1, 1},
  {0, __pyx_k_oh_dear_visual_does_not_match, sizeof(__pyx_k_oh_dear_visual_does_not_match), 0, 0, 1, 0},
  {0, __pyx_k_oj, sizeof(__pyx_k_oj), 0, 0, 1, 1},
  {0, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {0, __pyx_k_orgsize, sizeof(__pyx_k_orgsize), 0, 0, 1, 1},
  {0, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
  {0, __pyx_k_ou, sizeof(__pyx_k_ou), 0, 0, 1, 1},
  {0, __pyx_k_overlay, sizeof(__pyx_k_overlay), 0, 0, 1, 1},
  {0, __pyx_k_p1, sizeof(__pyx_k_p1), 0, 0, 1, 1},
  {0, __pyx_k_p2, sizeof(__pyx_k_p2), 0, 0, 1, 1},
  {0, __pyx_k_pas, sizeof(__pyx_k_pas), 0, 0, 1, 1},
  {0, __pyx_k_paste, sizeof(__pyx_k_paste), 0, 0, 1, 1},
  {0, __pyx_k_pfd, sizeof(__pyx_k_pfd), 0, 0, 1, 1},
  {0, __pyx_k_pick, sizeof(__pyx_k_pick), 0, 0, 1, 1},
  {0, __pyx_k_pix_rat_x, sizeof(__pyx_k_pix_rat_x), 0, 0, 1, 1},
  {0, __pyx_k_pix_rat_y, sizeof(__pyx_k_pix_rat_y), 0, 0, 1, 1},
  {0, __pyx_k_pixelformat, sizeof(__pyx_k_pixelformat), 0, 0, 1, 1},
  {0, __pyx_k_pixels, sizeof(__pyx_k_pixels), 0, 0, 1, 1},
  {0, __pyx_k_platform, sizeof(__pyx_k_platform), 0, 0, 1, 1},
  {0, __pyx_k_pointer, sizeof(__pyx_k_pointer), 0, 0, 1, 1},
  {0, __pyx_k_pointerx, sizeof(__pyx_k_pointerx), 0, 0, 1, 1},
  {0, __pyx_k_pointery, sizeof(__pyx_k_pointery), 0, 0, 1, 1},
  {0, __pyx_k_points, sizeof(__pyx_k_points), 0, 0, 1, 1},
  {0, __pyx_k_pop, sizeof(__pyx_k_pop), 0, 0, 1, 1},
  {0, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {0, __pyx_k_prequad, sizeof(__pyx_k_prequad), 0, 0, 1, 1},
  {0, __pyx_k_prerender_quad, sizeof(__pyx_k_prerender_quad), 0, 0, 1, 1},
  {0, __pyx_k_prerender_text, sizeof(__pyx_k_prerender_text), 0, 0, 1, 1},
  {0, __pyx_k_prerender_texturequad, sizeof(__pyx_k_prerender_texturequad), 0, 0, 1, 1},
  {0, __pyx_k_prerenderedobj, sizeof(__pyx_k_prerenderedobj), 0, 0, 1, 1},
  {0, __pyx_k_pretext, sizeof(__pyx_k_pretext), 0, 0, 1, 1},
  {0, __pyx_k_pretextquad, sizeof(__pyx_k_pretextquad), 0, 0, 1, 1},
  {0, __pyx_k_previoev, sizeof(__pyx_k_previoev), 0, 0, 1, 1},
  {0, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {0, __pyx_k_printContext, sizeof(__pyx_k_printContext), 0, 0, 1, 1},
  {0, __pyx_k_pure_pil_alpha_to_color_v2, sizeof(__pyx_k_pure_pil_alpha_to_color_v2), 0, 0, 1, 1},
  {0, __pyx_k_pyvips, sizeof(__pyx_k_pyvips), 0, 0, 1, 1},
  {0, __pyx_k_quad, sizeof(__pyx_k_quad), 0, 0, 1, 1},
  {0, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {0, __pyx_k_questhead, sizeof(__pyx_k_questhead), 0, 0, 1, 1},
  {0, __pyx_k_queue, sizeof(__pyx_k_queue), 0, 0, 1, 1},
  {0, __pyx_k_queue_check, sizeof(__pyx_k_queue_check), 0, 0, 1, 1},
  {0, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {0, __pyx_k_r_back, sizeof(__pyx_k_r_back), 0, 0, 1, 1},
  {0, __pyx_k_r_val, sizeof(__pyx_k_r_val), 0, 0, 1, 1},
  {0, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
  {0, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {0, __pyx_k_rclick_events, sizeof(__pyx_k_rclick_events), 0, 0, 1, 1},
  {0, __pyx_k_real_index, sizeof(__pyx_k_real_index), 0, 0, 1, 1},
  {0, __pyx_k_real_value, sizeof(__pyx_k_real_value), 0, 0, 1, 1},
  {0, __pyx_k_realdata, sizeof(__pyx_k_realdata), 0, 0, 1, 1},
  {0, __pyx_k_realy, sizeof(__pyx_k_realy), 0, 0, 1, 1},
  {0, __pyx_k_redraw, sizeof(__pyx_k_redraw), 0, 0, 1, 1},
  {0, __pyx_k_render, sizeof(__pyx_k_render), 0, 0, 1, 1},
  {0, __pyx_k_render_letter, sizeof(__pyx_k_render_letter), 0, 0, 1, 1},
  {0, __pyx_k_render_quad, sizeof(__pyx_k_render_quad), 0, 0, 1, 1},
  {0, __pyx_k_render_text, sizeof(__pyx_k_render_text), 0, 0, 1, 1},
  {0, __pyx_k_render_texture_quad, sizeof(__pyx_k_render_texture_quad), 0, 0, 1, 1},
  {0, __pyx_k_repeat, sizeof(__pyx_k_repeat), 0, 0, 1, 1},
  {0, __pyx_k_reset, sizeof(__pyx_k_reset), 0, 0, 1, 1},
  {0, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {0, __pyx_k_resize, sizeof(__pyx_k_resize), 0, 0, 1, 1},
  {0, __pyx_k_resize_2, sizeof(__pyx_k_resize_2), 0, 0, 1, 1},
  {0, __pyx_k_restype, sizeof(__pyx_k_restype), 0, 0, 1, 1},
  {0, __pyx_k_rgba2rgb, sizeof(__pyx_k_rgba2rgb), 0, 0, 1, 1},
  {0, __pyx_k_rise, sizeof(__pyx_k_rise), 0, 0, 1, 1},
  {0, __pyx_k_rnd, sizeof(__pyx_k_rnd), 0, 0, 1, 1},
  {0, __pyx_k_rotate, sizeof(__pyx_k_rotate), 0, 0, 1, 1},
  {0, __pyx_k_round, sizeof(__pyx_k_round), 0, 0, 1, 1},
  {0, __pyx_k_rows, sizeof(__pyx_k_rows), 0, 0, 1, 1},
  {0, __pyx_k_run, sizeof(__pyx_k_run), 0, 0, 1, 1},
  {0, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {0, __pyx_k_sav_vert, sizeof(__pyx_k_sav_vert), 0, 0, 1, 1},
  {0, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {0, __pyx_k_scalex, sizeof(__pyx_k_scalex), 0, 0, 1, 1},
  {0, __pyx_k_scaley, sizeof(__pyx_k_scaley), 0, 0, 1, 1},
  {0, __pyx_k_screen, sizeof(__pyx_k_screen), 0, 0, 1, 1},
  {0, __pyx_k_screen_res, sizeof(__pyx_k_screen_res), 0, 0, 1, 1},
  {0, __pyx_k_screenx, sizeof(__pyx_k_screenx), 0, 0, 1, 1},
  {0, __pyx_k_screeny, sizeof(__pyx_k_screeny), 0, 0, 1, 1},
  {0, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {0, __pyx_k_self_2, sizeof(__pyx_k_self_2), 0, 0, 1, 1},
  {0, __pyx_k_sequential, sizeof(__pyx_k_sequential), 0, 0, 1, 1},
  {0, __pyx_k_serialization, sizeof(__pyx_k_serialization), 0, 0, 1, 1},
  {0, __pyx_k_serialization_current_object, sizeof(__pyx_k_serialization_current_object), 0, 0, 1, 1},
  {0, __pyx_k_serialize_to_obj, sizeof(__pyx_k_serialize_to_obj), 0, 0, 1, 1},
  {0, __pyx_k_serialized_obj, sizeof(__pyx_k_serialized_obj), 0, 0, 1, 1},
  {0, __pyx_k_set_background, sizeof(__pyx_k_set_background), 0, 0, 1, 1},
  {0, __pyx_k_set_centerpoint, sizeof(__pyx_k_set_centerpoint), 0, 0, 1, 1},
  {0, __pyx_k_set_char_size, sizeof(__pyx_k_set_char_size), 0, 0, 1, 1},
  {0, __pyx_k_set_eyepoint, sizeof(__pyx_k_set_eyepoint), 0, 0, 1, 1},
  {0, __pyx_k_set_mode, sizeof(__pyx_k_set_mode), 0, 0, 1, 1},
  {0, __pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 0, 1, 1},
  {0, __pyx_k_shaderprogram, sizeof(__pyx_k_shaderprogram), 0, 0, 1, 1},
  {0, __pyx_k_shaders, sizeof(__pyx_k_shaders), 0, 0, 1, 1},
  {0, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {0, __pyx_k_shrink, sizeof(__pyx_k_shrink), 0, 0, 1, 1},
  {0, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {0, __pyx_k_size_x, sizeof(__pyx_k_size_x), 0, 0, 1, 1},
  {0, __pyx_k_size_y, sizeof(__pyx_k_size_y), 0, 0, 1, 1},
  {0, __pyx_k_sizeof, sizeof(__pyx_k_sizeof), 0, 0, 1, 1},
  {0, __pyx_k_sizex, sizeof(__pyx_k_sizex), 0, 0, 1, 1},
  {0, __pyx_k_sizey, sizeof(__pyx_k_sizey), 0, 0, 1, 1},
  {0, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
  {0, __pyx_k_slope_error_new, sizeof(__pyx_k_slope_error_new), 0, 0, 1, 1},
  {0, __pyx_k_spacing, sizeof(__pyx_k_spacing), 0, 0, 1, 1},
  {0, __pyx_k_spacing_addx, sizeof(__pyx_k_spacing_addx), 0, 0, 1, 1},
  {0, __pyx_k_spacing_addy, sizeof(__pyx_k_spacing_addy), 0, 0, 1, 1},
  {0, __pyx_k_spacing_y, sizeof(__pyx_k_spacing_y), 0, 0, 1, 1},
  {0, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {0, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {0, __pyx_k_start_new_thread, sizeof(__pyx_k_start_new_thread), 0, 0, 1, 1},
  {0, __pyx_k_startswith, sizeof(__pyx_k_startswith), 0, 0, 1, 1},
  {0, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
  {0, __pyx_k_strings, sizeof(__pyx_k_strings), 0, 0, 1, 1},
  {0, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {0, __pyx_k_switch, sizeof(__pyx_k_switch), 0, 0, 1, 1},
  {0, __pyx_k_sx, sizeof(__pyx_k_sx), 0, 0, 1, 1},
  {0, __pyx_k_sy, sizeof(__pyx_k_sy), 0, 0, 1, 1},
  {0, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
  {0, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {0, __pyx_k_t1, sizeof(__pyx_k_t1), 0, 0, 1, 1},
  {0, __pyx_k_t2, sizeof(__pyx_k_t2), 0, 0, 1, 1},
  {0, __pyx_k_t3, sizeof(__pyx_k_t3), 0, 0, 1, 1},
  {0, __pyx_k_t4, sizeof(__pyx_k_t4), 0, 0, 1, 1},
  {0, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {0, __pyx_k_tex_arrayn_translate, sizeof(__pyx_k_tex_arrayn_translate), 0, 0, 1, 1},
  {0, __pyx_k_texcords1, sizeof(__pyx_k_texcords1), 0, 0, 1, 1},
  {0, __pyx_k_texcords2, sizeof(__pyx_k_texcords2), 0, 0, 1, 1},
  {0, __pyx_k_texcords3, sizeof(__pyx_k_texcords3), 0, 0, 1, 1},
  {0, __pyx_k_texcords4, sizeof(__pyx_k_texcords4), 0, 0, 1, 1},
  {0, __pyx_k_texid, sizeof(__pyx_k_texid), 0, 0, 1, 1},
  {0, __pyx_k_texsize, sizeof(__pyx_k_texsize), 0, 0, 1, 1},
  {0, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {0, __pyx_k_textid, sizeof(__pyx_k_textid), 0, 0, 1, 1},
  {0, __pyx_k_textn, sizeof(__pyx_k_textn), 0, 0, 1, 1},
  {0, __pyx_k_textr, sizeof(__pyx_k_textr), 0, 0, 1, 1},
  {0, __pyx_k_texture, sizeof(__pyx_k_texture), 0, 0, 1, 1},
  {0, __pyx_k_texture_2, sizeof(__pyx_k_texture_2), 0, 0, 1, 1},
  {0, __pyx_k_texture_cords_to_ratio, sizeof(__pyx_k_texture_cords_to_ratio), 0, 0, 1, 1},
  {0, __pyx_k_texture_data, sizeof(__pyx_k_texture_data), 0, 0, 1, 1},
  {0, __pyx_k_texture_slots, sizeof(__pyx_k_texture_slots), 0, 0, 1, 1},
  {0, __pyx_k_textured, sizeof(__pyx_k_textured), 0, 0, 1, 1},
  {0, __pyx_k_textures, sizeof(__pyx_k_textures), 0, 0, 1, 1},
  {0, __pyx_k_th, sizeof(__pyx_k_th), 0, 0, 1, 1},
  {0, __pyx_k_thread, sizeof(__pyx_k_thread), 0, 0, 1, 1},
  {0, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {0, __pyx_k_title, sizeof(__pyx_k_title), 0, 0, 1, 1},
  {0, __pyx_k_tk, sizeof(__pyx_k_tk), 0, 0, 1, 1},
  {0, __pyx_k_tkAutoSpin, sizeof(__pyx_k_tkAutoSpin), 0, 0, 1, 1},
  {0, __pyx_k_tkCreateContext, sizeof(__pyx_k_tkCreateContext), 0, 0, 1, 1},
  {0, __pyx_k_tkExpose, sizeof(__pyx_k_tkExpose), 0, 0, 1, 1},
  {0, __pyx_k_tkHandlePick, sizeof(__pyx_k_tkHandlePick), 0, 0, 1, 1},
  {0, __pyx_k_tkMakeCurrent, sizeof(__pyx_k_tkMakeCurrent), 0, 0, 1, 1},
  {0, __pyx_k_tkMap, sizeof(__pyx_k_tkMap), 0, 0, 1, 1},
  {0, __pyx_k_tkPrint, sizeof(__pyx_k_tkPrint), 0, 0, 1, 1},
  {0, __pyx_k_tkRecordMouse, sizeof(__pyx_k_tkRecordMouse), 0, 0, 1, 1},
  {0, __pyx_k_tkRedraw, sizeof(__pyx_k_tkRedraw), 0, 0, 1, 1},
  {0, __pyx_k_tkResize, sizeof(__pyx_k_tkResize), 0, 0, 1, 1},
  {0, __pyx_k_tkRotate, sizeof(__pyx_k_tkRotate), 0, 0, 1, 1},
  {0, __pyx_k_tkScale, sizeof(__pyx_k_tkScale), 0, 0, 1, 1},
  {0, __pyx_k_tkSwapBuffers, sizeof(__pyx_k_tkSwapBuffers), 0, 0, 1, 1},
  {0, __pyx_k_tkTranslate, sizeof(__pyx_k_tkTranslate), 0, 0, 1, 1},
  {0, __pyx_k_tkinter, sizeof(__pyx_k_tkinter), 0, 0, 1, 1},
  {0, __pyx_k_tlist, sizeof(__pyx_k_tlist), 0, 0, 1, 1},
  {0, __pyx_k_to, sizeof(__pyx_k_to), 0, 0, 1, 1},
  {0, __pyx_k_total_updates, sizeof(__pyx_k_total_updates), 0, 0, 1, 1},
  {0, __pyx_k_tquad, sizeof(__pyx_k_tquad), 0, 0, 1, 1},
  {0, __pyx_k_tr1, sizeof(__pyx_k_tr1), 0, 0, 1, 1},
  {0, __pyx_k_tr2, sizeof(__pyx_k_tr2), 0, 0, 1, 1},
  {0, __pyx_k_tu, sizeof(__pyx_k_tu), 0, 0, 1, 1},
  {0, __pyx_k_tua, sizeof(__pyx_k_tua), 0, 0, 1, 1},
  {0, __pyx_k_txn, sizeof(__pyx_k_txn), 0, 0, 1, 1},
  {0, __pyx_k_txs, sizeof(__pyx_k_txs), 0, 0, 1, 1},
  {0, __pyx_k_txtid, sizeof(__pyx_k_txtid), 0, 0, 1, 1},
  {0, __pyx_k_ubyte, sizeof(__pyx_k_ubyte), 0, 0, 1, 1},
  {0, __pyx_k_uint8, sizeof(__pyx_k_uint8), 0, 0, 1, 1},
  {0, __pyx_k_unload, sizeof(__pyx_k_unload), 0, 0, 1, 1},
  {0, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {0, __pyx_k_update_animation, sizeof(__pyx_k_update_animation), 0, 0, 1, 1},
  {0, __pyx_k_update_idletasks, sizeof(__pyx_k_update_idletasks), 0, 0, 1, 1},
  {0, __pyx_k_update_list, sizeof(__pyx_k_update_list), 0, 0, 1, 1},
  {0, __pyx_k_updates, sizeof(__pyx_k_updates), 0, 0, 1, 1},
  {0, __pyx_k_use_texture, sizeof(__pyx_k_use_texture), 0, 0, 1, 1},
  {0, __pyx_k_usecords, sizeof(__pyx_k_usecords), 0, 0, 1, 1},
  {0, __pyx_k_user32, sizeof(__pyx_k_user32), 0, 0, 1, 1},
  {0, __pyx_k_user32_2, sizeof(__pyx_k_user32_2), 0, 0, 1, 1},
  {0, __pyx_k_usingVIPSandShrink, sizeof(__pyx_k_usingVIPSandShrink), 0, 0, 1, 1},
  {0, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {0, __pyx_k_util, sizeof(__pyx_k_util), 0, 0, 1, 1},
  {0, __pyx_k_v3distsq, sizeof(__pyx_k_v3distsq), 0, 0, 1, 1},
  {0, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {0, __pyx_k_vb_count, sizeof(__pyx_k_vb_count), 0, 0, 1, 1},
  {0, __pyx_k_vbo, sizeof(__pyx_k_vbo), 0, 0, 1, 1},
  {0, __pyx_k_vbos, sizeof(__pyx_k_vbos), 0, 0, 1, 1},
  {0, __pyx_k_version_330_core_layout_locatio, sizeof(__pyx_k_version_330_core_layout_locatio), 0, 0, 1, 0},
  {0, __pyx_k_version_330_core_layout_locatio_2, sizeof(__pyx_k_version_330_core_layout_locatio_2), 0, 0, 1, 0},
  {0, __pyx_k_version_info, sizeof(__pyx_k_version_info), 0, 0, 1, 1},
  {0, __pyx_k_vert_lists, sizeof(__pyx_k_vert_lists), 0, 0, 1, 1},
  {0, __pyx_k_vertices, sizeof(__pyx_k_vertices), 0, 0, 1, 1},
  {0, __pyx_k_vipshome, sizeof(__pyx_k_vipshome), 0, 0, 1, 1},
  {0, __pyx_k_vis, sizeof(__pyx_k_vis), 0, 0, 1, 1},
  {0, __pyx_k_visual, sizeof(__pyx_k_visual), 0, 0, 1, 1},
  {0, __pyx_k_visualid, sizeof(__pyx_k_visualid), 0, 0, 1, 1},
  {0, __pyx_k_vns, sizeof(__pyx_k_vns), 0, 0, 1, 1},
  {0, __pyx_k_vxshader, sizeof(__pyx_k_vxshader), 0, 0, 1, 1},
  {0, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {0, __pyx_k_w_2, sizeof(__pyx_k_w_2), 0, 0, 1, 1},
  {0, __pyx_k_wait, sizeof(__pyx_k_wait), 0, 0, 1, 1},
  {0, __pyx_k_wglCreateContext, sizeof(__pyx_k_wglCreateContext), 0, 0, 1, 1},
  {0, __pyx_k_wglMakeCurrent, sizeof(__pyx_k_wglMakeCurrent), 0, 0, 1, 1},
  {0, __pyx_k_wid, sizeof(__pyx_k_wid), 0, 0, 1, 1},
  {0, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 1},
  {0, __pyx_k_win, sizeof(__pyx_k_win), 0, 0, 1, 1},
  {0, __pyx_k_win32, sizeof(__pyx_k_win32), 0, 0, 1, 1},
  {0, __pyx_k_win_height, sizeof(__pyx_k_win_height), 0, 0, 1, 1},
  {0, __pyx_k_winfo, sizeof(__pyx_k_winfo), 0, 0, 1, 1},
  {0, __pyx_k_winfo_height, sizeof(__pyx_k_winfo_height), 0, 0, 1, 1},
  {0, __pyx_k_winfo_id, sizeof(__pyx_k_winfo_id), 0, 0, 1, 1},
  {0, __pyx_k_winfo_ismapped, sizeof(__pyx_k_winfo_ismapped), 0, 0, 1, 1},
  {0, __pyx_k_winfo_screen, sizeof(__pyx_k_winfo_screen), 0, 0, 1, 1},
  {0, __pyx_k_winfo_visualid, sizeof(__pyx_k_winfo_visualid), 0, 0, 1, 1},
  {0, __pyx_k_winfo_width, sizeof(__pyx_k_winfo_width), 0, 0, 1, 1},
  {0, __pyx_k_write_to_memory, sizeof(__pyx_k_write_to_memory), 0, 0, 1, 1},
  {0, __pyx_k_wtf, sizeof(__pyx_k_wtf), 0, 0, 1, 1},
  {0, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {0, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
  {0, __pyx_k_x11lib, sizeof(__pyx_k_x11lib), 0, 0, 1, 1},
  {0, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
  {0, __pyx_k_x_root, sizeof(__pyx_k_x_root), 0, 0, 1, 1},
  {0, __pyx_k_xcenter, sizeof(__pyx_k_xcenter), 0, 0, 1, 1},
  {0, __pyx_k_xmouse, sizeof(__pyx_k_xmouse), 0, 0, 1, 1},
  {0, __pyx_k_xr, sizeof(__pyx_k_xr), 0, 0, 1, 1},
  {0, __pyx_k_xspin, sizeof(__pyx_k_xspin), 0, 0, 1, 1},
  {0, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {0, __pyx_k_y1, sizeof(__pyx_k_y1), 0, 0, 1, 1},
  {0, __pyx_k_y2, sizeof(__pyx_k_y2), 0, 0, 1, 1},
  {0, __pyx_k_y_root, sizeof(__pyx_k_y_root), 0, 0, 1, 1},
  {0, __pyx_k_ycenter, sizeof(__pyx_k_ycenter), 0, 0, 1, 1},
  {0, __pyx_k_ymouse, sizeof(__pyx_k_ymouse), 0, 0, 1, 1},
  {0, __pyx_k_yr, sizeof(__pyx_k_yr), 0, 0, 1, 1},
  {0, __pyx_k_yspin, sizeof(__pyx_k_yspin), 0, 0, 1, 1},
  {0, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {0, __pyx_k_zcenter, sizeof(__pyx_k_zcenter), 0, 0, 1, 1},
  {0, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  #else
  {&__pyx_n_s_AssertionError, __pyx_k_AssertionError, sizeof(__pyx_k_AssertionError), 0, 0, 1, 1},
  {&__pyx_n_s_B1, __pyx_k_B1, sizeof(__pyx_k_B1), 0, 0, 1, 1},
  {&__pyx_kp_s_B1_Motion, __pyx_k_B1_Motion, sizeof(__pyx_k_B1_Motion), 0, 0, 1, 0},
  {&__pyx_n_s_B2, __pyx_k_B2, sizeof(__pyx_k_B2), 0, 0, 1, 1},
  {&__pyx_kp_s_B2_Motion, __pyx_k_B2_Motion, sizeof(__pyx_k_B2_Motion), 0, 0, 1, 0},
  {&__pyx_n_s_B3, __pyx_k_B3, sizeof(__pyx_k_B3), 0, 0, 1, 1},
  {&__pyx_kp_s_B3_Motion, __pyx_k_B3_Motion, sizeof(__pyx_k_B3_Motion), 0, 0, 1, 0},
  {&__pyx_n_s_BOOL, __pyx_k_BOOL, sizeof(__pyx_k_BOOL), 0, 0, 1, 1},
  {&__pyx_n_s_BOX_SIZE, __pyx_k_BOX_SIZE, sizeof(__pyx_k_BOX_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_BOX_START, __pyx_k_BOX_START, sizeof(__pyx_k_BOX_START), 0, 0, 1, 1},
  {&__pyx_n_s_BP, __pyx_k_BP, sizeof(__pyx_k_BP), 0, 0, 1, 1},
  {&__pyx_n_s_BR, __pyx_k_BR, sizeof(__pyx_k_BR), 0, 0, 1, 1},
  {&__pyx_kp_s_Before, __pyx_k_Before, sizeof(__pyx_k_Before), 0, 0, 1, 0},
  {&__pyx_kp_s_ButtonRelease_2, __pyx_k_ButtonRelease_2, sizeof(__pyx_k_ButtonRelease_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_1, __pyx_k_Button_1, sizeof(__pyx_k_Button_1), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_1_2, __pyx_k_Button_1_2, sizeof(__pyx_k_Button_1_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_1_Translate_Button_2_Rota, __pyx_k_Button_1_Translate_Button_2_Rota, sizeof(__pyx_k_Button_1_Translate_Button_2_Rota), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_2, __pyx_k_Button_2, sizeof(__pyx_k_Button_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_2_2, __pyx_k_Button_2_2, sizeof(__pyx_k_Button_2_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_3, __pyx_k_Button_3, sizeof(__pyx_k_Button_3), 0, 0, 1, 0},
  {&__pyx_kp_s_Button_3_2, __pyx_k_Button_3_2, sizeof(__pyx_k_Button_3_2), 0, 0, 1, 0},
  {&__pyx_n_s_CFUNCTYPE, __pyx_k_CFUNCTYPE, sizeof(__pyx_k_CFUNCTYPE), 0, 0, 1, 1},
  {&__pyx_n_s_COLOR, __pyx_k_COLOR, sizeof(__pyx_k_COLOR), 0, 0, 1, 1},
  {&__pyx_n_s_ChoosePixelFormat, __pyx_k_ChoosePixelFormat, sizeof(__pyx_k_ChoosePixelFormat), 0, 0, 1, 1},
  {&__pyx_n_s_Colormap, __pyx_k_Colormap, sizeof(__pyx_k_Colormap), 0, 0, 1, 1},
  {&__pyx_kp_s_Common_code_for_windows_x11, __pyx_k_Common_code_for_windows_x11, sizeof(__pyx_k_Common_code_for_windows_x11), 0, 0, 1, 0},
  {&__pyx_kp_s_Configure, __pyx_k_Configure, sizeof(__pyx_k_Configure), 0, 0, 1, 0},
  {&__pyx_n_s_Cords, __pyx_k_Cords, sizeof(__pyx_k_Cords), 0, 0, 1, 1},
  {&__pyx_kp_s_Create, __pyx_k_Create, sizeof(__pyx_k_Create), 0, 0, 1, 0},
  {&__pyx_n_s_D2DEvents, __pyx_k_D2DEvents, sizeof(__pyx_k_D2DEvents), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents___init, __pyx_k_D2DEvents___init, sizeof(__pyx_k_D2DEvents___init), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents__pas, __pyx_k_D2DEvents__pas, sizeof(__pyx_k_D2DEvents__pas), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_add_event, __pyx_k_D2DEvents_add_event, sizeof(__pyx_k_D2DEvents_add_event), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_check, __pyx_k_D2DEvents_check, sizeof(__pyx_k_D2DEvents_check), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_checkkeypress, __pyx_k_D2DEvents_checkkeypress, sizeof(__pyx_k_D2DEvents_checkkeypress), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_checklclick, __pyx_k_D2DEvents_checklclick, sizeof(__pyx_k_D2DEvents_checklclick), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_checkmclick, __pyx_k_D2DEvents_checkmclick, sizeof(__pyx_k_D2DEvents_checkmclick), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_checkmotion, __pyx_k_D2DEvents_checkmotion, sizeof(__pyx_k_D2DEvents_checkmotion), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_checkrclick, __pyx_k_D2DEvents_checkrclick, sizeof(__pyx_k_D2DEvents_checkrclick), 0, 0, 1, 1},
  {&__pyx_n_s_D2DEvents_clear_events, __pyx_k_D2DEvents_clear_events, sizeof(__pyx_k_D2DEvents_clear_events), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER, __pyx_k_D2DRENDER, sizeof(__pyx_k_D2DRENDER), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER_render, __pyx_k_D2DRENDER_render, sizeof(__pyx_k_D2DRENDER_render), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER_render_letter, __pyx_k_D2DRENDER_render_letter, sizeof(__pyx_k_D2DRENDER_render_letter), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER_render_quad, __pyx_k_D2DRENDER_render_quad, sizeof(__pyx_k_D2DRENDER_render_quad), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER_render_text, __pyx_k_D2DRENDER_render_text, sizeof(__pyx_k_D2DRENDER_render_text), 0, 0, 1, 1},
  {&__pyx_n_s_D2DRENDER_render_texture_quad, __pyx_k_D2DRENDER_render_texture_quad, sizeof(__pyx_k_D2DRENDER_render_texture_quad), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender, __pyx_k_D2Dprerender, sizeof(__pyx_k_D2Dprerender), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender___init, __pyx_k_D2Dprerender___init, sizeof(__pyx_k_D2Dprerender___init), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender_create_font, __pyx_k_D2Dprerender_create_font, sizeof(__pyx_k_D2Dprerender_create_font), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender_prerender_quad, __pyx_k_D2Dprerender_prerender_quad, sizeof(__pyx_k_D2Dprerender_prerender_quad), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender_prerender_text, __pyx_k_D2Dprerender_prerender_text, sizeof(__pyx_k_D2Dprerender_prerender_text), 0, 0, 1, 1},
  {&__pyx_n_s_D2Dprerender_prerender_texturequ, __pyx_k_D2Dprerender_prerender_texturequ, sizeof(__pyx_k_D2Dprerender_prerender_texturequ), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw, __pyx_k_D2Draw, sizeof(__pyx_k_D2Draw), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw___init, __pyx_k_D2Draw___init, sizeof(__pyx_k_D2Draw___init), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw__cords_to_ratio, __pyx_k_D2Draw__cords_to_ratio, sizeof(__pyx_k_D2Draw__cords_to_ratio), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw__resize, __pyx_k_D2Draw__resize, sizeof(__pyx_k_D2Draw__resize), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw__tex_arrayn_translate, __pyx_k_D2Draw__tex_arrayn_translate, sizeof(__pyx_k_D2Draw__tex_arrayn_translate), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw__texture_cords_to_ratio, __pyx_k_D2Draw__texture_cords_to_ratio, sizeof(__pyx_k_D2Draw__texture_cords_to_ratio), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_add_animation, __pyx_k_D2Draw_add_animation, sizeof(__pyx_k_D2Draw_add_animation), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_del_animation, __pyx_k_D2Draw_del_animation, sizeof(__pyx_k_D2Draw_del_animation), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_line, __pyx_k_D2Draw_draw_line, sizeof(__pyx_k_D2Draw_draw_line), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_lines, __pyx_k_D2Draw_draw_lines, sizeof(__pyx_k_D2Draw_draw_lines), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_point, __pyx_k_D2Draw_draw_point, sizeof(__pyx_k_D2Draw_draw_point), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_points, __pyx_k_D2Draw_draw_points, sizeof(__pyx_k_D2Draw_draw_points), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_quad, __pyx_k_D2Draw_draw_quad, sizeof(__pyx_k_D2Draw_draw_quad), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_quad_texture, __pyx_k_D2Draw_draw_quad_texture, sizeof(__pyx_k_D2Draw_draw_quad_texture), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_quad_texture_array, __pyx_k_D2Draw_draw_quad_texture_array, sizeof(__pyx_k_D2Draw_draw_quad_texture_array), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_draw_text, __pyx_k_D2Draw_draw_text, sizeof(__pyx_k_D2Draw_draw_text), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_resize, __pyx_k_D2Draw_resize, sizeof(__pyx_k_D2Draw_resize), 0, 0, 1, 1},
  {&__pyx_n_s_D2Draw_update_animation, __pyx_k_D2Draw_update_animation, sizeof(__pyx_k_D2Draw_update_animation), 0, 0, 1, 1},
  {&__pyx_n_s_DRAWMODELOC, __pyx_k_DRAWMODELOC, sizeof(__pyx_k_DRAWMODELOC), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_MODE, __pyx_k_DRAW_MODE, sizeof(__pyx_k_DRAW_MODE), 0, 0, 1, 1},
  {&__pyx_kp_s_D_vips_dev_8_9_bin, __pyx_k_D_vips_dev_8_9_bin, sizeof(__pyx_k_D_vips_dev_8_9_bin), 0, 0, 1, 0},
  {&__pyx_n_s_Dialog, __pyx_k_Dialog, sizeof(__pyx_k_Dialog), 0, 0, 1, 1},
  {&__pyx_n_s_Display, __pyx_k_Display, sizeof(__pyx_k_Display), 0, 0, 1, 1},
  {&__pyx_kp_s_Do_something_to_create_this_obje, __pyx_k_Do_something_to_create_this_obje, sizeof(__pyx_k_Do_something_to_create_this_obje), 0, 0, 1, 0},
  {&__pyx_n_s_Done, __pyx_k_Done, sizeof(__pyx_k_Done), 0, 0, 1, 1},
  {&__pyx_kp_s_Done_making_a_first_context, __pyx_k_Done_making_a_first_context, sizeof(__pyx_k_Done_making_a_first_context), 0, 0, 1, 0},
  {&__pyx_n_s_Drago2Dengine___versions___win32, __pyx_k_Drago2Dengine___versions___win32, sizeof(__pyx_k_Drago2Dengine___versions___win32), 0, 0, 1, 1},
  {&__pyx_kp_s_Drago2Dengine_py, __pyx_k_Drago2Dengine_py, sizeof(__pyx_k_Drago2Dengine_py), 0, 0, 1, 0},
  {&__pyx_n_s_DragoObject, __pyx_k_DragoObject, sizeof(__pyx_k_DragoObject), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject___docs, __pyx_k_DragoObject___docs, sizeof(__pyx_k_DragoObject___docs), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject___init, __pyx_k_DragoObject___init, sizeof(__pyx_k_DragoObject___init), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject__is_serialized, __pyx_k_DragoObject__is_serialized, sizeof(__pyx_k_DragoObject__is_serialized), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject__load_scene, __pyx_k_DragoObject__load_scene, sizeof(__pyx_k_DragoObject__load_scene), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_add_buffer, __pyx_k_DragoObject_add_buffer, sizeof(__pyx_k_DragoObject_add_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_add_textureupdate, __pyx_k_DragoObject_add_textureupdate, sizeof(__pyx_k_DragoObject_add_textureupdate), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_bind_buffer, __pyx_k_DragoObject_bind_buffer, sizeof(__pyx_k_DragoObject_bind_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_clear, __pyx_k_DragoObject_clear, sizeof(__pyx_k_DragoObject_clear), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_compile, __pyx_k_DragoObject_compile, sizeof(__pyx_k_DragoObject_compile), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_create_letter, __pyx_k_DragoObject_create_letter, sizeof(__pyx_k_DragoObject_create_letter), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_create_quad, __pyx_k_DragoObject_create_quad, sizeof(__pyx_k_DragoObject_create_quad), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_delete_obj, __pyx_k_DragoObject_delete_obj, sizeof(__pyx_k_DragoObject_delete_obj), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_draw, __pyx_k_DragoObject_draw, sizeof(__pyx_k_DragoObject_draw), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_draw_text, __pyx_k_DragoObject_draw_text, sizeof(__pyx_k_DragoObject_draw_text), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_edit_color, __pyx_k_DragoObject_edit_color, sizeof(__pyx_k_DragoObject_edit_color), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_edit_letter, __pyx_k_DragoObject_edit_letter, sizeof(__pyx_k_DragoObject_edit_letter), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_edit_pos, __pyx_k_DragoObject_edit_pos, sizeof(__pyx_k_DragoObject_edit_pos), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_edit_texture, __pyx_k_DragoObject_edit_texture, sizeof(__pyx_k_DragoObject_edit_texture), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_edit_tpos, __pyx_k_DragoObject_edit_tpos, sizeof(__pyx_k_DragoObject_edit_tpos), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_buffer, __pyx_k_DragoObject_get_buffer, sizeof(__pyx_k_DragoObject_get_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_color, __pyx_k_DragoObject_get_color, sizeof(__pyx_k_DragoObject_get_color), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_objectindexes, __pyx_k_DragoObject_get_objectindexes, sizeof(__pyx_k_DragoObject_get_objectindexes), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_pos, __pyx_k_DragoObject_get_pos, sizeof(__pyx_k_DragoObject_get_pos), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_shader, __pyx_k_DragoObject_get_shader, sizeof(__pyx_k_DragoObject_get_shader), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_texid, __pyx_k_DragoObject_get_texid, sizeof(__pyx_k_DragoObject_get_texid), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_get_vertices, __pyx_k_DragoObject_get_vertices, sizeof(__pyx_k_DragoObject_get_vertices), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_move, __pyx_k_DragoObject_move, sizeof(__pyx_k_DragoObject_move), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_move_down, __pyx_k_DragoObject_move_down, sizeof(__pyx_k_DragoObject_move_down), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_move_up, __pyx_k_DragoObject_move_up, sizeof(__pyx_k_DragoObject_move_up), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_queue, __pyx_k_DragoObject_queue, sizeof(__pyx_k_DragoObject_queue), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_queue_check, __pyx_k_DragoObject_queue_check, sizeof(__pyx_k_DragoObject_queue_check), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_serialize_to_obj, __pyx_k_DragoObject_serialize_to_obj, sizeof(__pyx_k_DragoObject_serialize_to_obj), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_set_mode, __pyx_k_DragoObject_set_mode, sizeof(__pyx_k_DragoObject_set_mode), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_switch, __pyx_k_DragoObject_switch, sizeof(__pyx_k_DragoObject_switch), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_update, __pyx_k_DragoObject_update, sizeof(__pyx_k_DragoObject_update), 0, 0, 1, 1},
  {&__pyx_n_s_DragoObject_use_texture, __pyx_k_DragoObject_use_texture, sizeof(__pyx_k_DragoObject_use_texture), 0, 0, 1, 1},
  {&__pyx_n_s_EventDelay, __pyx_k_EventDelay, sizeof(__pyx_k_EventDelay), 0, 0, 1, 1},
  {&__pyx_n_s_EventOff, __pyx_k_EventOff, sizeof(__pyx_k_EventOff), 0, 0, 1, 1},
  {&__pyx_n_s_EventOn, __pyx_k_EventOn, sizeof(__pyx_k_EventOn), 0, 0, 1, 1},
  {&__pyx_n_s_EventType, __pyx_k_EventType, sizeof(__pyx_k_EventType), 0, 0, 1, 1},
  {&__pyx_kp_s_Expose, __pyx_k_Expose, sizeof(__pyx_k_Expose), 0, 0, 1, 0},
  {&__pyx_kp_s_Extension_list, __pyx_k_Extension_list, sizeof(__pyx_k_Extension_list), 0, 0, 1, 0},
  {&__pyx_n_s_FRAGMENT_SHADER, __pyx_k_FRAGMENT_SHADER, sizeof(__pyx_k_FRAGMENT_SHADER), 0, 0, 1, 1},
  {&__pyx_n_s_FT_LOAD_FORCE_AUTOHINT, __pyx_k_FT_LOAD_FORCE_AUTOHINT, sizeof(__pyx_k_FT_LOAD_FORCE_AUTOHINT), 0, 0, 1, 1},
  {&__pyx_n_s_FT_LOAD_RENDER, __pyx_k_FT_LOAD_RENDER, sizeof(__pyx_k_FT_LOAD_RENDER), 0, 0, 1, 1},
  {&__pyx_n_s_Face, __pyx_k_Face, sizeof(__pyx_k_Face), 0, 0, 1, 1},
  {&__pyx_n_s_Frame, __pyx_k_Frame, sizeof(__pyx_k_Frame), 0, 0, 1, 1},
  {&__pyx_n_s_GL, __pyx_k_GL, sizeof(__pyx_k_GL), 0, 0, 1, 1},
  {&__pyx_n_s_GLU, __pyx_k_GLU, sizeof(__pyx_k_GLU), 0, 0, 1, 1},
  {&__pyx_n_s_GLUT, __pyx_k_GLUT, sizeof(__pyx_k_GLUT), 0, 0, 1, 1},
  {&__pyx_n_s_GLX, __pyx_k_GLX, sizeof(__pyx_k_GLX), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_BLUE_SIZE, __pyx_k_GLX_BLUE_SIZE, sizeof(__pyx_k_GLX_BLUE_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_DEPTH_SIZE, __pyx_k_GLX_DEPTH_SIZE, sizeof(__pyx_k_GLX_DEPTH_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_DOUBLEBUFFER, __pyx_k_GLX_DOUBLEBUFFER, sizeof(__pyx_k_GLX_DOUBLEBUFFER), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_DRAWABLE_TYPE, __pyx_k_GLX_DRAWABLE_TYPE, sizeof(__pyx_k_GLX_DRAWABLE_TYPE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_GREEN_SIZE, __pyx_k_GLX_GREEN_SIZE, sizeof(__pyx_k_GLX_GREEN_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_RED_SIZE, __pyx_k_GLX_RED_SIZE, sizeof(__pyx_k_GLX_RED_SIZE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_RENDER_TYPE, __pyx_k_GLX_RENDER_TYPE, sizeof(__pyx_k_GLX_RENDER_TYPE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_RGBA, __pyx_k_GLX_RGBA, sizeof(__pyx_k_GLX_RGBA), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_RGBA_BIT, __pyx_k_GLX_RGBA_BIT, sizeof(__pyx_k_GLX_RGBA_BIT), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_RGBA_TYPE, __pyx_k_GLX_RGBA_TYPE, sizeof(__pyx_k_GLX_RGBA_TYPE), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_WINDOW_BIT, __pyx_k_GLX_WINDOW_BIT, sizeof(__pyx_k_GLX_WINDOW_BIT), 0, 0, 1, 1},
  {&__pyx_n_s_GLX_X_RENDERABLE, __pyx_k_GLX_X_RENDERABLE, sizeof(__pyx_k_GLX_X_RENDERABLE), 0, 0, 1, 1},
  {&__pyx_kp_s_GLX_version_d_d, __pyx_k_GLX_version_d_d, sizeof(__pyx_k_GLX_version_d_d), 0, 0, 1, 0},
  {&__pyx_n_s_GL_ALPHA, __pyx_k_GL_ALPHA, sizeof(__pyx_k_GL_ALPHA), 0, 0, 1, 1},
  {&__pyx_n_s_GL_ARRAY_BUFFER, __pyx_k_GL_ARRAY_BUFFER, sizeof(__pyx_k_GL_ARRAY_BUFFER), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL, __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFIL, sizeof(__pyx_k_GL_CONTEXT_COMPATIBILITY_PROFIL), 0, 0, 1, 0},
  {&__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE, __pyx_k_GL_CONTEXT_COMPATIBILITY_PROFILE, sizeof(__pyx_k_GL_CONTEXT_COMPATIBILITY_PROFILE), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT, __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT, sizeof(__pyx_k_GL_CONTEXT_CORE_PROFILE_BIT), 0, 0, 1, 0},
  {&__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2, __pyx_k_GL_CONTEXT_CORE_PROFILE_BIT_2, sizeof(__pyx_k_GL_CONTEXT_CORE_PROFILE_BIT_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_CONTEXT_PROFILE_MASK, __pyx_k_GL_CONTEXT_PROFILE_MASK, sizeof(__pyx_k_GL_CONTEXT_PROFILE_MASK), 0, 0, 1, 1},
  {&__pyx_n_s_GL_DEPTH_TEST, __pyx_k_GL_DEPTH_TEST, sizeof(__pyx_k_GL_DEPTH_TEST), 0, 0, 1, 1},
  {&__pyx_n_s_GL_DYNAMIC_DRAW, __pyx_k_GL_DYNAMIC_DRAW, sizeof(__pyx_k_GL_DYNAMIC_DRAW), 0, 0, 1, 1},
  {&__pyx_n_s_GL_EXTENSIONS, __pyx_k_GL_EXTENSIONS, sizeof(__pyx_k_GL_EXTENSIONS), 0, 0, 1, 1},
  {&__pyx_n_s_GL_FALSE, __pyx_k_GL_FALSE, sizeof(__pyx_k_GL_FALSE), 0, 0, 1, 1},
  {&__pyx_n_s_GL_FLOAT, __pyx_k_GL_FLOAT, sizeof(__pyx_k_GL_FLOAT), 0, 0, 1, 1},
  {&__pyx_n_s_GL_FRAGMENT_SHADER, __pyx_k_GL_FRAGMENT_SHADER, sizeof(__pyx_k_GL_FRAGMENT_SHADER), 0, 0, 1, 1},
  {&__pyx_n_s_GL_LESS, __pyx_k_GL_LESS, sizeof(__pyx_k_GL_LESS), 0, 0, 1, 1},
  {&__pyx_n_s_GL_LIGHT0, __pyx_k_GL_LIGHT0, sizeof(__pyx_k_GL_LIGHT0), 0, 0, 1, 1},
  {&__pyx_n_s_GL_LIGHTING, __pyx_k_GL_LIGHTING, sizeof(__pyx_k_GL_LIGHTING), 0, 0, 1, 1},
  {&__pyx_n_s_GL_LINEAR, __pyx_k_GL_LINEAR, sizeof(__pyx_k_GL_LINEAR), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_MAJOR_VERSION, __pyx_k_GL_MAJOR_VERSION, sizeof(__pyx_k_GL_MAJOR_VERSION), 0, 0, 1, 0},
  {&__pyx_n_s_GL_MAJOR_VERSION_2, __pyx_k_GL_MAJOR_VERSION_2, sizeof(__pyx_k_GL_MAJOR_VERSION_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_MATRIX_MODE, __pyx_k_GL_MATRIX_MODE, sizeof(__pyx_k_GL_MATRIX_MODE), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_MINOR_VERSION, __pyx_k_GL_MINOR_VERSION, sizeof(__pyx_k_GL_MINOR_VERSION), 0, 0, 1, 0},
  {&__pyx_n_s_GL_MINOR_VERSION_2, __pyx_k_GL_MINOR_VERSION_2, sizeof(__pyx_k_GL_MINOR_VERSION_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_MODELVIEW, __pyx_k_GL_MODELVIEW, sizeof(__pyx_k_GL_MODELVIEW), 0, 0, 1, 1},
  {&__pyx_n_s_GL_NEAREST, __pyx_k_GL_NEAREST, sizeof(__pyx_k_GL_NEAREST), 0, 0, 1, 1},
  {&__pyx_n_s_GL_POINTS, __pyx_k_GL_POINTS, sizeof(__pyx_k_GL_POINTS), 0, 0, 1, 1},
  {&__pyx_n_s_GL_POSITION, __pyx_k_GL_POSITION, sizeof(__pyx_k_GL_POSITION), 0, 0, 1, 1},
  {&__pyx_n_s_GL_PROJECTION, __pyx_k_GL_PROJECTION, sizeof(__pyx_k_GL_PROJECTION), 0, 0, 1, 1},
  {&__pyx_n_s_GL_QUADS, __pyx_k_GL_QUADS, sizeof(__pyx_k_GL_QUADS), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_RENDERER, __pyx_k_GL_RENDERER, sizeof(__pyx_k_GL_RENDERER), 0, 0, 1, 0},
  {&__pyx_n_s_GL_RENDERER_2, __pyx_k_GL_RENDERER_2, sizeof(__pyx_k_GL_RENDERER_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_REPEAT, __pyx_k_GL_REPEAT, sizeof(__pyx_k_GL_REPEAT), 0, 0, 1, 1},
  {&__pyx_n_s_GL_RGB, __pyx_k_GL_RGB, sizeof(__pyx_k_GL_RGB), 0, 0, 1, 1},
  {&__pyx_n_s_GL_RGBA, __pyx_k_GL_RGBA, sizeof(__pyx_k_GL_RGBA), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION, __pyx_k_GL_SHADING_LANGUAGE_VERSION, sizeof(__pyx_k_GL_SHADING_LANGUAGE_VERSION), 0, 0, 1, 0},
  {&__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2, __pyx_k_GL_SHADING_LANGUAGE_VERSION_2, sizeof(__pyx_k_GL_SHADING_LANGUAGE_VERSION_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TEXTURE_2D, __pyx_k_GL_TEXTURE_2D, sizeof(__pyx_k_GL_TEXTURE_2D), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TEXTURE_MAG_FILTER, __pyx_k_GL_TEXTURE_MAG_FILTER, sizeof(__pyx_k_GL_TEXTURE_MAG_FILTER), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TEXTURE_MIN_FILTER, __pyx_k_GL_TEXTURE_MIN_FILTER, sizeof(__pyx_k_GL_TEXTURE_MIN_FILTER), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TEXTURE_WRAP_S, __pyx_k_GL_TEXTURE_WRAP_S, sizeof(__pyx_k_GL_TEXTURE_WRAP_S), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TEXTURE_WRAP_T, __pyx_k_GL_TEXTURE_WRAP_T, sizeof(__pyx_k_GL_TEXTURE_WRAP_T), 0, 0, 1, 1},
  {&__pyx_n_s_GL_TRUE, __pyx_k_GL_TRUE, sizeof(__pyx_k_GL_TRUE), 0, 0, 1, 1},
  {&__pyx_n_s_GL_UNPACK_ALIGNMENT, __pyx_k_GL_UNPACK_ALIGNMENT, sizeof(__pyx_k_GL_UNPACK_ALIGNMENT), 0, 0, 1, 1},
  {&__pyx_n_s_GL_UNSIGNED_BYTE, __pyx_k_GL_UNSIGNED_BYTE, sizeof(__pyx_k_GL_UNSIGNED_BYTE), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_VENDOR, __pyx_k_GL_VENDOR, sizeof(__pyx_k_GL_VENDOR), 0, 0, 1, 0},
  {&__pyx_n_s_GL_VENDOR_2, __pyx_k_GL_VENDOR_2, sizeof(__pyx_k_GL_VENDOR_2), 0, 0, 1, 1},
  {&__pyx_kp_s_GL_VERSION, __pyx_k_GL_VERSION, sizeof(__pyx_k_GL_VERSION), 0, 0, 1, 0},
  {&__pyx_n_s_GL_VERSION_2, __pyx_k_GL_VERSION_2, sizeof(__pyx_k_GL_VERSION_2), 0, 0, 1, 1},
  {&__pyx_n_s_GL_VERTEX_ARRAY, __pyx_k_GL_VERTEX_ARRAY, sizeof(__pyx_k_GL_VERTEX_ARRAY), 0, 0, 1, 1},
  {&__pyx_n_s_GL_VERTEX_SHADER, __pyx_k_GL_VERTEX_SHADER, sizeof(__pyx_k_GL_VERTEX_SHADER), 0, 0, 1, 1},
  {&__pyx_n_s_GLint, __pyx_k_GLint, sizeof(__pyx_k_GLint), 0, 0, 1, 1},
  {&__pyx_n_s_GetDC, __pyx_k_GetDC, sizeof(__pyx_k_GetDC), 0, 0, 1, 1},
  {&__pyx_kp_s_Got_a_matching_visual_index_d_d, __pyx_k_Got_a_matching_visual_index_d_d, sizeof(__pyx_k_Got_a_matching_visual_index_d_d), 0, 0, 1, 0},
  {&__pyx_n_s_HDC, __pyx_k_HDC, sizeof(__pyx_k_HDC), 0, 0, 1, 1},
  {&__pyx_n_s_Hover, __pyx_k_Hover, sizeof(__pyx_k_Hover), 0, 0, 1, 1},
  {&__pyx_n_s_Image, __pyx_k_Image, sizeof(__pyx_k_Image), 0, 0, 1, 1},
  {&__pyx_n_s_Imagenumpy, __pyx_k_Imagenumpy, sizeof(__pyx_k_Imagenumpy), 0, 0, 1, 1},
  {&__pyx_kp_s_Is_Direct, __pyx_k_Is_Direct, sizeof(__pyx_k_Is_Direct), 0, 0, 1, 0},
  {&__pyx_n_s_KeyPress, __pyx_k_KeyPress, sizeof(__pyx_k_KeyPress), 0, 0, 1, 1},
  {&__pyx_kp_s_KeyPress_2, __pyx_k_KeyPress_2, sizeof(__pyx_k_KeyPress_2), 0, 0, 1, 0},
  {&__pyx_n_s_LeftClick, __pyx_k_LeftClick, sizeof(__pyx_k_LeftClick), 0, 0, 1, 1},
  {&__pyx_n_s_LoadLibrary, __pyx_k_LoadLibrary, sizeof(__pyx_k_LoadLibrary), 0, 0, 1, 1},
  {&__pyx_n_s_MN, __pyx_k_MN, sizeof(__pyx_k_MN), 0, 0, 1, 1},
  {&__pyx_kp_s_Map, __pyx_k_Map, sizeof(__pyx_k_Map), 0, 0, 1, 0},
  {&__pyx_n_s_MiddleClick, __pyx_k_MiddleClick, sizeof(__pyx_k_MiddleClick), 0, 0, 1, 1},
  {&__pyx_n_s_Motion, __pyx_k_Motion, sizeof(__pyx_k_Motion), 0, 0, 1, 1},
  {&__pyx_kp_s_Motion_2, __pyx_k_Motion_2, sizeof(__pyx_k_Motion_2), 0, 0, 1, 0},
  {&__pyx_n_s_MouseHover, __pyx_k_MouseHover, sizeof(__pyx_k_MouseHover), 0, 0, 1, 1},
  {&__pyx_n_s_MouseLC, __pyx_k_MouseLC, sizeof(__pyx_k_MouseLC), 0, 0, 1, 1},
  {&__pyx_n_s_MouseMC, __pyx_k_MouseMC, sizeof(__pyx_k_MouseMC), 0, 0, 1, 1},
  {&__pyx_n_s_MouseRC, __pyx_k_MouseRC, sizeof(__pyx_k_MouseRC), 0, 0, 1, 1},
  {&__pyx_n_s_NEWLINE, __pyx_k_NEWLINE, sizeof(__pyx_k_NEWLINE), 0, 0, 1, 1},
  {&__pyx_n_s_NOENABLE, __pyx_k_NOENABLE, sizeof(__pyx_k_NOENABLE), 0, 0, 1, 1},
  {&__pyx_n_s_New_Texture, __pyx_k_New_Texture, sizeof(__pyx_k_New_Texture), 0, 0, 1, 1},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_kp_s_Number_of_FBconfigs, __pyx_k_Number_of_FBconfigs, sizeof(__pyx_k_Number_of_FBconfigs), 0, 0, 1, 0},
  {&__pyx_kp_s_Number_of_extensions, __pyx_k_Number_of_extensions, sizeof(__pyx_k_Number_of_extensions), 0, 0, 1, 0},
  {&__pyx_n_s_OBJECT, __pyx_k_OBJECT, sizeof(__pyx_k_OBJECT), 0, 0, 1, 1},
  {&__pyx_n_s_Offests, __pyx_k_Offests, sizeof(__pyx_k_Offests), 0, 0, 1, 1},
  {&__pyx_n_s_Ok, __pyx_k_Ok, sizeof(__pyx_k_Ok), 0, 0, 1, 1},
  {&__pyx_kp_s_Old_context_errors_arose, __pyx_k_Old_context_errors_arose, sizeof(__pyx_k_Old_context_errors_arose), 0, 0, 1, 0},
  {&__pyx_n_s_OnKey, __pyx_k_OnKey, sizeof(__pyx_k_OnKey), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL, __pyx_k_OpenGL, sizeof(__pyx_k_OpenGL), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame, __pyx_k_OpenGLFrame, sizeof(__pyx_k_OpenGLFrame), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame__context, __pyx_k_OpenGLFrame__context, sizeof(__pyx_k_OpenGLFrame__context), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame__window, __pyx_k_OpenGLFrame__window, sizeof(__pyx_k_OpenGLFrame__window), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame_tkCreateContext, __pyx_k_OpenGLFrame_tkCreateContext, sizeof(__pyx_k_OpenGLFrame_tkCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame_tkMakeCurrent, __pyx_k_OpenGLFrame_tkMakeCurrent, sizeof(__pyx_k_OpenGLFrame_tkMakeCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGLFrame_tkSwapBuffers, __pyx_k_OpenGLFrame_tkSwapBuffers, sizeof(__pyx_k_OpenGLFrame_tkSwapBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL_GL, __pyx_k_OpenGL_GL, sizeof(__pyx_k_OpenGL_GL), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL_GL_shaders, __pyx_k_OpenGL_GL_shaders, sizeof(__pyx_k_OpenGL_GL_shaders), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL_WGL, __pyx_k_OpenGL_WGL, sizeof(__pyx_k_OpenGL_WGL), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL_raw_GLX__types, __pyx_k_OpenGL_raw_GLX__types, sizeof(__pyx_k_OpenGL_raw_GLX__types), 0, 0, 1, 1},
  {&__pyx_n_s_OpenGL_raw__GLX, __pyx_k_OpenGL_raw__GLX, sizeof(__pyx_k_OpenGL_raw__GLX), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl, __pyx_k_Opengl, sizeof(__pyx_k_Opengl), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_StartRotate, __pyx_k_Opengl_StartRotate, sizeof(__pyx_k_Opengl_StartRotate), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl___init, __pyx_k_Opengl___init, sizeof(__pyx_k_Opengl___init), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_activate, __pyx_k_Opengl_activate, sizeof(__pyx_k_Opengl_activate), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_basic_lighting, __pyx_k_Opengl_basic_lighting, sizeof(__pyx_k_Opengl_basic_lighting), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_do_AutoSpin, __pyx_k_Opengl_do_AutoSpin, sizeof(__pyx_k_Opengl_do_AutoSpin), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_freecalc, __pyx_k_Opengl_freecalc, sizeof(__pyx_k_Opengl_freecalc), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_help, __pyx_k_Opengl_help, sizeof(__pyx_k_Opengl_help), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_initgl, __pyx_k_Opengl_initgl, sizeof(__pyx_k_Opengl_initgl), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_redraw, __pyx_k_Opengl_redraw, sizeof(__pyx_k_Opengl_redraw), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_reset, __pyx_k_Opengl_reset, sizeof(__pyx_k_Opengl_reset), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_set_background, __pyx_k_Opengl_set_background, sizeof(__pyx_k_Opengl_set_background), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_set_centerpoint, __pyx_k_Opengl_set_centerpoint, sizeof(__pyx_k_Opengl_set_centerpoint), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_set_eyepoint, __pyx_k_Opengl_set_eyepoint, sizeof(__pyx_k_Opengl_set_eyepoint), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkAutoSpin, __pyx_k_Opengl_tkAutoSpin, sizeof(__pyx_k_Opengl_tkAutoSpin), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkExpose, __pyx_k_Opengl_tkExpose, sizeof(__pyx_k_Opengl_tkExpose), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkHandlePick, __pyx_k_Opengl_tkHandlePick, sizeof(__pyx_k_Opengl_tkHandlePick), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkPrint, __pyx_k_Opengl_tkPrint, sizeof(__pyx_k_Opengl_tkPrint), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkRecordMouse, __pyx_k_Opengl_tkRecordMouse, sizeof(__pyx_k_Opengl_tkRecordMouse), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkRedraw, __pyx_k_Opengl_tkRedraw, sizeof(__pyx_k_Opengl_tkRedraw), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkRotate, __pyx_k_Opengl_tkRotate, sizeof(__pyx_k_Opengl_tkRotate), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkScale, __pyx_k_Opengl_tkScale, sizeof(__pyx_k_Opengl_tkScale), 0, 0, 1, 1},
  {&__pyx_n_s_Opengl_tkTranslate, __pyx_k_Opengl_tkTranslate, sizeof(__pyx_k_Opengl_tkTranslate), 0, 0, 1, 1},
  {&__pyx_n_s_PATH, __pyx_k_PATH, sizeof(__pyx_k_PATH), 0, 0, 1, 1},
  {&__pyx_n_s_PFD_DOUBLEBUFFER, __pyx_k_PFD_DOUBLEBUFFER, sizeof(__pyx_k_PFD_DOUBLEBUFFER), 0, 0, 1, 1},
  {&__pyx_n_s_PFD_DRAW_TO_WINDOW, __pyx_k_PFD_DRAW_TO_WINDOW, sizeof(__pyx_k_PFD_DRAW_TO_WINDOW), 0, 0, 1, 1},
  {&__pyx_n_s_PFD_MAIN_PLANE, __pyx_k_PFD_MAIN_PLANE, sizeof(__pyx_k_PFD_MAIN_PLANE), 0, 0, 1, 1},
  {&__pyx_n_s_PFD_SUPPORT_OPENGL, __pyx_k_PFD_SUPPORT_OPENGL, sizeof(__pyx_k_PFD_SUPPORT_OPENGL), 0, 0, 1, 1},
  {&__pyx_n_s_PFD_TYPE_RGBA, __pyx_k_PFD_TYPE_RGBA, sizeof(__pyx_k_PFD_TYPE_RGBA), 0, 0, 1, 1},
  {&__pyx_n_s_PIL, __pyx_k_PIL, sizeof(__pyx_k_PIL), 0, 0, 1, 1},
  {&__pyx_n_s_PIXELFORMATDESCRIPTOR, __pyx_k_PIXELFORMATDESCRIPTOR, sizeof(__pyx_k_PIXELFORMATDESCRIPTOR), 0, 0, 1, 1},
  {&__pyx_n_s_POINTER, __pyx_k_POINTER, sizeof(__pyx_k_POINTER), 0, 0, 1, 1},
  {&__pyx_n_s_PRERENDER_VBO, __pyx_k_PRERENDER_VBO, sizeof(__pyx_k_PRERENDER_VBO), 0, 0, 1, 1},
  {&__pyx_n_s_PRERENDER_VBO___init, __pyx_k_PRERENDER_VBO___init, sizeof(__pyx_k_PRERENDER_VBO___init), 0, 0, 1, 1},
  {&__pyx_n_s_RAW_DATA, __pyx_k_RAW_DATA, sizeof(__pyx_k_RAW_DATA), 0, 0, 1, 1},
  {&__pyx_n_s_RENDER_VBO, __pyx_k_RENDER_VBO, sizeof(__pyx_k_RENDER_VBO), 0, 0, 1, 1},
  {&__pyx_n_s_RENDER_VBO___init, __pyx_k_RENDER_VBO___init, sizeof(__pyx_k_RENDER_VBO___init), 0, 0, 1, 1},
  {&__pyx_n_s_RGB, __pyx_k_RGB, sizeof(__pyx_k_RGB), 0, 0, 1, 1},
  {&__pyx_n_s_RawOpengl, __pyx_k_RawOpengl, sizeof(__pyx_k_RawOpengl), 0, 0, 1, 1},
  {&__pyx_n_s_RawOpengl___init, __pyx_k_RawOpengl___init, sizeof(__pyx_k_RawOpengl___init), 0, 0, 1, 1},
  {&__pyx_n_s_RawOpengl_tkRedraw, __pyx_k_RawOpengl_tkRedraw, sizeof(__pyx_k_RawOpengl_tkRedraw), 0, 0, 1, 1},
  {&__pyx_n_s_RightClick, __pyx_k_RightClick, sizeof(__pyx_k_RightClick), 0, 0, 1, 1},
  {&__pyx_n_s_SHADER, __pyx_k_SHADER, sizeof(__pyx_k_SHADER), 0, 0, 1, 1},
  {&__pyx_n_s_SHADER___init, __pyx_k_SHADER___init, sizeof(__pyx_k_SHADER___init), 0, 0, 1, 1},
  {&__pyx_kp_s_Screen_is, __pyx_k_Screen_is, sizeof(__pyx_k_Screen_is), 0, 0, 1, 0},
  {&__pyx_n_s_SetPixelFormat, __pyx_k_SetPixelFormat, sizeof(__pyx_k_SetPixelFormat), 0, 0, 1, 1},
  {&__pyx_kp_s_Shift_Button_1, __pyx_k_Shift_Button_1, sizeof(__pyx_k_Shift_Button_1), 0, 0, 1, 0},
  {&__pyx_n_s_Spacing_add, __pyx_k_Spacing_add, sizeof(__pyx_k_Spacing_add), 0, 0, 1, 1},
  {&__pyx_n_s_StartRotate, __pyx_k_StartRotate, sizeof(__pyx_k_StartRotate), 0, 0, 1, 1},
  {&__pyx_n_s_SwapBuffers, __pyx_k_SwapBuffers, sizeof(__pyx_k_SwapBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_TAB, __pyx_k_TAB, sizeof(__pyx_k_TAB), 0, 0, 1, 1},
  {&__pyx_n_s_TEXTUREID, __pyx_k_TEXTUREID, sizeof(__pyx_k_TEXTUREID), 0, 0, 1, 1},
  {&__pyx_n_s_TEXTURE_DISPLAY_METHOD, __pyx_k_TEXTURE_DISPLAY_METHOD, sizeof(__pyx_k_TEXTURE_DISPLAY_METHOD), 0, 0, 1, 1},
  {&__pyx_n_s_TXC, __pyx_k_TXC, sizeof(__pyx_k_TXC), 0, 0, 1, 1},
  {&__pyx_n_s_TXTARRAY, __pyx_k_TXTARRAY, sizeof(__pyx_k_TXTARRAY), 0, 0, 1, 1},
  {&__pyx_n_s_Texture_unit, __pyx_k_Texture_unit, sizeof(__pyx_k_Texture_unit), 0, 0, 1, 1},
  {&__pyx_n_s_Tkinter, __pyx_k_Tkinter, sizeof(__pyx_k_Tkinter), 0, 0, 1, 1},
  {&__pyx_kp_s_Tkinter_bindings_for_an_Opengl, __pyx_k_Tkinter_bindings_for_an_Opengl, sizeof(__pyx_k_Tkinter_bindings_for_an_Opengl), 0, 0, 1, 0},
  {&__pyx_kp_s_Uniform_Layout_Matrix_manipulat, __pyx_k_Uniform_Layout_Matrix_manipulat, sizeof(__pyx_k_Uniform_Layout_Matrix_manipulat), 0, 0, 1, 0},
  {&__pyx_n_s_VBO, __pyx_k_VBO, sizeof(__pyx_k_VBO), 0, 0, 1, 1},
  {&__pyx_n_s_VBO_OBJ, __pyx_k_VBO_OBJ, sizeof(__pyx_k_VBO_OBJ), 0, 0, 1, 1},
  {&__pyx_n_s_VBO_OBJ___init, __pyx_k_VBO_OBJ___init, sizeof(__pyx_k_VBO_OBJ___init), 0, 0, 1, 1},
  {&__pyx_n_s_VBO___init, __pyx_k_VBO___init, sizeof(__pyx_k_VBO___init), 0, 0, 1, 1},
  {&__pyx_n_s_VERTEX_SHADER, __pyx_k_VERTEX_SHADER, sizeof(__pyx_k_VERTEX_SHADER), 0, 0, 1, 1},
  {&__pyx_kp_s_Viewer_help, __pyx_k_Viewer_help, sizeof(__pyx_k_Viewer_help), 0, 0, 1, 0},
  {&__pyx_kp_s_Widget_without_any_sophisticated, __pyx_k_Widget_without_any_sophisticated, sizeof(__pyx_k_Widget_without_any_sophisticated), 0, 0, 1, 0},
  {&__pyx_n_s_WinDLL, __pyx_k_WinDLL, sizeof(__pyx_k_WinDLL), 0, 0, 1, 1},
  {&__pyx_n_s_X11, __pyx_k_X11, sizeof(__pyx_k_X11), 0, 0, 1, 1},
  {&__pyx_n_s_XDefaultScreen, __pyx_k_XDefaultScreen, sizeof(__pyx_k_XDefaultScreen), 0, 0, 1, 1},
  {&__pyx_n_s_XOpenDisplay, __pyx_k_XOpenDisplay, sizeof(__pyx_k_XOpenDisplay), 0, 0, 1, 1},
  {&__pyx_n_s_Z, __pyx_k_Z, sizeof(__pyx_k_Z), 0, 0, 1, 1},
  {&__pyx_kp_s__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 0},
  {&__pyx_kp_s__13, __pyx_k__13, sizeof(__pyx_k__13), 0, 0, 1, 0},
  {&__pyx_kp_s__207, __pyx_k__207, sizeof(__pyx_k__207), 0, 0, 1, 0},
  {&__pyx_kp_s__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 0, 1, 0},
  {&__pyx_n_s__80, __pyx_k__80, sizeof(__pyx_k__80), 0, 0, 1, 1},
  {&__pyx_kp_s__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 0, 1, 0},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_a_val, __pyx_k_a_val, sizeof(__pyx_k_a_val), 0, 0, 1, 1},
  {&__pyx_n_s_abcdefgh, __pyx_k_abcdefgh, sizeof(__pyx_k_abcdefgh), 0, 0, 1, 1},
  {&__pyx_n_s_access, __pyx_k_access, sizeof(__pyx_k_access), 0, 0, 1, 1},
  {&__pyx_n_s_activate, __pyx_k_activate, sizeof(__pyx_k_activate), 0, 0, 1, 1},
  {&__pyx_n_s_add_animation, __pyx_k_add_animation, sizeof(__pyx_k_add_animation), 0, 0, 1, 1},
  {&__pyx_n_s_add_boldnext, __pyx_k_add_boldnext, sizeof(__pyx_k_add_boldnext), 0, 0, 1, 1},
  {&__pyx_n_s_add_buffer, __pyx_k_add_buffer, sizeof(__pyx_k_add_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_add_event, __pyx_k_add_event, sizeof(__pyx_k_add_event), 0, 0, 1, 1},
  {&__pyx_n_s_add_textureupdate, __pyx_k_add_textureupdate, sizeof(__pyx_k_add_textureupdate), 0, 0, 1, 1},
  {&__pyx_n_s_after, __pyx_k_after, sizeof(__pyx_k_after), 0, 0, 1, 1},
  {&__pyx_n_s_after_cancel, __pyx_k_after_cancel, sizeof(__pyx_k_after_cancel), 0, 0, 1, 1},
  {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_animate, __pyx_k_animate, sizeof(__pyx_k_animate), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_argtypes, __pyx_k_argtypes, sizeof(__pyx_k_argtypes), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_ascender, __pyx_k_ascender, sizeof(__pyx_k_ascender), 0, 0, 1, 1},
  {&__pyx_n_s_att, __pyx_k_att, sizeof(__pyx_k_att), 0, 0, 1, 1},
  {&__pyx_n_s_autospin, __pyx_k_autospin, sizeof(__pyx_k_autospin), 0, 0, 1, 1},
  {&__pyx_n_s_autospin_allowed, __pyx_k_autospin_allowed, sizeof(__pyx_k_autospin_allowed), 0, 0, 1, 1},
  {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
  {&__pyx_kp_s_b_2, __pyx_k_b_2, sizeof(__pyx_k_b_2), 0, 0, 1, 0},
  {&__pyx_n_s_b_back, __pyx_k_b_back, sizeof(__pyx_k_b_back), 0, 0, 1, 1},
  {&__pyx_n_s_b_val, __pyx_k_b_val, sizeof(__pyx_k_b_val), 0, 0, 1, 1},
  {&__pyx_n_s_background, __pyx_k_background, sizeof(__pyx_k_background), 0, 0, 1, 1},
  {&__pyx_n_s_bands, __pyx_k_bands, sizeof(__pyx_k_bands), 0, 0, 1, 1},
  {&__pyx_n_s_base, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame, __pyx_k_baseOpenGLFrame, sizeof(__pyx_k_baseOpenGLFrame), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame___init, __pyx_k_baseOpenGLFrame___init, sizeof(__pyx_k_baseOpenGLFrame___init), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame__display, __pyx_k_baseOpenGLFrame__display, sizeof(__pyx_k_baseOpenGLFrame__display), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_check_all_b1_eve, __pyx_k_baseOpenGLFrame_check_all_b1_eve, sizeof(__pyx_k_baseOpenGLFrame_check_all_b1_eve), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_check_all_bpress, __pyx_k_baseOpenGLFrame_check_all_bpress, sizeof(__pyx_k_baseOpenGLFrame_check_all_bpress), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_check_all_brelas, __pyx_k_baseOpenGLFrame_check_all_brelas, sizeof(__pyx_k_baseOpenGLFrame_check_all_brelas), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_check_event_butt, __pyx_k_baseOpenGLFrame_check_event_butt, sizeof(__pyx_k_baseOpenGLFrame_check_event_butt), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_create_event, __pyx_k_baseOpenGLFrame_create_event, sizeof(__pyx_k_baseOpenGLFrame_create_event), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_free_calc_update, __pyx_k_baseOpenGLFrame_free_calc_update, sizeof(__pyx_k_baseOpenGLFrame_free_calc_update), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_freecalc, __pyx_k_baseOpenGLFrame_freecalc, sizeof(__pyx_k_baseOpenGLFrame_freecalc), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_initgl, __pyx_k_baseOpenGLFrame_initgl, sizeof(__pyx_k_baseOpenGLFrame_initgl), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_printContext, __pyx_k_baseOpenGLFrame_printContext, sizeof(__pyx_k_baseOpenGLFrame_printContext), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_redraw, __pyx_k_baseOpenGLFrame_redraw, sizeof(__pyx_k_baseOpenGLFrame_redraw), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkCreateContext, __pyx_k_baseOpenGLFrame_tkCreateContext, sizeof(__pyx_k_baseOpenGLFrame_tkCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkExpose, __pyx_k_baseOpenGLFrame_tkExpose, sizeof(__pyx_k_baseOpenGLFrame_tkExpose), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkMakeCurrent, __pyx_k_baseOpenGLFrame_tkMakeCurrent, sizeof(__pyx_k_baseOpenGLFrame_tkMakeCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkMap, __pyx_k_baseOpenGLFrame_tkMap, sizeof(__pyx_k_baseOpenGLFrame_tkMap), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkResize, __pyx_k_baseOpenGLFrame_tkResize, sizeof(__pyx_k_baseOpenGLFrame_tkResize), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_tkSwapBuffers, __pyx_k_baseOpenGLFrame_tkSwapBuffers, sizeof(__pyx_k_baseOpenGLFrame_tkSwapBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_baseOpenGLFrame_wait, __pyx_k_baseOpenGLFrame_wait, sizeof(__pyx_k_baseOpenGLFrame_wait), 0, 0, 1, 1},
  {&__pyx_n_s_basic_lighting, __pyx_k_basic_lighting, sizeof(__pyx_k_basic_lighting), 0, 0, 1, 1},
  {&__pyx_n_s_basicshader, __pyx_k_basicshader, sizeof(__pyx_k_basicshader), 0, 0, 1, 1},
  {&__pyx_n_s_best, __pyx_k_best, sizeof(__pyx_k_best), 0, 0, 1, 1},
  {&__pyx_n_s_bg, __pyx_k_bg, sizeof(__pyx_k_bg), 0, 0, 1, 1},
  {&__pyx_n_s_bind, __pyx_k_bind, sizeof(__pyx_k_bind), 0, 0, 1, 1},
  {&__pyx_n_s_bind_buffer, __pyx_k_bind_buffer, sizeof(__pyx_k_bind_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_bitmap, __pyx_k_bitmap, sizeof(__pyx_k_bitmap), 0, 0, 1, 1},
  {&__pyx_n_s_bitmap_left, __pyx_k_bitmap_left, sizeof(__pyx_k_bitmap_left), 0, 0, 1, 1},
  {&__pyx_n_s_bitmap_top, __pyx_k_bitmap_top, sizeof(__pyx_k_bitmap_top), 0, 0, 1, 1},
  {&__pyx_n_s_bresenham, __pyx_k_bresenham, sizeof(__pyx_k_bresenham), 0, 0, 1, 1},
  {&__pyx_n_s_buffer, __pyx_k_buffer, sizeof(__pyx_k_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_buffer1, __pyx_k_buffer1, sizeof(__pyx_k_buffer1), 0, 0, 1, 1},
  {&__pyx_n_s_bufferid, __pyx_k_bufferid, sizeof(__pyx_k_bufferid), 0, 0, 1, 1},
  {&__pyx_n_s_buffmanager, __pyx_k_buffmanager, sizeof(__pyx_k_buffmanager), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_s_c1, __pyx_k_c1, sizeof(__pyx_k_c1), 0, 0, 1, 1},
  {&__pyx_n_s_c1_2, __pyx_k_c1_2, sizeof(__pyx_k_c1_2), 0, 0, 1, 1},
  {&__pyx_n_s_c2, __pyx_k_c2, sizeof(__pyx_k_c2), 0, 0, 1, 1},
  {&__pyx_n_s_c2_2, __pyx_k_c2_2, sizeof(__pyx_k_c2_2), 0, 0, 1, 1},
  {&__pyx_n_s_c3, __pyx_k_c3, sizeof(__pyx_k_c3), 0, 0, 1, 1},
  {&__pyx_n_s_c4, __pyx_k_c4, sizeof(__pyx_k_c4), 0, 0, 1, 1},
  {&__pyx_n_s_cColorBits, __pyx_k_cColorBits, sizeof(__pyx_k_cColorBits), 0, 0, 1, 1},
  {&__pyx_n_s_cDepthBits, __pyx_k_cDepthBits, sizeof(__pyx_k_cDepthBits), 0, 0, 1, 1},
  {&__pyx_n_s_c_bool, __pyx_k_c_bool, sizeof(__pyx_k_c_bool), 0, 0, 1, 1},
  {&__pyx_n_s_c_char_p, __pyx_k_c_char_p, sizeof(__pyx_k_c_char_p), 0, 0, 1, 1},
  {&__pyx_n_s_c_float, __pyx_k_c_float, sizeof(__pyx_k_c_float), 0, 0, 1, 1},
  {&__pyx_n_s_c_int, __pyx_k_c_int, sizeof(__pyx_k_c_int), 0, 0, 1, 1},
  {&__pyx_n_s_c_void_p, __pyx_k_c_void_p, sizeof(__pyx_k_c_void_p), 0, 0, 1, 1},
  {&__pyx_n_s_call, __pyx_k_call, sizeof(__pyx_k_call), 0, 0, 1, 1},
  {&__pyx_n_s_cb, __pyx_k_cb, sizeof(__pyx_k_cb), 0, 0, 1, 1},
  {&__pyx_n_s_cdll, __pyx_k_cdll, sizeof(__pyx_k_cdll), 0, 0, 1, 1},
  {&__pyx_n_s_centre, __pyx_k_centre, sizeof(__pyx_k_centre), 0, 0, 1, 1},
  {&__pyx_n_s_cf, __pyx_k_cf, sizeof(__pyx_k_cf), 0, 0, 1, 1},
  {&__pyx_n_s_cfgs, __pyx_k_cfgs, sizeof(__pyx_k_cfgs), 0, 0, 1, 1},
  {&__pyx_n_s_cfloat, __pyx_k_cfloat, sizeof(__pyx_k_cfloat), 0, 0, 1, 1},
  {&__pyx_n_s_cfloat_array, __pyx_k_cfloat_array, sizeof(__pyx_k_cfloat_array), 0, 0, 1, 1},
  {&__pyx_n_s_change_color, __pyx_k_change_color, sizeof(__pyx_k_change_color), 0, 0, 1, 1},
  {&__pyx_n_s_check, __pyx_k_check, sizeof(__pyx_k_check), 0, 0, 1, 1},
  {&__pyx_n_s_check_all_b1_events, __pyx_k_check_all_b1_events, sizeof(__pyx_k_check_all_b1_events), 0, 0, 1, 1},
  {&__pyx_n_s_check_all_bpress_events, __pyx_k_check_all_bpress_events, sizeof(__pyx_k_check_all_bpress_events), 0, 0, 1, 1},
  {&__pyx_n_s_check_all_brelase_events, __pyx_k_check_all_brelase_events, sizeof(__pyx_k_check_all_brelase_events), 0, 0, 1, 1},
  {&__pyx_n_s_check_event_button_1, __pyx_k_check_event_button_1, sizeof(__pyx_k_check_event_button_1), 0, 0, 1, 1},
  {&__pyx_n_s_checkkeypress, __pyx_k_checkkeypress, sizeof(__pyx_k_checkkeypress), 0, 0, 1, 1},
  {&__pyx_n_s_checklclick, __pyx_k_checklclick, sizeof(__pyx_k_checklclick), 0, 0, 1, 1},
  {&__pyx_n_s_checkmclick, __pyx_k_checkmclick, sizeof(__pyx_k_checkmclick), 0, 0, 1, 1},
  {&__pyx_n_s_checkmotion, __pyx_k_checkmotion, sizeof(__pyx_k_checkmotion), 0, 0, 1, 1},
  {&__pyx_n_s_checkrclick, __pyx_k_checkrclick, sizeof(__pyx_k_checkrclick), 0, 0, 1, 1},
  {&__pyx_n_s_chr, __pyx_k_chr, sizeof(__pyx_k_chr), 0, 0, 1, 1},
  {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
  {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
  {&__pyx_n_s_clear_events, __pyx_k_clear_events, sizeof(__pyx_k_clear_events), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_cnf, __pyx_k_cnf, sizeof(__pyx_k_cnf), 0, 0, 1, 1},
  {&__pyx_n_s_color, __pyx_k_color, sizeof(__pyx_k_color), 0, 0, 1, 1},
  {&__pyx_n_s_compile, __pyx_k_compile, sizeof(__pyx_k_compile), 0, 0, 1, 1},
  {&__pyx_n_s_compileProgram, __pyx_k_compileProgram, sizeof(__pyx_k_compileProgram), 0, 0, 1, 1},
  {&__pyx_n_s_compileShader, __pyx_k_compileShader, sizeof(__pyx_k_compileShader), 0, 0, 1, 1},
  {&__pyx_n_s_config, __pyx_k_config, sizeof(__pyx_k_config), 0, 0, 1, 1},
  {&__pyx_n_s_contents, __pyx_k_contents, sizeof(__pyx_k_contents), 0, 0, 1, 1},
  {&__pyx_n_s_cords, __pyx_k_cords, sizeof(__pyx_k_cords), 0, 0, 1, 1},
  {&__pyx_n_s_cords1, __pyx_k_cords1, sizeof(__pyx_k_cords1), 0, 0, 1, 1},
  {&__pyx_n_s_cords2, __pyx_k_cords2, sizeof(__pyx_k_cords2), 0, 0, 1, 1},
  {&__pyx_n_s_cords3, __pyx_k_cords3, sizeof(__pyx_k_cords3), 0, 0, 1, 1},
  {&__pyx_n_s_cords4, __pyx_k_cords4, sizeof(__pyx_k_cords4), 0, 0, 1, 1},
  {&__pyx_n_s_cords_2, __pyx_k_cords_2, sizeof(__pyx_k_cords_2), 0, 0, 1, 1},
  {&__pyx_n_s_cords_to_ratio, __pyx_k_cords_to_ratio, sizeof(__pyx_k_cords_to_ratio), 0, 0, 1, 1},
  {&__pyx_n_s_crd, __pyx_k_crd, sizeof(__pyx_k_crd), 0, 0, 1, 1},
  {&__pyx_n_s_create_event, __pyx_k_create_event, sizeof(__pyx_k_create_event), 0, 0, 1, 1},
  {&__pyx_n_s_create_font, __pyx_k_create_font, sizeof(__pyx_k_create_font), 0, 0, 1, 1},
  {&__pyx_n_s_create_letter, __pyx_k_create_letter, sizeof(__pyx_k_create_letter), 0, 0, 1, 1},
  {&__pyx_n_s_create_quad, __pyx_k_create_quad, sizeof(__pyx_k_create_quad), 0, 0, 1, 1},
  {&__pyx_n_s_crop, __pyx_k_crop, sizeof(__pyx_k_crop), 0, 0, 1, 1},
  {&__pyx_n_s_ct, __pyx_k_ct, sizeof(__pyx_k_ct), 0, 0, 1, 1},
  {&__pyx_n_s_ctypes, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
  {&__pyx_n_s_ctypes_wintypes, __pyx_k_ctypes_wintypes, sizeof(__pyx_k_ctypes_wintypes), 0, 0, 1, 1},
  {&__pyx_n_s_curpos, __pyx_k_curpos, sizeof(__pyx_k_curpos), 0, 0, 1, 1},
  {&__pyx_n_s_cvroot, __pyx_k_cvroot, sizeof(__pyx_k_cvroot), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_dat, __pyx_k_dat, sizeof(__pyx_k_dat), 0, 0, 1, 1},
  {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
  {&__pyx_n_s_data_length, __pyx_k_data_length, sizeof(__pyx_k_data_length), 0, 0, 1, 1},
  {&__pyx_n_s_data_tr1, __pyx_k_data_tr1, sizeof(__pyx_k_data_tr1), 0, 0, 1, 1},
  {&__pyx_n_s_data_tr2, __pyx_k_data_tr2, sizeof(__pyx_k_data_tr2), 0, 0, 1, 1},
  {&__pyx_n_s_data_txn, __pyx_k_data_txn, sizeof(__pyx_k_data_txn), 0, 0, 1, 1},
  {&__pyx_n_s_data_type, __pyx_k_data_type, sizeof(__pyx_k_data_type), 0, 0, 1, 1},
  {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {&__pyx_n_s_del_animation, __pyx_k_del_animation, sizeof(__pyx_k_del_animation), 0, 0, 1, 1},
  {&__pyx_n_s_delay, __pyx_k_delay, sizeof(__pyx_k_delay), 0, 0, 1, 1},
  {&__pyx_n_s_delete_obj, __pyx_k_delete_obj, sizeof(__pyx_k_delete_obj), 0, 0, 1, 1},
  {&__pyx_n_s_descender, __pyx_k_descender, sizeof(__pyx_k_descender), 0, 0, 1, 1},
  {&__pyx_n_s_dialog, __pyx_k_dialog, sizeof(__pyx_k_dialog), 0, 0, 1, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_display, __pyx_k_display, sizeof(__pyx_k_display), 0, 0, 1, 1},
  {&__pyx_n_s_dist, __pyx_k_dist, sizeof(__pyx_k_dist), 0, 0, 1, 1},
  {&__pyx_n_s_distance, __pyx_k_distance, sizeof(__pyx_k_distance), 0, 0, 1, 1},
  {&__pyx_n_s_do_AutoSpin, __pyx_k_do_AutoSpin, sizeof(__pyx_k_do_AutoSpin), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_docs, __pyx_k_docs, sizeof(__pyx_k_docs), 0, 0, 1, 1},
  {&__pyx_n_s_dp_data, __pyx_k_dp_data, sizeof(__pyx_k_dp_data), 0, 0, 1, 1},
  {&__pyx_n_s_draw, __pyx_k_draw, sizeof(__pyx_k_draw), 0, 0, 1, 1},
  {&__pyx_n_s_draw_line, __pyx_k_draw_line, sizeof(__pyx_k_draw_line), 0, 0, 1, 1},
  {&__pyx_n_s_draw_lines, __pyx_k_draw_lines, sizeof(__pyx_k_draw_lines), 0, 0, 1, 1},
  {&__pyx_n_s_draw_point, __pyx_k_draw_point, sizeof(__pyx_k_draw_point), 0, 0, 1, 1},
  {&__pyx_n_s_draw_points, __pyx_k_draw_points, sizeof(__pyx_k_draw_points), 0, 0, 1, 1},
  {&__pyx_n_s_draw_quad, __pyx_k_draw_quad, sizeof(__pyx_k_draw_quad), 0, 0, 1, 1},
  {&__pyx_n_s_draw_quad_texture, __pyx_k_draw_quad_texture, sizeof(__pyx_k_draw_quad_texture), 0, 0, 1, 1},
  {&__pyx_n_s_draw_quad_texture_array, __pyx_k_draw_quad_texture_array, sizeof(__pyx_k_draw_quad_texture_array), 0, 0, 1, 1},
  {&__pyx_n_s_draw_text, __pyx_k_draw_text, sizeof(__pyx_k_draw_text), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_dummy, __pyx_k_dummy, sizeof(__pyx_k_dummy), 0, 0, 1, 1},
  {&__pyx_n_s_dwFlags, __pyx_k_dwFlags, sizeof(__pyx_k_dwFlags), 0, 0, 1, 1},
  {&__pyx_n_s_dx, __pyx_k_dx, sizeof(__pyx_k_dx), 0, 0, 1, 1},
  {&__pyx_n_s_dy, __pyx_k_dy, sizeof(__pyx_k_dy), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_edit_color, __pyx_k_edit_color, sizeof(__pyx_k_edit_color), 0, 0, 1, 1},
  {&__pyx_n_s_edit_letter, __pyx_k_edit_letter, sizeof(__pyx_k_edit_letter), 0, 0, 1, 1},
  {&__pyx_n_s_edit_pos, __pyx_k_edit_pos, sizeof(__pyx_k_edit_pos), 0, 0, 1, 1},
  {&__pyx_n_s_edit_texture, __pyx_k_edit_texture, sizeof(__pyx_k_edit_texture), 0, 0, 1, 1},
  {&__pyx_n_s_edit_tpos, __pyx_k_edit_tpos, sizeof(__pyx_k_edit_tpos), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_environ, __pyx_k_environ, sizeof(__pyx_k_environ), 0, 0, 1, 1},
  {&__pyx_n_s_ev, __pyx_k_ev, sizeof(__pyx_k_ev), 0, 0, 1, 1},
  {&__pyx_n_s_ev_list, __pyx_k_ev_list, sizeof(__pyx_k_ev_list), 0, 0, 1, 1},
  {&__pyx_n_s_ev_type, __pyx_k_ev_type, sizeof(__pyx_k_ev_type), 0, 0, 1, 1},
  {&__pyx_n_s_event, __pyx_k_event, sizeof(__pyx_k_event), 0, 0, 1, 1},
  {&__pyx_n_s_event_type, __pyx_k_event_type, sizeof(__pyx_k_event_type), 0, 0, 1, 1},
  {&__pyx_n_s_eventmanager, __pyx_k_eventmanager, sizeof(__pyx_k_eventmanager), 0, 0, 1, 1},
  {&__pyx_n_s_events_B1, __pyx_k_events_B1, sizeof(__pyx_k_events_B1), 0, 0, 1, 1},
  {&__pyx_n_s_events_B2, __pyx_k_events_B2, sizeof(__pyx_k_events_B2), 0, 0, 1, 1},
  {&__pyx_n_s_events_B3, __pyx_k_events_B3, sizeof(__pyx_k_events_B3), 0, 0, 1, 1},
  {&__pyx_n_s_events_BP, __pyx_k_events_BP, sizeof(__pyx_k_events_BP), 0, 0, 1, 1},
  {&__pyx_n_s_events_BR, __pyx_k_events_BR, sizeof(__pyx_k_events_BR), 0, 0, 1, 1},
  {&__pyx_n_s_events_MN, __pyx_k_events_MN, sizeof(__pyx_k_events_MN), 0, 0, 1, 1},
  {&__pyx_n_s_evt, __pyx_k_evt, sizeof(__pyx_k_evt), 0, 0, 1, 1},
  {&__pyx_n_s_extend, __pyx_k_extend, sizeof(__pyx_k_extend), 0, 0, 1, 1},
  {&__pyx_n_s_extensions, __pyx_k_extensions, sizeof(__pyx_k_extensions), 0, 0, 1, 1},
  {&__pyx_n_s_extns, __pyx_k_extns, sizeof(__pyx_k_extns), 0, 0, 1, 1},
  {&__pyx_n_s_exts, __pyx_k_exts, sizeof(__pyx_k_exts), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_s_face, __pyx_k_face, sizeof(__pyx_k_face), 0, 0, 1, 1},
  {&__pyx_n_s_far, __pyx_k_far, sizeof(__pyx_k_far), 0, 0, 1, 1},
  {&__pyx_n_s_fbatt, __pyx_k_fbatt, sizeof(__pyx_k_fbatt), 0, 0, 1, 1},
  {&__pyx_n_s_fgshader, __pyx_k_fgshader, sizeof(__pyx_k_fgshader), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
  {&__pyx_n_s_find_library, __pyx_k_find_library, sizeof(__pyx_k_find_library), 0, 0, 1, 1},
  {&__pyx_n_s_flat, __pyx_k_flat, sizeof(__pyx_k_flat), 0, 0, 1, 1},
  {&__pyx_n_s_font, __pyx_k_font, sizeof(__pyx_k_font), 0, 0, 1, 1},
  {&__pyx_n_s_font_config, __pyx_k_font_config, sizeof(__pyx_k_font_config), 0, 0, 1, 1},
  {&__pyx_n_s_font_letters, __pyx_k_font_letters, sizeof(__pyx_k_font_letters), 0, 0, 1, 1},
  {&__pyx_n_s_font_texture, __pyx_k_font_texture, sizeof(__pyx_k_font_texture), 0, 0, 1, 1},
  {&__pyx_n_s_fovy, __pyx_k_fovy, sizeof(__pyx_k_fovy), 0, 0, 1, 1},
  {&__pyx_n_s_free_calc_update, __pyx_k_free_calc_update, sizeof(__pyx_k_free_calc_update), 0, 0, 1, 1},
  {&__pyx_n_s_freecalc, __pyx_k_freecalc, sizeof(__pyx_k_freecalc), 0, 0, 1, 1},
  {&__pyx_n_s_freecalc_update, __pyx_k_freecalc_update, sizeof(__pyx_k_freecalc_update), 0, 0, 1, 1},
  {&__pyx_n_s_freetype, __pyx_k_freetype, sizeof(__pyx_k_freetype), 0, 0, 1, 1},
  {&__pyx_n_s_from, __pyx_k_from, sizeof(__pyx_k_from), 0, 0, 1, 1},
  {&__pyx_n_s_frombuffer, __pyx_k_frombuffer, sizeof(__pyx_k_frombuffer), 0, 0, 1, 1},
  {&__pyx_n_s_func, __pyx_k_func, sizeof(__pyx_k_func), 0, 0, 1, 1},
  {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {&__pyx_n_s_g_back, __pyx_k_g_back, sizeof(__pyx_k_g_back), 0, 0, 1, 1},
  {&__pyx_n_s_g_val, __pyx_k_g_val, sizeof(__pyx_k_g_val), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_get_buffer, __pyx_k_get_buffer, sizeof(__pyx_k_get_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_get_color, __pyx_k_get_color, sizeof(__pyx_k_get_color), 0, 0, 1, 1},
  {&__pyx_n_s_get_objectindexes, __pyx_k_get_objectindexes, sizeof(__pyx_k_get_objectindexes), 0, 0, 1, 1},
  {&__pyx_n_s_get_pos, __pyx_k_get_pos, sizeof(__pyx_k_get_pos), 0, 0, 1, 1},
  {&__pyx_n_s_get_shader, __pyx_k_get_shader, sizeof(__pyx_k_get_shader), 0, 0, 1, 1},
  {&__pyx_n_s_get_texid, __pyx_k_get_texid, sizeof(__pyx_k_get_texid), 0, 0, 1, 1},
  {&__pyx_n_s_get_vertices, __pyx_k_get_vertices, sizeof(__pyx_k_get_vertices), 0, 0, 1, 1},
  {&__pyx_n_s_getdata, __pyx_k_getdata, sizeof(__pyx_k_getdata), 0, 0, 1, 1},
  {&__pyx_n_s_getint, __pyx_k_getint, sizeof(__pyx_k_getint), 0, 0, 1, 1},
  {&__pyx_n_s_getsize, __pyx_k_getsize, sizeof(__pyx_k_getsize), 0, 0, 1, 1},
  {&__pyx_n_s_glBegin, __pyx_k_glBegin, sizeof(__pyx_k_glBegin), 0, 0, 1, 1},
  {&__pyx_n_s_glBindBuffer, __pyx_k_glBindBuffer, sizeof(__pyx_k_glBindBuffer), 0, 0, 1, 1},
  {&__pyx_n_s_glBindTexture, __pyx_k_glBindTexture, sizeof(__pyx_k_glBindTexture), 0, 0, 1, 1},
  {&__pyx_n_s_glBindTextureUnit, __pyx_k_glBindTextureUnit, sizeof(__pyx_k_glBindTextureUnit), 0, 0, 1, 1},
  {&__pyx_n_s_glBufferData, __pyx_k_glBufferData, sizeof(__pyx_k_glBufferData), 0, 0, 1, 1},
  {&__pyx_n_s_glBufferSubData, __pyx_k_glBufferSubData, sizeof(__pyx_k_glBufferSubData), 0, 0, 1, 1},
  {&__pyx_n_s_glColor3f, __pyx_k_glColor3f, sizeof(__pyx_k_glColor3f), 0, 0, 1, 1},
  {&__pyx_n_s_glColor4f, __pyx_k_glColor4f, sizeof(__pyx_k_glColor4f), 0, 0, 1, 1},
  {&__pyx_n_s_glDepthFunc, __pyx_k_glDepthFunc, sizeof(__pyx_k_glDepthFunc), 0, 0, 1, 1},
  {&__pyx_n_s_glDisable, __pyx_k_glDisable, sizeof(__pyx_k_glDisable), 0, 0, 1, 1},
  {&__pyx_n_s_glDrawArrays, __pyx_k_glDrawArrays, sizeof(__pyx_k_glDrawArrays), 0, 0, 1, 1},
  {&__pyx_n_s_glEnable, __pyx_k_glEnable, sizeof(__pyx_k_glEnable), 0, 0, 1, 1},
  {&__pyx_n_s_glEnableClientState, __pyx_k_glEnableClientState, sizeof(__pyx_k_glEnableClientState), 0, 0, 1, 1},
  {&__pyx_n_s_glEnableVertexAttribArray, __pyx_k_glEnableVertexAttribArray, sizeof(__pyx_k_glEnableVertexAttribArray), 0, 0, 1, 1},
  {&__pyx_n_s_glEnd, __pyx_k_glEnd, sizeof(__pyx_k_glEnd), 0, 0, 1, 1},
  {&__pyx_n_s_glGenBuffers, __pyx_k_glGenBuffers, sizeof(__pyx_k_glGenBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_glGenTextures, __pyx_k_glGenTextures, sizeof(__pyx_k_glGenTextures), 0, 0, 1, 1},
  {&__pyx_n_s_glGetDoublev, __pyx_k_glGetDoublev, sizeof(__pyx_k_glGetDoublev), 0, 0, 1, 1},
  {&__pyx_n_s_glGetIntegerv, __pyx_k_glGetIntegerv, sizeof(__pyx_k_glGetIntegerv), 0, 0, 1, 1},
  {&__pyx_n_s_glGetString, __pyx_k_glGetString, sizeof(__pyx_k_glGetString), 0, 0, 1, 1},
  {&__pyx_n_s_glGetUniformLocation, __pyx_k_glGetUniformLocation, sizeof(__pyx_k_glGetUniformLocation), 0, 0, 1, 1},
  {&__pyx_n_s_glLightfv, __pyx_k_glLightfv, sizeof(__pyx_k_glLightfv), 0, 0, 1, 1},
  {&__pyx_n_s_glLoadIdentity, __pyx_k_glLoadIdentity, sizeof(__pyx_k_glLoadIdentity), 0, 0, 1, 1},
  {&__pyx_n_s_glMatrixMode, __pyx_k_glMatrixMode, sizeof(__pyx_k_glMatrixMode), 0, 0, 1, 1},
  {&__pyx_n_s_glPixelStorei, __pyx_k_glPixelStorei, sizeof(__pyx_k_glPixelStorei), 0, 0, 1, 1},
  {&__pyx_n_s_glRotateScene, __pyx_k_glRotateScene, sizeof(__pyx_k_glRotateScene), 0, 0, 1, 1},
  {&__pyx_n_s_glTexCoord2f, __pyx_k_glTexCoord2f, sizeof(__pyx_k_glTexCoord2f), 0, 0, 1, 1},
  {&__pyx_n_s_glTexImage2D, __pyx_k_glTexImage2D, sizeof(__pyx_k_glTexImage2D), 0, 0, 1, 1},
  {&__pyx_n_s_glTexParameterf, __pyx_k_glTexParameterf, sizeof(__pyx_k_glTexParameterf), 0, 0, 1, 1},
  {&__pyx_n_s_glTexParameteri, __pyx_k_glTexParameteri, sizeof(__pyx_k_glTexParameteri), 0, 0, 1, 1},
  {&__pyx_n_s_glTexSubImage2D, __pyx_k_glTexSubImage2D, sizeof(__pyx_k_glTexSubImage2D), 0, 0, 1, 1},
  {&__pyx_n_s_glTranslateScene, __pyx_k_glTranslateScene, sizeof(__pyx_k_glTranslateScene), 0, 0, 1, 1},
  {&__pyx_n_s_glUniform1iv, __pyx_k_glUniform1iv, sizeof(__pyx_k_glUniform1iv), 0, 0, 1, 1},
  {&__pyx_n_s_glUseProgram, __pyx_k_glUseProgram, sizeof(__pyx_k_glUseProgram), 0, 0, 1, 1},
  {&__pyx_n_s_glVertex2f, __pyx_k_glVertex2f, sizeof(__pyx_k_glVertex2f), 0, 0, 1, 1},
  {&__pyx_n_s_glVertexAttribPointer, __pyx_k_glVertexAttribPointer, sizeof(__pyx_k_glVertexAttribPointer), 0, 0, 1, 1},
  {&__pyx_n_s_glViewport, __pyx_k_glViewport, sizeof(__pyx_k_glViewport), 0, 0, 1, 1},
  {&__pyx_n_s_glXChooseFBConfig, __pyx_k_glXChooseFBConfig, sizeof(__pyx_k_glXChooseFBConfig), 0, 0, 1, 1},
  {&__pyx_n_s_glXChooseVisual, __pyx_k_glXChooseVisual, sizeof(__pyx_k_glXChooseVisual), 0, 0, 1, 1},
  {&__pyx_n_s_glXCreateContext, __pyx_k_glXCreateContext, sizeof(__pyx_k_glXCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s_glXCreateNewContext, __pyx_k_glXCreateNewContext, sizeof(__pyx_k_glXCreateNewContext), 0, 0, 1, 1},
  {&__pyx_n_s_glXGetVisualFromFBConfig, __pyx_k_glXGetVisualFromFBConfig, sizeof(__pyx_k_glXGetVisualFromFBConfig), 0, 0, 1, 1},
  {&__pyx_n_s_glXIsDirect, __pyx_k_glXIsDirect, sizeof(__pyx_k_glXIsDirect), 0, 0, 1, 1},
  {&__pyx_n_s_glXMakeContextCurrent, __pyx_k_glXMakeContextCurrent, sizeof(__pyx_k_glXMakeContextCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_glXMakeCurrent, __pyx_k_glXMakeCurrent, sizeof(__pyx_k_glXMakeCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_glXQueryExtensionsString, __pyx_k_glXQueryExtensionsString, sizeof(__pyx_k_glXQueryExtensionsString), 0, 0, 1, 1},
  {&__pyx_n_s_glXQueryVersion, __pyx_k_glXQueryVersion, sizeof(__pyx_k_glXQueryVersion), 0, 0, 1, 1},
  {&__pyx_n_s_glXSwapBuffers, __pyx_k_glXSwapBuffers, sizeof(__pyx_k_glXSwapBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_gluLookAt, __pyx_k_gluLookAt, sizeof(__pyx_k_gluLookAt), 0, 0, 1, 1},
  {&__pyx_n_s_gluPerspective, __pyx_k_gluPerspective, sizeof(__pyx_k_gluPerspective), 0, 0, 1, 1},
  {&__pyx_n_s_gluProject, __pyx_k_gluProject, sizeof(__pyx_k_gluProject), 0, 0, 1, 1},
  {&__pyx_n_s_gluUnProject, __pyx_k_gluUnProject, sizeof(__pyx_k_gluUnProject), 0, 0, 1, 1},
  {&__pyx_n_s_glyph, __pyx_k_glyph, sizeof(__pyx_k_glyph), 0, 0, 1, 1},
  {&__pyx_n_s_h, __pyx_k_h, sizeof(__pyx_k_h), 0, 0, 1, 1},
  {&__pyx_n_s_height, __pyx_k_height, sizeof(__pyx_k_height), 0, 0, 1, 1},
  {&__pyx_n_s_help, __pyx_k_help, sizeof(__pyx_k_help), 0, 0, 1, 1},
  {&__pyx_n_s_hex, __pyx_k_hex, sizeof(__pyx_k_hex), 0, 0, 1, 1},
  {&__pyx_n_s_hover_events, __pyx_k_hover_events, sizeof(__pyx_k_hover_events), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_iLayerType, __pyx_k_iLayerType, sizeof(__pyx_k_iLayerType), 0, 0, 1, 1},
  {&__pyx_n_s_iPixelType, __pyx_k_iPixelType, sizeof(__pyx_k_iPixelType), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_ideal, __pyx_k_ideal, sizeof(__pyx_k_ideal), 0, 0, 1, 1},
  {&__pyx_n_s_idx, __pyx_k_idx, sizeof(__pyx_k_idx), 0, 0, 1, 1},
  {&__pyx_n_s_il, __pyx_k_il, sizeof(__pyx_k_il), 0, 0, 1, 1},
  {&__pyx_n_s_image, __pyx_k_image, sizeof(__pyx_k_image), 0, 0, 1, 1},
  {&__pyx_n_s_imgnp, __pyx_k_imgnp, sizeof(__pyx_k_imgnp), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_init_subclass, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
  {&__pyx_n_s_initgl, __pyx_k_initgl, sizeof(__pyx_k_initgl), 0, 0, 1, 1},
  {&__pyx_n_s_initialised, __pyx_k_initialised, sizeof(__pyx_k_initialised), 0, 0, 1, 1},
  {&__pyx_n_s_insert, __pyx_k_insert, sizeof(__pyx_k_insert), 0, 0, 1, 1},
  {&__pyx_n_s_is_fixed_width, __pyx_k_is_fixed_width, sizeof(__pyx_k_is_fixed_width), 0, 0, 1, 1},
  {&__pyx_n_s_is_serialized, __pyx_k_is_serialized, sizeof(__pyx_k_is_serialized), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_keypress_events, __pyx_k_keypress_events, sizeof(__pyx_k_keypress_events), 0, 0, 1, 1},
  {&__pyx_n_s_kw, __pyx_k_kw, sizeof(__pyx_k_kw), 0, 0, 1, 1},
  {&__pyx_n_s_l, __pyx_k_l, sizeof(__pyx_k_l), 0, 0, 1, 1},
  {&__pyx_n_s_launch_func, __pyx_k_launch_func, sizeof(__pyx_k_launch_func), 0, 0, 1, 1},
  {&__pyx_n_s_launch_function_beg, __pyx_k_launch_function_beg, sizeof(__pyx_k_launch_function_beg), 0, 0, 1, 1},
  {&__pyx_n_s_launch_function_end, __pyx_k_launch_function_end, sizeof(__pyx_k_launch_function_end), 0, 0, 1, 1},
  {&__pyx_n_s_launch_function_mid, __pyx_k_launch_function_mid, sizeof(__pyx_k_launch_function_mid), 0, 0, 1, 1},
  {&__pyx_n_s_launchev, __pyx_k_launchev, sizeof(__pyx_k_launchev), 0, 0, 1, 1},
  {&__pyx_n_s_lclick_events, __pyx_k_lclick_events, sizeof(__pyx_k_lclick_events), 0, 0, 1, 1},
  {&__pyx_n_s_letter, __pyx_k_letter, sizeof(__pyx_k_letter), 0, 0, 1, 1},
  {&__pyx_n_s_lfe, __pyx_k_lfe, sizeof(__pyx_k_lfe), 0, 0, 1, 1},
  {&__pyx_n_s_lfg, __pyx_k_lfg, sizeof(__pyx_k_lfg), 0, 0, 1, 1},
  {&__pyx_n_s_lfm, __pyx_k_lfm, sizeof(__pyx_k_lfm), 0, 0, 1, 1},
  {&__pyx_n_s_light_position, __pyx_k_light_position, sizeof(__pyx_k_light_position), 0, 0, 1, 1},
  {&__pyx_n_s_linux, __pyx_k_linux, sizeof(__pyx_k_linux), 0, 0, 1, 1},
  {&__pyx_n_s_list, __pyx_k_list, sizeof(__pyx_k_list), 0, 0, 1, 1},
  {&__pyx_n_s_load, __pyx_k_load, sizeof(__pyx_k_load), 0, 0, 1, 1},
  {&__pyx_n_s_load_char, __pyx_k_load_char, sizeof(__pyx_k_load_char), 0, 0, 1, 1},
  {&__pyx_n_s_load_scene, __pyx_k_load_scene, sizeof(__pyx_k_load_scene), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture, __pyx_k_load_texture, sizeof(__pyx_k_load_texture), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture_dp, __pyx_k_load_texture_dp, sizeof(__pyx_k_load_texture_dp), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture_locals_image, __pyx_k_load_texture_locals_image, sizeof(__pyx_k_load_texture_locals_image), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture_locals_image___init, __pyx_k_load_texture_locals_image___init, sizeof(__pyx_k_load_texture_locals_image___init), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture_repeat, __pyx_k_load_texture_repeat, sizeof(__pyx_k_load_texture_repeat), 0, 0, 1, 1},
  {&__pyx_n_s_load_texture_sub, __pyx_k_load_texture_sub, sizeof(__pyx_k_load_texture_sub), 0, 0, 1, 1},
  {&__pyx_n_s_ls, __pyx_k_ls, sizeof(__pyx_k_ls), 0, 0, 1, 1},
  {&__pyx_n_s_m, __pyx_k_m, sizeof(__pyx_k_m), 0, 0, 1, 1},
  {&__pyx_n_s_m_new, __pyx_k_m_new, sizeof(__pyx_k_m_new), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_major, __pyx_k_major, sizeof(__pyx_k_major), 0, 0, 1, 1},
  {&__pyx_n_s_mask, __pyx_k_mask, sizeof(__pyx_k_mask), 0, 0, 1, 1},
  {&__pyx_n_s_master, __pyx_k_master, sizeof(__pyx_k_master), 0, 0, 1, 1},
  {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
  {&__pyx_n_s_mclick_events, __pyx_k_mclick_events, sizeof(__pyx_k_mclick_events), 0, 0, 1, 1},
  {&__pyx_n_s_mem_img, __pyx_k_mem_img, sizeof(__pyx_k_mem_img), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_minor, __pyx_k_minor, sizeof(__pyx_k_minor), 0, 0, 1, 1},
  {&__pyx_n_s_mmap, __pyx_k_mmap, sizeof(__pyx_k_mmap), 0, 0, 1, 1},
  {&__pyx_n_s_mode, __pyx_k_mode, sizeof(__pyx_k_mode), 0, 0, 1, 1},
  {&__pyx_n_s_mode_2, __pyx_k_mode_2, sizeof(__pyx_k_mode_2), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_move, __pyx_k_move, sizeof(__pyx_k_move), 0, 0, 1, 1},
  {&__pyx_n_s_move_down, __pyx_k_move_down, sizeof(__pyx_k_move_down), 0, 0, 1, 1},
  {&__pyx_n_s_move_up, __pyx_k_move_up, sizeof(__pyx_k_move_up), 0, 0, 1, 1},
  {&__pyx_n_s_msk, __pyx_k_msk, sizeof(__pyx_k_msk), 0, 0, 1, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_s_naiveline, __pyx_k_naiveline, sizeof(__pyx_k_naiveline), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_named, __pyx_k_named, sizeof(__pyx_k_named), 0, 0, 1, 1},
  {&__pyx_n_s_ncfg, __pyx_k_ncfg, sizeof(__pyx_k_ncfg), 0, 0, 1, 1},
  {&__pyx_n_s_nd, __pyx_k_nd, sizeof(__pyx_k_nd), 0, 0, 1, 1},
  {&__pyx_n_s_near, __pyx_k_near, sizeof(__pyx_k_near), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_new_from_file, __pyx_k_new_from_file, sizeof(__pyx_k_new_from_file), 0, 0, 1, 1},
  {&__pyx_n_s_newcolor, __pyx_k_newcolor, sizeof(__pyx_k_newcolor), 0, 0, 1, 1},
  {&__pyx_n_s_newpos, __pyx_k_newpos, sizeof(__pyx_k_newpos), 0, 0, 1, 1},
  {&__pyx_n_s_newsize, __pyx_k_newsize, sizeof(__pyx_k_newsize), 0, 0, 1, 1},
  {&__pyx_n_s_newtpos, __pyx_k_newtpos, sizeof(__pyx_k_newtpos), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_nr, __pyx_k_nr, sizeof(__pyx_k_nr), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_nx, __pyx_k_nx, sizeof(__pyx_k_nx), 0, 0, 1, 1},
  {&__pyx_n_s_ny, __pyx_k_ny, sizeof(__pyx_k_ny), 0, 0, 1, 1},
  {&__pyx_n_s_obj, __pyx_k_obj, sizeof(__pyx_k_obj), 0, 0, 1, 1},
  {&__pyx_n_s_obj_c, __pyx_k_obj_c, sizeof(__pyx_k_obj_c), 0, 0, 1, 1},
  {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
  {&__pyx_n_s_object_count, __pyx_k_object_count, sizeof(__pyx_k_object_count), 0, 0, 1, 1},
  {&__pyx_n_s_object_counts, __pyx_k_object_counts, sizeof(__pyx_k_object_counts), 0, 0, 1, 1},
  {&__pyx_n_s_object_indexes, __pyx_k_object_indexes, sizeof(__pyx_k_object_indexes), 0, 0, 1, 1},
  {&__pyx_n_s_object_moved, __pyx_k_object_moved, sizeof(__pyx_k_object_moved), 0, 0, 1, 1},
  {&__pyx_kp_s_oh_dear_visual_does_not_match, __pyx_k_oh_dear_visual_does_not_match, sizeof(__pyx_k_oh_dear_visual_does_not_match), 0, 0, 1, 0},
  {&__pyx_n_s_oj, __pyx_k_oj, sizeof(__pyx_k_oj), 0, 0, 1, 1},
  {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
  {&__pyx_n_s_orgsize, __pyx_k_orgsize, sizeof(__pyx_k_orgsize), 0, 0, 1, 1},
  {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
  {&__pyx_n_s_ou, __pyx_k_ou, sizeof(__pyx_k_ou), 0, 0, 1, 1},
  {&__pyx_n_s_overlay, __pyx_k_overlay, sizeof(__pyx_k_overlay), 0, 0, 1, 1},
  {&__pyx_n_s_p1, __pyx_k_p1, sizeof(__pyx_k_p1), 0, 0, 1, 1},
  {&__pyx_n_s_p2, __pyx_k_p2, sizeof(__pyx_k_p2), 0, 0, 1, 1},
  {&__pyx_n_s_pas, __pyx_k_pas, sizeof(__pyx_k_pas), 0, 0, 1, 1},
  {&__pyx_n_s_paste, __pyx_k_paste, sizeof(__pyx_k_paste), 0, 0, 1, 1},
  {&__pyx_n_s_pfd, __pyx_k_pfd, sizeof(__pyx_k_pfd), 0, 0, 1, 1},
  {&__pyx_n_s_pick, __pyx_k_pick, sizeof(__pyx_k_pick), 0, 0, 1, 1},
  {&__pyx_n_s_pix_rat_x, __pyx_k_pix_rat_x, sizeof(__pyx_k_pix_rat_x), 0, 0, 1, 1},
  {&__pyx_n_s_pix_rat_y, __pyx_k_pix_rat_y, sizeof(__pyx_k_pix_rat_y), 0, 0, 1, 1},
  {&__pyx_n_s_pixelformat, __pyx_k_pixelformat, sizeof(__pyx_k_pixelformat), 0, 0, 1, 1},
  {&__pyx_n_s_pixels, __pyx_k_pixels, sizeof(__pyx_k_pixels), 0, 0, 1, 1},
  {&__pyx_n_s_platform, __pyx_k_platform, sizeof(__pyx_k_platform), 0, 0, 1, 1},
  {&__pyx_n_s_pointer, __pyx_k_pointer, sizeof(__pyx_k_pointer), 0, 0, 1, 1},
  {&__pyx_n_s_pointerx, __pyx_k_pointerx, sizeof(__pyx_k_pointerx), 0, 0, 1, 1},
  {&__pyx_n_s_pointery, __pyx_k_pointery, sizeof(__pyx_k_pointery), 0, 0, 1, 1},
  {&__pyx_n_s_points, __pyx_k_points, sizeof(__pyx_k_points), 0, 0, 1, 1},
  {&__pyx_n_s_pop, __pyx_k_pop, sizeof(__pyx_k_pop), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_prequad, __pyx_k_prequad, sizeof(__pyx_k_prequad), 0, 0, 1, 1},
  {&__pyx_n_s_prerender_quad, __pyx_k_prerender_quad, sizeof(__pyx_k_prerender_quad), 0, 0, 1, 1},
  {&__pyx_n_s_prerender_text, __pyx_k_prerender_text, sizeof(__pyx_k_prerender_text), 0, 0, 1, 1},
  {&__pyx_n_s_prerender_texturequad, __pyx_k_prerender_texturequad, sizeof(__pyx_k_prerender_texturequad), 0, 0, 1, 1},
  {&__pyx_n_s_prerenderedobj, __pyx_k_prerenderedobj, sizeof(__pyx_k_prerenderedobj), 0, 0, 1, 1},
  {&__pyx_n_s_pretext, __pyx_k_pretext, sizeof(__pyx_k_pretext), 0, 0, 1, 1},
  {&__pyx_n_s_pretextquad, __pyx_k_pretextquad, sizeof(__pyx_k_pretextquad), 0, 0, 1, 1},
  {&__pyx_n_s_previoev, __pyx_k_previoev, sizeof(__pyx_k_previoev), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_printContext, __pyx_k_printContext, sizeof(__pyx_k_printContext), 0, 0, 1, 1},
  {&__pyx_n_s_pure_pil_alpha_to_color_v2, __pyx_k_pure_pil_alpha_to_color_v2, sizeof(__pyx_k_pure_pil_alpha_to_color_v2), 0, 0, 1, 1},
  {&__pyx_n_s_pyvips, __pyx_k_pyvips, sizeof(__pyx_k_pyvips), 0, 0, 1, 1},
  {&__pyx_n_s_quad, __pyx_k_quad, sizeof(__pyx_k_quad), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_questhead, __pyx_k_questhead, sizeof(__pyx_k_questhead), 0, 0, 1, 1},
  {&__pyx_n_s_queue, __pyx_k_queue, sizeof(__pyx_k_queue), 0, 0, 1, 1},
  {&__pyx_n_s_queue_check, __pyx_k_queue_check, sizeof(__pyx_k_queue_check), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_r_back, __pyx_k_r_back, sizeof(__pyx_k_r_back), 0, 0, 1, 1},
  {&__pyx_n_s_r_val, __pyx_k_r_val, sizeof(__pyx_k_r_val), 0, 0, 1, 1},
  {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rclick_events, __pyx_k_rclick_events, sizeof(__pyx_k_rclick_events), 0, 0, 1, 1},
  {&__pyx_n_s_real_index, __pyx_k_real_index, sizeof(__pyx_k_real_index), 0, 0, 1, 1},
  {&__pyx_n_s_real_value, __pyx_k_real_value, sizeof(__pyx_k_real_value), 0, 0, 1, 1},
  {&__pyx_n_s_realdata, __pyx_k_realdata, sizeof(__pyx_k_realdata), 0, 0, 1, 1},
  {&__pyx_n_s_realy, __pyx_k_realy, sizeof(__pyx_k_realy), 0, 0, 1, 1},
  {&__pyx_n_s_redraw, __pyx_k_redraw, sizeof(__pyx_k_redraw), 0, 0, 1, 1},
  {&__pyx_n_s_render, __pyx_k_render, sizeof(__pyx_k_render), 0, 0, 1, 1},
  {&__pyx_n_s_render_letter, __pyx_k_render_letter, sizeof(__pyx_k_render_letter), 0, 0, 1, 1},
  {&__pyx_n_s_render_quad, __pyx_k_render_quad, sizeof(__pyx_k_render_quad), 0, 0, 1, 1},
  {&__pyx_n_s_render_text, __pyx_k_render_text, sizeof(__pyx_k_render_text), 0, 0, 1, 1},
  {&__pyx_n_s_render_texture_quad, __pyx_k_render_texture_quad, sizeof(__pyx_k_render_texture_quad), 0, 0, 1, 1},
  {&__pyx_n_s_repeat, __pyx_k_repeat, sizeof(__pyx_k_repeat), 0, 0, 1, 1},
  {&__pyx_n_s_reset, __pyx_k_reset, sizeof(__pyx_k_reset), 0, 0, 1, 1},
  {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
  {&__pyx_n_s_resize, __pyx_k_resize, sizeof(__pyx_k_resize), 0, 0, 1, 1},
  {&__pyx_n_s_resize_2, __pyx_k_resize_2, sizeof(__pyx_k_resize_2), 0, 0, 1, 1},
  {&__pyx_n_s_restype, __pyx_k_restype, sizeof(__pyx_k_restype), 0, 0, 1, 1},
  {&__pyx_n_s_rgba2rgb, __pyx_k_rgba2rgb, sizeof(__pyx_k_rgba2rgb), 0, 0, 1, 1},
  {&__pyx_n_s_rise, __pyx_k_rise, sizeof(__pyx_k_rise), 0, 0, 1, 1},
  {&__pyx_n_s_rnd, __pyx_k_rnd, sizeof(__pyx_k_rnd), 0, 0, 1, 1},
  {&__pyx_n_s_rotate, __pyx_k_rotate, sizeof(__pyx_k_rotate), 0, 0, 1, 1},
  {&__pyx_n_s_round, __pyx_k_round, sizeof(__pyx_k_round), 0, 0, 1, 1},
  {&__pyx_n_s_rows, __pyx_k_rows, sizeof(__pyx_k_rows), 0, 0, 1, 1},
  {&__pyx_n_s_run, __pyx_k_run, sizeof(__pyx_k_run), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_sav_vert, __pyx_k_sav_vert, sizeof(__pyx_k_sav_vert), 0, 0, 1, 1},
  {&__pyx_n_s_scale, __pyx_k_scale, sizeof(__pyx_k_scale), 0, 0, 1, 1},
  {&__pyx_n_s_scalex, __pyx_k_scalex, sizeof(__pyx_k_scalex), 0, 0, 1, 1},
  {&__pyx_n_s_scaley, __pyx_k_scaley, sizeof(__pyx_k_scaley), 0, 0, 1, 1},
  {&__pyx_n_s_screen, __pyx_k_screen, sizeof(__pyx_k_screen), 0, 0, 1, 1},
  {&__pyx_n_s_screen_res, __pyx_k_screen_res, sizeof(__pyx_k_screen_res), 0, 0, 1, 1},
  {&__pyx_n_s_screenx, __pyx_k_screenx, sizeof(__pyx_k_screenx), 0, 0, 1, 1},
  {&__pyx_n_s_screeny, __pyx_k_screeny, sizeof(__pyx_k_screeny), 0, 0, 1, 1},
  {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
  {&__pyx_n_s_self_2, __pyx_k_self_2, sizeof(__pyx_k_self_2), 0, 0, 1, 1},
  {&__pyx_n_s_sequential, __pyx_k_sequential, sizeof(__pyx_k_sequential), 0, 0, 1, 1},
  {&__pyx_n_s_serialization, __pyx_k_serialization, sizeof(__pyx_k_serialization), 0, 0, 1, 1},
  {&__pyx_n_s_serialization_current_object, __pyx_k_serialization_current_object, sizeof(__pyx_k_serialization_current_object), 0, 0, 1, 1},
  {&__pyx_n_s_serialize_to_obj, __pyx_k_serialize_to_obj, sizeof(__pyx_k_serialize_to_obj), 0, 0, 1, 1},
  {&__pyx_n_s_serialized_obj, __pyx_k_serialized_obj, sizeof(__pyx_k_serialized_obj), 0, 0, 1, 1},
  {&__pyx_n_s_set_background, __pyx_k_set_background, sizeof(__pyx_k_set_background), 0, 0, 1, 1},
  {&__pyx_n_s_set_centerpoint, __pyx_k_set_centerpoint, sizeof(__pyx_k_set_centerpoint), 0, 0, 1, 1},
  {&__pyx_n_s_set_char_size, __pyx_k_set_char_size, sizeof(__pyx_k_set_char_size), 0, 0, 1, 1},
  {&__pyx_n_s_set_eyepoint, __pyx_k_set_eyepoint, sizeof(__pyx_k_set_eyepoint), 0, 0, 1, 1},
  {&__pyx_n_s_set_mode, __pyx_k_set_mode, sizeof(__pyx_k_set_mode), 0, 0, 1, 1},
  {&__pyx_n_s_set_name, __pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 0, 1, 1},
  {&__pyx_n_s_shaderprogram, __pyx_k_shaderprogram, sizeof(__pyx_k_shaderprogram), 0, 0, 1, 1},
  {&__pyx_n_s_shaders, __pyx_k_shaders, sizeof(__pyx_k_shaders), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_shrink, __pyx_k_shrink, sizeof(__pyx_k_shrink), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_size_x, __pyx_k_size_x, sizeof(__pyx_k_size_x), 0, 0, 1, 1},
  {&__pyx_n_s_size_y, __pyx_k_size_y, sizeof(__pyx_k_size_y), 0, 0, 1, 1},
  {&__pyx_n_s_sizeof, __pyx_k_sizeof, sizeof(__pyx_k_sizeof), 0, 0, 1, 1},
  {&__pyx_n_s_sizex, __pyx_k_sizex, sizeof(__pyx_k_sizex), 0, 0, 1, 1},
  {&__pyx_n_s_sizey, __pyx_k_sizey, sizeof(__pyx_k_sizey), 0, 0, 1, 1},
  {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
  {&__pyx_n_s_slope_error_new, __pyx_k_slope_error_new, sizeof(__pyx_k_slope_error_new), 0, 0, 1, 1},
  {&__pyx_n_s_spacing, __pyx_k_spacing, sizeof(__pyx_k_spacing), 0, 0, 1, 1},
  {&__pyx_n_s_spacing_addx, __pyx_k_spacing_addx, sizeof(__pyx_k_spacing_addx), 0, 0, 1, 1},
  {&__pyx_n_s_spacing_addy, __pyx_k_spacing_addy, sizeof(__pyx_k_spacing_addy), 0, 0, 1, 1},
  {&__pyx_n_s_spacing_y, __pyx_k_spacing_y, sizeof(__pyx_k_spacing_y), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_sqrt, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {&__pyx_n_s_start_new_thread, __pyx_k_start_new_thread, sizeof(__pyx_k_start_new_thread), 0, 0, 1, 1},
  {&__pyx_n_s_startswith, __pyx_k_startswith, sizeof(__pyx_k_startswith), 0, 0, 1, 1},
  {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
  {&__pyx_n_s_strings, __pyx_k_strings, sizeof(__pyx_k_strings), 0, 0, 1, 1},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_switch, __pyx_k_switch, sizeof(__pyx_k_switch), 0, 0, 1, 1},
  {&__pyx_n_s_sx, __pyx_k_sx, sizeof(__pyx_k_sx), 0, 0, 1, 1},
  {&__pyx_n_s_sy, __pyx_k_sy, sizeof(__pyx_k_sy), 0, 0, 1, 1},
  {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {&__pyx_n_s_t1, __pyx_k_t1, sizeof(__pyx_k_t1), 0, 0, 1, 1},
  {&__pyx_n_s_t2, __pyx_k_t2, sizeof(__pyx_k_t2), 0, 0, 1, 1},
  {&__pyx_n_s_t3, __pyx_k_t3, sizeof(__pyx_k_t3), 0, 0, 1, 1},
  {&__pyx_n_s_t4, __pyx_k_t4, sizeof(__pyx_k_t4), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tex_arrayn_translate, __pyx_k_tex_arrayn_translate, sizeof(__pyx_k_tex_arrayn_translate), 0, 0, 1, 1},
  {&__pyx_n_s_texcords1, __pyx_k_texcords1, sizeof(__pyx_k_texcords1), 0, 0, 1, 1},
  {&__pyx_n_s_texcords2, __pyx_k_texcords2, sizeof(__pyx_k_texcords2), 0, 0, 1, 1},
  {&__pyx_n_s_texcords3, __pyx_k_texcords3, sizeof(__pyx_k_texcords3), 0, 0, 1, 1},
  {&__pyx_n_s_texcords4, __pyx_k_texcords4, sizeof(__pyx_k_texcords4), 0, 0, 1, 1},
  {&__pyx_n_s_texid, __pyx_k_texid, sizeof(__pyx_k_texid), 0, 0, 1, 1},
  {&__pyx_n_s_texsize, __pyx_k_texsize, sizeof(__pyx_k_texsize), 0, 0, 1, 1},
  {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
  {&__pyx_n_s_textid, __pyx_k_textid, sizeof(__pyx_k_textid), 0, 0, 1, 1},
  {&__pyx_n_s_textn, __pyx_k_textn, sizeof(__pyx_k_textn), 0, 0, 1, 1},
  {&__pyx_n_s_textr, __pyx_k_textr, sizeof(__pyx_k_textr), 0, 0, 1, 1},
  {&__pyx_n_s_texture, __pyx_k_texture, sizeof(__pyx_k_texture), 0, 0, 1, 1},
  {&__pyx_n_s_texture_2, __pyx_k_texture_2, sizeof(__pyx_k_texture_2), 0, 0, 1, 1},
  {&__pyx_n_s_texture_cords_to_ratio, __pyx_k_texture_cords_to_ratio, sizeof(__pyx_k_texture_cords_to_ratio), 0, 0, 1, 1},
  {&__pyx_n_s_texture_data, __pyx_k_texture_data, sizeof(__pyx_k_texture_data), 0, 0, 1, 1},
  {&__pyx_n_s_texture_slots, __pyx_k_texture_slots, sizeof(__pyx_k_texture_slots), 0, 0, 1, 1},
  {&__pyx_n_s_textured, __pyx_k_textured, sizeof(__pyx_k_textured), 0, 0, 1, 1},
  {&__pyx_n_s_textures, __pyx_k_textures, sizeof(__pyx_k_textures), 0, 0, 1, 1},
  {&__pyx_n_s_th, __pyx_k_th, sizeof(__pyx_k_th), 0, 0, 1, 1},
  {&__pyx_n_s_thread, __pyx_k_thread, sizeof(__pyx_k_thread), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_n_s_title, __pyx_k_title, sizeof(__pyx_k_title), 0, 0, 1, 1},
  {&__pyx_n_s_tk, __pyx_k_tk, sizeof(__pyx_k_tk), 0, 0, 1, 1},
  {&__pyx_n_s_tkAutoSpin, __pyx_k_tkAutoSpin, sizeof(__pyx_k_tkAutoSpin), 0, 0, 1, 1},
  {&__pyx_n_s_tkCreateContext, __pyx_k_tkCreateContext, sizeof(__pyx_k_tkCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s_tkExpose, __pyx_k_tkExpose, sizeof(__pyx_k_tkExpose), 0, 0, 1, 1},
  {&__pyx_n_s_tkHandlePick, __pyx_k_tkHandlePick, sizeof(__pyx_k_tkHandlePick), 0, 0, 1, 1},
  {&__pyx_n_s_tkMakeCurrent, __pyx_k_tkMakeCurrent, sizeof(__pyx_k_tkMakeCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_tkMap, __pyx_k_tkMap, sizeof(__pyx_k_tkMap), 0, 0, 1, 1},
  {&__pyx_n_s_tkPrint, __pyx_k_tkPrint, sizeof(__pyx_k_tkPrint), 0, 0, 1, 1},
  {&__pyx_n_s_tkRecordMouse, __pyx_k_tkRecordMouse, sizeof(__pyx_k_tkRecordMouse), 0, 0, 1, 1},
  {&__pyx_n_s_tkRedraw, __pyx_k_tkRedraw, sizeof(__pyx_k_tkRedraw), 0, 0, 1, 1},
  {&__pyx_n_s_tkResize, __pyx_k_tkResize, sizeof(__pyx_k_tkResize), 0, 0, 1, 1},
  {&__pyx_n_s_tkRotate, __pyx_k_tkRotate, sizeof(__pyx_k_tkRotate), 0, 0, 1, 1},
  {&__pyx_n_s_tkScale, __pyx_k_tkScale, sizeof(__pyx_k_tkScale), 0, 0, 1, 1},
  {&__pyx_n_s_tkSwapBuffers, __pyx_k_tkSwapBuffers, sizeof(__pyx_k_tkSwapBuffers), 0, 0, 1, 1},
  {&__pyx_n_s_tkTranslate, __pyx_k_tkTranslate, sizeof(__pyx_k_tkTranslate), 0, 0, 1, 1},
  {&__pyx_n_s_tkinter, __pyx_k_tkinter, sizeof(__pyx_k_tkinter), 0, 0, 1, 1},
  {&__pyx_n_s_tlist, __pyx_k_tlist, sizeof(__pyx_k_tlist), 0, 0, 1, 1},
  {&__pyx_n_s_to, __pyx_k_to, sizeof(__pyx_k_to), 0, 0, 1, 1},
  {&__pyx_n_s_total_updates, __pyx_k_total_updates, sizeof(__pyx_k_total_updates), 0, 0, 1, 1},
  {&__pyx_n_s_tquad, __pyx_k_tquad, sizeof(__pyx_k_tquad), 0, 0, 1, 1},
  {&__pyx_n_s_tr1, __pyx_k_tr1, sizeof(__pyx_k_tr1), 0, 0, 1, 1},
  {&__pyx_n_s_tr2, __pyx_k_tr2, sizeof(__pyx_k_tr2), 0, 0, 1, 1},
  {&__pyx_n_s_tu, __pyx_k_tu, sizeof(__pyx_k_tu), 0, 0, 1, 1},
  {&__pyx_n_s_tua, __pyx_k_tua, sizeof(__pyx_k_tua), 0, 0, 1, 1},
  {&__pyx_n_s_txn, __pyx_k_txn, sizeof(__pyx_k_txn), 0, 0, 1, 1},
  {&__pyx_n_s_txs, __pyx_k_txs, sizeof(__pyx_k_txs), 0, 0, 1, 1},
  {&__pyx_n_s_txtid, __pyx_k_txtid, sizeof(__pyx_k_txtid), 0, 0, 1, 1},
  {&__pyx_n_s_ubyte, __pyx_k_ubyte, sizeof(__pyx_k_ubyte), 0, 0, 1, 1},
  {&__pyx_n_s_uint8, __pyx_k_uint8, sizeof(__pyx_k_uint8), 0, 0, 1, 1},
  {&__pyx_n_s_unload, __pyx_k_unload, sizeof(__pyx_k_unload), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_update_animation, __pyx_k_update_animation, sizeof(__pyx_k_update_animation), 0, 0, 1, 1},
  {&__pyx_n_s_update_idletasks, __pyx_k_update_idletasks, sizeof(__pyx_k_update_idletasks), 0, 0, 1, 1},
  {&__pyx_n_s_update_list, __pyx_k_update_list, sizeof(__pyx_k_update_list), 0, 0, 1, 1},
  {&__pyx_n_s_updates, __pyx_k_updates, sizeof(__pyx_k_updates), 0, 0, 1, 1},
  {&__pyx_n_s_use_texture, __pyx_k_use_texture, sizeof(__pyx_k_use_texture), 0, 0, 1, 1},
  {&__pyx_n_s_usecords, __pyx_k_usecords, sizeof(__pyx_k_usecords), 0, 0, 1, 1},
  {&__pyx_n_s_user32, __pyx_k_user32, sizeof(__pyx_k_user32), 0, 0, 1, 1},
  {&__pyx_n_s_user32_2, __pyx_k_user32_2, sizeof(__pyx_k_user32_2), 0, 0, 1, 1},
  {&__pyx_n_s_usingVIPSandShrink, __pyx_k_usingVIPSandShrink, sizeof(__pyx_k_usingVIPSandShrink), 0, 0, 1, 1},
  {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {&__pyx_n_s_util, __pyx_k_util, sizeof(__pyx_k_util), 0, 0, 1, 1},
  {&__pyx_n_s_v3distsq, __pyx_k_v3distsq, sizeof(__pyx_k_v3distsq), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_vb_count, __pyx_k_vb_count, sizeof(__pyx_k_vb_count), 0, 0, 1, 1},
  {&__pyx_n_s_vbo, __pyx_k_vbo, sizeof(__pyx_k_vbo), 0, 0, 1, 1},
  {&__pyx_n_s_vbos, __pyx_k_vbos, sizeof(__pyx_k_vbos), 0, 0, 1, 1},
  {&__pyx_kp_s_version_330_core_layout_locatio, __pyx_k_version_330_core_layout_locatio, sizeof(__pyx_k_version_330_core_layout_locatio), 0, 0, 1, 0},
  {&__pyx_kp_s_version_330_core_layout_locatio_2, __pyx_k_version_330_core_layout_locatio_2, sizeof(__pyx_k_version_330_core_layout_locatio_2), 0, 0, 1, 0},
  {&__pyx_n_s_version_info, __pyx_k_version_info, sizeof(__pyx_k_version_info), 0, 0, 1, 1},
  {&__pyx_n_s_vert_lists, __pyx_k_vert_lists, sizeof(__pyx_k_vert_lists), 0, 0, 1, 1},
  {&__pyx_n_s_vertices, __pyx_k_vertices, sizeof(__pyx_k_vertices), 0, 0, 1, 1},
  {&__pyx_n_s_vipshome, __pyx_k_vipshome, sizeof(__pyx_k_vipshome), 0, 0, 1, 1},
  {&__pyx_n_s_vis, __pyx_k_vis, sizeof(__pyx_k_vis), 0, 0, 1, 1},
  {&__pyx_n_s_visual, __pyx_k_visual, sizeof(__pyx_k_visual), 0, 0, 1, 1},
  {&__pyx_n_s_visualid, __pyx_k_visualid, sizeof(__pyx_k_visualid), 0, 0, 1, 1},
  {&__pyx_n_s_vns, __pyx_k_vns, sizeof(__pyx_k_vns), 0, 0, 1, 1},
  {&__pyx_n_s_vxshader, __pyx_k_vxshader, sizeof(__pyx_k_vxshader), 0, 0, 1, 1},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {&__pyx_n_s_w_2, __pyx_k_w_2, sizeof(__pyx_k_w_2), 0, 0, 1, 1},
  {&__pyx_n_s_wait, __pyx_k_wait, sizeof(__pyx_k_wait), 0, 0, 1, 1},
  {&__pyx_n_s_wglCreateContext, __pyx_k_wglCreateContext, sizeof(__pyx_k_wglCreateContext), 0, 0, 1, 1},
  {&__pyx_n_s_wglMakeCurrent, __pyx_k_wglMakeCurrent, sizeof(__pyx_k_wglMakeCurrent), 0, 0, 1, 1},
  {&__pyx_n_s_wid, __pyx_k_wid, sizeof(__pyx_k_wid), 0, 0, 1, 1},
  {&__pyx_n_s_width, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 1},
  {&__pyx_n_s_win, __pyx_k_win, sizeof(__pyx_k_win), 0, 0, 1, 1},
  {&__pyx_n_s_win32, __pyx_k_win32, sizeof(__pyx_k_win32), 0, 0, 1, 1},
  {&__pyx_n_s_win_height, __pyx_k_win_height, sizeof(__pyx_k_win_height), 0, 0, 1, 1},
  {&__pyx_n_s_winfo, __pyx_k_winfo, sizeof(__pyx_k_winfo), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_height, __pyx_k_winfo_height, sizeof(__pyx_k_winfo_height), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_id, __pyx_k_winfo_id, sizeof(__pyx_k_winfo_id), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_ismapped, __pyx_k_winfo_ismapped, sizeof(__pyx_k_winfo_ismapped), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_screen, __pyx_k_winfo_screen, sizeof(__pyx_k_winfo_screen), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_visualid, __pyx_k_winfo_visualid, sizeof(__pyx_k_winfo_visualid), 0, 0, 1, 1},
  {&__pyx_n_s_winfo_width, __pyx_k_winfo_width, sizeof(__pyx_k_winfo_width), 0, 0, 1, 1},
  {&__pyx_n_s_write_to_memory, __pyx_k_write_to_memory, sizeof(__pyx_k_write_to_memory), 0, 0, 1, 1},
  {&__pyx_n_s_wtf, __pyx_k_wtf, sizeof(__pyx_k_wtf), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_x1, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
  {&__pyx_n_s_x11lib, __pyx_k_x11lib, sizeof(__pyx_k_x11lib), 0, 0, 1, 1},
  {&__pyx_n_s_x2, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
  {&__pyx_n_s_x_root, __pyx_k_x_root, sizeof(__pyx_k_x_root), 0, 0, 1, 1},
  {&__pyx_n_s_xcenter, __pyx_k_xcenter, sizeof(__pyx_k_xcenter), 0, 0, 1, 1},
  {&__pyx_n_s_xmouse, __pyx_k_xmouse, sizeof(__pyx_k_xmouse), 0, 0, 1, 1},
  {&__pyx_n_s_xr, __pyx_k_xr, sizeof(__pyx_k_xr), 0, 0, 1, 1},
  {&__pyx_n_s_xspin, __pyx_k_xspin, sizeof(__pyx_k_xspin), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_y1, __pyx_k_y1, sizeof(__pyx_k_y1), 0, 0, 1, 1},
  {&__pyx_n_s_y2, __pyx_k_y2, sizeof(__pyx_k_y2), 0, 0, 1, 1},
  {&__pyx_n_s_y_root, __pyx_k_y_root, sizeof(__pyx_k_y_root), 0, 0, 1, 1},
  {&__pyx_n_s_ycenter, __pyx_k_ycenter, sizeof(__pyx_k_ycenter), 0, 0, 1, 1},
  {&__pyx_n_s_ymouse, __pyx_k_ymouse, sizeof(__pyx_k_ymouse), 0, 0, 1, 1},
  {&__pyx_n_s_yr, __pyx_k_yr, sizeof(__pyx_k_yr), 0, 0, 1, 1},
  {&__pyx_n_s_yspin, __pyx_k_yspin, sizeof(__pyx_k_yspin), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {&__pyx_n_s_zcenter, __pyx_k_zcenter, sizeof(__pyx_k_zcenter), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  #endif
  {0, 0, 0, 0, 0, 0, 0}
};
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 11, __pyx_L1_error)
  __pyx_builtin_round = __Pyx_GetBuiltinName(__pyx_n_s_round); if (!__pyx_builtin_round) __PYX_ERR(0, 20, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 604, __pyx_L1_error)
  __pyx_builtin_hex = __Pyx_GetBuiltinName(__pyx_n_s_hex); if (!__pyx_builtin_hex) __PYX_ERR(0, 775, __pyx_L1_error)
  __pyx_builtin_AssertionError = __Pyx_GetBuiltinName(__pyx_n_s_AssertionError); if (!__pyx_builtin_AssertionError) __PYX_ERR(0, 923, __pyx_L1_error)
  __pyx_builtin_chr = __Pyx_GetBuiltinName(__pyx_n_s_chr); if (!__pyx_builtin_chr) __PYX_ERR(0, 1146, __pyx_L1_error)
  __pyx_builtin_object = __Pyx_GetBuiltinName(__pyx_n_s_object); if (!__pyx_builtin_object) __PYX_ERR(0, 1531, __pyx_L1_error)
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) __PYX_ERR(0, 1594, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":48
 *     def __init__(self,screen_res):
 *         self.size = screen_res
 *         self.newsize= (0,0)             # <<<<<<<<<<<<<<
 *         self.nx = 0
 *         self.ny = 0
 */
  __pyx_tuple_ = PyTuple_Pack(2, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":136
 * 
 * 
 *         GL.glTexCoord2f(1, 1)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0], tr2[1])
 * 
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_1); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":139
 *         GL.glVertex2f(tr2[0], tr2[1])
 * 
 *         GL.glTexCoord2f(0, 1)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr1[0],tr2[1])
 * 
 */
  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_1); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":144
 *         GL.glTexCoord2f(0, 0)
 *         GL.glVertex2f(tr1[0], tr1[1])
 *         GL.glTexCoord2f(1, 0)             # <<<<<<<<<<<<<<
 *         GL.glVertex2f(tr2[0],tr1[1])
 * 
 */
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_0); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":156
 * 
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 */
  __pyx_tuple__5 = PyTuple_Pack(3, __pyx_int_255, __pyx_int_255, __pyx_int_255); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":179
 *         pass#DFPASS
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):             # <<<<<<<<<<<<<<
 *         color=color
 *         textr=font_texture
 */
  __pyx_tuple__6 = PyTuple_Pack(3, __pyx_int_256, __pyx_int_256, __pyx_int_8); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_tuple__7 = PyTuple_Pack(3, __pyx_n_s_Spacing_add, __pyx_n_s_size_x, __pyx_n_s_size_y); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":922
 *             'bitmap': 'questhead',
 *             'default': 0,
 *             'strings': ('Done', 'Ok')})             # <<<<<<<<<<<<<<
 *         assert d
 *     def activate(self):
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_n_s_Done, __pyx_n_s_Ok); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":936
 * 
 *         self.activate()
 *         light_position = (1, 1, 1, 0)             # <<<<<<<<<<<<<<
 *         GL.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position)
 *         GL.glEnable(GL.GL_LIGHTING)
 */
  __pyx_tuple__12 = PyTuple_Pack(4, __pyx_int_1, __pyx_int_1, __pyx_int_1, __pyx_int_0); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1348
 *         else:
 *             GL.glTexCoord2f(1, 1)
 *             GL.glVertex2f(10, 10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(-10,10)
 */
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_int_10, __pyx_int_10); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 1348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1350
 *             GL.glVertex2f(10, 10)
 *             GL.glTexCoord2f(0-texsize, 1)
 *             GL.glVertex2f(-10,10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(-10, -10)
 */
  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_int_neg_10, __pyx_int_10); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 1350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1352
 *             GL.glVertex2f(-10,10)
 *             GL.glTexCoord2f(0-texsize, 0-texsize)
 *             GL.glVertex2f(-10, -10)             # <<<<<<<<<<<<<<
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(10,-10)
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_int_neg_10, __pyx_int_neg_10); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 1352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1354
 *             GL.glVertex2f(-10, -10)
 *             GL.glTexCoord2f(1, 0-texsize)
 *             GL.glVertex2f(10,-10)             # <<<<<<<<<<<<<<
 * 
 *         GL.glEnd()
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_int_10, __pyx_int_neg_10); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 1354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1436
 *     return background
 * def rgba2rgb(x):
 *     x = x[::4]             # <<<<<<<<<<<<<<
 *     return x
 * 
 */
  __pyx_slice__18 = PySlice_New(Py_None, Py_None, __pyx_int_4); if (unlikely(!__pyx_slice__18)) __PYX_ERR(0, 1436, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__18);
  __Pyx_GIVEREF(__pyx_slice__18);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1496
 * 
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 */
  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_int_1920, __pyx_int_1080); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1531
 *     except:
 *         imgnp=texture_
 *         class image(object):             # <<<<<<<<<<<<<<
 *             def __init__(self):
 *                 self.bands = 0
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 1531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1532
 *         imgnp=texture_
 *         class image(object):
 *             def __init__(self):             # <<<<<<<<<<<<<<
 *                 self.bands = 0
 *                 self.width = 0
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);
  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__21, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1532, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(0, 1532, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":4
 * if __name__ == '__main__':
 *     import math
 * def naiveline(x1,y1,x2,y2):             # <<<<<<<<<<<<<<
 *     points = []
 *     rise = y2-y1
 */
  __pyx_tuple__23 = PyTuple_Pack(11, __pyx_n_s_x1, __pyx_n_s_y1, __pyx_n_s_x2, __pyx_n_s_y2, __pyx_n_s_points, __pyx_n_s_rise, __pyx_n_s_run, __pyx_n_s_y, __pyx_n_s_m, __pyx_n_s_b, __pyx_n_s_x); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);
  __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__23, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_naiveline, 4, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(0, 4, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":32
 * 
 *     return points
 * def bresenham(x1,y1,x2, y2):  #Line Drawing             # <<<<<<<<<<<<<<
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)
 */
  __pyx_tuple__25 = PyTuple_Pack(9, __pyx_n_s_x1, __pyx_n_s_y1, __pyx_n_s_x2, __pyx_n_s_y2, __pyx_n_s_m_new, __pyx_n_s_slope_error_new, __pyx_n_s_y, __pyx_n_s_points, __pyx_n_s_x); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);
  __pyx_codeobj__26 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__25, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_bresenham, 32, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__26)) __PYX_ERR(0, 32, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":46
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         self.size = screen_res
 *         self.newsize= (0,0)
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_screen_res); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);
  __pyx_codeobj__28 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__27, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 46, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__28)) __PYX_ERR(0, 46, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":55
 *         self.pix_rat_y = 2/(screen_res[1])
 * 
 *     def _resize(self):             # <<<<<<<<<<<<<<
 *         self.nx = self.orgsize[0]-self.newsize[0]
 *         self.ny = self.orgsize[1]-self.newsize[1]
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);
  __pyx_codeobj__30 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__29, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_resize, 55, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__30)) __PYX_ERR(0, 55, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":59
 *         self.ny = self.orgsize[1]-self.newsize[1]
 * 
 *     def resize(self,newsize,orgsize):             # <<<<<<<<<<<<<<
 *         self.newsize = newsize
 *         self.orgsize = orgsize
 */
  __pyx_tuple__31 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_newsize, __pyx_n_s_orgsize); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);
  __pyx_codeobj__32 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__31, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_resize_2, 59, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__32)) __PYX_ERR(0, 59, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":64
 *         self._resize()
 * 
 *     def _cords_to_ratio(self,x,y):             # <<<<<<<<<<<<<<
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 */
  __pyx_tuple__33 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_xr, __pyx_n_s_yr); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);
  __pyx_codeobj__34 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__33, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_cords_to_ratio, 64, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__34)) __PYX_ERR(0, 64, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":78
 * 
 * 
 *     def _texture_cords_to_ratio(self,x,y,size):             # <<<<<<<<<<<<<<
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 */
  __pyx_tuple__35 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_size, __pyx_n_s_xr, __pyx_n_s_yr); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);
  __pyx_codeobj__36 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__35, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_texture_cords_to_ratio, 78, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__36)) __PYX_ERR(0, 78, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":93
 * 
 * 
 *     def _tex_arrayn_translate(self,n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s
 */
  __pyx_tuple__37 = PyTuple_Pack(10, __pyx_n_s_self, __pyx_n_s_n, __pyx_n_s_s, __pyx_n_s_txs, __pyx_n_s_x1, __pyx_n_s_y1, __pyx_n_s_x2, __pyx_n_s_y2, __pyx_n_s_c1, __pyx_n_s_c2); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tex_arrayn_translate, 93, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(0, 93, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":108
 * 
 * 
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 */
  __pyx_tuple__39 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_rotate, __pyx_n_s_alpha, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_quad, 108, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(0, 108, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":123
 * 
 * 
 *     def draw_quad_texture(self,cords=[],color=(),textr=None,NOENABLE=False):             # <<<<<<<<<<<<<<
 *         if NOENABLE is True:
 *             pass
 */
  __pyx_tuple__41 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_textr, __pyx_n_s_NOENABLE, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_quad_texture, 123, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(0, 123, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":156
 * 
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 */
  __pyx_tuple__43 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_tr1); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_point, 156, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(0, 156, __pyx_L1_error)
  __pyx_tuple__45 = PyTuple_Pack(2, ((PyObject*)__pyx_tuple__2), ((PyObject*)__pyx_tuple__5)); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":162
 *         GL.glVertex2f(tr1[0],tr1[1])
 *         GL.glEnd()
 *     def draw_points():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_points, 162, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(0, 162, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":164
 *     def draw_points():
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)             # <<<<<<<<<<<<<<
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []
 */
  __pyx_tuple__47 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_tr1, __pyx_n_s_pixels, __pyx_n_s_x, __pyx_n_s_i); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_line, 164, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(0, 164, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":176
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()
 *     def draw_lines():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_lines, 176, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(0, 176, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":179
 *         pass#DFPASS
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):             # <<<<<<<<<<<<<<
 *         color=color
 *         textr=font_texture
 */
  __pyx_tuple__50 = PyTuple_Pack(28, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_font_texture, __pyx_n_s_font_letters, __pyx_n_s_text, __pyx_n_s_config, __pyx_n_s_font_config, __pyx_n_s_textr, __pyx_n_s_spacing, __pyx_n_s_spacing_addx, __pyx_n_s_spacing_addy, __pyx_n_s_size_x, __pyx_n_s_size_y, __pyx_n_s_r, __pyx_n_s_y, __pyx_n_s_spacing_y, __pyx_n_s_add_boldnext, __pyx_n_s_i, __pyx_n_s_yr, __pyx_n_s_x, __pyx_n_s_l, __pyx_n_s_ls, __pyx_n_s_cords_2, __pyx_n_s_textn, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_txn); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(8, 0, 0, 28, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_text, 179, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(0, 179, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":239
 *         GL.glEnd()
 * 
 *     def draw_quad_texture_array(self,cords=[],color=(),textr=None,textn=([0,0],32,[0,0])): #-------------------TO do logic of dividing textures -1 -1 to 1 1             # <<<<<<<<<<<<<<
 *         '''textn - Texture split > [x , y [AS N] , [SizeOfOneSpirit], [texturesize x,y] '''
 *         #
 */
  __pyx_tuple__52 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_textr, __pyx_n_s_textn, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_txn); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_quad_texture_array, 239, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 239, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":270
 * 
 * 
 *     def add_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def update_animation():
 */
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_add_animation, 270, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(0, 270, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":272
 *     def add_animation():
 *         pass#DFPASS
 *     def update_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def del_animation():
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_update_animation, 272, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 272, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":274
 *     def update_animation():
 *         pass#DFPASS
 *     def del_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * #__init__ file.
 */
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_del_animation, 274, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(0, 274, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":279
 * #Some usefull animation events
 * # pre pepared (animation etc)
 * def change_color(object,from_,to_):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
  __pyx_tuple__57 = PyTuple_Pack(3, __pyx_n_s_object, __pyx_n_s_from, __pyx_n_s_to); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__57, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_change_color, 279, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 279, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":283
 * 
 * class D2DEvents:
 *     def __init__(self,cvroot):             # <<<<<<<<<<<<<<
 *         '''
 *         Event_Type -
 */
  __pyx_tuple__59 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_cvroot); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);
  __pyx_codeobj__60 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 283, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__60)) __PYX_ERR(0, 283, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":315
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):             # <<<<<<<<<<<<<<
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__61, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_clear_events, 315, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(0, 315, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":317
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):             # <<<<<<<<<<<<<<
 *         for i in self.keypress_events:
 *             i[0](ev)
 */
  __pyx_tuple__63 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_i); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_checkkeypress, 317, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 317, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":320
 *         for i in self.keypress_events:
 *             i[0](ev)
 *     def checkmclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
  __pyx_tuple__65 = PyTuple_Pack(12, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_c, __pyx_n_s_t, __pyx_n_s_event, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_cords, __pyx_n_s_launchev, __pyx_n_s_previoev, __pyx_n_s_state, __pyx_n_s_delay); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 320, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_checkmclick, 320, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 320, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":341
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checklclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
  __pyx_tuple__67 = PyTuple_Pack(12, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_c, __pyx_n_s_t, __pyx_n_s_event, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_cords, __pyx_n_s_launchev, __pyx_n_s_previoev, __pyx_n_s_state, __pyx_n_s_delay); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__67, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_checklclick, 341, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 341, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":362
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkrclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
  __pyx_tuple__69 = PyTuple_Pack(12, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_c, __pyx_n_s_t, __pyx_n_s_event, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_cords, __pyx_n_s_launchev, __pyx_n_s_previoev, __pyx_n_s_state, __pyx_n_s_delay); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_checkrclick, 362, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(0, 362, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":383
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkmotion(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 * 
 */
  __pyx_tuple__71 = PyTuple_Pack(12, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_c, __pyx_n_s_event, __pyx_n_s_t, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_cords, __pyx_n_s_launchev, __pyx_n_s_previoev, __pyx_n_s_state, __pyx_n_s_delay); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_checkmotion, 383, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(0, 383, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":413
 * 
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):             # <<<<<<<<<<<<<<
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)
 */
  __pyx_tuple__73 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_EventType, __pyx_n_s_Cords, __pyx_n_s_EventOn, __pyx_n_s_EventOff, __pyx_n_s_EventDelay, __pyx_n_s_dat, __pyx_n_s_event); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_add_event, 413, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 413, __pyx_L1_error)
  __pyx_tuple__75 = PyTuple_Pack(5, ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":460
 * 
 * 
 *     def check(self,ev,lfg,lfm,lfe):             # <<<<<<<<<<<<<<
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 */
  __pyx_tuple__76 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_ev, __pyx_n_s_lfg, __pyx_n_s_lfm, __pyx_n_s_lfe); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__76, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_check, 460, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(0, 460, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":468
 *                         launch_function_mid()
 *                         launch_function_end()
 *     def _pas(self):             # <<<<<<<<<<<<<<
 *         pass#DFPASS  #._.
 * #__init__ file.
 */
  __pyx_tuple__78 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__78, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_pas, 468, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(0, 468, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":504
 *     """ Common code for windows/x11 """
 *     ## On cords
 *     def check_all_b1_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_B1:
 *             c = i[0]
 */
  __pyx_tuple__81 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_i, __pyx_n_s_c); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_check_all_b1_events, 504, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(0, 504, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":512
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_brelase_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BR:
 *             c = i[0]
 */
  __pyx_tuple__83 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_i, __pyx_n_s_c); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 512, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_check_all_brelase_events, 512, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 512, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":520
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_bpress_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BP:
 *             c = i[0]
 */
  __pyx_tuple__85 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_i, __pyx_n_s_c); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__85, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_check_all_bpress_events, 520, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(0, 520, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":528
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 */
  __pyx_tuple__87 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_launch_func, __pyx_n_s_event_type); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__87, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_create_event, 528, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(0, 528, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":541
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):             # <<<<<<<<<<<<<<
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 */
  __pyx_tuple__89 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_c, __pyx_n_s_func); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);
  __pyx_codeobj__90 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__89, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_check_event_button_1, 541, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__90)) __PYX_ERR(0, 541, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":548
 *                         func()
 * 
 *     def __init__(self, *args, **kw):             # <<<<<<<<<<<<<<
 *         # Set background to empty string to avoid
 *         # flickering overdraw by Tk
 */
  __pyx_tuple__91 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_kw); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__91, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 548, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 548, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":572
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 *     def tkMap( self, evt ):             # <<<<<<<<<<<<<<
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_evt); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkMap, 572, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 572, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":577
 *         self.tkCreateContext( )
 *         self.initgl()
 *     def printContext(self, extns=False):             # <<<<<<<<<<<<<<
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 */
  __pyx_tuple__95 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_extns, __pyx_n_s_exts, __pyx_n_s_e, __pyx_n_s_msk); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_printContext, 577, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 577, __pyx_L1_error)
  __pyx_tuple__97 = PyTuple_Pack(1, ((PyObject *)Py_False)); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":602
 *             print("Old context errors arose")
 *             # raise
 *     def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
  __pyx_tuple__98 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkCreateContext, 602, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 602, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":605
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
  __pyx_tuple__100 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 605, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__100, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkMakeCurrent, 605, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 605, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":608
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
  __pyx_tuple__102 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 608, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkSwapBuffers, 608, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 608, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":611
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkExpose( self, evt):             # <<<<<<<<<<<<<<
 *         if self.cb:
 *             self.after_cancel(self.cb)
 */
  __pyx_tuple__104 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_evt); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkExpose, 611, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 611, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":615
 *             self.after_cancel(self.cb)
 *         self._display()
 *     def tkResize( self, evt ):             # <<<<<<<<<<<<<<
 *         """
 *         Things to do on window resize:
 */
  __pyx_tuple__106 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_evt); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkResize, 615, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(0, 615, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":634
 *             self.initgl()
 * 
 *     def _display(self):             # <<<<<<<<<<<<<<
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0
 */
  __pyx_tuple__108 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_display, 634, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 634, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":644
 *             self.cb = self.after(self.animate, self._display )
 * 
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */
  __pyx_tuple__110 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__110)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__110, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_initgl, 644, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(0, 644, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":647
 *         # For the user code
 *         raise NotImplementedError
 *     def freecalc(self):             # <<<<<<<<<<<<<<
 *         #for user code 2
 *         raise NotImplementedError
 */
  __pyx_tuple__112 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_freecalc, 647, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(0, 647, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":650
 *         #for user code 2
 *         raise NotImplementedError
 *     def redraw(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */
  __pyx_tuple__114 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__114, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_redraw, 650, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(0, 650, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":653
 *         # For the user code
 *         raise NotImplementedError
 *     def wait(self,t):             # <<<<<<<<<<<<<<
 *         time.sleep(t)
 *     def free_calc_update(self):
 */
  __pyx_tuple__116 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_t); if (unlikely(!__pyx_tuple__116)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__116, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_wait, 653, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(0, 653, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":655
 *     def wait(self,t):
 *         time.sleep(t)
 *     def free_calc_update(self):             # <<<<<<<<<<<<<<
 *         self.freecalc_update = 1
 * ###############################################################################
 */
  __pyx_tuple__118 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_free_calc_update, 655, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(0, 655, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":659
 * ###############################################################################
 * # Windows specific code here:
 * if sys.platform.startswith( 'win32' ):             # <<<<<<<<<<<<<<
 *     from ctypes import WinDLL, c_void_p, sizeof
 *     from ctypes.wintypes import HDC, BOOL
 */
  __pyx_tuple__120 = PyTuple_Pack(1, __pyx_n_s_win32); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":664
 *     from OpenGL.WGL import PIXELFORMATDESCRIPTOR, ChoosePixelFormat, \
 *             SetPixelFormat, SwapBuffers, wglCreateContext, wglMakeCurrent
 *     _user32 = WinDLL('user32')             # <<<<<<<<<<<<<<
 *     GetDC = _user32.GetDC
 *     GetDC.restype = HDC
 */
  __pyx_tuple__121 = PyTuple_Pack(1, __pyx_n_s_user32); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":682
 *     class OpenGLFrame( baseOpenGLFrame ):
 * 
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 */
  __pyx_tuple__122 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pixelformat); if (unlikely(!__pyx_tuple__122)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__122, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkCreateContext, 682, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(0, 682, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":688
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 wglMakeCurrent( self.__window, self.__context)
 */
  __pyx_tuple__124 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkMakeCurrent, 688, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 688, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":692
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 SwapBuffers(self.__window)
 */
  __pyx_tuple__126 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(0, 692, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__126, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkSwapBuffers, 692, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) __PYX_ERR(0, 692, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":698
 * ###############################################################################
 * # Linux/X11 specific code here:
 * if sys.platform.startswith( 'linux' ):             # <<<<<<<<<<<<<<
 *     from ctypes import c_int, c_char_p, c_void_p, cdll, POINTER, util, \
 *         pointer, CFUNCTYPE, c_bool
 */
  __pyx_tuple__128 = PyTuple_Pack(1, __pyx_n_s_linux); if (unlikely(!__pyx_tuple__128)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":707
 *         from OpenGL.raw.GLX._types import Display
 * 
 *     _x11lib = cdll.LoadLibrary(util.find_library( "X11" ) )             # <<<<<<<<<<<<<<
 *     XOpenDisplay = _x11lib.XOpenDisplay
 *     XOpenDisplay.argtypes = [c_char_p]
 */
  __pyx_tuple__129 = PyTuple_Pack(1, __pyx_n_s_X11); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":733
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 *             # Check glx version:
 */
  __pyx_tuple__130 = PyTuple_Pack(13, __pyx_n_s_self, __pyx_n_s_major, __pyx_n_s_minor, __pyx_n_s_visual, __pyx_n_s_XDefaultScreen, __pyx_n_s_screen, __pyx_n_s_ncfg, __pyx_n_s_cfgs, __pyx_n_s_ideal, __pyx_n_s_best, __pyx_n_s_i, __pyx_n_s_vis, __pyx_n_s_extensions); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(0, 733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkCreateContext, 733, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(0, 733, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":828
 *                                         (GL.GLint * len(arb_attrs))(* arb_attrs) )
 * 
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 */
  __pyx_tuple__132 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__132)) __PYX_ERR(0, 828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__132);
  __Pyx_GIVEREF(__pyx_tuple__132);
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__132, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkMakeCurrent, 828, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) __PYX_ERR(0, 828, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":831
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 */
  __pyx_tuple__134 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__134)) __PYX_ERR(0, 831, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__134, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkSwapBuffers, 831, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(0, 831, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":846
 * # University of York, UK
 * 
 * def v3distsq(a,b):             # <<<<<<<<<<<<<<
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 */
  __pyx_tuple__136 = PyTuple_Pack(3, __pyx_n_s_a, __pyx_n_s_b, __pyx_n_s_d); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_v3distsq, 846, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(0, 846, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":853
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 */
  __pyx_tuple__138 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_master, __pyx_n_s_cnf, __pyx_n_s_kw); if (unlikely(!__pyx_tuple__138)) __PYX_ERR(0, 853, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 853, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(0, 853, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":856
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         # This must be outside of a pushmatrix, since a resize event
 *         # will call redraw recursively.
 */
  __pyx_tuple__140 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_dummy, __pyx_n_s_mode_2); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkRedraw, 856, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 856, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":871
 *     http://www.yorvic.york.ac.uk/~mjh/
 *     """
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         """\
 *         Create an opengl widget.
 */
  __pyx_tuple__142 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_master, __pyx_n_s_cnf, __pyx_n_s_kw); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 871, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 871, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":912
 *         self.bind('<B3-Motion>', self.tkScale)
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {
 */
  __pyx_tuple__144 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_d); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_help, 912, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(0, 912, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":924
 *             'strings': ('Done', 'Ok')})
 *         assert d
 *     def activate(self):             # <<<<<<<<<<<<<<
 *         """Cause this Opengl widget to be the current destination for drawing."""
 *         self.tkMakeCurrent()
 */
  __pyx_tuple__146 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__146)) __PYX_ERR(0, 924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__146, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_activate, 924, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(0, 924, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":930
 *     # This should almost certainly be part of some derived class.
 *     # But I have put it here for convenience.
 *     def basic_lighting(self):             # <<<<<<<<<<<<<<
 *         """\
 *         Set up some basic lighting (single infinite light source).
 */
  __pyx_tuple__148 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_light_position); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(0, 930, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_basic_lighting, 930, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(0, 930, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":944
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):
 */
  __pyx_tuple__150 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__150)) __PYX_ERR(0, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__150);
  __Pyx_GIVEREF(__pyx_tuple__150);
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__150, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_initgl, 944, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(0, 944, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":946
 *     def initgl(self):
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):             # <<<<<<<<<<<<<<
 *         """Change the background colour of the widget."""
 *         self.r_back = r
 */
  __pyx_tuple__152 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_r, __pyx_n_s_g, __pyx_n_s_b); if (unlikely(!__pyx_tuple__152)) __PYX_ERR(0, 946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_set_background, 946, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(0, 946, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":953
 *         self.tkRedraw()
 * 
 *     def set_centerpoint(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """Set the new center point for the model.
 *         This is where we are looking."""
 */
  __pyx_tuple__154 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_z); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(0, 953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_set_centerpoint, 953, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(0, 953, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":961
 *         self.tkRedraw()
 * 
 *     def set_eyepoint(self, distance):             # <<<<<<<<<<<<<<
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance
 */
  __pyx_tuple__156 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_distance); if (unlikely(!__pyx_tuple__156)) __PYX_ERR(0, 961, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__156, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_set_eyepoint, 961, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(0, 961, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":966
 *         self.tkRedraw()
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 */
  __pyx_tuple__158 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__158)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__158);
  __Pyx_GIVEREF(__pyx_tuple__158);
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__158, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_reset, 966, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(0, 966, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":972
 *         self.tkRedraw()
 * 
 *     def tkHandlePick(self, event):             # <<<<<<<<<<<<<<
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):
 */
  __pyx_tuple__160 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_realy, __pyx_n_s_p1, __pyx_n_s_p2); if (unlikely(!__pyx_tuple__160)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__160);
  __Pyx_GIVEREF(__pyx_tuple__160);
  __pyx_codeobj__161 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__160, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkHandlePick, 972, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__161)) __PYX_ERR(0, 972, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":987
 *                 self.tkRedraw()
 * 
 *     def tkRecordMouse(self, event):             # <<<<<<<<<<<<<<
 *         """Record the current mouse position."""
 *         self.xmouse = event.x
 */
  __pyx_tuple__162 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_event); if (unlikely(!__pyx_tuple__162)) __PYX_ERR(0, 987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__162);
  __Pyx_GIVEREF(__pyx_tuple__162);
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__162, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkRecordMouse, 987, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) __PYX_ERR(0, 987, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":993
 *         print(event.x,event.y)
 * 
 *     def StartRotate(self, event):             # <<<<<<<<<<<<<<
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0
 */
  __pyx_tuple__164 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_event); if (unlikely(!__pyx_tuple__164)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__164);
  __Pyx_GIVEREF(__pyx_tuple__164);
  __pyx_codeobj__165 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__164, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_StartRotate, 993, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__165)) __PYX_ERR(0, 993, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":998
 *         self.tkRecordMouse(event)
 * 
 *     def tkScale(self, event):             # <<<<<<<<<<<<<<
 *         """Scale the scene.  Achieved by moving the eye position.
 *         Dragging up zooms in, while dragging down zooms out
 */
  __pyx_tuple__166 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_scale); if (unlikely(!__pyx_tuple__166)) __PYX_ERR(0, 998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__166);
  __Pyx_GIVEREF(__pyx_tuple__166);
  __pyx_codeobj__167 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__166, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkScale, 998, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__167)) __PYX_ERR(0, 998, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1013
 *         self.tkRecordMouse(event)
 * 
 *     def do_AutoSpin(self):             # <<<<<<<<<<<<<<
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 */
  __pyx_tuple__168 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__168)) __PYX_ERR(0, 1013, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__168);
  __Pyx_GIVEREF(__pyx_tuple__168);
  __pyx_codeobj__169 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__168, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_do_AutoSpin, 1013, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__169)) __PYX_ERR(0, 1013, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1021
 *             self.after(10, self.do_AutoSpin)
 * 
 *     def tkAutoSpin(self, event):             # <<<<<<<<<<<<<<
 *         """Perform autospin of scene."""
 *         self.after(4)
 */
  __pyx_tuple__170 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_x, __pyx_n_s_y); if (unlikely(!__pyx_tuple__170)) __PYX_ERR(0, 1021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__170);
  __Pyx_GIVEREF(__pyx_tuple__170);
  __pyx_codeobj__171 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__170, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkAutoSpin, 1021, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__171)) __PYX_ERR(0, 1021, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1037
 *         self.after(10, self.do_AutoSpin)
 * 
 *     def tkRotate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform rotation of scene."""
 *         self.activate()
 */
  __pyx_tuple__172 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_event); if (unlikely(!__pyx_tuple__172)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__172);
  __Pyx_GIVEREF(__pyx_tuple__172);
  __pyx_codeobj__173 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__172, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkRotate, 1037, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__173)) __PYX_ERR(0, 1037, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1045
 *         self.tkRecordMouse(event)
 * 
 *     def tkTranslate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform translation of scene."""
 *         self.activate()
 */
  __pyx_tuple__174 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_event, __pyx_n_s_win_height, __pyx_n_s_obj_c, __pyx_n_s_win, __pyx_n_s_obj, __pyx_n_s_dist, __pyx_n_s_scale); if (unlikely(!__pyx_tuple__174)) __PYX_ERR(0, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__174);
  __Pyx_GIVEREF(__pyx_tuple__174);
  __pyx_codeobj__175 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__174, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkTranslate, 1045, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__175)) __PYX_ERR(0, 1045, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1059
 *         self.tkRecordMouse(event)
 * 
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)
 */
  __pyx_tuple__176 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_dummy, __pyx_n_s_w_2, __pyx_n_s_h); if (unlikely(!__pyx_tuple__176)) __PYX_ERR(0, 1059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__176);
  __Pyx_GIVEREF(__pyx_tuple__176);
  __pyx_codeobj__177 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__176, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkRedraw, 1059, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__177)) __PYX_ERR(0, 1059, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1091
 *         # Call objects redraw method.
 *         self.redraw(self)
 *     def freecalc( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):
 */
  __pyx_tuple__178 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_named); if (unlikely(!__pyx_tuple__178)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__178);
  __Pyx_GIVEREF(__pyx_tuple__178);
  __pyx_codeobj__179 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__178, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_freecalc, 1091, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__179)) __PYX_ERR(0, 1091, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1093
 *     def freecalc( self, *args, **named ):
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 */
  __pyx_tuple__180 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_named); if (unlikely(!__pyx_tuple__180)) __PYX_ERR(0, 1093, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__180);
  __Pyx_GIVEREF(__pyx_tuple__180);
  __pyx_codeobj__181 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__180, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_redraw, 1093, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__181)) __PYX_ERR(0, 1093, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1096
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 *     def tkExpose(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Redraw the widget.
 *         Make it active, update tk events, call redraw procedure and
 */
  __pyx_tuple__182 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_dummy); if (unlikely(!__pyx_tuple__182)) __PYX_ERR(0, 1096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__182);
  __Pyx_GIVEREF(__pyx_tuple__182);
  __pyx_codeobj__183 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__182, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkExpose, 1096, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__183)) __PYX_ERR(0, 1096, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1107
 *         self.tkRedraw()
 * 
 *     def tkPrint(self, file):             # <<<<<<<<<<<<<<
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 */
  __pyx_tuple__184 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_file); if (unlikely(!__pyx_tuple__184)) __PYX_ERR(0, 1107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__184);
  __Pyx_GIVEREF(__pyx_tuple__184);
  __pyx_codeobj__185 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__184, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tkPrint, 1107, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__185)) __PYX_ERR(0, 1107, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1111
 *         self.activate()
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */
  __pyx_tuple__186 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_screen_res); if (unlikely(!__pyx_tuple__186)) __PYX_ERR(0, 1111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__186);
  __Pyx_GIVEREF(__pyx_tuple__186);
  __pyx_codeobj__187 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__186, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1111, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__187)) __PYX_ERR(0, 1111, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1114
 *         pass#DFPASS
 * 
 *     def prerender_quad(self_,cords,color):             # <<<<<<<<<<<<<<
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */
  __pyx_tuple__188 = PyTuple_Pack(6, __pyx_n_s_self_2, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_data); if (unlikely(!__pyx_tuple__188)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__188);
  __Pyx_GIVEREF(__pyx_tuple__188);
  __pyx_codeobj__189 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__188, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_prerender_quad, 1114, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__189)) __PYX_ERR(0, 1114, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1125
 * 
 * 
 *     def prerender_texturequad(self_,cords,color,texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */
  __pyx_tuple__190 = PyTuple_Pack(7, __pyx_n_s_self_2, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_texture, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_data); if (unlikely(!__pyx_tuple__190)) __PYX_ERR(0, 1125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__190);
  __Pyx_GIVEREF(__pyx_tuple__190);
  __pyx_codeobj__191 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__190, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_prerender_texturequad, 1125, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__191)) __PYX_ERR(0, 1125, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1139
 * 
 * 
 *     def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 *         face = Face(filename)
 *         face.set_char_size( size*64 )
 */
  __pyx_tuple__192 = PyTuple_Pack(27, __pyx_n_s_filename, __pyx_n_s_size, __pyx_n_s_base, __pyx_n_s_texid, __pyx_n_s_face, __pyx_n_s_width, __pyx_n_s_height, __pyx_n_s_ascender, __pyx_n_s_descender, __pyx_n_s_c, __pyx_n_s_bitmap, __pyx_n_s_Z, __pyx_n_s_j, __pyx_n_s_i, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_font, __pyx_n_s_dx, __pyx_n_s_dy, __pyx_n_s_cords1, __pyx_n_s_texcords1, __pyx_n_s_cords2, __pyx_n_s_texcords2, __pyx_n_s_cords3, __pyx_n_s_texcords3, __pyx_n_s_cords4, __pyx_n_s_texcords4); if (unlikely(!__pyx_tuple__192)) __PYX_ERR(0, 1139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__192);
  __Pyx_GIVEREF(__pyx_tuple__192);
  __pyx_codeobj__193 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 27, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__192, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_create_font, 1139, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__193)) __PYX_ERR(0, 1139, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1202
 * 
 * 
 *     def prerender_text(self_,cords,text,font_letters,spacing_addx,spacing_addy,color,font_texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Text '''
 *         config=(256,256,8)
 */
  __pyx_tuple__194 = PyTuple_Pack(32, __pyx_n_s_self_2, __pyx_n_s_cords, __pyx_n_s_text, __pyx_n_s_font_letters, __pyx_n_s_spacing_addx, __pyx_n_s_spacing_addy, __pyx_n_s_color, __pyx_n_s_font_texture, __pyx_n_s_config, __pyx_n_s_data_type, __pyx_n_s_data_length, __pyx_n_s_data_txn, __pyx_n_s_data_tr1, __pyx_n_s_data_tr2, __pyx_n_s_spacing, __pyx_n_s_size_x, __pyx_n_s_size_y, __pyx_n_s_r, __pyx_n_s_y, __pyx_n_s_spacing_y, __pyx_n_s_add_boldnext, __pyx_n_s_i, __pyx_n_s_yr, __pyx_n_s_x, __pyx_n_s_l, __pyx_n_s_ls, __pyx_n_s_cords_2, __pyx_n_s_textn, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_txn, __pyx_n_s_data); if (unlikely(!__pyx_tuple__194)) __PYX_ERR(0, 1202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__194);
  __Pyx_GIVEREF(__pyx_tuple__194);
  __pyx_codeobj__195 = (PyObject*)__Pyx_PyCode_New(8, 0, 0, 32, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__194, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_prerender_text, 1202, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__195)) __PYX_ERR(0, 1202, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1256
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):             # <<<<<<<<<<<<<<
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 */
  __pyx_tuple__196 = PyTuple_Pack(1, __pyx_n_s_prerenderedobj); if (unlikely(!__pyx_tuple__196)) __PYX_ERR(0, 1256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__196);
  __Pyx_GIVEREF(__pyx_tuple__196);
  __pyx_codeobj__197 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__196, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_render, 1256, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__197)) __PYX_ERR(0, 1256, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1266
 * 
 * 
 *     def render_letter(D2Draw,cords,color,letter,font,texid):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         self = D2Draw
 */
  __pyx_tuple__198 = PyTuple_Pack(20, __pyx_n_s_D2Draw, __pyx_n_s_cords, __pyx_n_s_color, __pyx_n_s_letter, __pyx_n_s_font, __pyx_n_s_texid, __pyx_n_s_ct, __pyx_n_s_self, __pyx_n_s_width, __pyx_n_s_height, __pyx_n_s_t1, __pyx_n_s_c1_2, __pyx_n_s_t2, __pyx_n_s_c2_2, __pyx_n_s_t3, __pyx_n_s_c3, __pyx_n_s_t4, __pyx_n_s_c4, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__198)) __PYX_ERR(0, 1266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__198);
  __Pyx_GIVEREF(__pyx_tuple__198);
  __pyx_codeobj__199 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__198, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_render_letter, 1266, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__199)) __PYX_ERR(0, 1266, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1292
 * 
 * 
 *     def render_text(pretext):             # <<<<<<<<<<<<<<
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */
  __pyx_tuple__200 = PyTuple_Pack(5, __pyx_n_s_pretext, __pyx_n_s_i, __pyx_n_s_txn, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__200)) __PYX_ERR(0, 1292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__200);
  __Pyx_GIVEREF(__pyx_tuple__200);
  __pyx_codeobj__201 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__200, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_render_text, 1292, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__201)) __PYX_ERR(0, 1292, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1315
 * 
 * 
 *     def render_quad(prequad):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 */
  __pyx_tuple__202 = PyTuple_Pack(3, __pyx_n_s_prequad, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__202)) __PYX_ERR(0, 1315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__202);
  __Pyx_GIVEREF(__pyx_tuple__202);
  __pyx_codeobj__203 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__202, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_render_quad, 1315, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__203)) __PYX_ERR(0, 1315, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1329
 * 
 * 
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 */
  __pyx_tuple__204 = PyTuple_Pack(5, __pyx_n_s_pretextquad, __pyx_n_s_texsize, __pyx_n_s_usecords, __pyx_n_s_tr1, __pyx_n_s_tr2); if (unlikely(!__pyx_tuple__204)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__204);
  __Pyx_GIVEREF(__pyx_tuple__204);
  __pyx_codeobj__205 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__204, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_render_texture_quad, 1329, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__205)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __pyx_tuple__206 = PyTuple_Pack(3, ((PyObject *)Py_None), ((PyObject *)__pyx_int_0), ((PyObject *)Py_True)); if (unlikely(!__pyx_tuple__206)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__206);
  __Pyx_GIVEREF(__pyx_tuple__206);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1383
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST
 * def load_texture_dp(dp_data,n,alpha=False):             # <<<<<<<<<<<<<<
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 *     global TEXTURE_DISPLAY_METHOD
 */
  __pyx_tuple__208 = PyTuple_Pack(7, __pyx_n_s_dp_data, __pyx_n_s_n, __pyx_n_s_alpha, __pyx_n_s_texture_data, __pyx_n_s_realdata, __pyx_n_s_i, __pyx_n_s_textr); if (unlikely(!__pyx_tuple__208)) __PYX_ERR(0, 1383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__208);
  __Pyx_GIVEREF(__pyx_tuple__208);
  __pyx_codeobj__209 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__208, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_load_texture_dp, 1383, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__209)) __PYX_ERR(0, 1383, __pyx_L1_error)
  __pyx_tuple__210 = PyTuple_Pack(1, ((PyObject *)Py_False)); if (unlikely(!__pyx_tuple__210)) __PYX_ERR(0, 1383, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__210);
  __Pyx_GIVEREF(__pyx_tuple__210);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1402
 *     return textr
 * 
 * def load_texture_repeat(texture_=None,n=None):             # <<<<<<<<<<<<<<
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')
 */
  __pyx_tuple__211 = PyTuple_Pack(5, __pyx_n_s_texture_2, __pyx_n_s_n, __pyx_n_s_texture, __pyx_n_s_texture_data, __pyx_n_s_textr); if (unlikely(!__pyx_tuple__211)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__211);
  __Pyx_GIVEREF(__pyx_tuple__211);
  __pyx_codeobj__212 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__211, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_load_texture_repeat, 1402, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__212)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __pyx_tuple__213 = PyTuple_Pack(2, ((PyObject *)Py_None), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__213)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__213);
  __Pyx_GIVEREF(__pyx_tuple__213);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1424
 * 
 * 
 * def usingVIPSandShrink(f):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()
 */
  __pyx_tuple__214 = PyTuple_Pack(4, __pyx_n_s_f, __pyx_n_s_image, __pyx_n_s_mem_img, __pyx_n_s_imgnp); if (unlikely(!__pyx_tuple__214)) __PYX_ERR(0, 1424, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__214);
  __Pyx_GIVEREF(__pyx_tuple__214);
  __pyx_codeobj__215 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__214, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_usingVIPSandShrink, 1424, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__215)) __PYX_ERR(0, 1424, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1430
 *     return imgnp
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):             # <<<<<<<<<<<<<<
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)
 */
  __pyx_tuple__216 = PyTuple_Pack(3, __pyx_n_s_image, __pyx_n_s_color, __pyx_n_s_background); if (unlikely(!__pyx_tuple__216)) __PYX_ERR(0, 1430, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__216);
  __Pyx_GIVEREF(__pyx_tuple__216);
  __pyx_codeobj__217 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__216, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_pure_pil_alpha_to_color_v2, 1430, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__217)) __PYX_ERR(0, 1430, __pyx_L1_error)
  __pyx_tuple__218 = PyTuple_Pack(1, ((PyObject*)__pyx_tuple__5)); if (unlikely(!__pyx_tuple__218)) __PYX_ERR(0, 1430, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__218);
  __Pyx_GIVEREF(__pyx_tuple__218);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1435
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background
 * def rgba2rgb(x):             # <<<<<<<<<<<<<<
 *     x = x[::4]
 *     return x
 */
  __pyx_tuple__219 = PyTuple_Pack(1, __pyx_n_s_x); if (unlikely(!__pyx_tuple__219)) __PYX_ERR(0, 1435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__219);
  __Pyx_GIVEREF(__pyx_tuple__219);
  __pyx_codeobj__220 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__219, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_rgba2rgb, 1435, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__220)) __PYX_ERR(0, 1435, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1439
 *     return x
 * 
 * def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 * 
 *     face = Face(filename)
 */
  __pyx_tuple__221 = PyTuple_Pack(27, __pyx_n_s_filename, __pyx_n_s_size, __pyx_n_s_base, __pyx_n_s_texid, __pyx_n_s_face, __pyx_n_s_width, __pyx_n_s_height, __pyx_n_s_ascender, __pyx_n_s_descender, __pyx_n_s_c, __pyx_n_s_bitmap, __pyx_n_s_Z, __pyx_n_s_j, __pyx_n_s_i, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_font, __pyx_n_s_dx, __pyx_n_s_dy, __pyx_n_s_cords1, __pyx_n_s_texcords1, __pyx_n_s_cords2, __pyx_n_s_texcords2, __pyx_n_s_cords3, __pyx_n_s_texcords3, __pyx_n_s_cords4, __pyx_n_s_texcords4); if (unlikely(!__pyx_tuple__221)) __PYX_ERR(0, 1439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__221);
  __Pyx_GIVEREF(__pyx_tuple__221);
  __pyx_codeobj__222 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 27, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__221, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_create_font, 1439, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__222)) __PYX_ERR(0, 1439, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1496
 * 
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 */
  __pyx_tuple__223 = PyTuple_Pack(12, __pyx_n_s_Texture_unit, __pyx_n_s_New_Texture, __pyx_n_s_Offests, __pyx_n_s_size, __pyx_n_s_buffmanager, __pyx_n_s_image, __pyx_n_s_scaley, __pyx_n_s_scalex, __pyx_n_s_mem_img, __pyx_n_s_imgnp, __pyx_n_s_texture_data, __pyx_n_s_e); if (unlikely(!__pyx_tuple__223)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__223);
  __Pyx_GIVEREF(__pyx_tuple__223);
  __pyx_codeobj__224 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__223, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_load_texture_sub, 1496, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__224)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __pyx_tuple__225 = PyTuple_Pack(5, ((PyObject *)__pyx_int_0), ((PyObject *)Py_None), ((PyObject*)__pyx_tuple_), ((PyObject*)__pyx_tuple__19), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__225)) __PYX_ERR(0, 1496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__225);
  __Pyx_GIVEREF(__pyx_tuple__225);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1521
 * 
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):             # <<<<<<<<<<<<<<
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 */
  __pyx_tuple__226 = PyTuple_Pack(10, __pyx_n_s_texture_2, __pyx_n_s_nr, __pyx_n_s_repeat, __pyx_n_s_RAW_DATA, __pyx_n_s_image, __pyx_n_s_mem_img, __pyx_n_s_imgnp, __pyx_n_s_texture_data, __pyx_n_s_textr, __pyx_n_s_e); if (unlikely(!__pyx_tuple__226)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__226);
  __Pyx_GIVEREF(__pyx_tuple__226);
  __pyx_codeobj__227 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__226, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_load_texture, 1521, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__227)) __PYX_ERR(0, 1521, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1561
 * 
 * #__init__ file.
 * import OpenGL.GL.shaders             # <<<<<<<<<<<<<<
 * from OpenGL.GL import *
 * from OpenGL import GL
 */
  __pyx_tuple__228 = PyTuple_Pack(3, __pyx_n_s_OpenGL, __pyx_n_s_GL, __pyx_n_s_shaders); if (unlikely(!__pyx_tuple__228)) __PYX_ERR(0, 1561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__228);
  __Pyx_GIVEREF(__pyx_tuple__228);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1568
 * from array import array
 * class SHADER:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         pass
 * # Vbo v0.1 Vertex Buffer <Memory Buffer> <Vertex - Points>
 */
  __pyx_tuple__229 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__229)) __PYX_ERR(0, 1568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__229);
  __Pyx_GIVEREF(__pyx_tuple__229);
  __pyx_codeobj__230 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__229, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1568, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__230)) __PYX_ERR(0, 1568, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1574
 * #
 * #
 * def getsize(x): #Getsize of 1 type             # <<<<<<<<<<<<<<
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 */
  __pyx_tuple__231 = PyTuple_Pack(1, __pyx_n_s_x); if (unlikely(!__pyx_tuple__231)) __PYX_ERR(0, 1574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__231);
  __Pyx_GIVEREF(__pyx_tuple__231);
  __pyx_codeobj__232 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__231, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_getsize, 1574, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__232)) __PYX_ERR(0, 1574, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1576
 * def getsize(x): #Getsize of 1 type
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg             # <<<<<<<<<<<<<<
 *     if x != None:
 *         cf = ctypes.c_float(x)
 */
  __pyx_tuple__233 = PyTuple_Pack(2, __pyx_n_s_x, __pyx_n_s_cf); if (unlikely(!__pyx_tuple__233)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__233);
  __Pyx_GIVEREF(__pyx_tuple__233);
  __pyx_codeobj__234 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__233, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_cfloat, 1576, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__234)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __pyx_tuple__235 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__235)) __PYX_ERR(0, 1576, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__235);
  __Pyx_GIVEREF(__pyx_tuple__235);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1581
 *     else:cf=ctypes.c_float()
 *     return cf
 * def cfloat_array(list):             # <<<<<<<<<<<<<<
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 */
  __pyx_tuple__236 = PyTuple_Pack(1, __pyx_n_s_list); if (unlikely(!__pyx_tuple__236)) __PYX_ERR(0, 1581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__236);
  __Pyx_GIVEREF(__pyx_tuple__236);
  __pyx_codeobj__237 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__236, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_cfloat_array, 1581, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__237)) __PYX_ERR(0, 1581, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1584
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 *     def __init__():             # <<<<<<<<<<<<<<
 *         pass
 * class VBO: # Not Recommended just opengl :l
 */
  __pyx_codeobj__238 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1584, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__238)) __PYX_ERR(0, 1584, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1587
 *         pass
 * class VBO: # Not Recommended just opengl :l
 *     def __init__(self,shaderprogram=None):             # <<<<<<<<<<<<<<
 *         pass
 * class RENDER_VBO:
 */
  __pyx_tuple__239 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_shaderprogram); if (unlikely(!__pyx_tuple__239)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__239);
  __Pyx_GIVEREF(__pyx_tuple__239);
  __pyx_codeobj__240 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__239, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1587, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__240)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __pyx_tuple__241 = PyTuple_Pack(1, ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__241)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__241);
  __Pyx_GIVEREF(__pyx_tuple__241);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1590
 *         pass
 * class RENDER_VBO:
 *     def __init__(self,OBJECT):             # <<<<<<<<<<<<<<
 *         pass
 * class PRERENDER_VBO:
 */
  __pyx_tuple__242 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_OBJECT); if (unlikely(!__pyx_tuple__242)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__242);
  __Pyx_GIVEREF(__pyx_tuple__242);
  __pyx_codeobj__243 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__242, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1590, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__243)) __PYX_ERR(0, 1590, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1593
 *         pass
 * class PRERENDER_VBO:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         bufferid = int(id)
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 */
  __pyx_tuple__244 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_bufferid, __pyx_n_s_buffer1); if (unlikely(!__pyx_tuple__244)) __PYX_ERR(0, 1593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__244);
  __Pyx_GIVEREF(__pyx_tuple__244);
  __pyx_codeobj__245 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__244, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1593, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__245)) __PYX_ERR(0, 1593, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1597
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 * 
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s
 */
  __pyx_tuple__246 = PyTuple_Pack(9, __pyx_n_s_n, __pyx_n_s_s, __pyx_n_s_txs, __pyx_n_s_x1, __pyx_n_s_y1, __pyx_n_s_x2, __pyx_n_s_y2, __pyx_n_s_c1, __pyx_n_s_c2); if (unlikely(!__pyx_tuple__246)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__246);
  __Pyx_GIVEREF(__pyx_tuple__246);
  __pyx_codeobj__247 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__246, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_tex_arrayn_translate, 1597, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__247)) __PYX_ERR(0, 1597, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1607
 * 
 *     return _c1,_c2
 * def _cords_to_ratio(x,y,screenx,screeny):             # <<<<<<<<<<<<<<
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 */
  __pyx_tuple__248 = PyTuple_Pack(6, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_screenx, __pyx_n_s_screeny, __pyx_n_s_xr, __pyx_n_s_yr); if (unlikely(!__pyx_tuple__248)) __PYX_ERR(0, 1607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__248);
  __Pyx_GIVEREF(__pyx_tuple__248);
  __pyx_codeobj__249 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__248, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_cords_to_ratio, 1607, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__249)) __PYX_ERR(0, 1607, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1619
 *         yr = 1-yr
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):             # <<<<<<<<<<<<<<
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 */
  __pyx_tuple__250 = PyTuple_Pack(5, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_size, __pyx_n_s_xr, __pyx_n_s_yr); if (unlikely(!__pyx_tuple__250)) __PYX_ERR(0, 1619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__250);
  __Pyx_GIVEREF(__pyx_tuple__250);
  __pyx_codeobj__251 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__250, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_texture_cords_to_ratio, 1619, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__251)) __PYX_ERR(0, 1619, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1635
 * 
 * class DragoObject:
 *     def get_shader(self):             # <<<<<<<<<<<<<<
 *         return self.basicshader
 *     def __docs__(self):
 */
  __pyx_tuple__252 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__252)) __PYX_ERR(0, 1635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__252);
  __Pyx_GIVEREF(__pyx_tuple__252);
  __pyx_codeobj__253 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__252, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_shader, 1635, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__253)) __PYX_ERR(0, 1635, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1637
 *     def get_shader(self):
 *         return self.basicshader
 *     def __docs__(self):             # <<<<<<<<<<<<<<
 *         self.__doc__ = """
 *         Uniform/Layout/Matrix manipulation
 */
  __pyx_tuple__254 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__254)) __PYX_ERR(0, 1637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__254);
  __Pyx_GIVEREF(__pyx_tuple__254);
  __pyx_codeobj__255 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__254, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_docs, 1637, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__255)) __PYX_ERR(0, 1637, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1647
 * 
 * 
 *     def serialize_to_obj(self,unload=False,eventmanager=None):             # <<<<<<<<<<<<<<
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True
 */
  __pyx_tuple__256 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_unload, __pyx_n_s_eventmanager); if (unlikely(!__pyx_tuple__256)) __PYX_ERR(0, 1647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__256);
  __Pyx_GIVEREF(__pyx_tuple__256);
  __pyx_codeobj__257 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__256, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_serialize_to_obj, 1647, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__257)) __PYX_ERR(0, 1647, __pyx_L1_error)
  __pyx_tuple__258 = PyTuple_Pack(2, ((PyObject *)Py_False), ((PyObject *)Py_None)); if (unlikely(!__pyx_tuple__258)) __PYX_ERR(0, 1647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__258);
  __Pyx_GIVEREF(__pyx_tuple__258);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1653
 *         return self.serialization_current_object
 * 
 *     def _load_scene(self,serialized_obj=None,overlay=False):             # <<<<<<<<<<<<<<
 *         ''' If overlay is false unload previous scene '''
 *         pass
 */
  __pyx_tuple__259 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_serialized_obj, __pyx_n_s_overlay); if (unlikely(!__pyx_tuple__259)) __PYX_ERR(0, 1653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__259);
  __Pyx_GIVEREF(__pyx_tuple__259);
  __pyx_codeobj__260 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__259, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_load_scene, 1653, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__260)) __PYX_ERR(0, 1653, __pyx_L1_error)
  __pyx_tuple__261 = PyTuple_Pack(2, ((PyObject *)Py_None), ((PyObject *)Py_False)); if (unlikely(!__pyx_tuple__261)) __PYX_ERR(0, 1653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__261);
  __Pyx_GIVEREF(__pyx_tuple__261);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1657
 *         pass
 * 
 *     def _is_serialized(self):             # <<<<<<<<<<<<<<
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 */
  __pyx_tuple__262 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__262)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__262);
  __Pyx_GIVEREF(__pyx_tuple__262);
  __pyx_codeobj__263 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__262, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_is_serialized, 1657, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__263)) __PYX_ERR(0, 1657, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1659
 *     def _is_serialized(self):
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):             # <<<<<<<<<<<<<<
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 */
  __pyx_tuple__264 = PyTuple_Pack(11, __pyx_n_s_self, __pyx_n_s_BOX_START, __pyx_n_s_BOX_SIZE, __pyx_n_s_COLOR, __pyx_n_s_TEXTUREID, __pyx_n_s_cords, __pyx_n_s_TXC, __pyx_n_s_c, __pyx_n_s_i, __pyx_n_s_xr, __pyx_n_s_yr); if (unlikely(!__pyx_tuple__264)) __PYX_ERR(0, 1659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__264);
  __Pyx_GIVEREF(__pyx_tuple__264);
  __pyx_codeobj__265 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__264, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_create_quad, 1659, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__265)) __PYX_ERR(0, 1659, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1691
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1
 *     def get_objectindexes(self):             # <<<<<<<<<<<<<<
 *         return self.object_indexes
 *     def move(self,x,y,object):
 */
  __pyx_tuple__266 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__266)) __PYX_ERR(0, 1691, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__266);
  __Pyx_GIVEREF(__pyx_tuple__266);
  __pyx_codeobj__267 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__266, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_objectindexes, 1691, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__267)) __PYX_ERR(0, 1691, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1693
 *     def get_objectindexes(self):
 *         return self.object_indexes
 *     def move(self,x,y,object):             # <<<<<<<<<<<<<<
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 */
  __pyx_tuple__268 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_object, __pyx_n_s_cords); if (unlikely(!__pyx_tuple__268)) __PYX_ERR(0, 1693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__268);
  __Pyx_GIVEREF(__pyx_tuple__268);
  __pyx_codeobj__269 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__268, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_move, 1693, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__269)) __PYX_ERR(0, 1693, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1696
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         self.textures.append(txtid)
 */
  __pyx_tuple__270 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_txtid); if (unlikely(!__pyx_tuple__270)) __PYX_ERR(0, 1696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__270);
  __Pyx_GIVEREF(__pyx_tuple__270);
  __pyx_codeobj__271 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__270, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_use_texture, 1696, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__271)) __PYX_ERR(0, 1696, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1699
 *         self.textured = True
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):             # <<<<<<<<<<<<<<
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)
 */
  __pyx_tuple__272 = PyTuple_Pack(20, __pyx_n_s_self, __pyx_n_s_cords, __pyx_n_s_font, __pyx_n_s_letter, __pyx_n_s_color, __pyx_n_s_texid, __pyx_n_s_ct, __pyx_n_s_width, __pyx_n_s_height, __pyx_n_s_t1, __pyx_n_s_c1_2, __pyx_n_s_t2, __pyx_n_s_c2_2, __pyx_n_s_t3, __pyx_n_s_c3, __pyx_n_s_t4, __pyx_n_s_c4, __pyx_n_s_tr1, __pyx_n_s_tr2, __pyx_n_s_z); if (unlikely(!__pyx_tuple__272)) __PYX_ERR(0, 1699, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__272);
  __Pyx_GIVEREF(__pyx_tuple__272);
  __pyx_codeobj__273 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__272, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_create_letter, 1699, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__273)) __PYX_ERR(0, 1699, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1745
 *             self.textures.append(texid)
 *         return self.object_count-1
 *     def draw_text(self):             # <<<<<<<<<<<<<<
 *         pass
 *     def move_up(self,object):
 */
  __pyx_tuple__274 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__274)) __PYX_ERR(0, 1745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__274);
  __Pyx_GIVEREF(__pyx_tuple__274);
  __pyx_codeobj__275 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__274, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw_text, 1745, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__275)) __PYX_ERR(0, 1745, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1747
 *     def draw_text(self):
 *         pass
 *     def move_up(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */
  __pyx_tuple__276 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_real_value, __pyx_n_s_real_index, __pyx_n_s_i, __pyx_n_s_x, __pyx_n_s_idx, __pyx_n_s_nd, __pyx_n_s_sav_vert); if (unlikely(!__pyx_tuple__276)) __PYX_ERR(0, 1747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__276);
  __Pyx_GIVEREF(__pyx_tuple__276);
  __pyx_codeobj__277 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__276, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_move_up, 1747, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__277)) __PYX_ERR(0, 1747, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1762
 *         x+=1
 *         return object
 *     def move_down(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */
  __pyx_tuple__278 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_real_value, __pyx_n_s_real_index, __pyx_n_s_i, __pyx_n_s_x, __pyx_n_s_idx, __pyx_n_s_nd, __pyx_n_s_sav_vert); if (unlikely(!__pyx_tuple__278)) __PYX_ERR(0, 1762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__278);
  __Pyx_GIVEREF(__pyx_tuple__278);
  __pyx_codeobj__279 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__278, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_move_down, 1762, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__279)) __PYX_ERR(0, 1762, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1780
 * 
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 */
  __pyx_tuple__280 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__280)) __PYX_ERR(0, 1780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__280);
  __Pyx_GIVEREF(__pyx_tuple__280);
  __pyx_codeobj__281 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__280, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_vertices, 1780, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__281)) __PYX_ERR(0, 1780, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1782
 *     def get_vertices(self):
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):             # <<<<<<<<<<<<<<
 *         if alpha:
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 */
  __pyx_tuple__282 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_Texture_unit, __pyx_n_s_Imagenumpy, __pyx_n_s_width, __pyx_n_s_height, __pyx_n_s_texture_data, __pyx_n_s_alpha); if (unlikely(!__pyx_tuple__282)) __PYX_ERR(0, 1782, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__282);
  __Pyx_GIVEREF(__pyx_tuple__282);
  __pyx_codeobj__283 = (PyObject*)__Pyx_PyCode_New(7, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__282, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_add_textureupdate, 1782, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__283)) __PYX_ERR(0, 1782, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1787
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 *     def update(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 */
  __pyx_tuple__284 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_updates, __pyx_n_s_il); if (unlikely(!__pyx_tuple__284)) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__284);
  __Pyx_GIVEREF(__pyx_tuple__284);
  __pyx_codeobj__285 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__284, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_update, 1787, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__285)) __PYX_ERR(0, 1787, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1803
 *         self.update_list = []
 *         self.total_updates = updates
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 */
  __pyx_tuple__286 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__286)) __PYX_ERR(0, 1803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__286);
  __Pyx_GIVEREF(__pyx_tuple__286);
  __pyx_codeobj__287 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__286, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_clear, 1803, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__287)) __PYX_ERR(0, 1803, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1807
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_pos(self,object):             # <<<<<<<<<<<<<<
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
  __pyx_tuple__288 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_nd, __pyx_n_s_x1, __pyx_n_s_x2, __pyx_n_s_y1, __pyx_n_s_y2); if (unlikely(!__pyx_tuple__288)) __PYX_ERR(0, 1807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__288);
  __Pyx_GIVEREF(__pyx_tuple__288);
  __pyx_codeobj__289 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__288, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_pos, 1807, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__289)) __PYX_ERR(0, 1807, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1815
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]
 *     def get_color(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
  __pyx_tuple__290 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_nd, __pyx_n_s_r_val, __pyx_n_s_g_val, __pyx_n_s_b_val, __pyx_n_s_a_val); if (unlikely(!__pyx_tuple__290)) __PYX_ERR(0, 1815, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__290);
  __Pyx_GIVEREF(__pyx_tuple__290);
  __pyx_codeobj__291 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__290, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_color, 1815, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__291)) __PYX_ERR(0, 1815, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1823
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val
 *     def get_texid(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
  __pyx_tuple__292 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_nd, __pyx_n_s_textid); if (unlikely(!__pyx_tuple__292)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__292);
  __Pyx_GIVEREF(__pyx_tuple__292);
  __pyx_codeobj__293 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__292, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_texid, 1823, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__293)) __PYX_ERR(0, 1823, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1829
 *         return textid
 * 
 *     def edit_letter(self,object,font,letter):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */
  __pyx_tuple__294 = PyTuple_Pack(14, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_font, __pyx_n_s_letter, __pyx_n_s_ct, __pyx_n_s_t1, __pyx_n_s_c1_2, __pyx_n_s_t2, __pyx_n_s_c2_2, __pyx_n_s_t3, __pyx_n_s_c3, __pyx_n_s_t4, __pyx_n_s_c4, __pyx_n_s_tlist); if (unlikely(!__pyx_tuple__294)) __PYX_ERR(0, 1829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__294);
  __Pyx_GIVEREF(__pyx_tuple__294);
  __pyx_codeobj__295 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 14, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__294, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_edit_letter, 1829, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__295)) __PYX_ERR(0, 1829, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1839
 * 
 *         self.edit_tpos(object, tlist)
 *     def edit_tpos(self,object=None,newtpos=[]):             # <<<<<<<<<<<<<<
 *         nd = 0+((self.object_indexes[object]*4)*10)
 * 
 */
  __pyx_tuple__296 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_newtpos, __pyx_n_s_nd, __pyx_n_s_ou); if (unlikely(!__pyx_tuple__296)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__296);
  __Pyx_GIVEREF(__pyx_tuple__296);
  __pyx_codeobj__297 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__296, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_edit_tpos, 1839, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__297)) __PYX_ERR(0, 1839, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1855
 * 
 *         self.update_list.extend(ou)
 *     def edit_color(self,object=None,newcolor=[]):             # <<<<<<<<<<<<<<
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 */
  __pyx_tuple__298 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_newcolor, __pyx_n_s_nd, __pyx_n_s_ou); if (unlikely(!__pyx_tuple__298)) __PYX_ERR(0, 1855, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__298);
  __Pyx_GIVEREF(__pyx_tuple__298);
  __pyx_codeobj__299 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__298, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_edit_color, 1855, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__299)) __PYX_ERR(0, 1855, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1876
 * 
 *         self.update_list.extend(ou)
 *     def delete_obj(self):             # <<<<<<<<<<<<<<
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 */
  __pyx_tuple__300 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__300)) __PYX_ERR(0, 1876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__300);
  __Pyx_GIVEREF(__pyx_tuple__300);
  __pyx_codeobj__301 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__300, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_delete_obj, 1876, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__301)) __PYX_ERR(0, 1876, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1878
 *     def delete_obj(self):
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):             # <<<<<<<<<<<<<<
 * 
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
  __pyx_tuple__302 = PyTuple_Pack(10, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_newpos, __pyx_n_s_size, __pyx_n_s_letter, __pyx_n_s_nd, __pyx_n_s_curpos, __pyx_n_s_sizey, __pyx_n_s_sizex, __pyx_n_s_ou); if (unlikely(!__pyx_tuple__302)) __PYX_ERR(0, 1878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__302);
  __Pyx_GIVEREF(__pyx_tuple__302);
  __pyx_codeobj__303 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 10, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__302, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_edit_pos, 1878, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__303)) __PYX_ERR(0, 1878, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1914
 * 
 *         self.update_list.extend(ou)
 *     def edit_texture(self,object=None,txtid=0):             # <<<<<<<<<<<<<<
 * 
 *         if txtid not in self.textures:
 */
  __pyx_tuple__304 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_object, __pyx_n_s_txtid, __pyx_n_s_nd, __pyx_n_s_ou); if (unlikely(!__pyx_tuple__304)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__304);
  __Pyx_GIVEREF(__pyx_tuple__304);
  __pyx_codeobj__305 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__304, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_edit_texture, 1914, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__305)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __pyx_tuple__306 = PyTuple_Pack(2, ((PyObject *)Py_None), ((PyObject *)__pyx_int_0)); if (unlikely(!__pyx_tuple__306)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__306);
  __Pyx_GIVEREF(__pyx_tuple__306);

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1936
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def bind_buffer(self):
 */
  __pyx_tuple__307 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__307)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__307);
  __Pyx_GIVEREF(__pyx_tuple__307);
  __pyx_codeobj__308 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__307, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_get_buffer, 1936, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__308)) __PYX_ERR(0, 1936, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1938
 *     def get_buffer(self):
 *         return self.vertices
 *     def bind_buffer(self):             # <<<<<<<<<<<<<<
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):
 */
  __pyx_tuple__309 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__309)) __PYX_ERR(0, 1938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__309);
  __Pyx_GIVEREF(__pyx_tuple__309);
  __pyx_codeobj__310 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__309, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_bind_buffer, 1938, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__310)) __PYX_ERR(0, 1938, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1940
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  __pyx_tuple__311 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_vbo); if (unlikely(!__pyx_tuple__311)) __PYX_ERR(0, 1940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__311);
  __Pyx_GIVEREF(__pyx_tuple__311);
  __pyx_codeobj__312 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__311, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_switch, 1940, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__312)) __PYX_ERR(0, 1940, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1952
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):             # <<<<<<<<<<<<<<
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)
 */
  __pyx_tuple__313 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__313)) __PYX_ERR(0, 1952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__313);
  __Pyx_GIVEREF(__pyx_tuple__313);
  __pyx_codeobj__314 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__313, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_add_buffer, 1952, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__314)) __PYX_ERR(0, 1952, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1957
 *         self.vb_count+=1
 * 
 *     def compile(self):             # <<<<<<<<<<<<<<
 *         for vbo in self.vbos:
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 */
  __pyx_tuple__315 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_vbo); if (unlikely(!__pyx_tuple__315)) __PYX_ERR(0, 1957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__315);
  __Pyx_GIVEREF(__pyx_tuple__315);
  __pyx_codeobj__316 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__315, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_compile, 1957, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__316)) __PYX_ERR(0, 1957, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1972
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *     def queue_check():             # <<<<<<<<<<<<<<
 *         """check and execute queue """
 *     def queue():
 */
  __pyx_codeobj__317 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_queue_check, 1972, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__317)) __PYX_ERR(0, 1972, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1974
 *     def queue_check():
 *         """check and execute queue """
 *     def queue():             # <<<<<<<<<<<<<<
 *         """
 *         (Input list ?, +delay)
 */
  __pyx_codeobj__318 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_queue, 1974, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__318)) __PYX_ERR(0, 1974, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1995
 * 
 *         """
 *     def __init__(self,screenx,screeny):             # <<<<<<<<<<<<<<
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx
 */
  __pyx_tuple__319 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_screenx, __pyx_n_s_screeny, __pyx_n_s_vxshader, __pyx_n_s_fgshader, __pyx_n_s_VERTEX_SHADER, __pyx_n_s_FRAGMENT_SHADER, __pyx_n_s_i); if (unlikely(!__pyx_tuple__319)) __PYX_ERR(0, 1995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__319);
  __Pyx_GIVEREF(__pyx_tuple__319);
  __pyx_codeobj__320 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__319, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_init, 1995, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__320)) __PYX_ERR(0, 1995, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2094
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)
 *     def set_mode(self,mode):             # <<<<<<<<<<<<<<
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 */
  __pyx_tuple__321 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_mode); if (unlikely(!__pyx_tuple__321)) __PYX_ERR(0, 2094, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__321);
  __Pyx_GIVEREF(__pyx_tuple__321);
  __pyx_codeobj__322 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__321, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_set_mode, 2094, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__322)) __PYX_ERR(0, 2094, __pyx_L1_error)

  /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2098
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 * 
 *     def draw(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:
 */
  __pyx_tuple__323 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__323)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__323);
  __Pyx_GIVEREF(__pyx_tuple__323);
  __pyx_codeobj__324 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__323, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Drago2Dengine_py, __pyx_n_s_draw, 2098, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__324)) __PYX_ERR(0, 2098, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  #if CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_InitString(__pyx_string_tab[0], &__pyx_n_s_AssertionError) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[1], &__pyx_n_s_B1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[2], &__pyx_kp_s_B1_Motion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[3], &__pyx_n_s_B2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[4], &__pyx_kp_s_B2_Motion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[5], &__pyx_n_s_B3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[6], &__pyx_kp_s_B3_Motion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[7], &__pyx_n_s_BOOL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[8], &__pyx_n_s_BOX_SIZE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[9], &__pyx_n_s_BOX_START) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[10], &__pyx_n_s_BP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[11], &__pyx_n_s_BR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[12], &__pyx_kp_s_Before) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[13], &__pyx_kp_s_ButtonRelease_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[14], &__pyx_kp_s_Button_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[15], &__pyx_kp_s_Button_1_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[16], &__pyx_kp_s_Button_1_Translate_Button_2_Rota) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[17], &__pyx_kp_s_Button_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[18], &__pyx_kp_s_Button_2_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[19], &__pyx_kp_s_Button_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[20], &__pyx_kp_s_Button_3_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[21], &__pyx_n_s_CFUNCTYPE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[22], &__pyx_n_s_COLOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[23], &__pyx_n_s_ChoosePixelFormat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[24], &__pyx_n_s_Colormap) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[25], &__pyx_kp_s_Common_code_for_windows_x11) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[26], &__pyx_kp_s_Configure) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[27], &__pyx_n_s_Cords) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[28], &__pyx_kp_s_Create) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[29], &__pyx_n_s_D2DEvents) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[30], &__pyx_n_s_D2DEvents___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[31], &__pyx_n_s_D2DEvents__pas) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[32], &__pyx_n_s_D2DEvents_add_event) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[33], &__pyx_n_s_D2DEvents_check) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[34], &__pyx_n_s_D2DEvents_checkkeypress) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[35], &__pyx_n_s_D2DEvents_checklclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[36], &__pyx_n_s_D2DEvents_checkmclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[37], &__pyx_n_s_D2DEvents_checkmotion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[38], &__pyx_n_s_D2DEvents_checkrclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[39], &__pyx_n_s_D2DEvents_clear_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[40], &__pyx_n_s_D2DRENDER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[41], &__pyx_n_s_D2DRENDER_render) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[42], &__pyx_n_s_D2DRENDER_render_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[43], &__pyx_n_s_D2DRENDER_render_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[44], &__pyx_n_s_D2DRENDER_render_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[45], &__pyx_n_s_D2DRENDER_render_texture_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[46], &__pyx_n_s_D2Dprerender) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[47], &__pyx_n_s_D2Dprerender___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[48], &__pyx_n_s_D2Dprerender_create_font) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[49], &__pyx_n_s_D2Dprerender_prerender_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[50], &__pyx_n_s_D2Dprerender_prerender_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[51], &__pyx_n_s_D2Dprerender_prerender_texturequ) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[52], &__pyx_n_s_D2Draw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[53], &__pyx_n_s_D2Draw___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[54], &__pyx_n_s_D2Draw__cords_to_ratio) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[55], &__pyx_n_s_D2Draw__resize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[56], &__pyx_n_s_D2Draw__tex_arrayn_translate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[57], &__pyx_n_s_D2Draw__texture_cords_to_ratio) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[58], &__pyx_n_s_D2Draw_add_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[59], &__pyx_n_s_D2Draw_del_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[60], &__pyx_n_s_D2Draw_draw_line) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[61], &__pyx_n_s_D2Draw_draw_lines) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[62], &__pyx_n_s_D2Draw_draw_point) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[63], &__pyx_n_s_D2Draw_draw_points) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[64], &__pyx_n_s_D2Draw_draw_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[65], &__pyx_n_s_D2Draw_draw_quad_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[66], &__pyx_n_s_D2Draw_draw_quad_texture_array) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[67], &__pyx_n_s_D2Draw_draw_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[68], &__pyx_n_s_D2Draw_resize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[69], &__pyx_n_s_D2Draw_update_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[70], &__pyx_n_s_DRAWMODELOC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[71], &__pyx_n_s_DRAW_MODE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[72], &__pyx_kp_s_D_vips_dev_8_9_bin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[73], &__pyx_n_s_Dialog) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[74], &__pyx_n_s_Display) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[75], &__pyx_kp_s_Do_something_to_create_this_obje) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[76], &__pyx_n_s_Done) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[77], &__pyx_kp_s_Done_making_a_first_context) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[78], &__pyx_n_s_Drago2Dengine___versions___win32) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[79], &__pyx_kp_s_Drago2Dengine_py) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[80], &__pyx_n_s_DragoObject) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[81], &__pyx_n_s_DragoObject___docs) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[82], &__pyx_n_s_DragoObject___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[83], &__pyx_n_s_DragoObject__is_serialized) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[84], &__pyx_n_s_DragoObject__load_scene) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[85], &__pyx_n_s_DragoObject_add_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[86], &__pyx_n_s_DragoObject_add_textureupdate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[87], &__pyx_n_s_DragoObject_bind_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[88], &__pyx_n_s_DragoObject_clear) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[89], &__pyx_n_s_DragoObject_compile) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[90], &__pyx_n_s_DragoObject_create_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[91], &__pyx_n_s_DragoObject_create_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[92], &__pyx_n_s_DragoObject_delete_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[93], &__pyx_n_s_DragoObject_draw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[94], &__pyx_n_s_DragoObject_draw_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[95], &__pyx_n_s_DragoObject_edit_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[96], &__pyx_n_s_DragoObject_edit_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[97], &__pyx_n_s_DragoObject_edit_pos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[98], &__pyx_n_s_DragoObject_edit_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[99], &__pyx_n_s_DragoObject_edit_tpos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[100], &__pyx_n_s_DragoObject_get_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[101], &__pyx_n_s_DragoObject_get_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[102], &__pyx_n_s_DragoObject_get_objectindexes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[103], &__pyx_n_s_DragoObject_get_pos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[104], &__pyx_n_s_DragoObject_get_shader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[105], &__pyx_n_s_DragoObject_get_texid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[106], &__pyx_n_s_DragoObject_get_vertices) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[107], &__pyx_n_s_DragoObject_move) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[108], &__pyx_n_s_DragoObject_move_down) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[109], &__pyx_n_s_DragoObject_move_up) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[110], &__pyx_n_s_DragoObject_queue) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[111], &__pyx_n_s_DragoObject_queue_check) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[112], &__pyx_n_s_DragoObject_serialize_to_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[113], &__pyx_n_s_DragoObject_set_mode) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[114], &__pyx_n_s_DragoObject_switch) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[115], &__pyx_n_s_DragoObject_update) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[116], &__pyx_n_s_DragoObject_use_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[117], &__pyx_n_s_EventDelay) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[118], &__pyx_n_s_EventOff) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[119], &__pyx_n_s_EventOn) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[120], &__pyx_n_s_EventType) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[121], &__pyx_kp_s_Expose) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[122], &__pyx_kp_s_Extension_list) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[123], &__pyx_n_s_FRAGMENT_SHADER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[124], &__pyx_n_s_FT_LOAD_FORCE_AUTOHINT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[125], &__pyx_n_s_FT_LOAD_RENDER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[126], &__pyx_n_s_Face) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[127], &__pyx_n_s_Frame) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[128], &__pyx_n_s_GL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[129], &__pyx_n_s_GLU) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[130], &__pyx_n_s_GLUT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[131], &__pyx_n_s_GLX) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[132], &__pyx_n_s_GLX_BLUE_SIZE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[133], &__pyx_n_s_GLX_DEPTH_SIZE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[134], &__pyx_n_s_GLX_DOUBLEBUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[135], &__pyx_n_s_GLX_DRAWABLE_TYPE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[136], &__pyx_n_s_GLX_GREEN_SIZE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[137], &__pyx_n_s_GLX_RED_SIZE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[138], &__pyx_n_s_GLX_RENDER_TYPE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[139], &__pyx_n_s_GLX_RGBA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[140], &__pyx_n_s_GLX_RGBA_BIT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[141], &__pyx_n_s_GLX_RGBA_TYPE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[142], &__pyx_n_s_GLX_WINDOW_BIT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[143], &__pyx_n_s_GLX_X_RENDERABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[144], &__pyx_kp_s_GLX_version_d_d) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[145], &__pyx_n_s_GL_ALPHA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[146], &__pyx_n_s_GL_ARRAY_BUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[147], &__pyx_kp_s_GL_CONTEXT_COMPATIBILITY_PROFIL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[148], &__pyx_n_s_GL_CONTEXT_COMPATIBILITY_PROFILE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[149], &__pyx_kp_s_GL_CONTEXT_CORE_PROFILE_BIT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[150], &__pyx_n_s_GL_CONTEXT_CORE_PROFILE_BIT_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[151], &__pyx_n_s_GL_CONTEXT_PROFILE_MASK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[152], &__pyx_n_s_GL_DEPTH_TEST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[153], &__pyx_n_s_GL_DYNAMIC_DRAW) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[154], &__pyx_n_s_GL_EXTENSIONS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[155], &__pyx_n_s_GL_FALSE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[156], &__pyx_n_s_GL_FLOAT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[157], &__pyx_n_s_GL_FRAGMENT_SHADER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[158], &__pyx_n_s_GL_LESS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[159], &__pyx_n_s_GL_LIGHT0) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[160], &__pyx_n_s_GL_LIGHTING) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[161], &__pyx_n_s_GL_LINEAR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[162], &__pyx_kp_s_GL_MAJOR_VERSION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[163], &__pyx_n_s_GL_MAJOR_VERSION_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[164], &__pyx_n_s_GL_MATRIX_MODE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[165], &__pyx_kp_s_GL_MINOR_VERSION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[166], &__pyx_n_s_GL_MINOR_VERSION_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[167], &__pyx_n_s_GL_MODELVIEW) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[168], &__pyx_n_s_GL_NEAREST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[169], &__pyx_n_s_GL_POINTS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[170], &__pyx_n_s_GL_POSITION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[171], &__pyx_n_s_GL_PROJECTION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[172], &__pyx_n_s_GL_QUADS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[173], &__pyx_kp_s_GL_RENDERER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[174], &__pyx_n_s_GL_RENDERER_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[175], &__pyx_n_s_GL_REPEAT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[176], &__pyx_n_s_GL_RGB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[177], &__pyx_n_s_GL_RGBA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[178], &__pyx_kp_s_GL_SHADING_LANGUAGE_VERSION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[179], &__pyx_n_s_GL_SHADING_LANGUAGE_VERSION_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[180], &__pyx_n_s_GL_TEXTURE_2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[181], &__pyx_n_s_GL_TEXTURE_MAG_FILTER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[182], &__pyx_n_s_GL_TEXTURE_MIN_FILTER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[183], &__pyx_n_s_GL_TEXTURE_WRAP_S) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[184], &__pyx_n_s_GL_TEXTURE_WRAP_T) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[185], &__pyx_n_s_GL_TRUE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[186], &__pyx_n_s_GL_UNPACK_ALIGNMENT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[187], &__pyx_n_s_GL_UNSIGNED_BYTE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[188], &__pyx_kp_s_GL_VENDOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[189], &__pyx_n_s_GL_VENDOR_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[190], &__pyx_kp_s_GL_VERSION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[191], &__pyx_n_s_GL_VERSION_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[192], &__pyx_n_s_GL_VERTEX_ARRAY) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[193], &__pyx_n_s_GL_VERTEX_SHADER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[194], &__pyx_n_s_GLint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[195], &__pyx_n_s_GetDC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[196], &__pyx_kp_s_Got_a_matching_visual_index_d_d) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[197], &__pyx_n_s_HDC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[198], &__pyx_n_s_Hover) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[199], &__pyx_n_s_Image) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[200], &__pyx_n_s_Imagenumpy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[201], &__pyx_kp_s_Is_Direct) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[202], &__pyx_n_s_KeyPress) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[203], &__pyx_kp_s_KeyPress_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[204], &__pyx_n_s_LeftClick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[205], &__pyx_n_s_LoadLibrary) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[206], &__pyx_n_s_MN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[207], &__pyx_kp_s_Map) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[208], &__pyx_n_s_MiddleClick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[209], &__pyx_n_s_Motion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[210], &__pyx_kp_s_Motion_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[211], &__pyx_n_s_MouseHover) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[212], &__pyx_n_s_MouseLC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[213], &__pyx_n_s_MouseMC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[214], &__pyx_n_s_MouseRC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[215], &__pyx_n_s_NEWLINE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[216], &__pyx_n_s_NOENABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[217], &__pyx_n_s_New_Texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[218], &__pyx_n_s_NotImplementedError) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[219], &__pyx_kp_s_Number_of_FBconfigs) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[220], &__pyx_kp_s_Number_of_extensions) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[221], &__pyx_n_s_OBJECT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[222], &__pyx_n_s_Offests) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[223], &__pyx_n_s_Ok) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[224], &__pyx_kp_s_Old_context_errors_arose) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[225], &__pyx_n_s_OnKey) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[226], &__pyx_n_s_OpenGL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[227], &__pyx_n_s_OpenGLFrame) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[228], &__pyx_n_s_OpenGLFrame__context) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[229], &__pyx_n_s_OpenGLFrame__window) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[230], &__pyx_n_s_OpenGLFrame_tkCreateContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[231], &__pyx_n_s_OpenGLFrame_tkMakeCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[232], &__pyx_n_s_OpenGLFrame_tkSwapBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[233], &__pyx_n_s_OpenGL_GL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[234], &__pyx_n_s_OpenGL_GL_shaders) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[235], &__pyx_n_s_OpenGL_WGL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[236], &__pyx_n_s_OpenGL_raw_GLX__types) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[237], &__pyx_n_s_OpenGL_raw__GLX) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[238], &__pyx_n_s_Opengl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[239], &__pyx_n_s_Opengl_StartRotate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[240], &__pyx_n_s_Opengl___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[241], &__pyx_n_s_Opengl_activate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[242], &__pyx_n_s_Opengl_basic_lighting) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[243], &__pyx_n_s_Opengl_do_AutoSpin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[244], &__pyx_n_s_Opengl_freecalc) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[245], &__pyx_n_s_Opengl_help) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[246], &__pyx_n_s_Opengl_initgl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[247], &__pyx_n_s_Opengl_redraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[248], &__pyx_n_s_Opengl_reset) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[249], &__pyx_n_s_Opengl_set_background) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[250], &__pyx_n_s_Opengl_set_centerpoint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[251], &__pyx_n_s_Opengl_set_eyepoint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[252], &__pyx_n_s_Opengl_tkAutoSpin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[253], &__pyx_n_s_Opengl_tkExpose) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[254], &__pyx_n_s_Opengl_tkHandlePick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[255], &__pyx_n_s_Opengl_tkPrint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[256], &__pyx_n_s_Opengl_tkRecordMouse) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[257], &__pyx_n_s_Opengl_tkRedraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[258], &__pyx_n_s_Opengl_tkRotate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[259], &__pyx_n_s_Opengl_tkScale) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[260], &__pyx_n_s_Opengl_tkTranslate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[261], &__pyx_n_s_PATH) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[262], &__pyx_n_s_PFD_DOUBLEBUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[263], &__pyx_n_s_PFD_DRAW_TO_WINDOW) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[264], &__pyx_n_s_PFD_MAIN_PLANE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[265], &__pyx_n_s_PFD_SUPPORT_OPENGL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[266], &__pyx_n_s_PFD_TYPE_RGBA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[267], &__pyx_n_s_PIL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[268], &__pyx_n_s_PIXELFORMATDESCRIPTOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[269], &__pyx_n_s_POINTER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[270], &__pyx_n_s_PRERENDER_VBO) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[271], &__pyx_n_s_PRERENDER_VBO___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[272], &__pyx_n_s_RAW_DATA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[273], &__pyx_n_s_RENDER_VBO) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[274], &__pyx_n_s_RENDER_VBO___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[275], &__pyx_n_s_RGB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[276], &__pyx_n_s_RawOpengl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[277], &__pyx_n_s_RawOpengl___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[278], &__pyx_n_s_RawOpengl_tkRedraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[279], &__pyx_n_s_RightClick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[280], &__pyx_n_s_SHADER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[281], &__pyx_n_s_SHADER___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[282], &__pyx_kp_s_Screen_is) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[283], &__pyx_n_s_SetPixelFormat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[284], &__pyx_kp_s_Shift_Button_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[285], &__pyx_n_s_Spacing_add) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[286], &__pyx_n_s_StartRotate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[287], &__pyx_n_s_SwapBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[288], &__pyx_n_s_TAB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[289], &__pyx_n_s_TEXTUREID) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[290], &__pyx_n_s_TEXTURE_DISPLAY_METHOD) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[291], &__pyx_n_s_TXC) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[292], &__pyx_n_s_TXTARRAY) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[293], &__pyx_n_s_Texture_unit) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[294], &__pyx_n_s_Tkinter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[295], &__pyx_kp_s_Tkinter_bindings_for_an_Opengl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[296], &__pyx_kp_s_Uniform_Layout_Matrix_manipulat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[297], &__pyx_n_s_VBO) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[298], &__pyx_n_s_VBO_OBJ) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[299], &__pyx_n_s_VBO_OBJ___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[300], &__pyx_n_s_VBO___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[301], &__pyx_n_s_VERTEX_SHADER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[302], &__pyx_kp_s_Viewer_help) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[303], &__pyx_kp_s_Widget_without_any_sophisticated) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[304], &__pyx_n_s_WinDLL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[305], &__pyx_n_s_X11) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[306], &__pyx_n_s_XDefaultScreen) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[307], &__pyx_n_s_XOpenDisplay) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[308], &__pyx_n_s_Z) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[309], &__pyx_kp_s__10) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[310], &__pyx_kp_s__13) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[311], &__pyx_kp_s__207) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[312], &__pyx_kp_s__8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[313], &__pyx_n_s__80) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[314], &__pyx_kp_s__9) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[315], &__pyx_n_s_a) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[316], &__pyx_n_s_a_val) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[317], &__pyx_n_s_abcdefgh) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[318], &__pyx_n_s_access) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[319], &__pyx_n_s_activate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[320], &__pyx_n_s_add_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[321], &__pyx_n_s_add_boldnext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[322], &__pyx_n_s_add_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[323], &__pyx_n_s_add_event) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[324], &__pyx_n_s_add_textureupdate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[325], &__pyx_n_s_after) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[326], &__pyx_n_s_after_cancel) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[327], &__pyx_n_s_all) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[328], &__pyx_n_s_alpha) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[329], &__pyx_n_s_animate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[330], &__pyx_n_s_append) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[331], &__pyx_n_s_args) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[332], &__pyx_n_s_argtypes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[333], &__pyx_n_s_array) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[334], &__pyx_n_s_ascender) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[335], &__pyx_n_s_att) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[336], &__pyx_n_s_autospin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[337], &__pyx_n_s_autospin_allowed) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[338], &__pyx_n_s_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[339], &__pyx_kp_s_b_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[340], &__pyx_n_s_b_back) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[341], &__pyx_n_s_b_val) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[342], &__pyx_n_s_background) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[343], &__pyx_n_s_bands) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[344], &__pyx_n_s_base) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[345], &__pyx_n_s_baseOpenGLFrame) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[346], &__pyx_n_s_baseOpenGLFrame___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[347], &__pyx_n_s_baseOpenGLFrame__display) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[348], &__pyx_n_s_baseOpenGLFrame_check_all_b1_eve) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[349], &__pyx_n_s_baseOpenGLFrame_check_all_bpress) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[350], &__pyx_n_s_baseOpenGLFrame_check_all_brelas) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[351], &__pyx_n_s_baseOpenGLFrame_check_event_butt) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[352], &__pyx_n_s_baseOpenGLFrame_create_event) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[353], &__pyx_n_s_baseOpenGLFrame_free_calc_update) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[354], &__pyx_n_s_baseOpenGLFrame_freecalc) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[355], &__pyx_n_s_baseOpenGLFrame_initgl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[356], &__pyx_n_s_baseOpenGLFrame_printContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[357], &__pyx_n_s_baseOpenGLFrame_redraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[358], &__pyx_n_s_baseOpenGLFrame_tkCreateContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[359], &__pyx_n_s_baseOpenGLFrame_tkExpose) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[360], &__pyx_n_s_baseOpenGLFrame_tkMakeCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[361], &__pyx_n_s_baseOpenGLFrame_tkMap) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[362], &__pyx_n_s_baseOpenGLFrame_tkResize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[363], &__pyx_n_s_baseOpenGLFrame_tkSwapBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[364], &__pyx_n_s_baseOpenGLFrame_wait) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[365], &__pyx_n_s_basic_lighting) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[366], &__pyx_n_s_basicshader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[367], &__pyx_n_s_best) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[368], &__pyx_n_s_bg) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[369], &__pyx_n_s_bind) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[370], &__pyx_n_s_bind_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[371], &__pyx_n_s_bitmap) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[372], &__pyx_n_s_bitmap_left) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[373], &__pyx_n_s_bitmap_top) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[374], &__pyx_n_s_bresenham) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[375], &__pyx_n_s_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[376], &__pyx_n_s_buffer1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[377], &__pyx_n_s_bufferid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[378], &__pyx_n_s_buffmanager) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[379], &__pyx_n_s_c) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[380], &__pyx_n_s_c1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[381], &__pyx_n_s_c1_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[382], &__pyx_n_s_c2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[383], &__pyx_n_s_c2_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[384], &__pyx_n_s_c3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[385], &__pyx_n_s_c4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[386], &__pyx_n_s_cColorBits) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[387], &__pyx_n_s_cDepthBits) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[388], &__pyx_n_s_c_bool) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[389], &__pyx_n_s_c_char_p) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[390], &__pyx_n_s_c_float) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[391], &__pyx_n_s_c_int) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[392], &__pyx_n_s_c_void_p) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[393], &__pyx_n_s_call) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[394], &__pyx_n_s_cb) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[395], &__pyx_n_s_cdll) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[396], &__pyx_n_s_centre) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[397], &__pyx_n_s_cf) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[398], &__pyx_n_s_cfgs) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[399], &__pyx_n_s_cfloat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[400], &__pyx_n_s_cfloat_array) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[401], &__pyx_n_s_change_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[402], &__pyx_n_s_check) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[403], &__pyx_n_s_check_all_b1_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[404], &__pyx_n_s_check_all_bpress_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[405], &__pyx_n_s_check_all_brelase_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[406], &__pyx_n_s_check_event_button_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[407], &__pyx_n_s_checkkeypress) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[408], &__pyx_n_s_checklclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[409], &__pyx_n_s_checkmclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[410], &__pyx_n_s_checkmotion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[411], &__pyx_n_s_checkrclick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[412], &__pyx_n_s_chr) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[413], &__pyx_n_s_class_getitem) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[414], &__pyx_n_s_clear) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[415], &__pyx_n_s_clear_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[416], &__pyx_n_s_cline_in_traceback) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[417], &__pyx_n_s_cnf) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[418], &__pyx_n_s_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[419], &__pyx_n_s_compile) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[420], &__pyx_n_s_compileProgram) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[421], &__pyx_n_s_compileShader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[422], &__pyx_n_s_config) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[423], &__pyx_n_s_contents) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[424], &__pyx_n_s_cords) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[425], &__pyx_n_s_cords1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[426], &__pyx_n_s_cords2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[427], &__pyx_n_s_cords3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[428], &__pyx_n_s_cords4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[429], &__pyx_n_s_cords_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[430], &__pyx_n_s_cords_to_ratio) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[431], &__pyx_n_s_crd) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[432], &__pyx_n_s_create_event) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[433], &__pyx_n_s_create_font) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[434], &__pyx_n_s_create_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[435], &__pyx_n_s_create_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[436], &__pyx_n_s_crop) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[437], &__pyx_n_s_ct) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[438], &__pyx_n_s_ctypes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[439], &__pyx_n_s_ctypes_wintypes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[440], &__pyx_n_s_curpos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[441], &__pyx_n_s_cvroot) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[442], &__pyx_n_s_d) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[443], &__pyx_n_s_dat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[444], &__pyx_n_s_data) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[445], &__pyx_n_s_data_length) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[446], &__pyx_n_s_data_tr1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[447], &__pyx_n_s_data_tr2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[448], &__pyx_n_s_data_txn) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[449], &__pyx_n_s_data_type) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[450], &__pyx_n_s_default) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[451], &__pyx_n_s_del_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[452], &__pyx_n_s_delay) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[453], &__pyx_n_s_delete_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[454], &__pyx_n_s_descender) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[455], &__pyx_n_s_dialog) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[456], &__pyx_n_s_dict) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[457], &__pyx_n_s_display) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[458], &__pyx_n_s_dist) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[459], &__pyx_n_s_distance) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[460], &__pyx_n_s_do_AutoSpin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[461], &__pyx_n_s_doc) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[462], &__pyx_n_s_docs) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[463], &__pyx_n_s_dp_data) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[464], &__pyx_n_s_draw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[465], &__pyx_n_s_draw_line) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[466], &__pyx_n_s_draw_lines) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[467], &__pyx_n_s_draw_point) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[468], &__pyx_n_s_draw_points) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[469], &__pyx_n_s_draw_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[470], &__pyx_n_s_draw_quad_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[471], &__pyx_n_s_draw_quad_texture_array) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[472], &__pyx_n_s_draw_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[473], &__pyx_n_s_dtype) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[474], &__pyx_n_s_dummy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[475], &__pyx_n_s_dwFlags) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[476], &__pyx_n_s_dx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[477], &__pyx_n_s_dy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[478], &__pyx_n_s_e) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[479], &__pyx_n_s_edit_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[480], &__pyx_n_s_edit_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[481], &__pyx_n_s_edit_pos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[482], &__pyx_n_s_edit_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[483], &__pyx_n_s_edit_tpos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[484], &__pyx_n_s_encode) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[485], &__pyx_n_s_end) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[486], &__pyx_n_s_environ) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[487], &__pyx_n_s_ev) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[488], &__pyx_n_s_ev_list) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[489], &__pyx_n_s_ev_type) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[490], &__pyx_n_s_event) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[491], &__pyx_n_s_event_type) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[492], &__pyx_n_s_eventmanager) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[493], &__pyx_n_s_events_B1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[494], &__pyx_n_s_events_B2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[495], &__pyx_n_s_events_B3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[496], &__pyx_n_s_events_BP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[497], &__pyx_n_s_events_BR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[498], &__pyx_n_s_events_MN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[499], &__pyx_n_s_evt) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[500], &__pyx_n_s_extend) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[501], &__pyx_n_s_extensions) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[502], &__pyx_n_s_extns) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[503], &__pyx_n_s_exts) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[504], &__pyx_n_s_f) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[505], &__pyx_n_s_face) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[506], &__pyx_n_s_far) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[507], &__pyx_n_s_fbatt) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[508], &__pyx_n_s_fgshader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[509], &__pyx_n_s_file) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[510], &__pyx_n_s_filename) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[511], &__pyx_n_s_find_library) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[512], &__pyx_n_s_flat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[513], &__pyx_n_s_font) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[514], &__pyx_n_s_font_config) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[515], &__pyx_n_s_font_letters) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[516], &__pyx_n_s_font_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[517], &__pyx_n_s_fovy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[518], &__pyx_n_s_free_calc_update) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[519], &__pyx_n_s_freecalc) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[520], &__pyx_n_s_freecalc_update) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[521], &__pyx_n_s_freetype) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[522], &__pyx_n_s_from) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[523], &__pyx_n_s_frombuffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[524], &__pyx_n_s_func) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[525], &__pyx_n_s_g) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[526], &__pyx_n_s_g_back) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[527], &__pyx_n_s_g_val) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[528], &__pyx_n_s_get) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[529], &__pyx_n_s_get_buffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[530], &__pyx_n_s_get_color) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[531], &__pyx_n_s_get_objectindexes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[532], &__pyx_n_s_get_pos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[533], &__pyx_n_s_get_shader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[534], &__pyx_n_s_get_texid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[535], &__pyx_n_s_get_vertices) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[536], &__pyx_n_s_getdata) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[537], &__pyx_n_s_getint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[538], &__pyx_n_s_getsize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[539], &__pyx_n_s_glBegin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[540], &__pyx_n_s_glBindBuffer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[541], &__pyx_n_s_glBindTexture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[542], &__pyx_n_s_glBindTextureUnit) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[543], &__pyx_n_s_glBufferData) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[544], &__pyx_n_s_glBufferSubData) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[545], &__pyx_n_s_glColor3f) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[546], &__pyx_n_s_glColor4f) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[547], &__pyx_n_s_glDepthFunc) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[548], &__pyx_n_s_glDisable) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[549], &__pyx_n_s_glDrawArrays) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[550], &__pyx_n_s_glEnable) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[551], &__pyx_n_s_glEnableClientState) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[552], &__pyx_n_s_glEnableVertexAttribArray) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[553], &__pyx_n_s_glEnd) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[554], &__pyx_n_s_glGenBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[555], &__pyx_n_s_glGenTextures) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[556], &__pyx_n_s_glGetDoublev) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[557], &__pyx_n_s_glGetIntegerv) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[558], &__pyx_n_s_glGetString) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[559], &__pyx_n_s_glGetUniformLocation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[560], &__pyx_n_s_glLightfv) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[561], &__pyx_n_s_glLoadIdentity) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[562], &__pyx_n_s_glMatrixMode) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[563], &__pyx_n_s_glPixelStorei) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[564], &__pyx_n_s_glRotateScene) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[565], &__pyx_n_s_glTexCoord2f) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[566], &__pyx_n_s_glTexImage2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[567], &__pyx_n_s_glTexParameterf) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[568], &__pyx_n_s_glTexParameteri) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[569], &__pyx_n_s_glTexSubImage2D) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[570], &__pyx_n_s_glTranslateScene) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[571], &__pyx_n_s_glUniform1iv) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[572], &__pyx_n_s_glUseProgram) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[573], &__pyx_n_s_glVertex2f) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[574], &__pyx_n_s_glVertexAttribPointer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[575], &__pyx_n_s_glViewport) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[576], &__pyx_n_s_glXChooseFBConfig) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[577], &__pyx_n_s_glXChooseVisual) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[578], &__pyx_n_s_glXCreateContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[579], &__pyx_n_s_glXCreateNewContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[580], &__pyx_n_s_glXGetVisualFromFBConfig) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[581], &__pyx_n_s_glXIsDirect) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[582], &__pyx_n_s_glXMakeContextCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[583], &__pyx_n_s_glXMakeCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[584], &__pyx_n_s_glXQueryExtensionsString) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[585], &__pyx_n_s_glXQueryVersion) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[586], &__pyx_n_s_glXSwapBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[587], &__pyx_n_s_gluLookAt) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[588], &__pyx_n_s_gluPerspective) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[589], &__pyx_n_s_gluProject) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[590], &__pyx_n_s_gluUnProject) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[591], &__pyx_n_s_glyph) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[592], &__pyx_n_s_h) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[593], &__pyx_n_s_height) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[594], &__pyx_n_s_help) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[595], &__pyx_n_s_hex) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[596], &__pyx_n_s_hover_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[597], &__pyx_n_s_i) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[598], &__pyx_n_s_iLayerType) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[599], &__pyx_n_s_iPixelType) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[600], &__pyx_n_s_id) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[601], &__pyx_n_s_ideal) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[602], &__pyx_n_s_idx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[603], &__pyx_n_s_il) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[604], &__pyx_n_s_image) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[605], &__pyx_n_s_imgnp) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[606], &__pyx_n_s_import) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[607], &__pyx_n_s_index) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[608], &__pyx_n_s_init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[609], &__pyx_n_s_init_subclass) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[610], &__pyx_n_s_initgl) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[611], &__pyx_n_s_initialised) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[612], &__pyx_n_s_insert) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[613], &__pyx_n_s_is_fixed_width) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[614], &__pyx_n_s_is_serialized) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[615], &__pyx_n_s_j) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[616], &__pyx_n_s_keypress_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[617], &__pyx_n_s_kw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[618], &__pyx_n_s_l) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[619], &__pyx_n_s_launch_func) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[620], &__pyx_n_s_launch_function_beg) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[621], &__pyx_n_s_launch_function_end) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[622], &__pyx_n_s_launch_function_mid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[623], &__pyx_n_s_launchev) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[624], &__pyx_n_s_lclick_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[625], &__pyx_n_s_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[626], &__pyx_n_s_lfe) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[627], &__pyx_n_s_lfg) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[628], &__pyx_n_s_lfm) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[629], &__pyx_n_s_light_position) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[630], &__pyx_n_s_linux) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[631], &__pyx_n_s_list) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[632], &__pyx_n_s_load) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[633], &__pyx_n_s_load_char) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[634], &__pyx_n_s_load_scene) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[635], &__pyx_n_s_load_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[636], &__pyx_n_s_load_texture_dp) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[637], &__pyx_n_s_load_texture_locals_image) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[638], &__pyx_n_s_load_texture_locals_image___init) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[639], &__pyx_n_s_load_texture_repeat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[640], &__pyx_n_s_load_texture_sub) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[641], &__pyx_n_s_ls) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[642], &__pyx_n_s_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[643], &__pyx_n_s_m_new) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[644], &__pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[645], &__pyx_n_s_major) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[646], &__pyx_n_s_mask) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[647], &__pyx_n_s_master) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[648], &__pyx_n_s_math) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[649], &__pyx_n_s_mclick_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[650], &__pyx_n_s_mem_img) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[651], &__pyx_n_s_metaclass) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[652], &__pyx_n_s_minor) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[653], &__pyx_n_s_mmap) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[654], &__pyx_n_s_mode) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[655], &__pyx_n_s_mode_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[656], &__pyx_n_s_module) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[657], &__pyx_n_s_move) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[658], &__pyx_n_s_move_down) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[659], &__pyx_n_s_move_up) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[660], &__pyx_n_s_msk) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[661], &__pyx_n_s_n) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[662], &__pyx_n_s_naiveline) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[663], &__pyx_n_s_name) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[664], &__pyx_n_s_named) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[665], &__pyx_n_s_ncfg) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[666], &__pyx_n_s_nd) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[667], &__pyx_n_s_near) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[668], &__pyx_n_s_new) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[669], &__pyx_n_s_new_from_file) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[670], &__pyx_n_s_newcolor) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[671], &__pyx_n_s_newpos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[672], &__pyx_n_s_newsize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[673], &__pyx_n_s_newtpos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[674], &__pyx_n_s_np) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[675], &__pyx_n_s_nr) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[676], &__pyx_n_s_numpy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[677], &__pyx_n_s_nx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[678], &__pyx_n_s_ny) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[679], &__pyx_n_s_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[680], &__pyx_n_s_obj_c) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[681], &__pyx_n_s_object) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[682], &__pyx_n_s_object_count) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[683], &__pyx_n_s_object_counts) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[684], &__pyx_n_s_object_indexes) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[685], &__pyx_n_s_object_moved) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[686], &__pyx_kp_s_oh_dear_visual_does_not_match) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[687], &__pyx_n_s_oj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[688], &__pyx_n_s_open) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[689], &__pyx_n_s_orgsize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[690], &__pyx_n_s_os) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[691], &__pyx_n_s_ou) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[692], &__pyx_n_s_overlay) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[693], &__pyx_n_s_p1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[694], &__pyx_n_s_p2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[695], &__pyx_n_s_pas) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[696], &__pyx_n_s_paste) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[697], &__pyx_n_s_pfd) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[698], &__pyx_n_s_pick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[699], &__pyx_n_s_pix_rat_x) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[700], &__pyx_n_s_pix_rat_y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[701], &__pyx_n_s_pixelformat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[702], &__pyx_n_s_pixels) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[703], &__pyx_n_s_platform) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[704], &__pyx_n_s_pointer) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[705], &__pyx_n_s_pointerx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[706], &__pyx_n_s_pointery) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[707], &__pyx_n_s_points) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[708], &__pyx_n_s_pop) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[709], &__pyx_n_s_prepare) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[710], &__pyx_n_s_prequad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[711], &__pyx_n_s_prerender_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[712], &__pyx_n_s_prerender_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[713], &__pyx_n_s_prerender_texturequad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[714], &__pyx_n_s_prerenderedobj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[715], &__pyx_n_s_pretext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[716], &__pyx_n_s_pretextquad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[717], &__pyx_n_s_previoev) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[718], &__pyx_n_s_print) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[719], &__pyx_n_s_printContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[720], &__pyx_n_s_pure_pil_alpha_to_color_v2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[721], &__pyx_n_s_pyvips) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[722], &__pyx_n_s_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[723], &__pyx_n_s_qualname) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[724], &__pyx_n_s_questhead) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[725], &__pyx_n_s_queue) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[726], &__pyx_n_s_queue_check) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[727], &__pyx_n_s_r) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[728], &__pyx_n_s_r_back) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[729], &__pyx_n_s_r_val) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[730], &__pyx_n_s_random) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[731], &__pyx_n_s_range) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[732], &__pyx_n_s_rclick_events) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[733], &__pyx_n_s_real_index) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[734], &__pyx_n_s_real_value) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[735], &__pyx_n_s_realdata) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[736], &__pyx_n_s_realy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[737], &__pyx_n_s_redraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[738], &__pyx_n_s_render) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[739], &__pyx_n_s_render_letter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[740], &__pyx_n_s_render_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[741], &__pyx_n_s_render_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[742], &__pyx_n_s_render_texture_quad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[743], &__pyx_n_s_repeat) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[744], &__pyx_n_s_reset) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[745], &__pyx_n_s_reshape) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[746], &__pyx_n_s_resize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[747], &__pyx_n_s_resize_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[748], &__pyx_n_s_restype) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[749], &__pyx_n_s_rgba2rgb) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[750], &__pyx_n_s_rise) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[751], &__pyx_n_s_rnd) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[752], &__pyx_n_s_rotate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[753], &__pyx_n_s_round) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[754], &__pyx_n_s_rows) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[755], &__pyx_n_s_run) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[756], &__pyx_n_s_s) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[757], &__pyx_n_s_sav_vert) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[758], &__pyx_n_s_scale) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[759], &__pyx_n_s_scalex) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[760], &__pyx_n_s_scaley) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[761], &__pyx_n_s_screen) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[762], &__pyx_n_s_screen_res) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[763], &__pyx_n_s_screenx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[764], &__pyx_n_s_screeny) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[765], &__pyx_n_s_self) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[766], &__pyx_n_s_self_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[767], &__pyx_n_s_sequential) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[768], &__pyx_n_s_serialization) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[769], &__pyx_n_s_serialization_current_object) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[770], &__pyx_n_s_serialize_to_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[771], &__pyx_n_s_serialized_obj) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[772], &__pyx_n_s_set_background) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[773], &__pyx_n_s_set_centerpoint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[774], &__pyx_n_s_set_char_size) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[775], &__pyx_n_s_set_eyepoint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[776], &__pyx_n_s_set_mode) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[777], &__pyx_n_s_set_name) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[778], &__pyx_n_s_shaderprogram) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[779], &__pyx_n_s_shaders) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[780], &__pyx_n_s_shape) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[781], &__pyx_n_s_shrink) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[782], &__pyx_n_s_size) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[783], &__pyx_n_s_size_x) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[784], &__pyx_n_s_size_y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[785], &__pyx_n_s_sizeof) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[786], &__pyx_n_s_sizex) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[787], &__pyx_n_s_sizey) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[788], &__pyx_n_s_sleep) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[789], &__pyx_n_s_slope_error_new) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[790], &__pyx_n_s_spacing) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[791], &__pyx_n_s_spacing_addx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[792], &__pyx_n_s_spacing_addy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[793], &__pyx_n_s_spacing_y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[794], &__pyx_n_s_split) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[795], &__pyx_n_s_sqrt) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[796], &__pyx_n_s_start_new_thread) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[797], &__pyx_n_s_startswith) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[798], &__pyx_n_s_state) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[799], &__pyx_n_s_strings) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[800], &__pyx_n_s_super) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[801], &__pyx_n_s_switch) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[802], &__pyx_n_s_sx) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[803], &__pyx_n_s_sy) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[804], &__pyx_n_s_sys) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[805], &__pyx_n_s_t) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[806], &__pyx_n_s_t1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[807], &__pyx_n_s_t2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[808], &__pyx_n_s_t3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[809], &__pyx_n_s_t4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[810], &__pyx_n_s_test) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[811], &__pyx_n_s_tex_arrayn_translate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[812], &__pyx_n_s_texcords1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[813], &__pyx_n_s_texcords2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[814], &__pyx_n_s_texcords3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[815], &__pyx_n_s_texcords4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[816], &__pyx_n_s_texid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[817], &__pyx_n_s_texsize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[818], &__pyx_n_s_text) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[819], &__pyx_n_s_textid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[820], &__pyx_n_s_textn) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[821], &__pyx_n_s_textr) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[822], &__pyx_n_s_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[823], &__pyx_n_s_texture_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[824], &__pyx_n_s_texture_cords_to_ratio) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[825], &__pyx_n_s_texture_data) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[826], &__pyx_n_s_texture_slots) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[827], &__pyx_n_s_textured) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[828], &__pyx_n_s_textures) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[829], &__pyx_n_s_th) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[830], &__pyx_n_s_thread) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[831], &__pyx_n_s_time) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[832], &__pyx_n_s_title) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[833], &__pyx_n_s_tk) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[834], &__pyx_n_s_tkAutoSpin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[835], &__pyx_n_s_tkCreateContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[836], &__pyx_n_s_tkExpose) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[837], &__pyx_n_s_tkHandlePick) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[838], &__pyx_n_s_tkMakeCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[839], &__pyx_n_s_tkMap) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[840], &__pyx_n_s_tkPrint) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[841], &__pyx_n_s_tkRecordMouse) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[842], &__pyx_n_s_tkRedraw) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[843], &__pyx_n_s_tkResize) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[844], &__pyx_n_s_tkRotate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[845], &__pyx_n_s_tkScale) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[846], &__pyx_n_s_tkSwapBuffers) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[847], &__pyx_n_s_tkTranslate) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[848], &__pyx_n_s_tkinter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[849], &__pyx_n_s_tlist) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[850], &__pyx_n_s_to) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[851], &__pyx_n_s_total_updates) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[852], &__pyx_n_s_tquad) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[853], &__pyx_n_s_tr1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[854], &__pyx_n_s_tr2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[855], &__pyx_n_s_tu) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[856], &__pyx_n_s_tua) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[857], &__pyx_n_s_txn) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[858], &__pyx_n_s_txs) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[859], &__pyx_n_s_txtid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[860], &__pyx_n_s_ubyte) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[861], &__pyx_n_s_uint8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[862], &__pyx_n_s_unload) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[863], &__pyx_n_s_update) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[864], &__pyx_n_s_update_animation) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[865], &__pyx_n_s_update_idletasks) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[866], &__pyx_n_s_update_list) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[867], &__pyx_n_s_updates) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[868], &__pyx_n_s_use_texture) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[869], &__pyx_n_s_usecords) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[870], &__pyx_n_s_user32) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[871], &__pyx_n_s_user32_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[872], &__pyx_n_s_usingVIPSandShrink) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[873], &__pyx_kp_s_utf_8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[874], &__pyx_n_s_util) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[875], &__pyx_n_s_v3distsq) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[876], &__pyx_n_s_value) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[877], &__pyx_n_s_vb_count) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[878], &__pyx_n_s_vbo) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[879], &__pyx_n_s_vbos) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[880], &__pyx_kp_s_version_330_core_layout_locatio) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[881], &__pyx_kp_s_version_330_core_layout_locatio_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[882], &__pyx_n_s_version_info) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[883], &__pyx_n_s_vert_lists) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[884], &__pyx_n_s_vertices) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[885], &__pyx_n_s_vipshome) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[886], &__pyx_n_s_vis) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[887], &__pyx_n_s_visual) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[888], &__pyx_n_s_visualid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[889], &__pyx_n_s_vns) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[890], &__pyx_n_s_vxshader) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[891], &__pyx_n_s_w) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[892], &__pyx_n_s_w_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[893], &__pyx_n_s_wait) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[894], &__pyx_n_s_wglCreateContext) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[895], &__pyx_n_s_wglMakeCurrent) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[896], &__pyx_n_s_wid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[897], &__pyx_n_s_width) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[898], &__pyx_n_s_win) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[899], &__pyx_n_s_win32) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[900], &__pyx_n_s_win_height) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[901], &__pyx_n_s_winfo) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[902], &__pyx_n_s_winfo_height) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[903], &__pyx_n_s_winfo_id) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[904], &__pyx_n_s_winfo_ismapped) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[905], &__pyx_n_s_winfo_screen) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[906], &__pyx_n_s_winfo_visualid) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[907], &__pyx_n_s_winfo_width) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[908], &__pyx_n_s_write_to_memory) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[909], &__pyx_n_s_wtf) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[910], &__pyx_n_s_x) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[911], &__pyx_n_s_x1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[912], &__pyx_n_s_x11lib) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[913], &__pyx_n_s_x2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[914], &__pyx_n_s_x_root) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[915], &__pyx_n_s_xcenter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[916], &__pyx_n_s_xmouse) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[917], &__pyx_n_s_xr) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[918], &__pyx_n_s_xspin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[919], &__pyx_n_s_y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[920], &__pyx_n_s_y1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[921], &__pyx_n_s_y2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[922], &__pyx_n_s_y_root) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[923], &__pyx_n_s_ycenter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[924], &__pyx_n_s_ymouse) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[925], &__pyx_n_s_yr) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[926], &__pyx_n_s_yspin) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[927], &__pyx_n_s_z) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[928], &__pyx_n_s_zcenter) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[929], &__pyx_n_s_zeros) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  #endif
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_ = PyFloat_FromDouble(1.); if (unlikely(!__pyx_float_1_)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_1 = PyFloat_FromDouble(0.1); if (unlikely(!__pyx_float_0_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_01 = PyFloat_FromDouble(0.01); if (unlikely(!__pyx_float_0_01)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_0 = PyFloat_FromDouble(10.0); if (unlikely(!__pyx_float_10_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_30_0 = PyFloat_FromDouble(30.0); if (unlikely(!__pyx_float_30_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_001 = PyFloat_FromDouble(0.001); if (unlikely(!__pyx_float_0_001)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1000_0 = PyFloat_FromDouble(1000.0); if (unlikely(!__pyx_float_1000_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_13 = PyInt_FromLong(13); if (unlikely(!__pyx_int_13)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_14 = PyInt_FromLong(14); if (unlikely(!__pyx_int_14)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_17 = PyInt_FromLong(17); if (unlikely(!__pyx_int_17)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_18 = PyInt_FromLong(18); if (unlikely(!__pyx_int_18)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_19 = PyInt_FromLong(19); if (unlikely(!__pyx_int_19)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_21 = PyInt_FromLong(21); if (unlikely(!__pyx_int_21)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_23 = PyInt_FromLong(23); if (unlikely(!__pyx_int_23)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_24 = PyInt_FromLong(24); if (unlikely(!__pyx_int_24)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_25 = PyInt_FromLong(25); if (unlikely(!__pyx_int_25)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_26 = PyInt_FromLong(26); if (unlikely(!__pyx_int_26)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_27 = PyInt_FromLong(27); if (unlikely(!__pyx_int_27)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_28 = PyInt_FromLong(28); if (unlikely(!__pyx_int_28)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_29 = PyInt_FromLong(29); if (unlikely(!__pyx_int_29)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_31 = PyInt_FromLong(31); if (unlikely(!__pyx_int_31)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_32 = PyInt_FromLong(32); if (unlikely(!__pyx_int_32)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_33 = PyInt_FromLong(33); if (unlikely(!__pyx_int_33)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_34 = PyInt_FromLong(34); if (unlikely(!__pyx_int_34)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_35 = PyInt_FromLong(35); if (unlikely(!__pyx_int_35)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_36 = PyInt_FromLong(36); if (unlikely(!__pyx_int_36)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_37 = PyInt_FromLong(37); if (unlikely(!__pyx_int_37)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_38 = PyInt_FromLong(38); if (unlikely(!__pyx_int_38)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_39 = PyInt_FromLong(39); if (unlikely(!__pyx_int_39)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_40 = PyInt_FromLong(40); if (unlikely(!__pyx_int_40)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_64 = PyInt_FromLong(64); if (unlikely(!__pyx_int_64)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_255 = PyInt_FromLong(255); if (unlikely(!__pyx_int_255)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_256 = PyInt_FromLong(256); if (unlikely(!__pyx_int_256)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1000 = PyInt_FromLong(1000); if (unlikely(!__pyx_int_1000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1080 = PyInt_FromLong(1080); if (unlikely(!__pyx_int_1080)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1920 = PyInt_FromLong(1920); if (unlikely(!__pyx_int_1920)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_10 = PyInt_FromLong(-10); if (unlikely(!__pyx_int_neg_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_Drago2Dengine(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_Drago2Dengine},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "Drago2Dengine",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_COMPILING_IN_LIMITED_API
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initDrago2Dengine(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initDrago2Dengine(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_Drago2Dengine(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_Drago2Dengine(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none) {
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
#endif
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


  static CYTHON_SMALL_CODE int __pyx_pymod_exec_Drago2Dengine(PyObject *__pyx_pyinit_module)
  #endif
  #endif
  {
    PyObject *__pyx_t_1 = NULL;
    int __pyx_t_2;
    PyObject *__pyx_t_3 = NULL;
    PyObject *__pyx_t_4 = NULL;
    PyObject *__pyx_t_5 = NULL;
    PyObject *__pyx_t_6 = NULL;
    PyObject *__pyx_t_7 = NULL;
    PyObject *__pyx_t_8 = NULL;
    PyObject *__pyx_t_9 = NULL;
    PyObject *__pyx_t_10 = NULL;
    PyObject *__pyx_t_11 = NULL;
    PyObject *__pyx_t_12 = NULL;
    PyObject *__pyx_t_13 = NULL;
    PyObject *__pyx_t_14 = NULL;
    int __pyx_lineno = 0;
    const char *__pyx_filename = NULL;
    int __pyx_clineno = 0;
    __Pyx_RefNannyDeclarations
    #if CYTHON_PEP489_MULTI_PHASE_INIT
    if (__pyx_m) {
      if (__pyx_m == __pyx_pyinit_module) return 0;
      PyErr_SetString(PyExc_RuntimeError, "Module 'Drago2Dengine' has already been imported. Re-initialisation is not supported.");
      return -1;
    }
    #elif PY_MAJOR_VERSION >= 3
    if (__pyx_m) return __Pyx_NewRef(__pyx_m);
    #endif
    /*--- Module creation code ---*/
    #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_m = __pyx_pyinit_module;
    Py_INCREF(__pyx_m);
    #else
    #if PY_MAJOR_VERSION < 3
    __pyx_m = Py_InitModule4("Drago2Dengine", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
    if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
    #elif CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyState_AddModule(__pyx_t_1, &__pyx_moduledef) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    #else
    __pyx_m = PyModule_Create(&__pyx_moduledef);
    if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #endif
    #if !CYTHON_COMPILING_IN_LIMITED_API
    __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
    Py_INCREF(__pyx_d);
    #endif
    __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
    Py_INCREF(__pyx_b);
    __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
    Py_INCREF(__pyx_cython_runtime);
    if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
    #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
    __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_Drago2Dengine(void)", 0);
    if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #ifdef __Pxy_PyFrame_Initialize_Offsets
    __Pxy_PyFrame_Initialize_Offsets();
    #endif
    __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
    __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
    __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
    #ifdef __Pyx_CyFunction_USED
    if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #ifdef __Pyx_FusedFunction_USED
    if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #ifdef __Pyx_Generator_USED
    if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    #ifdef __Pyx_StopAsyncIteration_USED
    if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    /*--- Library function declarations ---*/
    /*--- Threads initialization code ---*/
    #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
    PyEval_InitThreads();
    #endif
    /*--- Initialize various global constants etc. ---*/
    if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif
    if (__pyx_module_is_main_Drago2Dengine____versions____win32__dist__Drago2Dengine) {
      if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    }
    #if PY_MAJOR_VERSION >= 3
    {
      PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
      if (!PyDict_GetItemString(modules, "Drago2Dengine.__versions__.win32.dist.Drago2Dengine")) {
        if (unlikely(PyDict_SetItemString(modules, "Drago2Dengine.__versions__.win32.dist.Drago2Dengine", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
      }
    }
    #endif
    /*--- Builtin init code ---*/
    if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    /*--- Constants init code ---*/
    if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    /*--- Global type/function init code ---*/
    (void)__Pyx_modinit_global_init_code();
    (void)__Pyx_modinit_variable_export_code();
    (void)__Pyx_modinit_function_export_code();
    (void)__Pyx_modinit_type_init_code();
    (void)__Pyx_modinit_type_import_code();
    (void)__Pyx_modinit_variable_import_code();
    (void)__Pyx_modinit_function_import_code();
    /*--- Execution code ---*/
    #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
    #endif

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2
 * #Breshenham line algorithm
 * if __name__ == '__main__':             # <<<<<<<<<<<<<<
 *     import math
 * def naiveline(x1,y1,x2,y2):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_n_s_main, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":3
 * #Breshenham line algorithm
 * if __name__ == '__main__':
 *     import math             # <<<<<<<<<<<<<<
 * def naiveline(x1,y1,x2,y2):
 *     points = []
 */
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_math, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 3, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2
 * #Breshenham line algorithm
 * if __name__ == '__main__':             # <<<<<<<<<<<<<<
 *     import math
 * def naiveline(x1,y1,x2,y2):
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":4
 * if __name__ == '__main__':
 *     import math
 * def naiveline(x1,y1,x2,y2):             # <<<<<<<<<<<<<<
 *     points = []
 *     rise = y2-y1
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 4, __pyx_L1_error);
    #endif
    __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_1naiveline, 0, __pyx_n_s_naiveline, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__24)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 4, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_naiveline, __pyx_t_1) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":32
 * 
 *     return points
 * def bresenham(x1,y1,x2, y2):  #Line Drawing             # <<<<<<<<<<<<<<
 *     m_new = 2 * (y2 - y1)
 *     slope_error_new = m_new - (x2 - x1)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 32, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 32, __pyx_L1_error);
    #endif
    __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3bresenham, 0, __pyx_n_s_bresenham, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__26)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 32, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_bresenham, __pyx_t_1) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":45
 * 
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW             # <<<<<<<<<<<<<<
 *     def __init__(self,screen_res):
 *         self.size = screen_res
 */
    __pyx_t_1 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_D2Draw, __pyx_n_s_D2Draw, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":46
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         self.size = screen_res
 *         self.newsize= (0,0)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 46, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 46, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_1__init__, 0, __pyx_n_s_D2Draw___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__28)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":55
 *         self.pix_rat_y = 2/(screen_res[1])
 * 
 *     def _resize(self):             # <<<<<<<<<<<<<<
 *         self.nx = self.orgsize[0]-self.newsize[0]
 *         self.ny = self.orgsize[1]-self.newsize[1]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 55, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 55, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_3_resize, 0, __pyx_n_s_D2Draw__resize, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__30)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 55, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_resize, __pyx_t_4) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":59
 *         self.ny = self.orgsize[1]-self.newsize[1]
 * 
 *     def resize(self,newsize,orgsize):             # <<<<<<<<<<<<<<
 *         self.newsize = newsize
 *         self.orgsize = orgsize
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 59, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 59, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_5resize, 0, __pyx_n_s_D2Draw_resize, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__32)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 59, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_resize_2, __pyx_t_4) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":64
 *         self._resize()
 * 
 *     def _cords_to_ratio(self,x,y):             # <<<<<<<<<<<<<<
 *         xr = x*self.pix_rat_x
 *         yr = y*self.pix_rat_y
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 64, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_7_cords_to_ratio, 0, __pyx_n_s_D2Draw__cords_to_ratio, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__34)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 64, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_cords_to_ratio, __pyx_t_4) < 0) __PYX_ERR(0, 64, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":78
 * 
 * 
 *     def _texture_cords_to_ratio(self,x,y,size):             # <<<<<<<<<<<<<<
 *         xr = x*(2/size[0])
 *         yr = y*(2/size[1])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 78, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 78, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_9_texture_cords_to_ratio, 0, __pyx_n_s_D2Draw__texture_cords_to_ratio, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__36)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 78, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_texture_cords_to_ratio, __pyx_t_4) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":93
 * 
 * 
 *     def _tex_arrayn_translate(self,n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *         ''' n = x,y  s = size  txs - texturesize  '''
 *         x1 = (n[0]*s)-s
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 93, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 93, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_11_tex_arrayn_translate, 0, __pyx_n_s_D2Draw__tex_arrayn_translate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__38)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults), 2)) __PYX_ERR(0, 93, __pyx_L1_error)
    __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_t_4)->__pyx_arg_n = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults, __pyx_t_4)->__pyx_arg_txs = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_36__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_tex_arrayn_translate, __pyx_t_4) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":108
 * 
 * 
 *     def draw_quad(self,cords=[],color=(),rotate=None,alpha=1):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor4f(color[0],color[1],color[2],alpha)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 108, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 108, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_13draw_quad, 0, __pyx_n_s_D2Draw_draw_quad, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__40)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults1), 1)) __PYX_ERR(0, 108, __pyx_L1_error)
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 108, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults1, __pyx_t_4)->__pyx_arg_cords = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_38__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_quad, __pyx_t_4) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":123
 * 
 * 
 *     def draw_quad_texture(self,cords=[],color=(),textr=None,NOENABLE=False):             # <<<<<<<<<<<<<<
 *         if NOENABLE is True:
 *             pass
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 123, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 123, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_15draw_quad_texture, 0, __pyx_n_s_D2Draw_draw_quad_texture, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__42)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults2), 1)) __PYX_ERR(0, 123, __pyx_L1_error)
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults2, __pyx_t_4)->__pyx_arg_cords = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_40__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_quad_texture, __pyx_t_4) < 0) __PYX_ERR(0, 123, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":156
 * 
 * 
 *     def draw_point(self,cords=(1,1),color=(255,255,255)):             # <<<<<<<<<<<<<<
 *         tr1 = self._cords_to_ratio(cords[0],cords[1])
 *         GL.glBegin(GL.GL_POINTS)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 156, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_17draw_point, 0, __pyx_n_s_D2Draw_draw_point, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__44)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_tuple__45);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_point, __pyx_t_4) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":162
 *         GL.glVertex2f(tr1[0],tr1[1])
 *         GL.glEnd()
 *     def draw_points():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 162, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_19draw_points, 0, __pyx_n_s_D2Draw_draw_points, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__46)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_points, __pyx_t_4) < 0) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":164
 *     def draw_points():
 *         pass#DFPASS
 *     def draw_line(self,cords=[],color=()):                                 # COMPLETE < Breneshman Done just Drawing LOGIC (CORDS translation)             # <<<<<<<<<<<<<<
 *         tr1 = bresenham(int(cords[0]),int(cords[1]),int(cords[2]),int(cords[3]))
 *         pixels = []
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 164, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 164, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_21draw_line, 0, __pyx_n_s_D2Draw_draw_line, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__48)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults3), 1)) __PYX_ERR(0, 164, __pyx_L1_error)
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults3, __pyx_t_4)->__pyx_arg_cords = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_42__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_line, __pyx_t_4) < 0) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":176
 *             GL.glVertex2f(i[0],i[1])
 *         GL.glEnd()
 *     def draw_lines():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 176, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 176, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_23draw_lines, 0, __pyx_n_s_D2Draw_draw_lines, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__49)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_lines, __pyx_t_4) < 0) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":179
 *         pass#DFPASS
 * 
 *     def draw_text(self,cords=[],color=(),font_texture=None,font_letters=[],text='abcdefgh',config=(256,256,8),font_config=('Spacing_add','size_x','size_y')):             # <<<<<<<<<<<<<<
 *         color=color
 *         textr=font_texture
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 179, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 179, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_25draw_text, 0, __pyx_n_s_D2Draw_draw_text, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__51)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults4), 2)) __PYX_ERR(0, 179, __pyx_L1_error)
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_t_4)->__pyx_arg_cords = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults4, __pyx_t_4)->__pyx_arg_font_letters = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_44__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_text, __pyx_t_4) < 0) __PYX_ERR(0, 179, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":239
 *         GL.glEnd()
 * 
 *     def draw_quad_texture_array(self,cords=[],color=(),textr=None,textn=([0,0],32,[0,0])): #-------------------TO do logic of dividing textures -1 -1 to 1 1             # <<<<<<<<<<<<<<
 *         '''textn - Texture split > [x , y [AS N] , [SizeOfOneSpirit], [texturesize x,y] '''
 *         #
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 239, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_27draw_quad_texture_array, 0, __pyx_n_s_D2Draw_draw_quad_texture_array, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__53)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_4, sizeof(__pyx_defaults5), 2)) __PYX_ERR(0, 239, __pyx_L1_error)
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_t_4)->__pyx_arg_cords = __pyx_t_5;
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_5, 1, __pyx_int_0);
    __pyx_t_6 = PyList_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_int_0);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5);
    __Pyx_INCREF(__pyx_int_32);
    __Pyx_GIVEREF(__pyx_int_32);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_int_32);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_6);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __Pyx_CyFunction_Defaults(__pyx_defaults5, __pyx_t_4)->__pyx_arg_textn = __pyx_t_7;
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_4, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_46__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_draw_quad_texture_array, __pyx_t_4) < 0) __PYX_ERR(0, 239, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":270
 * 
 * 
 *     def add_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def update_animation():
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 270, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 270, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_29add_animation, 0, __pyx_n_s_D2Draw_add_animation, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__54)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 270, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_add_animation, __pyx_t_4) < 0) __PYX_ERR(0, 270, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":272
 *     def add_animation():
 *         pass#DFPASS
 *     def update_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 *     def del_animation():
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 272, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 272, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_31update_animation, 0, __pyx_n_s_D2Draw_update_animation, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__55)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_update_animation, __pyx_t_4) < 0) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":274
 *     def update_animation():
 *         pass#DFPASS
 *     def del_animation():             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * #__init__ file.
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 274, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 274, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6D2Draw_33del_animation, 0, __pyx_n_s_D2Draw_del_animation, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__56)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_del_animation, __pyx_t_4) < 0) __PYX_ERR(0, 274, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":45
 * 
 *     return points
 * class D2Draw: # <<<<<<<<< STATIC DRAW             # <<<<<<<<<<<<<<
 *     def __init__(self,screen_res):
 *         self.size = screen_res
 */
    __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_D2Draw, __pyx_empty_tuple, __pyx_t_1, NULL, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 45, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_D2Draw, __pyx_t_4) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":279
 * #Some usefull animation events
 * # pre pepared (animation etc)
 * def change_color(object,from_,to_):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 279, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 279, __pyx_L1_error);
    #endif
    __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_5change_color, 0, __pyx_n_s_change_color, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__58)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 279, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_change_color, __pyx_t_1) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":282
 *     pass
 * 
 * class D2DEvents:             # <<<<<<<<<<<<<<
 *     def __init__(self,cvroot):
 *         '''
 */
    __pyx_t_1 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_D2DEvents, __pyx_n_s_D2DEvents, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":283
 * 
 * class D2DEvents:
 *     def __init__(self,cvroot):             # <<<<<<<<<<<<<<
 *         '''
 *         Event_Type -
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 283, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 283, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_1__init__, 0, __pyx_n_s_D2DEvents___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__60)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 283, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":315
 *         self.master.bind('<Button-2>',self.checkmclick)
 *         self.master.bind('<KeyPress>',self.checkkeypress)
 *     def clear_events(self):             # <<<<<<<<<<<<<<
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 315, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 315, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_3clear_events, 0, __pyx_n_s_D2DEvents_clear_events, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__62)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_clear_events, __pyx_t_4) < 0) __PYX_ERR(0, 315, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":317
 *     def clear_events(self):
 *         self.hover_events    = [];self.rclick_events   = [];self.lclick_events   = [];self.mclick_events   = [];self.keypress_events = []
 *     def checkkeypress(self,ev):             # <<<<<<<<<<<<<<
 *         for i in self.keypress_events:
 *             i[0](ev)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 317, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 317, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_5checkkeypress, 0, __pyx_n_s_D2DEvents_checkkeypress, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__64)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_checkkeypress, __pyx_t_4) < 0) __PYX_ERR(0, 317, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":320
 *         for i in self.keypress_events:
 *             i[0](ev)
 *     def checkmclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 320, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 320, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_7checkmclick, 0, __pyx_n_s_D2DEvents_checkmclick, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__66)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_checkmclick, __pyx_t_4) < 0) __PYX_ERR(0, 320, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":341
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checklclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 341, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 341, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_9checklclick, 0, __pyx_n_s_D2DEvents_checklclick, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__68)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_checklclick, __pyx_t_4) < 0) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":362
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkrclick(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 *         t = False
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 362, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 362, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_11checkrclick, 0, __pyx_n_s_D2DEvents_checkrclick, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__70)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 362, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_checkrclick, __pyx_t_4) < 0) __PYX_ERR(0, 362, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":383
 *             self.master.after(delay,previoev)
 *             c+=1
 *     def checkmotion(self,ev):             # <<<<<<<<<<<<<<
 *         c=0
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 383, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_13checkmotion, 0, __pyx_n_s_D2DEvents_checkmotion, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__72)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_checkmotion, __pyx_t_4) < 0) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":413
 * 
 * 
 *     def add_event(self,EventType=None,Cords=None,EventOn=None,EventOff=None,EventDelay=None):             # <<<<<<<<<<<<<<
 *         if type(EventType) is int:
 *             dat = self.evt.get(EventType)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 413, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 413, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_15add_event, 0, __pyx_n_s_D2DEvents_add_event, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__74)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_tuple__75);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_add_event, __pyx_t_4) < 0) __PYX_ERR(0, 413, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":460
 * 
 * 
 *     def check(self,ev,lfg,lfm,lfe):             # <<<<<<<<<<<<<<
 *         if ev.x <= self.crd[0]:
 *             if ev.y <= self.crd[1]:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 460, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 460, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_17check, 0, __pyx_n_s_D2DEvents_check, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__77)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 460, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_check, __pyx_t_4) < 0) __PYX_ERR(0, 460, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":468
 *                         launch_function_mid()
 *                         launch_function_end()
 *     def _pas(self):             # <<<<<<<<<<<<<<
 *         pass#DFPASS  #._.
 * #__init__ file.
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 468, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 468, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DEvents_19_pas, 0, __pyx_n_s_D2DEvents__pas, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__79)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_1, __pyx_n_s_pas, __pyx_t_4) < 0) __PYX_ERR(0, 468, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":282
 *     pass
 * 
 * class D2DEvents:             # <<<<<<<<<<<<<<
 *     def __init__(self,cvroot):
 *         '''
 */
    __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_D2DEvents, __pyx_empty_tuple, __pyx_t_1, NULL, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 282, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 282, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_D2DEvents, __pyx_t_4) < 0) __PYX_ERR(0, 282, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":488
 * #  http://www.codeproject.com/Articles/1073475/OpenGL-in-Python-with-TKinter
 * # Large parts copied from pyopengl/Tk/__init__.py
 * import sys, math, time             # <<<<<<<<<<<<<<
 * from OpenGL import GL, GLU
 * from OpenGL import GL, GLUT
 */
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_sys, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 488, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_1) < 0) __PYX_ERR(0, 488, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_math, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 488, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_1) < 0) __PYX_ERR(0, 488, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_time, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 488, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 488, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_1) < 0) __PYX_ERR(0, 488, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":489
 * # Large parts copied from pyopengl/Tk/__init__.py
 * import sys, math, time
 * from OpenGL import GL, GLU             # <<<<<<<<<<<<<<
 * from OpenGL import GL, GLUT
 * from OpenGL.GL import *
 */
    __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_GL);
    __Pyx_GIVEREF(__pyx_n_s_GL);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_GL);
    __Pyx_INCREF(__pyx_n_s_GLU);
    __Pyx_GIVEREF(__pyx_n_s_GLU);
    PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_GLU);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_OpenGL, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 489, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GL, __pyx_t_1) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_GLU); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 489, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GLU, __pyx_t_1) < 0) __PYX_ERR(0, 489, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":490
 * import sys, math, time
 * from OpenGL import GL, GLU
 * from OpenGL import GL, GLUT             # <<<<<<<<<<<<<<
 * from OpenGL.GL import *
 * import _thread as th
 */
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_GL);
    __Pyx_GIVEREF(__pyx_n_s_GL);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_GL);
    __Pyx_INCREF(__pyx_n_s_GLUT);
    __Pyx_GIVEREF(__pyx_n_s_GLUT);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_GLUT);
    __pyx_t_1 = __Pyx_Import(__pyx_n_s_OpenGL, __pyx_t_4, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_GL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 490, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GL, __pyx_t_4) < 0) __PYX_ERR(0, 490, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_GLUT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 490, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 490, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GLUT, __pyx_t_4) < 0) __PYX_ERR(0, 490, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":491
 * from OpenGL import GL, GLU
 * from OpenGL import GL, GLUT
 * from OpenGL.GL import *             # <<<<<<<<<<<<<<
 * import _thread as th
 * if sys.version_info[0] < 3:
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s__80);
    __Pyx_GIVEREF(__pyx_n_s__80);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__80);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_OpenGL_GL, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_import_star(__pyx_t_4) < 0) __PYX_ERR(0, 491, __pyx_L1_error);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":492
 * from OpenGL import GL, GLUT
 * from OpenGL.GL import *
 * import _thread as th             # <<<<<<<<<<<<<<
 * if sys.version_info[0] < 3:
 *     import Tkinter as tk
 */
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_thread, 0, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 492, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_th, __pyx_t_4) < 0) __PYX_ERR(0, 492, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":493
 * from OpenGL.GL import *
 * import _thread as th
 * if sys.version_info[0] < 3:             # <<<<<<<<<<<<<<
 *     import Tkinter as tk
 *     import Dialog as dialog
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_version_info); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_4, __pyx_int_3, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 493, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":494
 * import _thread as th
 * if sys.version_info[0] < 3:
 *     import Tkinter as tk             # <<<<<<<<<<<<<<
 *     import Dialog as dialog
 * else:
 */
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_Tkinter, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 494, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 494, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_tk, __pyx_t_1) < 0) __PYX_ERR(0, 494, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":495
 * if sys.version_info[0] < 3:
 *     import Tkinter as tk
 *     import Dialog as dialog             # <<<<<<<<<<<<<<
 * else:
 *     import tkinter as tk
 */
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_Dialog, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 495, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_dialog, __pyx_t_1) < 0) __PYX_ERR(0, 495, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":493
 * from OpenGL.GL import *
 * import _thread as th
 * if sys.version_info[0] < 3:             # <<<<<<<<<<<<<<
 *     import Tkinter as tk
 *     import Dialog as dialog
 */
      goto __pyx_L3;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":497
 *     import Dialog as dialog
 * else:
 *     import tkinter as tk             # <<<<<<<<<<<<<<
 *     from tkinter import dialog as dialog
 * __all__ = [  'OpenGLFrame', 'RawOpengl', 'Opengl',
 */
    /*else*/ {
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_tkinter, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 497, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 497, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_tk, __pyx_t_1) < 0) __PYX_ERR(0, 497, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":498
 * else:
 *     import tkinter as tk
 *     from tkinter import dialog as dialog             # <<<<<<<<<<<<<<
 * __all__ = [  'OpenGLFrame', 'RawOpengl', 'Opengl',
 *         'v3distsq' ]
 */
      __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_n_s_dialog);
      __Pyx_GIVEREF(__pyx_n_s_dialog);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_dialog);
      __pyx_t_4 = __Pyx_Import(__pyx_n_s_tkinter, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_dialog); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 498, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_dialog, __pyx_t_1) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_L3:;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":499
 *     import tkinter as tk
 *     from tkinter import dialog as dialog
 * __all__ = [  'OpenGLFrame', 'RawOpengl', 'Opengl',             # <<<<<<<<<<<<<<
 *         'v3distsq' ]
 * class baseOpenGLFrame(tk.Frame):
 */
    __pyx_t_4 = PyList_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 499, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_OpenGLFrame);
    __Pyx_GIVEREF(__pyx_n_s_OpenGLFrame);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_OpenGLFrame);
    __Pyx_INCREF(__pyx_n_s_RawOpengl);
    __Pyx_GIVEREF(__pyx_n_s_RawOpengl);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_RawOpengl);
    __Pyx_INCREF(__pyx_n_s_Opengl);
    __Pyx_GIVEREF(__pyx_n_s_Opengl);
    PyList_SET_ITEM(__pyx_t_4, 2, __pyx_n_s_Opengl);
    __Pyx_INCREF(__pyx_n_s_v3distsq);
    __Pyx_GIVEREF(__pyx_n_s_v3distsq);
    PyList_SET_ITEM(__pyx_t_4, 3, __pyx_n_s_v3distsq);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 499, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_all, __pyx_t_4) < 0) __PYX_ERR(0, 499, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":501
 * __all__ = [  'OpenGLFrame', 'RawOpengl', 'Opengl',
 *         'v3distsq' ]
 * class baseOpenGLFrame(tk.Frame):             # <<<<<<<<<<<<<<
 *     """ Common code for windows/x11 """
 *     ## On cords
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_tk); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_Frame); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_4, __pyx_n_s_baseOpenGLFrame, __pyx_n_s_baseOpenGLFrame, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_kp_s_Common_code_for_windows_x11); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":504
 *     """ Common code for windows/x11 """
 *     ## On cords
 *     def check_all_b1_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_B1:
 *             c = i[0]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 504, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 504, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_1check_all_b1_events, 0, __pyx_n_s_baseOpenGLFrame_check_all_b1_eve, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__82)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_check_all_b1_events, __pyx_t_6) < 0) __PYX_ERR(0, 504, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":512
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_brelase_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BR:
 *             c = i[0]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 512, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 512, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_3check_all_brelase_events, 0, __pyx_n_s_baseOpenGLFrame_check_all_brelas, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__84)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_check_all_brelase_events, __pyx_t_6) < 0) __PYX_ERR(0, 512, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":520
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def check_all_bpress_events(self,event):             # <<<<<<<<<<<<<<
 *         for i in self.events_BP:
 *             c = i[0]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 520, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 520, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_5check_all_bpress_events, 0, __pyx_n_s_baseOpenGLFrame_check_all_bpress, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__86)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 520, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_check_all_bpress_events, __pyx_t_6) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":528
 *                         if event.y < c[3]:
 *                             i[1]()
 *     def create_event(self,cords,launch_func,event_type):             # <<<<<<<<<<<<<<
 *         if event_type is self.ev_type[0]:
 *            self.events_B1.append([cords, launch_func])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 528, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 528, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_7create_event, 0, __pyx_n_s_baseOpenGLFrame_create_event, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__88)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_create_event, __pyx_t_6) < 0) __PYX_ERR(0, 528, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":541
 *         if event_type is self.ev_type[5]:
 *            self.events_BP.append([cords, launch_func])
 *     def check_event_button_1(self,event,c,func):             # <<<<<<<<<<<<<<
 *         if event.x > c[0]:
 *             if c[2] > event.x:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 541, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 541, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_9check_event_button_1, 0, __pyx_n_s_baseOpenGLFrame_check_event_butt, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__90)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_check_event_button_1, __pyx_t_6) < 0) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":548
 *                         func()
 * 
 *     def __init__(self, *args, **kw):             # <<<<<<<<<<<<<<
 *         # Set background to empty string to avoid
 *         # flickering overdraw by Tk
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 548, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 548, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_11__init__, 0, __pyx_n_s_baseOpenGLFrame___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__92)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 548, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_init, __pyx_t_6) < 0) __PYX_ERR(0, 548, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":572
 *         self.events_BP = []
 *         self.ev_type = ['B1','B2','B3','MN','BR','BP'] # B - button MN - Motion
 *     def tkMap( self, evt ):             # <<<<<<<<<<<<<<
 *         """" Called when frame goes onto the screen """
 *         self._wid = self.winfo_id()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 572, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 572, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_13tkMap, 0, __pyx_n_s_baseOpenGLFrame_tkMap, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__94)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkMap, __pyx_t_6) < 0) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":577
 *         self.tkCreateContext( )
 *         self.initgl()
 *     def printContext(self, extns=False):             # <<<<<<<<<<<<<<
 *         """ For debugging """
 *         exts = GL.glGetString(GL.GL_EXTENSIONS)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 577, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 577, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_15printContext, 0, __pyx_n_s_baseOpenGLFrame_printContext, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__96)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 577, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_6, __pyx_tuple__97);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_printContext, __pyx_t_6) < 0) __PYX_ERR(0, 577, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":602
 *             print("Old context errors arose")
 *             # raise
 *     def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 602, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 602, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_17tkCreateContext, 0, __pyx_n_s_baseOpenGLFrame_tkCreateContext, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__99)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 602, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkCreateContext, __pyx_t_6) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":605
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 605, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 605, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_19tkMakeCurrent, 0, __pyx_n_s_baseOpenGLFrame_tkMakeCurrent, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__101)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 605, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkMakeCurrent, __pyx_t_6) < 0) __PYX_ERR(0, 605, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":608
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *         # Platform dependent part
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 608, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 608, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_21tkSwapBuffers, 0, __pyx_n_s_baseOpenGLFrame_tkSwapBuffers, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__103)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 608, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkSwapBuffers, __pyx_t_6) < 0) __PYX_ERR(0, 608, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":611
 *         # Platform dependent part
 *         raise NotImplementedError
 *     def tkExpose( self, evt):             # <<<<<<<<<<<<<<
 *         if self.cb:
 *             self.after_cancel(self.cb)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 611, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 611, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_23tkExpose, 0, __pyx_n_s_baseOpenGLFrame_tkExpose, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__105)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkExpose, __pyx_t_6) < 0) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":615
 *             self.after_cancel(self.cb)
 *         self._display()
 *     def tkResize( self, evt ):             # <<<<<<<<<<<<<<
 *         """
 *         Things to do on window resize:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 615, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 615, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_25tkResize, 0, __pyx_n_s_baseOpenGLFrame_tkResize, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__107)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkResize, __pyx_t_6) < 0) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":634
 *             self.initgl()
 * 
 *     def _display(self):             # <<<<<<<<<<<<<<
 *         if self.freecalc_update is 1:
 *             self.freecalc_update=0
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 634, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 634, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_27_display, 0, __pyx_n_s_baseOpenGLFrame__display, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__109)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_display, __pyx_t_6) < 0) __PYX_ERR(0, 634, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":644
 *             self.cb = self.after(self.animate, self._display )
 * 
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 644, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 644, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_29initgl, 0, __pyx_n_s_baseOpenGLFrame_initgl, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__111)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 644, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_initgl, __pyx_t_6) < 0) __PYX_ERR(0, 644, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":647
 *         # For the user code
 *         raise NotImplementedError
 *     def freecalc(self):             # <<<<<<<<<<<<<<
 *         #for user code 2
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 647, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 647, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_31freecalc, 0, __pyx_n_s_baseOpenGLFrame_freecalc, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__113)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_freecalc, __pyx_t_6) < 0) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":650
 *         #for user code 2
 *         raise NotImplementedError
 *     def redraw(self):             # <<<<<<<<<<<<<<
 *         # For the user code
 *         raise NotImplementedError
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 650, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 650, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_33redraw, 0, __pyx_n_s_baseOpenGLFrame_redraw, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__115)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 650, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_redraw, __pyx_t_6) < 0) __PYX_ERR(0, 650, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":653
 *         # For the user code
 *         raise NotImplementedError
 *     def wait(self,t):             # <<<<<<<<<<<<<<
 *         time.sleep(t)
 *     def free_calc_update(self):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 653, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 653, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_35wait, 0, __pyx_n_s_baseOpenGLFrame_wait, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__117)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 653, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_wait, __pyx_t_6) < 0) __PYX_ERR(0, 653, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":655
 *     def wait(self,t):
 *         time.sleep(t)
 *     def free_calc_update(self):             # <<<<<<<<<<<<<<
 *         self.freecalc_update = 1
 * ###############################################################################
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
    #else
    __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 655, __pyx_L1_error);
    #endif
    __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15baseOpenGLFrame_37free_calc_update, 0, __pyx_n_s_baseOpenGLFrame_free_calc_update, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__119)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_free_calc_update, __pyx_t_6) < 0) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":501
 * __all__ = [  'OpenGLFrame', 'RawOpengl', 'Opengl',
 *         'v3distsq' ]
 * class baseOpenGLFrame(tk.Frame):             # <<<<<<<<<<<<<<
 *     """ Common code for windows/x11 """
 *     ## On cords
 */
    __pyx_t_6 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_baseOpenGLFrame, __pyx_t_4, __pyx_t_7, NULL, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 501, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 501, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_baseOpenGLFrame, __pyx_t_6) < 0) __PYX_ERR(0, 501, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":659
 * ###############################################################################
 * # Windows specific code here:
 * if sys.platform.startswith( 'win32' ):             # <<<<<<<<<<<<<<
 *     from ctypes import WinDLL, c_void_p, sizeof
 *     from ctypes.wintypes import HDC, BOOL
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_platform); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_startswith); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":660
 * # Windows specific code here:
 * if sys.platform.startswith( 'win32' ):
 *     from ctypes import WinDLL, c_void_p, sizeof             # <<<<<<<<<<<<<<
 *     from ctypes.wintypes import HDC, BOOL
 *     from OpenGL.WGL import PIXELFORMATDESCRIPTOR, ChoosePixelFormat, \
 */
      __pyx_t_1 = PyList_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_n_s_WinDLL);
      __Pyx_GIVEREF(__pyx_n_s_WinDLL);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_WinDLL);
      __Pyx_INCREF(__pyx_n_s_c_void_p);
      __Pyx_GIVEREF(__pyx_n_s_c_void_p);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_c_void_p);
      __Pyx_INCREF(__pyx_n_s_sizeof);
      __Pyx_GIVEREF(__pyx_n_s_sizeof);
      PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_sizeof);
      __pyx_t_4 = __Pyx_Import(__pyx_n_s_ctypes, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_WinDLL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 660, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_WinDLL, __pyx_t_1) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 660, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_c_void_p, __pyx_t_1) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_sizeof); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 660, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_sizeof, __pyx_t_1) < 0) __PYX_ERR(0, 660, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":661
 * if sys.platform.startswith( 'win32' ):
 *     from ctypes import WinDLL, c_void_p, sizeof
 *     from ctypes.wintypes import HDC, BOOL             # <<<<<<<<<<<<<<
 *     from OpenGL.WGL import PIXELFORMATDESCRIPTOR, ChoosePixelFormat, \
 *             SetPixelFormat, SwapBuffers, wglCreateContext, wglMakeCurrent
 */
      __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_n_s_HDC);
      __Pyx_GIVEREF(__pyx_n_s_HDC);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_HDC);
      __Pyx_INCREF(__pyx_n_s_BOOL);
      __Pyx_GIVEREF(__pyx_n_s_BOOL);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_n_s_BOOL);
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes_wintypes, __pyx_t_4, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_HDC); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 661, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_HDC, __pyx_t_4) < 0) __PYX_ERR(0, 661, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_BOOL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 661, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 661, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_BOOL, __pyx_t_4) < 0) __PYX_ERR(0, 661, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":662
 *     from ctypes import WinDLL, c_void_p, sizeof
 *     from ctypes.wintypes import HDC, BOOL
 *     from OpenGL.WGL import PIXELFORMATDESCRIPTOR, ChoosePixelFormat, \             # <<<<<<<<<<<<<<
 *             SetPixelFormat, SwapBuffers, wglCreateContext, wglMakeCurrent
 *     _user32 = WinDLL('user32')
 */
      __pyx_t_1 = PyList_New(6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_n_s_PIXELFORMATDESCRIPTOR);
      __Pyx_GIVEREF(__pyx_n_s_PIXELFORMATDESCRIPTOR);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PIXELFORMATDESCRIPTOR);
      __Pyx_INCREF(__pyx_n_s_ChoosePixelFormat);
      __Pyx_GIVEREF(__pyx_n_s_ChoosePixelFormat);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_ChoosePixelFormat);
      __Pyx_INCREF(__pyx_n_s_SetPixelFormat);
      __Pyx_GIVEREF(__pyx_n_s_SetPixelFormat);
      PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_SetPixelFormat);
      __Pyx_INCREF(__pyx_n_s_SwapBuffers);
      __Pyx_GIVEREF(__pyx_n_s_SwapBuffers);
      PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_SwapBuffers);
      __Pyx_INCREF(__pyx_n_s_wglCreateContext);
      __Pyx_GIVEREF(__pyx_n_s_wglCreateContext);
      PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_wglCreateContext);
      __Pyx_INCREF(__pyx_n_s_wglMakeCurrent);
      __Pyx_GIVEREF(__pyx_n_s_wglMakeCurrent);
      PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_s_wglMakeCurrent);
      __pyx_t_4 = __Pyx_Import(__pyx_n_s_OpenGL_WGL, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PIXELFORMATDESCRIPTOR); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 662, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PIXELFORMATDESCRIPTOR, __pyx_t_1) < 0) __PYX_ERR(0, 662, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_ChoosePixelFormat); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 662, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_ChoosePixelFormat, __pyx_t_1) < 0) __PYX_ERR(0, 662, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_SetPixelFormat); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 663, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_SetPixelFormat, __pyx_t_1) < 0) __PYX_ERR(0, 663, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_SwapBuffers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 663, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_SwapBuffers, __pyx_t_1) < 0) __PYX_ERR(0, 663, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_wglCreateContext); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 663, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_wglCreateContext, __pyx_t_1) < 0) __PYX_ERR(0, 663, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_wglMakeCurrent); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 663, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_wglMakeCurrent, __pyx_t_1) < 0) __PYX_ERR(0, 663, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":664
 *     from OpenGL.WGL import PIXELFORMATDESCRIPTOR, ChoosePixelFormat, \
 *             SetPixelFormat, SwapBuffers, wglCreateContext, wglMakeCurrent
 *     _user32 = WinDLL('user32')             # <<<<<<<<<<<<<<
 *     GetDC = _user32.GetDC
 *     GetDC.restype = HDC
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WinDLL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__121, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 664, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 664, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_user32_2, __pyx_t_1) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":665
 *             SetPixelFormat, SwapBuffers, wglCreateContext, wglMakeCurrent
 *     _user32 = WinDLL('user32')
 *     GetDC = _user32.GetDC             # <<<<<<<<<<<<<<
 *     GetDC.restype = HDC
 *     GetDC.argtypes = [c_void_p]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_user32_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_GetDC); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 665, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 665, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_GetDC, __pyx_t_4) < 0) __PYX_ERR(0, 665, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":666
 *     _user32 = WinDLL('user32')
 *     GetDC = _user32.GetDC
 *     GetDC.restype = HDC             # <<<<<<<<<<<<<<
 *     GetDC.argtypes = [c_void_p]
 *     pfd = PIXELFORMATDESCRIPTOR()
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_HDC); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GetDC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 666, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_restype, __pyx_t_4) < 0) __PYX_ERR(0, 666, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":667
 *     GetDC = _user32.GetDC
 *     GetDC.restype = HDC
 *     GetDC.argtypes = [c_void_p]             # <<<<<<<<<<<<<<
 *     pfd = PIXELFORMATDESCRIPTOR()
 *     PFD_TYPE_RGBA =         0
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
      __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GetDC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 667, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_argtypes, __pyx_t_4) < 0) __PYX_ERR(0, 667, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":668
 *     GetDC.restype = HDC
 *     GetDC.argtypes = [c_void_p]
 *     pfd = PIXELFORMATDESCRIPTOR()             # <<<<<<<<<<<<<<
 *     PFD_TYPE_RGBA =         0
 *     PFD_MAIN_PLANE =        0
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PIXELFORMATDESCRIPTOR); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 668, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 668, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_pfd, __pyx_t_4) < 0) __PYX_ERR(0, 668, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":669
 *     GetDC.argtypes = [c_void_p]
 *     pfd = PIXELFORMATDESCRIPTOR()
 *     PFD_TYPE_RGBA =         0             # <<<<<<<<<<<<<<
 *     PFD_MAIN_PLANE =        0
 *     PFD_DOUBLEBUFFER =      0x00000001
 */
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 669, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PFD_TYPE_RGBA, __pyx_int_0) < 0) __PYX_ERR(0, 669, __pyx_L1_error)
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":670
 *     pfd = PIXELFORMATDESCRIPTOR()
 *     PFD_TYPE_RGBA =         0
 *     PFD_MAIN_PLANE =        0             # <<<<<<<<<<<<<<
 *     PFD_DOUBLEBUFFER =      0x00000001
 *     PFD_DRAW_TO_WINDOW =    0x00000004
 */
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 670, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PFD_MAIN_PLANE, __pyx_int_0) < 0) __PYX_ERR(0, 670, __pyx_L1_error)
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":671
 *     PFD_TYPE_RGBA =         0
 *     PFD_MAIN_PLANE =        0
 *     PFD_DOUBLEBUFFER =      0x00000001             # <<<<<<<<<<<<<<
 *     PFD_DRAW_TO_WINDOW =    0x00000004
 *     PFD_SUPPORT_OPENGL =    0x00000020
 */
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 671, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PFD_DOUBLEBUFFER, __pyx_int_1) < 0) __PYX_ERR(0, 671, __pyx_L1_error)
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":672
 *     PFD_MAIN_PLANE =        0
 *     PFD_DOUBLEBUFFER =      0x00000001
 *     PFD_DRAW_TO_WINDOW =    0x00000004             # <<<<<<<<<<<<<<
 *     PFD_SUPPORT_OPENGL =    0x00000020
 *     pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
 */
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 672, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PFD_DRAW_TO_WINDOW, __pyx_int_4) < 0) __PYX_ERR(0, 672, __pyx_L1_error)
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":673
 *     PFD_DOUBLEBUFFER =      0x00000001
 *     PFD_DRAW_TO_WINDOW =    0x00000004
 *     PFD_SUPPORT_OPENGL =    0x00000020             # <<<<<<<<<<<<<<
 *     pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
 *     pfd.iPixelType = PFD_TYPE_RGBA
 */
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 673, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_PFD_SUPPORT_OPENGL, __pyx_int_32) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":674
 *     PFD_DRAW_TO_WINDOW =    0x00000004
 *     PFD_SUPPORT_OPENGL =    0x00000020
 *     pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER             # <<<<<<<<<<<<<<
 *     pfd.iPixelType = PFD_TYPE_RGBA
 *     pfd.cColorBits = 24
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_PFD_DRAW_TO_WINDOW); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PFD_SUPPORT_OPENGL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = PyNumber_Or(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PFD_DOUBLEBUFFER); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyNumber_Or(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pfd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_dwFlags, __pyx_t_4) < 0) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":675
 *     PFD_SUPPORT_OPENGL =    0x00000020
 *     pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
 *     pfd.iPixelType = PFD_TYPE_RGBA             # <<<<<<<<<<<<<<
 *     pfd.cColorBits = 24
 *     pfd.cDepthBits = 16
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PFD_TYPE_RGBA); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pfd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_4, __pyx_n_s_iPixelType, __pyx_t_1) < 0) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":676
 *     pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
 *     pfd.iPixelType = PFD_TYPE_RGBA
 *     pfd.cColorBits = 24             # <<<<<<<<<<<<<<
 *     pfd.cDepthBits = 16
 *     pfd.iLayerType = PFD_MAIN_PLANE
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pfd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_4, __pyx_n_s_cColorBits, __pyx_int_24) < 0) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":677
 *     pfd.iPixelType = PFD_TYPE_RGBA
 *     pfd.cColorBits = 24
 *     pfd.cDepthBits = 16             # <<<<<<<<<<<<<<
 *     pfd.iLayerType = PFD_MAIN_PLANE
 *     # Inherits the base and fills in the 3 platform dependent functions
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pfd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 677, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_4, __pyx_n_s_cDepthBits, __pyx_int_16) < 0) __PYX_ERR(0, 677, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":678
 *     pfd.cColorBits = 24
 *     pfd.cDepthBits = 16
 *     pfd.iLayerType = PFD_MAIN_PLANE             # <<<<<<<<<<<<<<
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_PFD_MAIN_PLANE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pfd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_iLayerType, __pyx_t_4) < 0) __PYX_ERR(0, 678, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":680
 *     pfd.iLayerType = PFD_MAIN_PLANE
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):             # <<<<<<<<<<<<<<
 * 
 *         def tkCreateContext( self ):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_baseOpenGLFrame); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 680, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 680, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_CalculateMetaclass(NULL, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 680, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_Py3MetaclassPrepare(__pyx_t_1, __pyx_t_4, __pyx_n_s_OpenGLFrame, __pyx_n_s_OpenGLFrame, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 680, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":682
 *     class OpenGLFrame( baseOpenGLFrame ):
 * 
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = GetDC(self.winfo_id())
 *             pixelformat = ChoosePixelFormat(self.__window, pfd)
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 682, __pyx_L1_error)
      #else
      __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 682, __pyx_L1_error);
      #endif
      __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_1tkCreateContext, 0, __pyx_n_s_OpenGLFrame_tkCreateContext, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__123)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 682, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkCreateContext, __pyx_t_6) < 0) __PYX_ERR(0, 682, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":688
 *             self.__context = wglCreateContext(self.__window)
 *             wglMakeCurrent(self.__window, self.__context)
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 wglMakeCurrent( self.__window, self.__context)
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 688, __pyx_L1_error)
      #else
      __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 688, __pyx_L1_error);
      #endif
      __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_3tkMakeCurrent, 0, __pyx_n_s_OpenGLFrame_tkMakeCurrent, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__125)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 688, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkMakeCurrent, __pyx_t_6) < 0) __PYX_ERR(0, 688, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":692
 *                 wglMakeCurrent( self.__window, self.__context)
 * 
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 SwapBuffers(self.__window)
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_3 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 692, __pyx_L1_error)
      #else
      __pyx_t_3 = __pyx_d;  if ((1)); else __PYX_ERR(0, 692, __pyx_L1_error);
      #endif
      __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_5tkSwapBuffers, 0, __pyx_n_s_OpenGLFrame_tkSwapBuffers, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_3, ((PyObject *)__pyx_codeobj__127)); __pyx_t_3 = NULL; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_SetNameInClass(__pyx_t_7, __pyx_n_s_tkSwapBuffers, __pyx_t_6) < 0) __PYX_ERR(0, 692, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":680
 *     pfd.iLayerType = PFD_MAIN_PLANE
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):             # <<<<<<<<<<<<<<
 * 
 *         def tkCreateContext( self ):
 */
      __pyx_t_6 = __Pyx_Py3ClassCreate(__pyx_t_1, __pyx_n_s_OpenGLFrame, __pyx_t_4, __pyx_t_7, NULL, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 680, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 680, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_OpenGLFrame, __pyx_t_6) < 0) __PYX_ERR(0, 680, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":659
 * ###############################################################################
 * # Windows specific code here:
 * if sys.platform.startswith( 'win32' ):             # <<<<<<<<<<<<<<
 *     from ctypes import WinDLL, c_void_p, sizeof
 *     from ctypes.wintypes import HDC, BOOL
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":698
 * ###############################################################################
 * # Linux/X11 specific code here:
 * if sys.platform.startswith( 'linux' ):             # <<<<<<<<<<<<<<
 *     from ctypes import c_int, c_char_p, c_void_p, cdll, POINTER, util, \
 *         pointer, CFUNCTYPE, c_bool
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_sys); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_platform); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_startswith); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__128, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_2) {

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":699
 * # Linux/X11 specific code here:
 * if sys.platform.startswith( 'linux' ):
 *     from ctypes import c_int, c_char_p, c_void_p, cdll, POINTER, util, \             # <<<<<<<<<<<<<<
 *         pointer, CFUNCTYPE, c_bool
 *     from OpenGL import GLX
 */
      __pyx_t_1 = PyList_New(9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_n_s_c_int);
      __Pyx_GIVEREF(__pyx_n_s_c_int);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_c_int);
      __Pyx_INCREF(__pyx_n_s_c_char_p);
      __Pyx_GIVEREF(__pyx_n_s_c_char_p);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_c_char_p);
      __Pyx_INCREF(__pyx_n_s_c_void_p);
      __Pyx_GIVEREF(__pyx_n_s_c_void_p);
      PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_c_void_p);
      __Pyx_INCREF(__pyx_n_s_cdll);
      __Pyx_GIVEREF(__pyx_n_s_cdll);
      PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_cdll);
      __Pyx_INCREF(__pyx_n_s_POINTER);
      __Pyx_GIVEREF(__pyx_n_s_POINTER);
      PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_POINTER);
      __Pyx_INCREF(__pyx_n_s_util);
      __Pyx_GIVEREF(__pyx_n_s_util);
      PyList_SET_ITEM(__pyx_t_1, 5, __pyx_n_s_util);
      __Pyx_INCREF(__pyx_n_s_pointer);
      __Pyx_GIVEREF(__pyx_n_s_pointer);
      PyList_SET_ITEM(__pyx_t_1, 6, __pyx_n_s_pointer);
      __Pyx_INCREF(__pyx_n_s_CFUNCTYPE);
      __Pyx_GIVEREF(__pyx_n_s_CFUNCTYPE);
      PyList_SET_ITEM(__pyx_t_1, 7, __pyx_n_s_CFUNCTYPE);
      __Pyx_INCREF(__pyx_n_s_c_bool);
      __Pyx_GIVEREF(__pyx_n_s_c_bool);
      PyList_SET_ITEM(__pyx_t_1, 8, __pyx_n_s_c_bool);
      __pyx_t_4 = __Pyx_Import(__pyx_n_s_ctypes, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_c_int); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_c_int, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_c_char_p); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_c_char_p, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_c_void_p, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_cdll); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_cdll, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_POINTER); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_POINTER, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_util); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 699, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_util, __pyx_t_1) < 0) __PYX_ERR(0, 699, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_pointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 700, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_pointer, __pyx_t_1) < 0) __PYX_ERR(0, 700, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_CFUNCTYPE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 700, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_CFUNCTYPE, __pyx_t_1) < 0) __PYX_ERR(0, 700, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_c_bool); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 700, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_c_bool, __pyx_t_1) < 0) __PYX_ERR(0, 700, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":701
 *     from ctypes import c_int, c_char_p, c_void_p, cdll, POINTER, util, \
 *         pointer, CFUNCTYPE, c_bool
 *     from OpenGL import GLX             # <<<<<<<<<<<<<<
 *     try:
 *         from OpenGL.raw._GLX import Display
 */
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_n_s_GLX);
      __Pyx_GIVEREF(__pyx_n_s_GLX);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_GLX);
      __pyx_t_1 = __Pyx_Import(__pyx_n_s_OpenGL, __pyx_t_4, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 701, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 701, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_GLX, __pyx_t_4) < 0) __PYX_ERR(0, 701, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":702
 *         pointer, CFUNCTYPE, c_bool
 *     from OpenGL import GLX
 *     try:             # <<<<<<<<<<<<<<
 *         from OpenGL.raw._GLX import Display
 *     except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_3);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":703
 *     from OpenGL import GLX
 *     try:
 *         from OpenGL.raw._GLX import Display             # <<<<<<<<<<<<<<
 *     except:
 *         from OpenGL.raw.GLX._types import Display
 */
          __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_n_s_Display);
          __Pyx_GIVEREF(__pyx_n_s_Display);
          PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Display);
          __pyx_t_4 = __Pyx_Import(__pyx_n_s_OpenGL_raw__GLX, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 703, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_Display); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L6_error)
          __Pyx_GOTREF(__pyx_t_1);
          {
            #if CYTHON_COMPILING_IN_LIMITED_API
            PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 703, __pyx_L6_error)
            #endif
            if (PyDict_SetItem(__pyx_d, __pyx_n_s_Display, __pyx_t_1) < 0) __PYX_ERR(0, 703, __pyx_L6_error)
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":702
 *         pointer, CFUNCTYPE, c_bool
 *     from OpenGL import GLX
 *     try:             # <<<<<<<<<<<<<<
 *         from OpenGL.raw._GLX import Display
 *     except:
 */
        }
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L11_try_end;
        __pyx_L6_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":704
 *     try:
 *         from OpenGL.raw._GLX import Display
 *     except:             # <<<<<<<<<<<<<<
 *         from OpenGL.raw.GLX._types import Display
 * 
 */
        /*except:*/ {
          __Pyx_AddTraceback("Drago2Dengine.__versions__.win32.dist.Drago2Dengine", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_1, &__pyx_t_7) < 0) __PYX_ERR(0, 704, __pyx_L8_except_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_7);

          /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":705
 *         from OpenGL.raw._GLX import Display
 *     except:
 *         from OpenGL.raw.GLX._types import Display             # <<<<<<<<<<<<<<
 * 
 *     _x11lib = cdll.LoadLibrary(util.find_library( "X11" ) )
 */
          __pyx_t_6 = PyList_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 705, __pyx_L8_except_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_INCREF(__pyx_n_s_Display);
          __Pyx_GIVEREF(__pyx_n_s_Display);
          PyList_SET_ITEM(__pyx_t_6, 0, __pyx_n_s_Display);
          __pyx_t_5 = __Pyx_Import(__pyx_n_s_OpenGL_raw_GLX__types, __pyx_t_6, -1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 705, __pyx_L8_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_ImportFrom(__pyx_t_5, __pyx_n_s_Display); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 705, __pyx_L8_except_error)
          __Pyx_GOTREF(__pyx_t_6);
          {
            #if CYTHON_COMPILING_IN_LIMITED_API
            PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 705, __pyx_L8_except_error)
            #endif
            if (PyDict_SetItem(__pyx_d, __pyx_n_s_Display, __pyx_t_6) < 0) __PYX_ERR(0, 705, __pyx_L8_except_error)
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          goto __pyx_L7_exception_handled;
        }
        __pyx_L8_except_error:;

        /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":702
 *         pointer, CFUNCTYPE, c_bool
 *     from OpenGL import GLX
 *     try:             # <<<<<<<<<<<<<<
 *         from OpenGL.raw._GLX import Display
 *     except:
 */
        __Pyx_XGIVEREF(__pyx_t_3);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_8, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L7_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_3);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_8, __pyx_t_9);
        __pyx_L11_try_end:;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":707
 *         from OpenGL.raw.GLX._types import Display
 * 
 *     _x11lib = cdll.LoadLibrary(util.find_library( "X11" ) )             # <<<<<<<<<<<<<<
 *     XOpenDisplay = _x11lib.XOpenDisplay
 *     XOpenDisplay.argtypes = [c_char_p]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_cdll); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_LoadLibrary); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_util); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_find_library); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__129, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 707, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 707, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_x11lib, __pyx_t_4) < 0) __PYX_ERR(0, 707, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":708
 * 
 *     _x11lib = cdll.LoadLibrary(util.find_library( "X11" ) )
 *     XOpenDisplay = _x11lib.XOpenDisplay             # <<<<<<<<<<<<<<
 *     XOpenDisplay.argtypes = [c_char_p]
 *     XOpenDisplay.restype = POINTER(Display)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_x11lib); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 708, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_XOpenDisplay); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 708, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 708, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_XOpenDisplay, __pyx_t_7) < 0) __PYX_ERR(0, 708, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":709
 *     _x11lib = cdll.LoadLibrary(util.find_library( "X11" ) )
 *     XOpenDisplay = _x11lib.XOpenDisplay
 *     XOpenDisplay.argtypes = [c_char_p]             # <<<<<<<<<<<<<<
 *     XOpenDisplay.restype = POINTER(Display)
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_c_char_p); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 709, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 709, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_7);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_7);
      __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_XOpenDisplay); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 709, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_7, __pyx_n_s_argtypes, __pyx_t_4) < 0) __PYX_ERR(0, 709, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":710
 *     XOpenDisplay = _x11lib.XOpenDisplay
 *     XOpenDisplay.argtypes = [c_char_p]
 *     XOpenDisplay.restype = POINTER(Display)             # <<<<<<<<<<<<<<
 * 
 *     Colormap = c_void_p
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_POINTER); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 710, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_Display); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 710, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 710, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_XOpenDisplay); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 710, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_4, __pyx_n_s_restype, __pyx_t_1) < 0) __PYX_ERR(0, 710, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":712
 *     XOpenDisplay.restype = POINTER(Display)
 * 
 *     Colormap = c_void_p             # <<<<<<<<<<<<<<
 *     # Attributes for old style creation
 *     att = [     GLX.GLX_RGBA, GLX.GLX_DOUBLEBUFFER,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_c_void_p); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 712, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 712, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_Colormap, __pyx_t_4) < 0) __PYX_ERR(0, 712, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":714
 *     Colormap = c_void_p
 *     # Attributes for old style creation
 *     att = [     GLX.GLX_RGBA, GLX.GLX_DOUBLEBUFFER,             # <<<<<<<<<<<<<<
 *                 GLX.GLX_RED_SIZE,   4,
 *                 GLX.GLX_GREEN_SIZE, 4,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 714, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_RGBA); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 714, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 714, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_DOUBLEBUFFER); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 714, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":715
 *     # Attributes for old style creation
 *     att = [     GLX.GLX_RGBA, GLX.GLX_DOUBLEBUFFER,
 *                 GLX.GLX_RED_SIZE,   4,             # <<<<<<<<<<<<<<
 *                 GLX.GLX_GREEN_SIZE, 4,
 *                 GLX.GLX_BLUE_SIZE,  4,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 715, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_RED_SIZE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 715, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":716
 *     att = [     GLX.GLX_RGBA, GLX.GLX_DOUBLEBUFFER,
 *                 GLX.GLX_RED_SIZE,   4,
 *                 GLX.GLX_GREEN_SIZE, 4,             # <<<<<<<<<<<<<<
 *                 GLX.GLX_BLUE_SIZE,  4,
 *                 GLX.GLX_DEPTH_SIZE, 16,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 716, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_GREEN_SIZE); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 716, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":717
 *                 GLX.GLX_RED_SIZE,   4,
 *                 GLX.GLX_GREEN_SIZE, 4,
 *                 GLX.GLX_BLUE_SIZE,  4,             # <<<<<<<<<<<<<<
 *                 GLX.GLX_DEPTH_SIZE, 16,
 *                 0,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 717, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_BLUE_SIZE); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 717, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":718
 *                 GLX.GLX_GREEN_SIZE, 4,
 *                 GLX.GLX_BLUE_SIZE,  4,
 *                 GLX.GLX_DEPTH_SIZE, 16,             # <<<<<<<<<<<<<<
 *                 0,
 *             ]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 718, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_DEPTH_SIZE); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 718, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":714
 *     Colormap = c_void_p
 *     # Attributes for old style creation
 *     att = [     GLX.GLX_RGBA, GLX.GLX_DOUBLEBUFFER,             # <<<<<<<<<<<<<<
 *                 GLX.GLX_RED_SIZE,   4,
 *                 GLX.GLX_GREEN_SIZE, 4,
 */
      __pyx_t_4 = PyList_New(11); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 714, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_7);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_5);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_t_5);
      __Pyx_INCREF(__pyx_int_4);
      __Pyx_GIVEREF(__pyx_int_4);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_int_4);
      __Pyx_GIVEREF(__pyx_t_6);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_t_6);
      __Pyx_INCREF(__pyx_int_4);
      __Pyx_GIVEREF(__pyx_int_4);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_int_4);
      __Pyx_GIVEREF(__pyx_t_10);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_t_10);
      __Pyx_INCREF(__pyx_int_4);
      __Pyx_GIVEREF(__pyx_int_4);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_int_4);
      __Pyx_GIVEREF(__pyx_t_11);
      PyList_SET_ITEM(__pyx_t_4, 8, __pyx_t_11);
      __Pyx_INCREF(__pyx_int_16);
      __Pyx_GIVEREF(__pyx_int_16);
      PyList_SET_ITEM(__pyx_t_4, 9, __pyx_int_16);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_4, 10, __pyx_int_0);
      __pyx_t_1 = 0;
      __pyx_t_7 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 714, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_att, __pyx_t_4) < 0) __PYX_ERR(0, 714, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":722
 *             ]
 *     # Attributes for newer style creations
 *     fbatt = [     GLX.GLX_X_RENDERABLE     , 1,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_DRAWABLE_TYPE    , GLX.GLX_WINDOW_BIT,
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_X_RENDERABLE); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":723
 *     # Attributes for newer style creations
 *     fbatt = [     GLX.GLX_X_RENDERABLE     , 1,
 *                   GLX.GLX_DRAWABLE_TYPE    , GLX.GLX_WINDOW_BIT,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,
 *                   GLX.GLX_RED_SIZE         , 1,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_DRAWABLE_TYPE); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_WINDOW_BIT); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":724
 *     fbatt = [     GLX.GLX_X_RENDERABLE     , 1,
 *                   GLX.GLX_DRAWABLE_TYPE    , GLX.GLX_WINDOW_BIT,
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_RED_SIZE         , 1,
 *                   GLX.GLX_GREEN_SIZE       , 1,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 724, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_RENDER_TYPE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 724, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 724, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_RGBA_BIT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 724, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":725
 *                   GLX.GLX_DRAWABLE_TYPE    , GLX.GLX_WINDOW_BIT,
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,
 *                   GLX.GLX_RED_SIZE         , 1,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_GREEN_SIZE       , 1,
 *                   GLX.GLX_BLUE_SIZE        , 1,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 725, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_RED_SIZE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 725, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":726
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,
 *                   GLX.GLX_RED_SIZE         , 1,
 *                   GLX.GLX_GREEN_SIZE       , 1,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_BLUE_SIZE        , 1,
 *                   GLX.GLX_DOUBLEBUFFER     , 1,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 726, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_GREEN_SIZE); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 726, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":727
 *                   GLX.GLX_RED_SIZE         , 1,
 *                   GLX.GLX_GREEN_SIZE       , 1,
 *                   GLX.GLX_BLUE_SIZE        , 1,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_DOUBLEBUFFER     , 1,
 *                   0,
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 727, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_BLUE_SIZE); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 727, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":728
 *                   GLX.GLX_GREEN_SIZE       , 1,
 *                   GLX.GLX_BLUE_SIZE        , 1,
 *                   GLX.GLX_DOUBLEBUFFER     , 1,             # <<<<<<<<<<<<<<
 *                   0,
 *             ]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_GLX); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 728, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_GLX_DOUBLEBUFFER); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 728, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":722
 *             ]
 *     # Attributes for newer style creations
 *     fbatt = [     GLX.GLX_X_RENDERABLE     , 1,             # <<<<<<<<<<<<<<
 *                   GLX.GLX_DRAWABLE_TYPE    , GLX.GLX_WINDOW_BIT,
 *                   GLX.GLX_RENDER_TYPE      , GLX.GLX_RGBA_BIT,
 */
      __pyx_t_4 = PyList_New(15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_11);
      PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_11);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_10);
      PyList_SET_ITEM(__pyx_t_4, 2, __pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_6);
      PyList_SET_ITEM(__pyx_t_4, 3, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5);
      PyList_SET_ITEM(__pyx_t_4, 4, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_7);
      PyList_SET_ITEM(__pyx_t_4, 5, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_1);
      PyList_SET_ITEM(__pyx_t_4, 6, __pyx_t_1);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyList_SET_ITEM(__pyx_t_4, 7, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_12);
      PyList_SET_ITEM(__pyx_t_4, 8, __pyx_t_12);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyList_SET_ITEM(__pyx_t_4, 9, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_13);
      PyList_SET_ITEM(__pyx_t_4, 10, __pyx_t_13);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyList_SET_ITEM(__pyx_t_4, 11, __pyx_int_1);
      __Pyx_GIVEREF(__pyx_t_14);
      PyList_SET_ITEM(__pyx_t_4, 12, __pyx_t_14);
      __Pyx_INCREF(__pyx_int_1);
      __Pyx_GIVEREF(__pyx_int_1);
      PyList_SET_ITEM(__pyx_t_4, 13, __pyx_int_1);
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      PyList_SET_ITEM(__pyx_t_4, 14, __pyx_int_0);
      __pyx_t_11 = 0;
      __pyx_t_10 = 0;
      __pyx_t_6 = 0;
      __pyx_t_5 = 0;
      __pyx_t_7 = 0;
      __pyx_t_1 = 0;
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 722, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbatt, __pyx_t_4) < 0) __PYX_ERR(0, 722, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":732
 *             ]
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):             # <<<<<<<<<<<<<<
 *         def tkCreateContext( self ):
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_baseOpenGLFrame); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 732, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 732, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 732, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_13 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_14, __pyx_n_s_OpenGLFrame, __pyx_n_s_OpenGLFrame, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 732, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":733
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):
 *         def tkCreateContext( self ):             # <<<<<<<<<<<<<<
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 *             # Check glx version:
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 733, __pyx_L1_error)
      #else
      __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 733, __pyx_L1_error);
      #endif
      __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_7tkCreateContext, 0, __pyx_n_s_OpenGLFrame_tkCreateContext, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__131)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 733, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkCreateContext, __pyx_t_12) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":828
 *                                         (GL.GLint * len(arb_attrs))(* arb_attrs) )
 * 
 *         def tkMakeCurrent( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 828, __pyx_L1_error)
      #else
      __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 828, __pyx_L1_error);
      #endif
      __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_9tkMakeCurrent, 0, __pyx_n_s_OpenGLFrame_tkMakeCurrent, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__133)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 828, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkMakeCurrent, __pyx_t_12) < 0) __PYX_ERR(0, 828, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":831
 *             if self.winfo_ismapped():
 *                 GLX.glXMakeCurrent(self.__window, self._wid, self.__context)
 *         def tkSwapBuffers( self ):             # <<<<<<<<<<<<<<
 *             if self.winfo_ismapped():
 *                 GLX.glXSwapBuffers( self.__window, self._wid)
 */
      #if CYTHON_COMPILING_IN_LIMITED_API
      __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 831, __pyx_L1_error)
      #else
      __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 831, __pyx_L1_error);
      #endif
      __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11OpenGLFrame_11tkSwapBuffers, 0, __pyx_n_s_OpenGLFrame_tkSwapBuffers, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__135)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkSwapBuffers, __pyx_t_12) < 0) __PYX_ERR(0, 831, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":732
 *             ]
 *     # Inherits the base and fills in the 3 platform dependent functions
 *     class OpenGLFrame( baseOpenGLFrame ):             # <<<<<<<<<<<<<<
 *         def tkCreateContext( self ):
 *             self.__window = XOpenDisplay( self.winfo_screen().encode('utf-8'))
 */
      __pyx_t_12 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_OpenGLFrame, __pyx_t_14, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 732, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      {
        #if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 732, __pyx_L1_error)
        #endif
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_OpenGLFrame, __pyx_t_12) < 0) __PYX_ERR(0, 732, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":698
 * ###############################################################################
 * # Linux/X11 specific code here:
 * if sys.platform.startswith( 'linux' ):             # <<<<<<<<<<<<<<
 *     from ctypes import c_int, c_char_p, c_void_p, cdll, POINTER, util, \
 *         pointer, CFUNCTYPE, c_bool
 */
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":846
 * # University of York, UK
 * 
 * def v3distsq(a,b):             # <<<<<<<<<<<<<<
 *     d = ( a[0] - b[0], a[1] - b[1], a[2] - b[2] )
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 846, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 846, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7v3distsq, 0, __pyx_n_s_v3distsq, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__137)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 846, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 846, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_v3distsq, __pyx_t_14) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":850
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 * 
 * class RawOpengl( OpenGLFrame ):             # <<<<<<<<<<<<<<
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 */
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_OpenGLFrame); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_14);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_14);
    __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_CalculateMetaclass(NULL, __pyx_t_4); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare(__pyx_t_14, __pyx_t_4, __pyx_n_s_RawOpengl, __pyx_n_s_RawOpengl, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_kp_s_Widget_without_any_sophisticated); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":853
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 853, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 853, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_1__init__, 0, __pyx_n_s_RawOpengl___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__139)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 853, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_12, sizeof(__pyx_defaults6), 1)) __PYX_ERR(0, 853, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 853, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_CyFunction_Defaults(__pyx_defaults6, __pyx_t_12)->__pyx_arg_cnf = __pyx_t_1;
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_12, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_48__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_12) < 0) __PYX_ERR(0, 853, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":856
 *         OpenGLFrame.__init__(*(self, master, cnf), **kw)
 *     # replaces our _display method
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         # This must be outside of a pushmatrix, since a resize event
 *         # will call redraw recursively.
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 856, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 856, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9RawOpengl_3tkRedraw, 0, __pyx_n_s_RawOpengl_tkRedraw, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__141)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 856, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkRedraw, __pyx_t_12) < 0) __PYX_ERR(0, 856, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":850
 *     return d[0]*d[0] + d[1]*d[1] + d[2]*d[2]
 * 
 * class RawOpengl( OpenGLFrame ):             # <<<<<<<<<<<<<<
 *     """Widget without any sophisticated bindings\
 *     by Tom Schwaller"""
 */
    __pyx_t_12 = __Pyx_Py3ClassCreate(__pyx_t_14, __pyx_n_s_RawOpengl, __pyx_t_4, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 850, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 850, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_RawOpengl, __pyx_t_12) < 0) __PYX_ERR(0, 850, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":863
 *         _mode = GL.glGetDoublev(GL.GL_MATRIX_MODE)
 * 
 * class Opengl(RawOpengl):             # <<<<<<<<<<<<<<
 *     """
 *     Tkinter bindings for an Opengl widget.
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_RawOpengl); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_14, __pyx_n_s_Opengl, __pyx_n_s_Opengl, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_kp_s_Tkinter_bindings_for_an_Opengl); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":871
 *     http://www.yorvic.york.ac.uk/~mjh/
 *     """
 *     def __init__(self, master=None, cnf={}, **kw):             # <<<<<<<<<<<<<<
 *         """\
 *         Create an opengl widget.
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 871, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 871, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_1__init__, 0, __pyx_n_s_Opengl___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__143)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 871, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_12, sizeof(__pyx_defaults7), 1)) __PYX_ERR(0, 871, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 871, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_CyFunction_Defaults(__pyx_defaults7, __pyx_t_12)->__pyx_arg_cnf = __pyx_t_1;
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_12, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_50__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_12) < 0) __PYX_ERR(0, 871, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":912
 *         self.bind('<B3-Motion>', self.tkScale)
 * 
 *     def help(self):             # <<<<<<<<<<<<<<
 *         """Help for the widget."""
 *         d = dialog.Dialog(None, {
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 912, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 912, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_3help, 0, __pyx_n_s_Opengl_help, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__145)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 912, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_help, __pyx_t_12) < 0) __PYX_ERR(0, 912, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":924
 *             'strings': ('Done', 'Ok')})
 *         assert d
 *     def activate(self):             # <<<<<<<<<<<<<<
 *         """Cause this Opengl widget to be the current destination for drawing."""
 *         self.tkMakeCurrent()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 924, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 924, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_5activate, 0, __pyx_n_s_Opengl_activate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__147)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 924, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_activate, __pyx_t_12) < 0) __PYX_ERR(0, 924, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":930
 *     # This should almost certainly be part of some derived class.
 *     # But I have put it here for convenience.
 *     def basic_lighting(self):             # <<<<<<<<<<<<<<
 *         """\
 *         Set up some basic lighting (single infinite light source).
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 930, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 930, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_7basic_lighting, 0, __pyx_n_s_Opengl_basic_lighting, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__149)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_basic_lighting, __pyx_t_12) < 0) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":944
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 *         GL.glLoadIdentity()
 *     def initgl(self):             # <<<<<<<<<<<<<<
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 944, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 944, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_9initgl, 0, __pyx_n_s_Opengl_initgl, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__151)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 944, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_initgl, __pyx_t_12) < 0) __PYX_ERR(0, 944, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":946
 *     def initgl(self):
 *         self.basic_lighting()
 *     def set_background(self, r, g, b):             # <<<<<<<<<<<<<<
 *         """Change the background colour of the widget."""
 *         self.r_back = r
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 946, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 946, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_11set_background, 0, __pyx_n_s_Opengl_set_background, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__153)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_set_background, __pyx_t_12) < 0) __PYX_ERR(0, 946, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":953
 *         self.tkRedraw()
 * 
 *     def set_centerpoint(self, x, y, z):             # <<<<<<<<<<<<<<
 *         """Set the new center point for the model.
 *         This is where we are looking."""
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 953, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 953, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_13set_centerpoint, 0, __pyx_n_s_Opengl_set_centerpoint, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__155)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_set_centerpoint, __pyx_t_12) < 0) __PYX_ERR(0, 953, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":961
 *         self.tkRedraw()
 * 
 *     def set_eyepoint(self, distance):             # <<<<<<<<<<<<<<
 *         """Set how far the eye is from the position we are looking."""
 *         self.distance = distance
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 961, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 961, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_15set_eyepoint, 0, __pyx_n_s_Opengl_set_eyepoint, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__157)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_set_eyepoint, __pyx_t_12) < 0) __PYX_ERR(0, 961, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":966
 *         self.tkRedraw()
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset rotation matrix for this widget."""
 *         GL.glMatrixMode(GL.GL_MODELVIEW)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 966, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 966, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_17reset, 0, __pyx_n_s_Opengl_reset, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__159)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_reset, __pyx_t_12) < 0) __PYX_ERR(0, 966, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":972
 *         self.tkRedraw()
 * 
 *     def tkHandlePick(self, event):             # <<<<<<<<<<<<<<
 *         """Handle a pick on the scene."""
 *         if hasattr(self, 'pick'):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 972, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 972, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_19tkHandlePick, 0, __pyx_n_s_Opengl_tkHandlePick, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__161)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkHandlePick, __pyx_t_12) < 0) __PYX_ERR(0, 972, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":987
 *                 self.tkRedraw()
 * 
 *     def tkRecordMouse(self, event):             # <<<<<<<<<<<<<<
 *         """Record the current mouse position."""
 *         self.xmouse = event.x
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 987, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 987, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_21tkRecordMouse, 0, __pyx_n_s_Opengl_tkRecordMouse, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__163)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 987, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkRecordMouse, __pyx_t_12) < 0) __PYX_ERR(0, 987, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":993
 *         print(event.x,event.y)
 * 
 *     def StartRotate(self, event):             # <<<<<<<<<<<<<<
 *         # Switch off any autospinning if it was happening
 *         self.autospin = 0
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 993, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 993, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_23StartRotate, 0, __pyx_n_s_Opengl_StartRotate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__165)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 993, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_StartRotate, __pyx_t_12) < 0) __PYX_ERR(0, 993, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":998
 *         self.tkRecordMouse(event)
 * 
 *     def tkScale(self, event):             # <<<<<<<<<<<<<<
 *         """Scale the scene.  Achieved by moving the eye position.
 *         Dragging up zooms in, while dragging down zooms out
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 998, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 998, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_25tkScale, 0, __pyx_n_s_Opengl_tkScale, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__167)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 998, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkScale, __pyx_t_12) < 0) __PYX_ERR(0, 998, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1013
 *         self.tkRecordMouse(event)
 * 
 *     def do_AutoSpin(self):             # <<<<<<<<<<<<<<
 *         self.activate()
 *         glRotateScene(0.5, self.xcenter, self.ycenter, self.zcenter,
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1013, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1013, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_27do_AutoSpin, 0, __pyx_n_s_Opengl_do_AutoSpin, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__169)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1013, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_do_AutoSpin, __pyx_t_12) < 0) __PYX_ERR(0, 1013, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1021
 *             self.after(10, self.do_AutoSpin)
 * 
 *     def tkAutoSpin(self, event):             # <<<<<<<<<<<<<<
 *         """Perform autospin of scene."""
 *         self.after(4)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1021, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1021, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_29tkAutoSpin, 0, __pyx_n_s_Opengl_tkAutoSpin, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__171)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkAutoSpin, __pyx_t_12) < 0) __PYX_ERR(0, 1021, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1037
 *         self.after(10, self.do_AutoSpin)
 * 
 *     def tkRotate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform rotation of scene."""
 *         self.activate()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1037, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1037, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_31tkRotate, 0, __pyx_n_s_Opengl_tkRotate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__173)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkRotate, __pyx_t_12) < 0) __PYX_ERR(0, 1037, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1045
 *         self.tkRecordMouse(event)
 * 
 *     def tkTranslate(self, event):             # <<<<<<<<<<<<<<
 *         """Perform translation of scene."""
 *         self.activate()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1045, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1045, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_33tkTranslate, 0, __pyx_n_s_Opengl_tkTranslate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__175)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkTranslate, __pyx_t_12) < 0) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1059
 *         self.tkRecordMouse(event)
 * 
 *     def tkRedraw(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Cause the opengl widget to redraw itself."""
 *         self.freecalc(self)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1059, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1059, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_35tkRedraw, 0, __pyx_n_s_Opengl_tkRedraw, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__177)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1059, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkRedraw, __pyx_t_12) < 0) __PYX_ERR(0, 1059, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1091
 *         # Call objects redraw method.
 *         self.redraw(self)
 *     def freecalc( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1091, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1091, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_37freecalc, 0, __pyx_n_s_Opengl_freecalc, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__179)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_freecalc, __pyx_t_12) < 0) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1093
 *     def freecalc( self, *args, **named ):
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 *     def redraw( self, *args, **named ):             # <<<<<<<<<<<<<<
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1093, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1093, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_39redraw, 0, __pyx_n_s_Opengl_redraw, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__181)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_redraw, __pyx_t_12) < 0) __PYX_ERR(0, 1093, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1096
 *         """Prevent access errors if user doesn't set redraw fast enough"""
 * 
 *     def tkExpose(self, *dummy):             # <<<<<<<<<<<<<<
 *         """Redraw the widget.
 *         Make it active, update tk events, call redraw procedure and
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1096, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1096, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_41tkExpose, 0, __pyx_n_s_Opengl_tkExpose, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__183)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1096, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkExpose, __pyx_t_12) < 0) __PYX_ERR(0, 1096, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1107
 *         self.tkRedraw()
 * 
 *     def tkPrint(self, file):             # <<<<<<<<<<<<<<
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1107, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1107, __pyx_L1_error);
    #endif
    __pyx_t_12 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6Opengl_43tkPrint, 0, __pyx_n_s_Opengl_tkPrint, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__185)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1107, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_tkPrint, __pyx_t_12) < 0) __PYX_ERR(0, 1107, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":863
 *         _mode = GL.glGetDoublev(GL.GL_MATRIX_MODE)
 * 
 * class Opengl(RawOpengl):             # <<<<<<<<<<<<<<
 *     """
 *     Tkinter bindings for an Opengl widget.
 */
    __pyx_t_12 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_Opengl, __pyx_t_14, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 863, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 863, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_Opengl, __pyx_t_12) < 0) __PYX_ERR(0, 863, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1110
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]             # <<<<<<<<<<<<<<
 *     def __init__(self,screen_res):
 *         pass#DFPASS
 */
    __pyx_t_14 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_D2Dprerender, __pyx_n_s_D2Dprerender, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1111
 *         self.activate()
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]
 *     def __init__(self,screen_res):             # <<<<<<<<<<<<<<
 *         pass#DFPASS
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1111, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1111, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_1__init__, 0, __pyx_n_s_D2Dprerender___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__187)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 1111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1114
 *         pass#DFPASS
 * 
 *     def prerender_quad(self_,cords,color):             # <<<<<<<<<<<<<<
 *         ''' Pre render quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1114, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1114, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_3prerender_quad, 0, __pyx_n_s_D2Dprerender_prerender_quad, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__189)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_prerender_quad, __pyx_t_4) < 0) __PYX_ERR(0, 1114, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1125
 * 
 * 
 *     def prerender_texturequad(self_,cords,color,texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Texture quad '''
 *         tr1 = self_._cords_to_ratio(cords[0],cords[1])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1125, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1125, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_5prerender_texturequad, 0, __pyx_n_s_D2Dprerender_prerender_texturequ, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__191)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_prerender_texturequad, __pyx_t_4) < 0) __PYX_ERR(0, 1125, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1139
 * 
 * 
 *     def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 *         face = Face(filename)
 *         face.set_char_size( size*64 )
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1139, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1139, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_7create_font, 0, __pyx_n_s_D2Dprerender_create_font, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__193)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1139, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_create_font, __pyx_t_4) < 0) __PYX_ERR(0, 1139, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1202
 * 
 * 
 *     def prerender_text(self_,cords,text,font_letters,spacing_addx,spacing_addy,color,font_texture):             # <<<<<<<<<<<<<<
 *         ''' Pre render Text '''
 *         config=(256,256,8)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1202, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1202, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_12D2Dprerender_9prerender_text, 0, __pyx_n_s_D2Dprerender_prerender_text, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__195)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_prerender_text, __pyx_t_4) < 0) __PYX_ERR(0, 1202, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1110
 *         """Turn the current scene into PostScript via the feedback buffer."""
 *         self.activate()
 * class D2Dprerender: # <<<<<<<<<<< Pre Render Static Draw (Creates Object Able to be rendered) [Faster than D2Draw - On Run Rendering]             # <<<<<<<<<<<<<<
 *     def __init__(self,screen_res):
 *         pass#DFPASS
 */
    __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_D2Dprerender, __pyx_empty_tuple, __pyx_t_14, NULL, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1110, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_D2Dprerender, __pyx_t_4) < 0) __PYX_ERR(0, 1110, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1255
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.             # <<<<<<<<<<<<<<
 *     def render(prerenderedobj):
 *         if prerenderedobj[0] is 'text':
 */
    __pyx_t_14 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_D2DRENDER, __pyx_n_s_D2DRENDER, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1256
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.
 *     def render(prerenderedobj):             # <<<<<<<<<<<<<<
 *         if prerenderedobj[0] is 'text':
 *             D2DRENDER.render_text(prerenderedobj)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1256, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1256, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_1render, 0, __pyx_n_s_D2DRENDER_render, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__197)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_render, __pyx_t_4) < 0) __PYX_ERR(0, 1256, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1266
 * 
 * 
 *     def render_letter(D2Draw,cords,color,letter,font,texid):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         self = D2Draw
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1266, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1266, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_3render_letter, 0, __pyx_n_s_D2DRENDER_render_letter, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__199)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_render_letter, __pyx_t_4) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1292
 * 
 * 
 *     def render_text(pretext):             # <<<<<<<<<<<<<<
 *         ''' pretext - prerendered text '''  # Working :)
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1292, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1292, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_5render_text, 0, __pyx_n_s_D2DRENDER_render_text, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__201)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1292, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_render_text, __pyx_t_4) < 0) __PYX_ERR(0, 1292, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1315
 * 
 * 
 *     def render_quad(prequad):             # <<<<<<<<<<<<<<
 *         GL.glBegin(GL.GL_QUADS)
 *         GL.glColor3f(prequad[3][0],prequad[3][1],prequad[3][2])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1315, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1315, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_7render_quad, 0, __pyx_n_s_D2DRENDER_render_quad, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__203)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_render_quad, __pyx_t_4) < 0) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1329
 * 
 * 
 *     def render_texture_quad(pretextquad=None,texsize=0,usecords=True):             # <<<<<<<<<<<<<<
 *         GL.glEnable(GL.GL_TEXTURE_2D)
 *         GL.glBindTexture(GL.GL_TEXTURE_2D, pretextquad[4])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1329, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1329, __pyx_L1_error);
    #endif
    __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9D2DRENDER_9render_texture_quad, 0, __pyx_n_s_D2DRENDER_render_texture_quad, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__205)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1329, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_tuple__206);
    if (__Pyx_SetNameInClass(__pyx_t_14, __pyx_n_s_render_texture_quad, __pyx_t_4) < 0) __PYX_ERR(0, 1329, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1255
 *         data = [data_type,data_length,data_txn,data_tr1,data_tr2,color,font_texture]
 *         return data
 * class D2DRENDER: # Renders Pre Rendered object.             # <<<<<<<<<<<<<<
 *     def render(prerenderedobj):
 *         if prerenderedobj[0] is 'text':
 */
    __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_D2DRENDER, __pyx_empty_tuple, __pyx_t_14, NULL, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1255, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1255, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_D2DRENDER, __pyx_t_4) < 0) __PYX_ERR(0, 1255, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1370
 * 
 * #dp_load_texture
 * from OpenGL import GL             # <<<<<<<<<<<<<<
 * from PIL import Image
 * import numpy
 */
    __pyx_t_14 = PyList_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_n_s_GL);
    __Pyx_GIVEREF(__pyx_n_s_GL);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_n_s_GL);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_OpenGL, __pyx_t_14, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_GL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1370, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GL, __pyx_t_14) < 0) __PYX_ERR(0, 1370, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1371
 * #dp_load_texture
 * from OpenGL import GL
 * from PIL import Image             # <<<<<<<<<<<<<<
 * import numpy
 * import mmap, os
 */
    __pyx_t_4 = PyList_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_n_s_Image);
    __Pyx_GIVEREF(__pyx_n_s_Image);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_n_s_Image);
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_PIL, __pyx_t_4, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_ImportFrom(__pyx_t_14, __pyx_n_s_Image); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1371, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1371, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_Image, __pyx_t_4) < 0) __PYX_ERR(0, 1371, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1372
 * from OpenGL import GL
 * from PIL import Image
 * import numpy             # <<<<<<<<<<<<<<
 * import mmap, os
 * import ctypes
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1372, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_numpy, __pyx_t_14) < 0) __PYX_ERR(0, 1372, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1373
 * from PIL import Image
 * import numpy
 * import mmap, os             # <<<<<<<<<<<<<<
 * import ctypes
 * import random as rnd
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_mmap, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1373, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_mmap, __pyx_t_14) < 0) __PYX_ERR(0, 1373, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_os, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1373, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_14) < 0) __PYX_ERR(0, 1373, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1374
 * import numpy
 * import mmap, os
 * import ctypes             # <<<<<<<<<<<<<<
 * import random as rnd
 * import time
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1374, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1374, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_ctypes, __pyx_t_14) < 0) __PYX_ERR(0, 1374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1375
 * import mmap, os
 * import ctypes
 * import random as rnd             # <<<<<<<<<<<<<<
 * import time
 * from freetype import *
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_random, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1375, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rnd, __pyx_t_14) < 0) __PYX_ERR(0, 1375, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1376
 * import ctypes
 * import random as rnd
 * import time             # <<<<<<<<<<<<<<
 * from freetype import *
 * vipshome = 'D:/vips-dev-8.9/bin'
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_time, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1376, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1376, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_14) < 0) __PYX_ERR(0, 1376, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1377
 * import random as rnd
 * import time
 * from freetype import *             # <<<<<<<<<<<<<<
 * vipshome = 'D:/vips-dev-8.9/bin'
 * os.environ['PATH'] = vipshome + ';' + os.environ['PATH']
 */
    __pyx_t_14 = PyList_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_n_s__80);
    __Pyx_GIVEREF(__pyx_n_s__80);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_n_s__80);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_freetype, __pyx_t_14, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (__pyx_import_star(__pyx_t_4) < 0) __PYX_ERR(0, 1377, __pyx_L1_error);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1378
 * import time
 * from freetype import *
 * vipshome = 'D:/vips-dev-8.9/bin'             # <<<<<<<<<<<<<<
 * os.environ['PATH'] = vipshome + ';' + os.environ['PATH']
 * import pyvips
 */
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1378, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_vipshome, __pyx_kp_s_D_vips_dev_8_9_bin) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1379
 * from freetype import *
 * vipshome = 'D:/vips-dev-8.9/bin'
 * os.environ['PATH'] = vipshome + ';' + os.environ['PATH']             # <<<<<<<<<<<<<<
 * import pyvips
 * global TEXTURE_DISPLAY_METHOD
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_vipshome); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__207); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_environ); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_13, __pyx_n_s_PATH); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = PyNumber_Add(__pyx_t_14, __pyx_t_4); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_environ); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(PyObject_SetItem(__pyx_t_14, __pyx_n_s_PATH, __pyx_t_13) < 0)) __PYX_ERR(0, 1379, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1380
 * vipshome = 'D:/vips-dev-8.9/bin'
 * os.environ['PATH'] = vipshome + ';' + os.environ['PATH']
 * import pyvips             # <<<<<<<<<<<<<<
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST
 */
    __pyx_t_13 = __Pyx_Import(__pyx_n_s_pyvips, 0, -1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1380, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1380, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyvips, __pyx_t_13) < 0) __PYX_ERR(0, 1380, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1382
 * import pyvips
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST             # <<<<<<<<<<<<<<
 * def load_texture_dp(dp_data,n,alpha=False):
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 */
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_GL_NEAREST); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1382, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_TEXTURE_DISPLAY_METHOD, __pyx_t_14) < 0) __PYX_ERR(0, 1382, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1383
 * global TEXTURE_DISPLAY_METHOD
 * TEXTURE_DISPLAY_METHOD = GL.GL_NEAREST
 * def load_texture_dp(dp_data,n,alpha=False):             # <<<<<<<<<<<<<<
 *     ''' Alpha - True Or False, False- RGB 3bytes , True- RGBA 4Bytes'''
 *     global TEXTURE_DISPLAY_METHOD
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1383, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1383, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_9load_texture_dp, 0, __pyx_n_s_load_texture_dp, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__209)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__210);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1383, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_load_texture_dp, __pyx_t_14) < 0) __PYX_ERR(0, 1383, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1402
 *     return textr
 * 
 * def load_texture_repeat(texture_=None,n=None):             # <<<<<<<<<<<<<<
 *     global TEXTURE_DISPLAY_METHOD
 *     texture = Image.open(texture_,'r')
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1402, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1402, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11load_texture_repeat, 0, __pyx_n_s_load_texture_repeat, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__212)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1402, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__213);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1402, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_load_texture_repeat, __pyx_t_14) < 0) __PYX_ERR(0, 1402, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1424
 * 
 * 
 * def usingVIPSandShrink(f):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(f, access="sequential", shrink=2)
 *     mem_img = image.write_to_memory()
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1424, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1424, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13usingVIPSandShrink, 0, __pyx_n_s_usingVIPSandShrink, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__215)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1424, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_usingVIPSandShrink, __pyx_t_14) < 0) __PYX_ERR(0, 1424, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1430
 *     return imgnp
 * 
 * def pure_pil_alpha_to_color_v2(image, color=(255, 255, 255)):             # <<<<<<<<<<<<<<
 *     image.load()  # needed for split()
 *     background = Image.new('RGB', image.size, color)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1430, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1430, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_15pure_pil_alpha_to_color_v2, 0, __pyx_n_s_pure_pil_alpha_to_color_v2, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__217)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1430, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__218);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1430, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_pure_pil_alpha_to_color_v2, __pyx_t_14) < 0) __PYX_ERR(0, 1430, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1435
 *     background.paste(image, mask=image.split()[3])  # 3 is the alpha channel
 *     return background
 * def rgba2rgb(x):             # <<<<<<<<<<<<<<
 *     x = x[::4]
 *     return x
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1435, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1435, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_17rgba2rgb, 0, __pyx_n_s_rgba2rgb, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__220)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1435, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_rgba2rgb, __pyx_t_14) < 0) __PYX_ERR(0, 1435, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1439
 *     return x
 * 
 * def create_font(filename, size,base,texid):             # <<<<<<<<<<<<<<
 * 
 *     face = Face(filename)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1439, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1439, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_19create_font, 0, __pyx_n_s_create_font, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__222)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1439, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_create_font, __pyx_t_14) < 0) __PYX_ERR(0, 1439, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1496
 * 
 *     return font
 * def load_texture_sub(Texture_unit=0,New_Texture=None,Offests=(0,0),size=(1920,1080),buffmanager=None ):             # <<<<<<<<<<<<<<
 *     image = pyvips.Image.new_from_file(New_Texture, access="sequential")
 *     scaley = (size[0]/image.width)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1496, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1496, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_21load_texture_sub, 0, __pyx_n_s_load_texture_sub, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__224)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1496, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__225);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1496, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_load_texture_sub, __pyx_t_14) < 0) __PYX_ERR(0, 1496, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1521
 * 
 * 
 * def load_texture(texture_=None,nr=None,repeat=False,RAW_DATA=[1920,1080]):             # <<<<<<<<<<<<<<
 *     try:
 *         image = pyvips.Image.new_from_file(texture_, access="sequential")
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1521, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1521, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_23load_texture, 0, __pyx_n_s_load_texture, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__227)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_14, sizeof(__pyx_defaults8), 1)) __PYX_ERR(0, 1521, __pyx_L1_error)
    __pyx_t_13 = PyList_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_INCREF(__pyx_int_1920);
    __Pyx_GIVEREF(__pyx_int_1920);
    PyList_SET_ITEM(__pyx_t_13, 0, __pyx_int_1920);
    __Pyx_INCREF(__pyx_int_1080);
    __Pyx_GIVEREF(__pyx_int_1080);
    PyList_SET_ITEM(__pyx_t_13, 1, __pyx_int_1080);
    __Pyx_CyFunction_Defaults(__pyx_defaults8, __pyx_t_14)->__pyx_arg_RAW_DATA = __pyx_t_13;
    __Pyx_GIVEREF(__pyx_t_13);
    __pyx_t_13 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_14, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_52__defaults__);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1521, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_load_texture, __pyx_t_14) < 0) __PYX_ERR(0, 1521, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1561
 * 
 * #__init__ file.
 * import OpenGL.GL.shaders             # <<<<<<<<<<<<<<
 * from OpenGL.GL import *
 * from OpenGL import GL
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_OpenGL_GL_shaders, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1561, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_OpenGL, __pyx_t_14) < 0) __PYX_ERR(0, 1561, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1562
 * #__init__ file.
 * import OpenGL.GL.shaders
 * from OpenGL.GL import *             # <<<<<<<<<<<<<<
 * from OpenGL import GL
 * import ctypes, os
 */
    __pyx_t_14 = PyList_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_n_s__80);
    __Pyx_GIVEREF(__pyx_n_s__80);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_n_s__80);
    __pyx_t_13 = __Pyx_Import(__pyx_n_s_OpenGL_GL, __pyx_t_14, -1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1562, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (__pyx_import_star(__pyx_t_13) < 0) __PYX_ERR(0, 1562, __pyx_L1_error);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1563
 * import OpenGL.GL.shaders
 * from OpenGL.GL import *
 * from OpenGL import GL             # <<<<<<<<<<<<<<
 * import ctypes, os
 * import numpy
 */
    __pyx_t_13 = PyList_New(1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1563, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_INCREF(__pyx_n_s_GL);
    __Pyx_GIVEREF(__pyx_n_s_GL);
    PyList_SET_ITEM(__pyx_t_13, 0, __pyx_n_s_GL);
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_OpenGL, __pyx_t_13, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1563, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = __Pyx_ImportFrom(__pyx_t_14, __pyx_n_s_GL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1563, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1563, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_GL, __pyx_t_13) < 0) __PYX_ERR(0, 1563, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1564
 * from OpenGL.GL import *
 * from OpenGL import GL
 * import ctypes, os             # <<<<<<<<<<<<<<
 * import numpy
 * from array import array
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1564, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1564, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_ctypes, __pyx_t_14) < 0) __PYX_ERR(0, 1564, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_os, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1564, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1564, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_14) < 0) __PYX_ERR(0, 1564, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1565
 * from OpenGL import GL
 * import ctypes, os
 * import numpy             # <<<<<<<<<<<<<<
 * from array import array
 * class SHADER:
 */
    __pyx_t_14 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1565, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1565, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_numpy, __pyx_t_14) < 0) __PYX_ERR(0, 1565, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1566
 * import ctypes, os
 * import numpy
 * from array import array             # <<<<<<<<<<<<<<
 * class SHADER:
 *     def __init__(self):
 */
    __pyx_t_14 = PyList_New(1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1566, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_n_s_array);
    __Pyx_GIVEREF(__pyx_n_s_array);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_n_s_array);
    __pyx_t_13 = __Pyx_Import(__pyx_n_s_array, __pyx_t_14, -1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1566, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_t_14 = __Pyx_ImportFrom(__pyx_t_13, __pyx_n_s_array); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1566, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1566, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_array, __pyx_t_14) < 0) __PYX_ERR(0, 1566, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1567
 * import numpy
 * from array import array
 * class SHADER:             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         pass
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_SHADER, __pyx_n_s_SHADER, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1568
 * from array import array
 * class SHADER:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         pass
 * # Vbo v0.1 Vertex Buffer <Memory Buffer> <Vertex - Points>
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1568, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1568, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_6SHADER_1__init__, 0, __pyx_n_s_SHADER___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__230)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1568, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1567
 * import numpy
 * from array import array
 * class SHADER:             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         pass
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_SHADER, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1567, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_SHADER, __pyx_t_14) < 0) __PYX_ERR(0, 1567, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1574
 * #
 * #
 * def getsize(x): #Getsize of 1 type             # <<<<<<<<<<<<<<
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1574, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1574, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_25getsize, 0, __pyx_n_s_getsize, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__232)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1574, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_getsize, __pyx_t_13) < 0) __PYX_ERR(0, 1574, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1576
 * def getsize(x): #Getsize of 1 type
 *     return ctypes.sizeof(x)
 * def cfloat(x=None): #x is none for no arg             # <<<<<<<<<<<<<<
 *     if x != None:
 *         cf = ctypes.c_float(x)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1576, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1576, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_27cfloat, 0, __pyx_n_s_cfloat, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__234)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_13, __pyx_tuple__235);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1576, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_cfloat, __pyx_t_13) < 0) __PYX_ERR(0, 1576, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1581
 *     else:cf=ctypes.c_float()
 *     return cf
 * def cfloat_array(list):             # <<<<<<<<<<<<<<
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1581, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1581, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_29cfloat_array, 0, __pyx_n_s_cfloat_array, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__237)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1581, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1581, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_cfloat_array, __pyx_t_13) < 0) __PYX_ERR(0, 1581, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1583
 * def cfloat_array(list):
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:             # <<<<<<<<<<<<<<
 *     def __init__():
 *         pass
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_VBO_OBJ, __pyx_n_s_VBO_OBJ, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1583, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1584
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:
 *     def __init__():             # <<<<<<<<<<<<<<
 *         pass
 * class VBO: # Not Recommended just opengl :l
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1584, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1584, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_7VBO_OBJ_1__init__, 0, __pyx_n_s_VBO_OBJ___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__238)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1584, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1584, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1583
 * def cfloat_array(list):
 *     return (ctypes.c_float * len(list))(*list)
 * class VBO_OBJ:             # <<<<<<<<<<<<<<
 *     def __init__():
 *         pass
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_VBO_OBJ, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1583, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1583, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_VBO_OBJ, __pyx_t_14) < 0) __PYX_ERR(0, 1583, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1586
 *     def __init__():
 *         pass
 * class VBO: # Not Recommended just opengl :l             # <<<<<<<<<<<<<<
 *     def __init__(self,shaderprogram=None):
 *         pass
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_VBO, __pyx_n_s_VBO, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1587
 *         pass
 * class VBO: # Not Recommended just opengl :l
 *     def __init__(self,shaderprogram=None):             # <<<<<<<<<<<<<<
 *         pass
 * class RENDER_VBO:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1587, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1587, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_3VBO_1__init__, 0, __pyx_n_s_VBO___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__240)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__241);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1586
 *     def __init__():
 *         pass
 * class VBO: # Not Recommended just opengl :l             # <<<<<<<<<<<<<<
 *     def __init__(self,shaderprogram=None):
 *         pass
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_VBO, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1586, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_VBO, __pyx_t_14) < 0) __PYX_ERR(0, 1586, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1589
 *     def __init__(self,shaderprogram=None):
 *         pass
 * class RENDER_VBO:             # <<<<<<<<<<<<<<
 *     def __init__(self,OBJECT):
 *         pass
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_RENDER_VBO, __pyx_n_s_RENDER_VBO, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1590
 *         pass
 * class RENDER_VBO:
 *     def __init__(self,OBJECT):             # <<<<<<<<<<<<<<
 *         pass
 * class PRERENDER_VBO:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1590, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1590, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_10RENDER_VBO_1__init__, 0, __pyx_n_s_RENDER_VBO___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__243)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1590, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1590, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1589
 *     def __init__(self,shaderprogram=None):
 *         pass
 * class RENDER_VBO:             # <<<<<<<<<<<<<<
 *     def __init__(self,OBJECT):
 *         pass
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_RENDER_VBO, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1589, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1589, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_RENDER_VBO, __pyx_t_14) < 0) __PYX_ERR(0, 1589, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1592
 *     def __init__(self,OBJECT):
 *         pass
 * class PRERENDER_VBO:             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         bufferid = int(id)
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_PRERENDER_VBO, __pyx_n_s_PRERENDER_VBO, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1592, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1593
 *         pass
 * class PRERENDER_VBO:
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         bufferid = int(id)
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1593, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1593, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_13PRERENDER_VBO_1__init__, 0, __pyx_n_s_PRERENDER_VBO___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__245)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1593, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1593, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1592
 *     def __init__(self,OBJECT):
 *         pass
 * class PRERENDER_VBO:             # <<<<<<<<<<<<<<
 *     def __init__(self):
 *         bufferid = int(id)
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_PRERENDER_VBO, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1592, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1592, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_PRERENDER_VBO, __pyx_t_14) < 0) __PYX_ERR(0, 1592, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1597
 *         buffer1 = GL.glGenBuffers(1,bufferid)
 * 
 * def _tex_arrayn_translate(n=[0,0],s=0,txs=[0,0]):             # <<<<<<<<<<<<<<
 *     ''' n = x,y  s = size  txs - texturesize  '''
 *     x1 = (n[0]*s)-s
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1597, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1597, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_31_tex_arrayn_translate, 0, __pyx_n_s_tex_arrayn_translate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__247)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_13, sizeof(__pyx_defaults9), 2)) __PYX_ERR(0, 1597, __pyx_L1_error)
    __pyx_t_14 = PyList_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_14, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_t_13)->__pyx_arg_n = __pyx_t_14;
    __Pyx_GIVEREF(__pyx_t_14);
    __pyx_t_14 = 0;
    __pyx_t_14 = PyList_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1597, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_14, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_14, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults9, __pyx_t_13)->__pyx_arg_txs = __pyx_t_14;
    __Pyx_GIVEREF(__pyx_t_14);
    __pyx_t_14 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_13, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_54__defaults__);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1597, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_tex_arrayn_translate, __pyx_t_13) < 0) __PYX_ERR(0, 1597, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1607
 * 
 *     return _c1,_c2
 * def _cords_to_ratio(x,y,screenx,screeny):             # <<<<<<<<<<<<<<
 *     xr = x*(2/screenx)
 *     yr = y*(2/screeny)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1607, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1607, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_33_cords_to_ratio, 0, __pyx_n_s_cords_to_ratio, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__249)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1607, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1607, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_cords_to_ratio, __pyx_t_13) < 0) __PYX_ERR(0, 1607, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1619
 *         yr = 1-yr
 *     return xr,yr
 * def _texture_cords_to_ratio(x,y,size):             # <<<<<<<<<<<<<<
 *     xr = x*(2/size[0])
 *     yr = y*(2/size[1])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1619, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1619, __pyx_L1_error);
    #endif
    __pyx_t_13 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_35_texture_cords_to_ratio, 0, __pyx_n_s_texture_cords_to_ratio, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__251)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1619, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_texture_cords_to_ratio, __pyx_t_13) < 0) __PYX_ERR(0, 1619, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1634
 * 
 * 
 * class DragoObject:             # <<<<<<<<<<<<<<
 *     def get_shader(self):
 *         return self.basicshader
 */
    __pyx_t_13 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_DragoObject, __pyx_n_s_DragoObject, (PyObject *) NULL, __pyx_n_s_Drago2Dengine___versions___win32, (PyObject *) NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1635
 * 
 * class DragoObject:
 *     def get_shader(self):             # <<<<<<<<<<<<<<
 *         return self.basicshader
 *     def __docs__(self):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1635, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1635, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_1get_shader, 0, __pyx_n_s_DragoObject_get_shader, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__253)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1635, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_shader, __pyx_t_14) < 0) __PYX_ERR(0, 1635, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1637
 *     def get_shader(self):
 *         return self.basicshader
 *     def __docs__(self):             # <<<<<<<<<<<<<<
 *         self.__doc__ = """
 *         Uniform/Layout/Matrix manipulation
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1637, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1637, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_3__docs__, 0, __pyx_n_s_DragoObject___docs, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__255)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1637, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_docs, __pyx_t_14) < 0) __PYX_ERR(0, 1637, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1647
 * 
 * 
 *     def serialize_to_obj(self,unload=False,eventmanager=None):             # <<<<<<<<<<<<<<
 *         ''' Serialize scene (current objects and eventss) '''
 *         self.serialization = True
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1647, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1647, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_5serialize_to_obj, 0, __pyx_n_s_DragoObject_serialize_to_obj, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__257)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__258);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_serialize_to_obj, __pyx_t_14) < 0) __PYX_ERR(0, 1647, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1653
 *         return self.serialization_current_object
 * 
 *     def _load_scene(self,serialized_obj=None,overlay=False):             # <<<<<<<<<<<<<<
 *         ''' If overlay is false unload previous scene '''
 *         pass
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1653, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1653, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_7_load_scene, 0, __pyx_n_s_DragoObject__load_scene, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__260)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1653, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__261);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_load_scene, __pyx_t_14) < 0) __PYX_ERR(0, 1653, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1657
 *         pass
 * 
 *     def _is_serialized(self):             # <<<<<<<<<<<<<<
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1657, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1657, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_9_is_serialized, 0, __pyx_n_s_DragoObject__is_serialized, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__263)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_is_serialized, __pyx_t_14) < 0) __PYX_ERR(0, 1657, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1659
 *     def _is_serialized(self):
 *         return self.serialization
 *     def create_quad(self,BOX_START=[0,0],BOX_SIZE=[0,0],COLOR=[1,0,0,1],TEXTUREID=0):             # <<<<<<<<<<<<<<
 *         if TEXTUREID not in self.textures:
 *             glBindTextureUnit(TEXTUREID, TEXTUREID)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1659, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1659, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_11create_quad, 0, __pyx_n_s_DragoObject_create_quad, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__265)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_14, sizeof(__pyx_defaults10), 3)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_t_14)->__pyx_arg_BOX_START = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_0);
    __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_t_14)->__pyx_arg_BOX_SIZE = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyList_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_GIVEREF(__pyx_int_1);
    PyList_SET_ITEM(__pyx_t_4, 0, __pyx_int_1);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 1, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_GIVEREF(__pyx_int_0);
    PyList_SET_ITEM(__pyx_t_4, 2, __pyx_int_0);
    __Pyx_INCREF(__pyx_int_1);
    __Pyx_GIVEREF(__pyx_int_1);
    PyList_SET_ITEM(__pyx_t_4, 3, __pyx_int_1);
    __Pyx_CyFunction_Defaults(__pyx_defaults10, __pyx_t_14)->__pyx_arg_COLOR = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_14, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_56__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_create_quad, __pyx_t_14) < 0) __PYX_ERR(0, 1659, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1691
 *         self.textures.append(TEXTUREID)
 *         return self.object_count-1
 *     def get_objectindexes(self):             # <<<<<<<<<<<<<<
 *         return self.object_indexes
 *     def move(self,x,y,object):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1691, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1691, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_13get_objectindexes, 0, __pyx_n_s_DragoObject_get_objectindexes, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__267)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_objectindexes, __pyx_t_14) < 0) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1693
 *     def get_objectindexes(self):
 *         return self.object_indexes
 *     def move(self,x,y,object):             # <<<<<<<<<<<<<<
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1693, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1693, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_15move, 0, __pyx_n_s_DragoObject_move, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__269)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1693, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_move, __pyx_t_14) < 0) __PYX_ERR(0, 1693, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1696
 *         cords = _cords_to_ratio(x,y,self.sx,self.sy)
 *         #glBindBuffer(GL_ARRAY_BUFFER, self.vbo, self.vertices)
 *     def use_texture(self,txtid):             # <<<<<<<<<<<<<<
 *         self.textured = True
 *         self.textures.append(txtid)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1696, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1696, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_17use_texture, 0, __pyx_n_s_DragoObject_use_texture, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__271)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_use_texture, __pyx_t_14) < 0) __PYX_ERR(0, 1696, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1699
 *         self.textured = True
 *         self.textures.append(txtid)
 *     def create_letter(self,cords,font,letter,color,texid):             # <<<<<<<<<<<<<<
 *         if texid not in self.textures:
 *             glBindTextureUnit(texid, texid)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1699, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1699, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_19create_letter, 0, __pyx_n_s_DragoObject_create_letter, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__273)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_create_letter, __pyx_t_14) < 0) __PYX_ERR(0, 1699, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1745
 *             self.textures.append(texid)
 *         return self.object_count-1
 *     def draw_text(self):             # <<<<<<<<<<<<<<
 *         pass
 *     def move_up(self,object):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1745, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1745, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_21draw_text, 0, __pyx_n_s_DragoObject_draw_text, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__275)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_draw_text, __pyx_t_14) < 0) __PYX_ERR(0, 1745, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1747
 *     def draw_text(self):
 *         pass
 *     def move_up(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To front - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1747, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1747, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_23move_up, 0, __pyx_n_s_DragoObject_move_up, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__277)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_move_up, __pyx_t_14) < 0) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1762
 *         x+=1
 *         return object
 *     def move_down(self,object):             # <<<<<<<<<<<<<<
 *         ''' Move Object To Back - Finally working ;-;'''
 *         real_value = self.object_indexes[object]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1762, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1762, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_25move_down, 0, __pyx_n_s_DragoObject_move_down, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__279)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1762, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_move_down, __pyx_t_14) < 0) __PYX_ERR(0, 1762, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1780
 * 
 * 
 *     def get_vertices(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1780, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1780, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_27get_vertices, 0, __pyx_n_s_DragoObject_get_vertices, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__281)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1780, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_vertices, __pyx_t_14) < 0) __PYX_ERR(0, 1780, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1782
 *     def get_vertices(self):
 *         return self.vertices
 *     def add_textureupdate(self,Texture_unit,Imagenumpy,width,height,texture_data,alpha):             # <<<<<<<<<<<<<<
 *         if alpha:
 *             self.update_list.append(['tua',Texture_unit,Imagenumpy,width,height,texture_data])
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1782, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1782, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_29add_textureupdate, 0, __pyx_n_s_DragoObject_add_textureupdate, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__283)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1782, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_add_textureupdate, __pyx_t_14) < 0) __PYX_ERR(0, 1782, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1787
 *         else:
 *             self.update_list.append(['tu',Texture_unit,Imagenumpy,width,height,texture_data])
 *     def update(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         updates = 0
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1787, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1787, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_31update, 0, __pyx_n_s_DragoObject_update, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__285)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_update, __pyx_t_14) < 0) __PYX_ERR(0, 1787, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1803
 *         self.update_list = []
 *         self.total_updates = updates
 *     def clear(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1803, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1803, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_33clear, 0, __pyx_n_s_DragoObject_clear, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__287)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_clear, __pyx_t_14) < 0) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1807
 *         glBufferSubData(GL_ARRAY_BUFFER,0,12,ctypes.c_void_p(0))
 *         glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_pos(self,object):             # <<<<<<<<<<<<<<
 *         """Gets positions (x,y,x2,y2) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1807, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1807, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_35get_pos, 0, __pyx_n_s_DragoObject_get_pos, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__289)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1807, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_pos, __pyx_t_14) < 0) __PYX_ERR(0, 1807, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1815
 *         y2 = self.vertices[nd+21]
 *         return [x1,x2,y1,y2]
 *     def get_color(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets colors (r, g, b, a) inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1815, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1815, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_37get_color, 0, __pyx_n_s_DragoObject_get_color, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__291)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_color, __pyx_t_14) < 0) __PYX_ERR(0, 1815, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1823
 *         a_val = self.vertices[nd+6]
 *         return r_val, g_val, b_val, a_val
 *     def get_texid(self,object):             # <<<<<<<<<<<<<<
 *         """ Gets texture id inside memory """
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1823, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1823, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_39get_texid, 0, __pyx_n_s_DragoObject_get_texid, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__293)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_texid, __pyx_t_14) < 0) __PYX_ERR(0, 1823, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1829
 *         return textid
 * 
 *     def edit_letter(self,object,font,letter):             # <<<<<<<<<<<<<<
 *         ct = int(ord(letter))
 *         t1=font[ct][0][0];c1=font[ct][0][1]
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1829, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1829, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_41edit_letter, 0, __pyx_n_s_DragoObject_edit_letter, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__295)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1829, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_edit_letter, __pyx_t_14) < 0) __PYX_ERR(0, 1829, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1839
 * 
 *         self.edit_tpos(object, tlist)
 *     def edit_tpos(self,object=None,newtpos=[]):             # <<<<<<<<<<<<<<
 *         nd = 0+((self.object_indexes[object]*4)*10)
 * 
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1839, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1839, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_43edit_tpos, 0, __pyx_n_s_DragoObject_edit_tpos, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__297)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_14, sizeof(__pyx_defaults11), 1)) __PYX_ERR(0, 1839, __pyx_L1_error)
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1839, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_Defaults(__pyx_defaults11, __pyx_t_14)->__pyx_arg_newtpos = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_14, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_58__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_edit_tpos, __pyx_t_14) < 0) __PYX_ERR(0, 1839, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1855
 * 
 *         self.update_list.extend(ou)
 *     def edit_color(self,object=None,newcolor=[]):             # <<<<<<<<<<<<<<
 *         nd = (0+((self.object_indexes[object]*4)*10))
 *         ou = []
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1855, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1855, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_45edit_color, 0, __pyx_n_s_DragoObject_edit_color, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__299)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_14, sizeof(__pyx_defaults12), 1)) __PYX_ERR(0, 1855, __pyx_L1_error)
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1855, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_Defaults(__pyx_defaults12, __pyx_t_14)->__pyx_arg_newcolor = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_14, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_60__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_edit_color, __pyx_t_14) < 0) __PYX_ERR(0, 1855, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1876
 * 
 *         self.update_list.extend(ou)
 *     def delete_obj(self):             # <<<<<<<<<<<<<<
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1876, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1876, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_47delete_obj, 0, __pyx_n_s_DragoObject_delete_obj, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__301)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1876, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_delete_obj, __pyx_t_14) < 0) __PYX_ERR(0, 1876, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1878
 *     def delete_obj(self):
 *         self.vertices
 *     def edit_pos(self,object=None,newpos=[],size=None,letter=False):             # <<<<<<<<<<<<<<
 * 
 *         nd = (0+((self.object_indexes[object]*4)*10))
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1878, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1878, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_49edit_pos, 0, __pyx_n_s_DragoObject_edit_pos, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__303)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1878, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (!__Pyx_CyFunction_InitDefaults(__pyx_t_14, sizeof(__pyx_defaults13), 1)) __PYX_ERR(0, 1878, __pyx_L1_error)
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1878, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_CyFunction_Defaults(__pyx_defaults13, __pyx_t_14)->__pyx_arg_newpos = __pyx_t_4;
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_CyFunction_SetDefaultsGetter(__pyx_t_14, __pyx_pf_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_62__defaults__);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_edit_pos, __pyx_t_14) < 0) __PYX_ERR(0, 1878, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1914
 * 
 *         self.update_list.extend(ou)
 *     def edit_texture(self,object=None,txtid=0):             # <<<<<<<<<<<<<<
 * 
 *         if txtid not in self.textures:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1914, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1914, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_51edit_texture, 0, __pyx_n_s_DragoObject_edit_texture, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__305)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1914, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_14, __pyx_tuple__306);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_edit_texture, __pyx_t_14) < 0) __PYX_ERR(0, 1914, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1936
 *             self.textures.append(txtid)
 *             glBindBuffer(GL_ARRAY_BUFFER, 0)
 *     def get_buffer(self):             # <<<<<<<<<<<<<<
 *         return self.vertices
 *     def bind_buffer(self):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1936, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1936, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_53get_buffer, 0, __pyx_n_s_DragoObject_get_buffer, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__308)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1936, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_get_buffer, __pyx_t_14) < 0) __PYX_ERR(0, 1936, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1938
 *     def get_buffer(self):
 *         return self.vertices
 *     def bind_buffer(self):             # <<<<<<<<<<<<<<
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1938, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1938, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_55bind_buffer, 0, __pyx_n_s_DragoObject_bind_buffer, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__310)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_bind_buffer, __pyx_t_14) < 0) __PYX_ERR(0, 1938, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1940
 *     def bind_buffer(self):
 *         glUseProgram(self.basicshader)
 *     def switch(self,vbo):             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1940, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1940, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_57switch, 0, __pyx_n_s_DragoObject_switch, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__312)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_switch, __pyx_t_14) < 0) __PYX_ERR(0, 1940, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1952
 *         self.object_count=0
 *         self.vbo = self.vbos[vbo]
 *     def add_buffer(self):             # <<<<<<<<<<<<<<
 *         self.vbo = glGenBuffers(1)
 *         self.vbos.append(self.vbo)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1952, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1952, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_59add_buffer, 0, __pyx_n_s_DragoObject_add_buffer, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__314)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1952, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_add_buffer, __pyx_t_14) < 0) __PYX_ERR(0, 1952, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1957
 *         self.vb_count+=1
 * 
 *     def compile(self):             # <<<<<<<<<<<<<<
 *         for vbo in self.vbos:
 *             glBindBuffer(GL_ARRAY_BUFFER, vbo )
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1957, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1957, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_61compile, 0, __pyx_n_s_DragoObject_compile, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__316)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_compile, __pyx_t_14) < 0) __PYX_ERR(0, 1957, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1972
 *             glVertexAttribPointer(3, 3 ,GL_FLOAT, GL_FALSE, sizeof(cfloat())*10,  ctypes.c_void_p(32)) # 2
 *             glBindBuffer(GL_ARRAY_BUFFER, 0 )
 *     def queue_check():             # <<<<<<<<<<<<<<
 *         """check and execute queue """
 *     def queue():
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1972, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1972, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_63queue_check, 0, __pyx_n_s_DragoObject_queue_check, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__317)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_queue_check, __pyx_t_14) < 0) __PYX_ERR(0, 1972, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1974
 *     def queue_check():
 *         """check and execute queue """
 *     def queue():             # <<<<<<<<<<<<<<
 *         """
 *         (Input list ?, +delay)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1974, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1974, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_65queue, 0, __pyx_n_s_DragoObject_queue, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__318)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_queue, __pyx_t_14) < 0) __PYX_ERR(0, 1974, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1995
 * 
 *         """
 *     def __init__(self,screenx,screeny):             # <<<<<<<<<<<<<<
 *         glEnableClientState(GL_VERTEX_ARRAY)
 *         self.sx =  screenx
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1995, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 1995, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_67__init__, 0, __pyx_n_s_DragoObject___init, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__320)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1995, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_init, __pyx_t_14) < 0) __PYX_ERR(0, 1995, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2094
 *         glUniform1iv(self.DRAWMODELOC, 1 , 0)
 *         glUseProgram(0)
 *     def set_mode(self,mode):             # <<<<<<<<<<<<<<
 *         self.DRAWMODELOC = glGetUniformLocation(self.basicshader, 'DRAW_MODE')
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2094, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 2094, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_69set_mode, 0, __pyx_n_s_DragoObject_set_mode, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__322)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2094, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_set_mode, __pyx_t_14) < 0) __PYX_ERR(0, 2094, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":2098
 *         glUniform1iv(self.DRAWMODELOC, 1 , mode)
 * 
 *     def draw(self):             # <<<<<<<<<<<<<<
 *         glBindBuffer(GL_ARRAY_BUFFER, self.vbo )
 *         if self.textured is False:
 */
    #if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_t_9 = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2098, __pyx_L1_error)
    #else
    __pyx_t_9 = __pyx_d;  if ((1)); else __PYX_ERR(0, 2098, __pyx_L1_error);
    #endif
    __pyx_t_14 = __Pyx_CyFunction_New(&__pyx_mdef_13Drago2Dengine_12__versions___5win32_4dist_13Drago2Dengine_11DragoObject_71draw, 0, __pyx_n_s_DragoObject_draw, NULL, __pyx_n_s_Drago2Dengine___versions___win32, __pyx_t_9, ((PyObject *)__pyx_codeobj__324)); __pyx_t_9 = NULL; if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    if (__Pyx_SetNameInClass(__pyx_t_13, __pyx_n_s_draw, __pyx_t_14) < 0) __PYX_ERR(0, 2098, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1634
 * 
 * 
 * class DragoObject:             # <<<<<<<<<<<<<<
 *     def get_shader(self):
 *         return self.basicshader
 */
    __pyx_t_14 = __Pyx_Py3ClassCreate(((PyObject*)&__Pyx_DefaultClassType), __pyx_n_s_DragoObject, __pyx_empty_tuple, __pyx_t_13, NULL, 0, 1); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1634, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_DragoObject, __pyx_t_14) < 0) __PYX_ERR(0, 1634, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    }
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Drago2Dengine/__versions__/win32/dist/Drago2Dengine.py":1
 * #Breshenham line algorithm             # <<<<<<<<<<<<<<
 * if __name__ == '__main__':
 *     import math
 */
    __pyx_t_13 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    {
      #if CYTHON_COMPILING_IN_LIMITED_API
      PyObject *__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
      #endif
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_13) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }

    /*--- Wrapped vars code ---*/

    goto __pyx_L0;
    __pyx_L1_error:;
    __Pyx_XDECREF(__pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_10);
    __Pyx_XDECREF(__pyx_t_11);
    __Pyx_XDECREF(__pyx_t_12);
    __Pyx_XDECREF(__pyx_t_13);
    __Pyx_XDECREF(__pyx_t_14);
    if (__pyx_m) {
      #if !CYTHON_COMPILING_IN_LIMITED_API
      if (__pyx_d) {
        #endif
        __Pyx_AddTraceback("init Drago2Dengine.__versions__.win32.dist.Drago2Dengine", __pyx_clineno, __pyx_lineno, __pyx_filename);
        #if !CYTHON_COMPILING_IN_LIMITED_API
      }
      Py_CLEAR(__pyx_m);
      #endif
    } else if (!PyErr_Occurred()) {
      PyErr_SetString(PyExc_ImportError, "init Drago2Dengine.__versions__.win32.dist.Drago2Dengine");
    }
    __pyx_L0:;
    __Pyx_RefNannyFinishContext();
    #if CYTHON_PEP489_MULTI_PHASE_INIT
    return (__pyx_m != NULL) ? 0 : -1;
    #elif PY_MAJOR_VERSION >= 3
    return __pyx_m;
    #else
    return;
    #endif
  }
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;  // error
            return kwvalues[i];
        }
    }
    return NULL;  // not found (no exception set)
}
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        if (kwds_is_tuple) {
            if (pos >= PyTuple_GET_SIZE(kwds)) break;
            key = PyTuple_GET_ITEM(kwds, pos);
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result;
    Py_ssize_t i;
    argstuple = PyTuple_New(nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        PyTuple_SET_ITEM(argstuple, i, args[i]);
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
    Py_DECREF(argstuple);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
#ifdef __Pyx_CyFunction_USED
        if (PyCFunction_Check(func) || __Pyx_CyFunction_Check(func))
#else
        if (PyCFunction_Check(func))
#endif
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
                return __Pyx_PyObject_CallMethO(func, NULL);
            }
        }
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (PyCFunction_Check(func))
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
                return __Pyx_PyObject_CallMethO(func, args[0]);
            }
        }
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    #if CYTHON_VECTORCALL
    vectorcallfunc f = _PyVectorcall_Function(func);
    if (f) {
        return f(func, args, nargs, kwargs);
    }
    #elif __Pyx_CyFunction_USED && CYTHON_BACKPORT_VECTORCALL
    if (__Pyx_IS_TYPE(func, __pyx_CyFunctionType)) {
        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
        if (f) return f(func, args, nargs, kwargs);
    }
    #endif
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    return __Pyx_PyObject_FastCall_fallback(func, args, nargs, kwargs);
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long b = PyInt_AS_LONG(op2);
        
#ifdef HAVE_LONG_LONG
            if (sizeof(PY_LONG_LONG) > sizeof(long)) {
                PY_LONG_LONG result = (PY_LONG_LONG)a * (PY_LONG_LONG)b;
                return (result >= LONG_MIN && result <= LONG_MAX) ?
                    PyInt_FromLong((long)result) : PyLong_FromLongLong(result);
            }
#endif
#if CYTHON_USE_TYPE_SLOTS
            return PyInt_Type.tp_as_number->nb_multiply(op1, op2);
#else
            return PyNumber_Multiply(op1, op2);
#endif
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
#endif
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
            }
        }
                (void)a; (void)b;
                #ifdef HAVE_LONG_LONG
                llb = b;
                goto long_long;
                #else
                return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
                #endif
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double b = __pyx_PyFloat_AsDouble(op2);
#else
        double b = PyFloat_AS_DOUBLE(op2);
#endif
            double result;
            
            PyFPE_START_PROTECT("multiply", return NULL)
            result = ((double)a) * (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceMultiply : PyNumber_Multiply)(op1, op2);
}
#endif

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (unlikely(size == 0)) {
            return PyLong_FromLong(-intval);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long x;
        long b = PyInt_AS_LONG(op2);
        
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
#endif
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op1);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double b = __pyx_PyFloat_AsDouble(op2);
#else
        double b = PyFloat_AS_DOUBLE(op2);
#endif
            double result;
            
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (meth) {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* SetItemInt */
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (unlikely(!j)) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_ass_subscript) {
            int r;
            PyObject *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return -1;
            r = mm->mp_ass_subscript(o, key, v);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return sm->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o)))
#else
    if (is_list || PySequence_Check(o))
#endif
    {
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* PyObjectCall2Args */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY ||  CYTHON_COMPILING_IN_LIMITED_API
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (!r) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* py_abs */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *n) {
    if (likely(Py_SIZE(n) == -1)) {
        return PyLong_FromLong(((PyLongObject*)n)->ob_digit[0]);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    {
        PyObject *copy = _PyLong_Copy((PyLongObject*)n);
        if (likely(copy)) {
            Py_SIZE(copy) = -(Py_SIZE(copy));
        }
        return copy;
    }
#else
    return PyNumber_Negative(n);
#endif
}
#endif

/* pyobject_as_double */
static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if !CYTHON_USE_TYPE_SLOTS
    float_value = PyNumber_Float(obj);  if ((0)) goto bad;
    (void)__Pyx_PyObject_CallOneArg;
#else
    PyNumberMethods *nb = Py_TYPE(obj)->tp_as_number;
    if (likely(nb) && likely(nb->nb_float)) {
        float_value = nb->nb_float(obj);
        if (likely(float_value) && unlikely(!PyFloat_Check(float_value))) {
            PyErr_Format(PyExc_TypeError,
                "__float__ returned non-float (type %.200s)",
                Py_TYPE(float_value)->tp_name);
            Py_DECREF(float_value);
            goto bad;
        }
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        float_value = __Pyx_PyObject_CallOneArg((PyObject*)&PyFloat_Type, obj);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        
#ifdef HAVE_LONG_LONG
            if (sizeof(PY_LONG_LONG) > sizeof(long)) {
                PY_LONG_LONG result = (PY_LONG_LONG)a * (PY_LONG_LONG)b;
                return (result >= LONG_MIN && result <= LONG_MAX) ?
                    PyInt_FromLong((long)result) : PyLong_FromLongLong(result);
            }
#endif
#if CYTHON_USE_TYPE_SLOTS
            return PyInt_Type.tp_as_number->nb_multiply(op1, op2);
#else
            return PyNumber_Multiply(op1, op2);
#endif
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op1);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
            }
        }
                (void)a; (void)b;
                #ifdef HAVE_LONG_LONG
                lla = a;
                goto long_long;
                #else
                return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
                #endif
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("multiply", return NULL)
            result = ((double)a) * (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceMultiply : PyNumber_Multiply)(op1, op2);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddCObj(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long x;
        long b = PyInt_AS_LONG(op2);
        
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
#endif
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op1);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            b = likely(size) ? digits[0] : 0;
            if (size == -1) b = -b;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double b = __pyx_PyFloat_AsDouble(op2);
#else
        double b = PyFloat_AS_DOUBLE(op2);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_RemainderObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = a % b;
            x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyInt_FromLong(x);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op1);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_remainder(op1, op2);
            }
        }
                x = a % b;
                x += ((x != 0) & ((x ^ b) < 0)) * b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla % llb;
                llx += ((llx != 0) & ((llx ^ llb) < 0)) * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    return (inplace ? PyNumber_InPlaceRemainder : PyNumber_Remainder)(op1, op2);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_FloorDivideObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace; (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            if (unlikely(b == -1 && ((unsigned long)a) == 0-(unsigned long)a))
                return PyInt_Type.tp_as_number->nb_floor_divide(op1, op2);
            else {
                long q, r;
                q = a / b;
                r = a - q*b;
                q -= ((r != 0) & ((r ^ b) < 0));
                x = q;
            }
            return PyInt_FromLong(x);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (unlikely(size == 0)) {
            return __Pyx_NewRef(op1);
        }
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_floor_divide(op1, op2);
            }
        }
                {
                    long q, r;
                    q = a / b;
                    r = a - q*b;
                    q -= ((r != 0) & ((r ^ b) < 0));
                    x = q;
                }
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                {
                    PY_LONG_LONG q, r;
                    q = lla / llb;
                    r = lla - q*llb;
                    q -= ((r != 0) & ((r ^ llb) < 0));
                    llx = q;
                }
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    return (inplace ? PyNumber_InPlaceFloorDivide : PyNumber_FloorDivide)(op1, op2);
}
#endif

/* UnicodeAsUCS4 */
static CYTHON_INLINE Py_UCS4 __Pyx_PyUnicode_AsPy_UCS4(PyObject* x) {
   Py_ssize_t length;
   #if CYTHON_PEP393_ENABLED
   length = PyUnicode_GET_LENGTH(x);
   if (likely(length == 1)) {
       return PyUnicode_READ_CHAR(x, 0);
   }
   #else
   length = PyUnicode_GET_SIZE(x);
   if (likely(length == 1)) {
       return PyUnicode_AS_UNICODE(x)[0];
   }
   #if Py_UNICODE_SIZE == 2
   else if (PyUnicode_GET_SIZE(x) == 2) {
       Py_UCS4 high_val = PyUnicode_AS_UNICODE(x)[0];
       if (high_val >= 0xD800 && high_val <= 0xDBFF) {
           Py_UCS4 low_val = PyUnicode_AS_UNICODE(x)[1];
           if (low_val >= 0xDC00 && low_val <= 0xDFFF) {
               return 0x10000 + (((high_val & ((1<<10)-1)) << 10) | (low_val & ((1<<10)-1)));
           }
       }
   }
   #endif
   #endif
   PyErr_Format(PyExc_ValueError,
                "only single character unicode strings can be converted to Py_UCS4, "
                "got length %" CYTHON_FORMAT_SSIZE_T "d", length);
   return (Py_UCS4)-1;
}

/* object_ord */
static long __Pyx__PyObject_Ord(PyObject* c) {
    Py_ssize_t size;
    if (PyBytes_Check(c)) {
        size = PyBytes_GET_SIZE(c);
        if (likely(size == 1)) {
            return (unsigned char) PyBytes_AS_STRING(c)[0];
        }
#if PY_MAJOR_VERSION < 3
    } else if (PyUnicode_Check(c)) {
        return (long)__Pyx_PyUnicode_AsPy_UCS4(c);
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    } else if (PyByteArray_Check(c)) {
        size = PyByteArray_GET_SIZE(c);
        if (likely(size == 1)) {
            return (unsigned char) PyByteArray_AS_STRING(c)[0];
        }
#endif
    } else {
        PyErr_Format(PyExc_TypeError,
            "ord() expected string of length 1, but %.200s found", c->ob_type->tp_name);
        return (long)(Py_UCS4)-1;
    }
    PyErr_Format(PyExc_TypeError,
        "ord() expected a character, but string of length %zd found", size);
    return (long)(Py_UCS4)-1;
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* FetchCommonType */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    PyObject *abi_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!abi_module) return NULL;
    Py_INCREF(abi_module);
    return abi_module;
}
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, type->tp_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              type->tp_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, type->tp_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *py_basicsize, *cached_type = NULL;
    Py_ssize_t basicsize;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, spec->name);
    if (cached_type) {
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (!py_basicsize) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred()) goto bad;
        if (__Pyx_VerifyCachedType(
              cached_type,
              spec->name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    cached_type = PyType_FromSpecWithBases(spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (PyObject_SetAttrString(abi_module, spec->name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, Py_ssize_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (i = 0; i < nargs; i++) newargs[i] = args[i];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, Py_ssize_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if PY_VERSION_HEX < 0x030500A0
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), PyTuple_GET_SIZE(args), kw);
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         cyfunc->func.m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", cyfunc->func.m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = cyfunc->func.m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = cyfunc->func.m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = cyfunc->func.m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = cyfunc->func.m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = cyfunc->func.m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = cyfunc->func.m_self;
        break;
    default:
        return NULL;
    }
    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(__pyx_CyFunctionObject, func.vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#ifdef _Py_TPFLAGS_HAVE_VECTORCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM+0 >= 0x06000000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(void) {
#if CYTHON_COMPILING_IN_LIMITED_API
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(&__pyx_CyFunctionType_spec, NULL);
#else
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* PyObjectLookupSpecial */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStrNoError(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs[3] = {NULL, name, bases};
            ns = __Pyx_PyObject_FastCallDict(prep, pargs+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, mkw);
            Py_DECREF(prep);
        } else {
            if (unlikely(PyErr_Occurred()))
                return NULL;
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
#if PY_VERSION_HEX >= 0x03030000
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
#else
    CYTHON_MAYBE_UNUSED_VAR(qualname);
#endif
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
static int __Pyx_SetNamesPEP487(PyObject *type_obj) {
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *names_to_set, *key, *value, *set_name, *tmp;
    Py_ssize_t i = 0;
#if CYTHON_USE_TYPE_SLOTS
    names_to_set = PyDict_Copy(type->tp_dict);
#else
    {
        PyObject *d = PyObject_GetAttr(type_obj, __pyx_n_s_dict);
        names_to_set = NULL;
        if (likely(d)) {
            PyObject *names_to_set = PyDict_New();
            int ret = likely(names_to_set) ? PyDict_Update(names_to_set, d) : -1;
            Py_DECREF(d);
            if (unlikely(ret < 0))
                Py_CLEAR(names_to_set);
        }
    }
#endif
    if (unlikely(names_to_set == NULL))
        goto bad;
    while (PyDict_Next(names_to_set, &i, &key, &value)) {
        set_name = __Pyx_PyObject_LookupSpecialNoError(value, __pyx_n_s_set_name);
        if (unlikely(set_name != NULL)) {
            tmp = __Pyx_PyObject_Call2Args(set_name, type_obj, key);
            Py_DECREF(set_name);
            if (unlikely(tmp == NULL)) {
                PyErr_Format(PyExc_RuntimeError,
#if PY_MAJOR_VERSION >= 3
                    "Error calling __set_name__ on '%.100s' instance %R "
                    "in '%.100s'",
                    Py_TYPE(value)->tp_name, key, type->tp_name);
#else
                    "Error calling __set_name__ on '%.100s' instance %.100s "
                    "in '%.100s'",
                    Py_TYPE(value)->tp_name, PyString_Check(key) ? PyString_AS_STRING(key) : "?", type->tp_name);
#endif
                goto bad;
            } else {
                Py_DECREF(tmp);
            }
        }
        else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
    Py_DECREF(names_to_set);
    return 0;
bad:
    Py_XDECREF(names_to_set);
    return -1;
}
static PyObject *__Pyx_InitSubclassPEP487(PyObject *type_obj, PyObject *mkw) {
#if CYTHON_USE_TYPE_SLOTS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *mro = type->tp_mro;
    Py_ssize_t i, nbases;
    if (unlikely(!mro)) goto done;
    (void) &__Pyx_GetBuiltinName;
    Py_INCREF(mro);
    nbases = PyTuple_GET_SIZE(mro);
    assert(PyTuple_GET_ITEM(mro, 0) == type_obj);
    for (i = 1; i < nbases-1; i++) {
        PyObject *base, *dict, *meth;
        base = PyTuple_GET_ITEM(mro, i);
        dict = ((PyTypeObject *)base)->tp_dict;
        meth = __Pyx_PyDict_GetItemStrWithError(dict, __pyx_n_s_init_subclass);
        if (unlikely(meth)) {
            descrgetfunc f = Py_TYPE(meth)->tp_descr_get;
            PyObject *res;
            Py_INCREF(meth);
            if (likely(f)) {
                res = f(meth, NULL, type_obj);
                Py_DECREF(meth);
                if (unlikely(!res)) goto bad;
                meth = res;
            }
            res = __Pyx_PyObject_FastCallDict(meth, NULL, 0, mkw);
            Py_DECREF(meth);
            if (unlikely(!res)) goto bad;
            Py_DECREF(res);
            goto done;
        } else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
done:
    Py_XDECREF(mro);
    return type_obj;
bad:
    Py_XDECREF(mro);
    Py_DECREF(type_obj);
    return NULL;
#else
    PyObject *super_type, *super, *func, *res;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    super_type = __Pyx_GetBuiltinName(__pyx_n_s_super);
#else
    super_type = (PyObject*) &PySuper_Type;
    (void) &__Pyx_GetBuiltinName;
#endif
    super = likely(super_type) ? __Pyx_PyObject_Call2Args(super_type, type_obj, type_obj) : NULL;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    Py_XDECREF(super_type);
#endif
    if (unlikely(!super)) {
        Py_CLEAR(type_obj);
        goto done;
    }
    func = __Pyx_PyObject_GetAttrStrNoError(super, __pyx_n_s_init_subclass);
    Py_DECREF(super);
    if (likely(!func)) {
        if (unlikely(PyErr_Occurred()))
            Py_CLEAR(type_obj);
        goto done;
    }
    res = __Pyx_PyObject_FastCallDict(func, NULL, 0, mkw);
    Py_DECREF(func);
    if (unlikely(!res))
        Py_CLEAR(type_obj);
    Py_XDECREF(res);
done:
    return type_obj;
#endif
}
#endif
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result;
    PyObject *owned_metaclass = NULL;
    PyObject *margs[4] = {NULL, name, bases, dict};
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    result = __Pyx_PyObject_FastCallDict(metaclass, margs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET,
#if PY_VERSION_HEX < 0x030600A4
        (metaclass == (PyObject*)&PyType_Type) ? NULL : mkw
#else
        mkw
#endif
    );
    Py_XDECREF(owned_metaclass);
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
    if (likely(result) && likely(PyType_Check(result))) {
        if (unlikely(__Pyx_SetNamesPEP487(result) < 0)) {
            Py_CLEAR(result);
        } else {
            result = __Pyx_InitSubclassPEP487(result, mkw);
        }
    }
#else
    (void) &__Pyx_GetBuiltinName;
#endif
    return result;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* SliceObject */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object is unsliceable", Py_TYPE(obj)->tp_name);
bad:
    return NULL;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                #if CYTHON_COMPILING_IN_LIMITED_API
                module = PyImport_ImportModuleLevelObject(
                    name, empty_dict, empty_dict, from_list, 1);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                #endif
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            #if CYTHON_COMPILING_IN_LIMITED_API
            module = PyImport_ImportModuleLevelObject(
                name, empty_dict, empty_dict, from_list, level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg = NULL;
    return __Pyx_PyObject_FastCall(func, (&arg)+1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if CYTHON_COMPILING_IN_LIMITED_API
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    if (c_line) {
        (void) __pyx_cfilenm;
        c_line = __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    _PyTraceback_Add(funcname, filename, c_line ? -c_line : py_line);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* Print */
#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* PrintOne */
#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if (CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if (CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CStringEquals */
static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    return *s1 == *s2;
}

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}
#endif

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                __Pyx_PyType_Name(Py_TYPE(result)))) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, __Pyx_PyType_Name(Py_TYPE(result)));
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
